;/*****************************************************
;This program was produced by the
;CodeWizardAVR V2.05.0 Professional
;Automatic Program Generator
;© Copyright 1998-2010 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 2018-08-31
;Author  :
;Company :
;Comments:
;
;
;Chip type               : ATmega128
;Program type            : Application
;AVR Core Clock frequency: 16,000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 1024
;*****************************************************/
;
;#include <io.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x1C
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x18
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x14
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x1C
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x08
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;#define DATA_REGISTER_EMPTY (1<<UDRE0)
;#define RX_COMPLETE (1<<RXC0)
;#define FRAMING_ERROR (1<<FE0)
;#define PARITY_ERROR (1<<UPE0)
;#define DATA_OVERRUN (1<<DOR0)
;
;
;#pragma warn-
;
;eeprom int szczotka_druciana_ilosc_cykli,krazek_scierny_ilosc_cykli,krazek_scierny_cykl_po_okregu_ilosc;
;//eeprom int czas_pracy_krazka_sciernego,czas_pracy_szczotki_drucianej;
;eeprom int czas_pracy_krazka_sciernego_h,czas_pracy_szczotki_drucianej_h;
;eeprom int czas_pracy_krazka_sciernego_stala,czas_pracy_szczotki_drucianej_stala;
;
;#pragma warn+
;
;
;// Get a character from the USART1 Receiver
;#pragma used+
;char getchar1(void)
; 0000 002E {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 002F unsigned char status;
; 0000 0030 char data;
; 0000 0031 while (1)
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;	status -> R17
;	data -> R16
;PCODE: $00000011 VOL: 0
; 0000 0032       {
; 0000 0033       while (((status=UCSR1A) & RX_COMPLETE)==0);
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 0034       data=UDR1;
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 0035       if ((status & (FRAMING_ERROR | PARITY_ERROR | DATA_OVERRUN))==0)
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 0036          return data;
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0037       }
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 0038 }
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;#pragma used-
;
;// Write a character to the USART1 Transmitter
;#pragma used+
;void putchar1(char c)
; 0000 003E {
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 003F while ((UCSR1A & DATA_REGISTER_EMPTY)==0);
;	c -> Y+0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 0040 UDR1=c;
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 0041 }
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;#pragma used-
;
;
;
;#include <mega128.h>
;#include <delay.h>
;#include <string.h>
;#include <stdlib.h>
;#include <math.h>
;#include <stdio.h>
;
;// I2C Bus functions
;#asm
;PCODE: $00000034 VOL: 0
   .equ __i2c_port=0x12 ;PORTD
;PCODE: $00000035 VOL: 0
   .equ __sda_bit=1
;PCODE: $00000036 VOL: 0
   .equ __scl_bit=0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 0052 #endasm
;#include <i2c.h>
;
;
;typedef union{
;   struct{
;      unsigned char b0:1;
;      unsigned char b1:1;
;      unsigned char b2:1;
;      unsigned char b3:1;
;      unsigned char b4:1;
;      unsigned char b5:1;
;      unsigned char b6:1;
;      unsigned char b7:1;
;   }bits;
;   unsigned char byte;
;}BB;
;
;
;typedef union{
;   struct{
;      unsigned char b0:1;
;      unsigned char b1:1;
;      unsigned char b2:1;
;      unsigned char b3:1;
;      unsigned char b4:1;
;      unsigned char b5:1;
;   }bits;
;   unsigned char byte;
;}CC;
;
;typedef union{
;   struct{
;      unsigned char b0:1;
;      unsigned char b1:1;
;      unsigned char b2:1;
;      unsigned char b3:1;
;      unsigned char b4:1;
;      unsigned char b5:1;
;      unsigned char b6:1;
;      unsigned char b7:1;
;   }bits;
;   unsigned char byte;
;}DD;
;
;
;
;
;
;BB PORT_F;
;BB PORTHH,PORT_CZYTNIK;
;BB PORTJJ,PORTKK,PORTLL,PORTMM;
;CC PORT_STER3,PORT_STER4;
;DD PORT_STER1,PORT_STER2;
;
;int xxx;
;int nr_zacisku,odczytalem_zacisk,il_prob_odczytu;
;int macierz_zaciskow[3];
;long int sek1,sek2,sek3,sek4,sek5,sek6,sek7,sek8,sek9,sek10,sek11,sek12,sek13;
;//int rzad;
;int start;
;int cykl;
;int aaa,bbb,ccc,ddd;
;int pozycjonowanie_LEFS32_300_1;
;int pozycjonowanie_LEFS32_300_2;
;int il_zaciskow_rzad_1,il_zaciskow_rzad_2;
;int cykl_sterownik_1,cykl_sterownik_3,cykl_sterownik_2,cykl_sterownik_4;
;int adr1,adr2,adr3,adr4;
;int cykl_sterownik_3_wykonalem;
;//int szczotka_druciana_ilosc_cykli;
;int szczotka_druc_cykl;
;int cykl_glowny;
;int start_kontynuacja;
;int ruch_zlozony;
;int krazek_scierny_cykl_po_okregu;
;//int krazek_scierny_cykl_po_okregu_ilosc;
;int krazek_scierny_cykl;
;//int krazek_scierny_ilosc_cykli;
;int cykl_ilosc_zaciskow;
;int wykonalem_komplet_okregow;
;int abs_ster3,abs_ster4;
;int koniec_rzedu_10;
;int rzad_obrabiany;
;int jestem_w_trakcie_czyszczenia_calosci;
;int wykonalem_rzedow;
;bit guzik1_przelaczania_zaciskow,guzik2_przelaczania_zaciskow;
;bit zmienna_przelaczanie_zaciskow;
;int czekaj_az_puszcze, czek1, czek2;
;int czas_przedmuchu;
;int a[10];
;int wymieniono_szczotke_druciana,wymieniono_krazek_scierny;
;int predkosc_pion_szczotka, predkosc_pion_krazek;
;int wejscie_krazka_sciernego_w_pow_boczna_cylindra;
;int predkosc_ruchow_po_okregu_krazek_scierny;
;int test_geometryczny_rzad_1, test_geometryczny_rzad_2;
;int czas_pracy_krazka_sciernego,czas_pracy_szczotki_drucianej;
;int powrot_przedwczesny_druciak;
;int czas_druciaka_na_gorze;
;
;char sprawdz_pin0(BB PORT, int numer_pcf)
; 0000 00B6 {
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0000 00B7 i2c_start();
;	PORT -> Y+2
;	numer_pcf -> Y+0
;PCODE: $0000003B VOL: 0
; 0000 00B8 i2c_write(numer_pcf);
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 00B9 PORT.byte = i2c_read(0);
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 00BA i2c_stop();
;PCODE: $00000043 VOL: 0
; 0000 00BB 
; 0000 00BC 
; 0000 00BD return PORT.bits.b0;
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0000 00BE }
;PCODE: $00000048 VOL: 0
;
;char sprawdz_pin1(BB PORT, int numer_pcf)
; 0000 00C1 {
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0000 00C2 i2c_start();
;	PORT -> Y+2
;	numer_pcf -> Y+0
;PCODE: $0000004B VOL: 0
; 0000 00C3 i2c_write(numer_pcf);
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0000 00C4 PORT.byte = i2c_read(0);
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0000 00C5 i2c_stop();
;PCODE: $00000053 VOL: 0
; 0000 00C6 
; 0000 00C7 
; 0000 00C8 return PORT.bits.b1;
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
; 0000 00C9 }
;PCODE: $00000059 VOL: 0
;
;
;char sprawdz_pin2(BB PORT, int numer_pcf)
; 0000 00CD {
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0000 00CE i2c_start();
;	PORT -> Y+2
;	numer_pcf -> Y+0
;PCODE: $0000005C VOL: 0
; 0000 00CF i2c_write(numer_pcf);
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0000 00D0 PORT.byte = i2c_read(0);
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0000 00D1 i2c_stop();
;PCODE: $00000064 VOL: 0
; 0000 00D2 
; 0000 00D3 
; 0000 00D4 return PORT.bits.b2;
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0000 00D5 }
;PCODE: $0000006A VOL: 0
;
;char sprawdz_pin3(BB PORT, int numer_pcf)
; 0000 00D8 {
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
; 0000 00D9 i2c_start();
;	PORT -> Y+2
;	numer_pcf -> Y+0
;PCODE: $0000006D VOL: 0
; 0000 00DA i2c_write(numer_pcf);
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
; 0000 00DB PORT.byte = i2c_read(0);
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
; 0000 00DC i2c_stop();
;PCODE: $00000075 VOL: 0
; 0000 00DD 
; 0000 00DE 
; 0000 00DF return PORT.bits.b3;
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
; 0000 00E0 }
;PCODE: $0000007B VOL: 0
;
;char sprawdz_pin4(BB PORT, int numer_pcf)
; 0000 00E3 {
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
; 0000 00E4 i2c_start();
;	PORT -> Y+2
;	numer_pcf -> Y+0
;PCODE: $0000007E VOL: 0
; 0000 00E5 i2c_write(numer_pcf);
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
; 0000 00E6 PORT.byte = i2c_read(0);
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
; 0000 00E7 i2c_stop();
;PCODE: $00000086 VOL: 0
; 0000 00E8 
; 0000 00E9 
; 0000 00EA return PORT.bits.b4;
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
; 0000 00EB }
;PCODE: $0000008C VOL: 0
;
;char sprawdz_pin5(BB PORT, int numer_pcf)
; 0000 00EE {
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
; 0000 00EF i2c_start();
;	PORT -> Y+2
;	numer_pcf -> Y+0
;PCODE: $0000008F VOL: 0
; 0000 00F0 i2c_write(numer_pcf);
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
; 0000 00F1 PORT.byte = i2c_read(0);
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
; 0000 00F2 i2c_stop();
;PCODE: $00000097 VOL: 0
; 0000 00F3 
; 0000 00F4 
; 0000 00F5 return PORT.bits.b5;
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
; 0000 00F6 }
;PCODE: $0000009D VOL: 0
;
;char sprawdz_pin6(BB PORT, int numer_pcf)
; 0000 00F9 {
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
; 0000 00FA i2c_start();
;	PORT -> Y+2
;	numer_pcf -> Y+0
;PCODE: $000000A0 VOL: 0
; 0000 00FB i2c_write(numer_pcf);
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
; 0000 00FC PORT.byte = i2c_read(0);
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
; 0000 00FD i2c_stop();
;PCODE: $000000A8 VOL: 0
; 0000 00FE 
; 0000 00FF 
; 0000 0100 return PORT.bits.b6;
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
; 0000 0101 }
;PCODE: $000000AE VOL: 0
;
;char sprawdz_pin7(BB PORT, int numer_pcf)
; 0000 0104 {
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
; 0000 0105 i2c_start();
;	PORT -> Y+2
;	numer_pcf -> Y+0
;PCODE: $000000B1 VOL: 0
; 0000 0106 i2c_write(numer_pcf);
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
; 0000 0107 PORT.byte = i2c_read(0);
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
; 0000 0108 i2c_stop();
;PCODE: $000000B9 VOL: 0
; 0000 0109 
; 0000 010A 
; 0000 010B return PORT.bits.b7;
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
; 0000 010C }
;PCODE: $000000BF VOL: 0
;
;int odczytaj_parametr(int adres1, int adres2)
; 0000 010F {
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
; 0000 0110 int z;
; 0000 0111 z = 0;
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;	adres1 -> Y+4
;	adres2 -> Y+2
;	z -> R16,R17
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
; 0000 0112 putchar(90);
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
; 0000 0113 putchar(165);
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
; 0000 0114 putchar(4);
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
; 0000 0115 putchar(131);
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
; 0000 0116 putchar(adres1);
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
; 0000 0117 putchar(adres2);
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
; 0000 0118 putchar(1);
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
; 0000 0119 getchar();
;PCODE: $000000DB VOL: 0
; 0000 011A getchar();
;PCODE: $000000DC VOL: 0
; 0000 011B getchar();
;PCODE: $000000DD VOL: 0
; 0000 011C getchar();
;PCODE: $000000DE VOL: 0
; 0000 011D getchar();
;PCODE: $000000DF VOL: 0
; 0000 011E getchar();
;PCODE: $000000E0 VOL: 0
; 0000 011F getchar();
;PCODE: $000000E1 VOL: 0
; 0000 0120 getchar();
;PCODE: $000000E2 VOL: 0
; 0000 0121 z = getchar();
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
; 0000 0122 
; 0000 0123 
; 0000 0124 
; 0000 0125 
; 0000 0126 
; 0000 0127 
; 0000 0128 
; 0000 0129 
; 0000 012A 
; 0000 012B 
; 0000 012C 
; 0000 012D 
; 0000 012E return z;
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
; 0000 012F }
;PCODE: $000000ED VOL: 0
;
;
;
;int czekaj_na_guzik_start(int adres)
; 0000 0134 {
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
; 0000 0135 //48 to adres zmiennej 30
; 0000 0136 //16 to adres zmiennj 10
; 0000 0137 
; 0000 0138 int z;
; 0000 0139 z = 0;
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;	adres -> Y+2
;	z -> R16,R17
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
; 0000 013A putchar(90);
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
; 0000 013B putchar(165);
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
; 0000 013C putchar(4);
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
; 0000 013D putchar(131);
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
; 0000 013E putchar(0);
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
; 0000 013F putchar(adres);  //adres zmiennej - 30
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
; 0000 0140 putchar(1);
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
; 0000 0141 getchar();
;PCODE: $00000109 VOL: 0
; 0000 0142 getchar();
;PCODE: $0000010A VOL: 0
; 0000 0143 getchar();
;PCODE: $0000010B VOL: 0
; 0000 0144 getchar();
;PCODE: $0000010C VOL: 0
; 0000 0145 getchar();
;PCODE: $0000010D VOL: 0
; 0000 0146 getchar();
;PCODE: $0000010E VOL: 0
; 0000 0147 getchar();
;PCODE: $0000010F VOL: 0
; 0000 0148 getchar();
;PCODE: $00000110 VOL: 0
; 0000 0149 z = getchar();
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
; 0000 014A //itoa(z,dupa1);
; 0000 014B //lcd_puts(dupa1);
; 0000 014C 
; 0000 014D return z;
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
; 0000 014E }
;PCODE: $0000011B VOL: 0
;
;
;
;
;// Timer 0 overflow interrupt service routine
;interrupt [TIM0_OVF] void timer0_ovf_isr(void)
; 0000 0155 {
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
; 0000 0156 // Place your code here
; 0000 0157 //16,384 ms
; 0000 0158 sek1++;     //Ster 1
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
; 0000 0159 sek2++;     //ster 3
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
; 0000 015A 
; 0000 015B 
; 0000 015C sek3++;     //ster 2
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
; 0000 015D sek4++;     //ster 4
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
; 0000 015E 
; 0000 015F 
; 0000 0160 //sek10++;
; 0000 0161 
; 0000 0162 sek11++;  //do wyboru zacisku
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
; 0000 0163 sek12++;  //do czasu przedmuchu
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
; 0000 0164 
; 0000 0165 sek13++;  //do czasu zatrzymania sie druciaka na gorze
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
; 0000 0166 
; 0000 0167 
; 0000 0168 if(PORTE.3 == 1)
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
; 0000 0169       {
; 0000 016A       czas_pracy_szczotki_drucianej++;
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
; 0000 016B       czas_pracy_krazka_sciernego++;
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
; 0000 016C       if(czas_pracy_szczotki_drucianej == 61 * 60 * 60)
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
; 0000 016D             {
; 0000 016E             czas_pracy_szczotki_drucianej = 0;
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
; 0000 016F             czas_pracy_szczotki_drucianej_h++;
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
; 0000 0170             }
; 0000 0171       if(czas_pracy_krazka_sciernego == 61 * 60 * 60)
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
; 0000 0172             {
; 0000 0173             czas_pracy_krazka_sciernego = 0;
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
; 0000 0174             czas_pracy_krazka_sciernego_h++;
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
; 0000 0175             }
; 0000 0176       }
;PCODE: $0000015E VOL: 0
; 0000 0177 
; 0000 0178 
; 0000 0179       //61 razy - 1s
; 0000 017A       //61 * 60 - 1 minuta
; 0000 017B       //61 * 60 * 60 - 1h
; 0000 017C 
; 0000 017D 
; 0000 017E }
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
;
;
;
;
;
;// Declare your global variables here
;
;void komunikat_na_panel(char flash *fmtstr,int adres2,int adres22)
; 0000 0187 {
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
; 0000 0188 int h;
; 0000 0189 
; 0000 018A h = 0;
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
;	*fmtstr -> Y+6
;	adres2 -> Y+4
;	adres22 -> Y+2
;	h -> R16,R17
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
; 0000 018B h = strlenf(fmtstr);
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
; 0000 018C h = h + 3;
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
; 0000 018D 
; 0000 018E putchar(90);
;PCODE: $0000016F VOL: 0
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
; 0000 018F putchar(165);
;PCODE: $00000172 VOL: 0
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
; 0000 0190 putchar(h);       //ilosc liter 43 + 3
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
; 0000 0191 putchar(130);  //82
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
;PCODE: $00000179 VOL: 0
; 0000 0192 putchar(adres2);    //
;PCODE: $0000017A VOL: 0
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
; 0000 0193 putchar(adres22);  //
;PCODE: $0000017D VOL: 0
;PCODE: $0000017E VOL: 0
;PCODE: $0000017F VOL: 0
; 0000 0194 printf(fmtstr);
;PCODE: $00000180 VOL: 0
;PCODE: $00000181 VOL: 0
;PCODE: $00000182 VOL: 0
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
;PCODE: $00000185 VOL: 0
; 0000 0195 }
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
;PCODE: $0000018A VOL: 0
;PCODE: $0000018B VOL: 0
;PCODE: $0000018C VOL: 0
;
;
;
;void wartosc_parametru_panelu(int wartosc, int adres1, int adres2)
; 0000 019A {
;PCODE: $0000018D VOL: 0
;PCODE: $0000018E VOL: 0
; 0000 019B putchar(90);  //5A
;	wartosc -> Y+4
;	adres1 -> Y+2
;	adres2 -> Y+0
;PCODE: $0000018F VOL: 0
;PCODE: $00000190 VOL: 0
;PCODE: $00000191 VOL: 0
; 0000 019C putchar(165); //A5
;PCODE: $00000192 VOL: 0
;PCODE: $00000193 VOL: 0
;PCODE: $00000194 VOL: 0
; 0000 019D putchar(5);//05
;PCODE: $00000195 VOL: 0
;PCODE: $00000196 VOL: 0
;PCODE: $00000197 VOL: 0
; 0000 019E putchar(130);  //82    /
;PCODE: $00000198 VOL: 0
;PCODE: $00000199 VOL: 0
;PCODE: $0000019A VOL: 0
; 0000 019F putchar(adres1);    //00
;PCODE: $0000019B VOL: 0
;PCODE: $0000019C VOL: 0
;PCODE: $0000019D VOL: 0
; 0000 01A0 putchar(adres2);   //40
;PCODE: $0000019E VOL: 0
;PCODE: $0000019F VOL: 0
;PCODE: $000001A0 VOL: 0
; 0000 01A1 putchar(0);    //00
;PCODE: $000001A1 VOL: 0
;PCODE: $000001A2 VOL: 0
;PCODE: $000001A3 VOL: 0
; 0000 01A2 putchar(wartosc);   //80
;PCODE: $000001A4 VOL: 0
;PCODE: $000001A5 VOL: 0
;PCODE: $000001A6 VOL: 0
; 0000 01A3 }
;PCODE: $000001A7 VOL: 0
;PCODE: $000001A8 VOL: 0
;PCODE: $000001A9 VOL: 0
;
;
;void zaktualizuj_parametry_panelu()
; 0000 01A7 {
;PCODE: $000001AA VOL: 0
;PCODE: $000001AB VOL: 0
; 0000 01A8 wartosc_parametru_panelu(czas_pracy_szczotki_drucianej_h,0,144);
;PCODE: $000001AC VOL: 0
;PCODE: $000001AD VOL: 0
;PCODE: $000001AE VOL: 0
;PCODE: $000001AF VOL: 0
;PCODE: $000001B0 VOL: 0
;PCODE: $000001B1 VOL: 0
;PCODE: $000001B2 VOL: 0
;PCODE: $000001B3 VOL: 0
; 0000 01A9 
; 0000 01AA wartosc_parametru_panelu(czas_pracy_krazka_sciernego_h,16,48);
;PCODE: $000001B4 VOL: 0
;PCODE: $000001B5 VOL: 0
;PCODE: $000001B6 VOL: 0
;PCODE: $000001B7 VOL: 0
;PCODE: $000001B8 VOL: 0
;PCODE: $000001B9 VOL: 0
;PCODE: $000001BA VOL: 0
;PCODE: $000001BB VOL: 0
; 0000 01AB 
; 0000 01AC }
;PCODE: $000001BC VOL: 0
;PCODE: $000001BD VOL: 0
;
;void komunikat_z_czytnika_kodow(char flash *fmtstr,int rzad, int na_plus_minus)
; 0000 01AF {
;PCODE: $000001BE VOL: 0
;PCODE: $000001BF VOL: 0
; 0000 01B0 //na_plus_minus = 1;  to jest na plus
; 0000 01B1 //na_plus_minus = 0;  to jest na minus
; 0000 01B2 
; 0000 01B3 int h, adres1,adres11,adres2,adres22;
; 0000 01B4 
; 0000 01B5 h = 0;
;PCODE: $000001C0 VOL: 0
;PCODE: $000001C1 VOL: 0
;	*fmtstr -> Y+14
;	rzad -> Y+12
;	na_plus_minus -> Y+10
;	h -> R16,R17
;	adres1 -> R18,R19
;	adres11 -> R20,R21
;	adres2 -> Y+8
;	adres22 -> Y+6
;PCODE: $000001C2 VOL: 0
;PCODE: $000001C3 VOL: 0
; 0000 01B6 h = strlenf(fmtstr);
;PCODE: $000001C4 VOL: 0
;PCODE: $000001C5 VOL: 0
;PCODE: $000001C6 VOL: 0
;PCODE: $000001C7 VOL: 0
; 0000 01B7 h = h + 3;
;PCODE: $000001C8 VOL: 0
;PCODE: $000001C9 VOL: 0
; 0000 01B8 
; 0000 01B9 if(rzad == 1)
;PCODE: $000001CA VOL: 0
;PCODE: $000001CB VOL: 0
;PCODE: $000001CC VOL: 0
; 0000 01BA    {
; 0000 01BB    adres1 = 0;
;PCODE: $000001CD VOL: 0
;PCODE: $000001CE VOL: 0
; 0000 01BC    adres11 = 80;
;PCODE: $000001CF VOL: 0
;PCODE: $000001D0 VOL: 0
; 0000 01BD    adres2 = 80;
;PCODE: $000001D1 VOL: 0
;PCODE: $000001D2 VOL: 0
; 0000 01BE    adres22 = 0;
;PCODE: $000001D3 VOL: 0
;PCODE: $000001D4 VOL: 0
; 0000 01BF    }
; 0000 01C0 if(rzad == 2)
;PCODE: $000001D5 VOL: 0
;PCODE: $000001D6 VOL: 0
;PCODE: $000001D7 VOL: 0
;PCODE: $000001D8 VOL: 0
; 0000 01C1    {
; 0000 01C2    adres1 = 0;
;PCODE: $000001D9 VOL: 0
;PCODE: $000001DA VOL: 0
; 0000 01C3    adres11 = 32;
;PCODE: $000001DB VOL: 0
;PCODE: $000001DC VOL: 0
; 0000 01C4    adres2 = 64;
;PCODE: $000001DD VOL: 0
;PCODE: $000001DE VOL: 0
; 0000 01C5    adres22 = 0;
;PCODE: $000001DF VOL: 0
;PCODE: $000001E0 VOL: 0
; 0000 01C6    }
; 0000 01C7 
; 0000 01C8 putchar(90);
;PCODE: $000001E1 VOL: 0
;PCODE: $000001E2 VOL: 0
;PCODE: $000001E3 VOL: 0
;PCODE: $000001E4 VOL: 0
; 0000 01C9 putchar(165);
;PCODE: $000001E5 VOL: 0
;PCODE: $000001E6 VOL: 0
;PCODE: $000001E7 VOL: 0
; 0000 01CA putchar(h);       //ilosc liter 43 + 3
;PCODE: $000001E8 VOL: 0
;PCODE: $000001E9 VOL: 0
; 0000 01CB putchar(130);  //82
;PCODE: $000001EA VOL: 0
;PCODE: $000001EB VOL: 0
;PCODE: $000001EC VOL: 0
; 0000 01CC putchar(adres1);    //
;PCODE: $000001ED VOL: 0
;PCODE: $000001EE VOL: 0
; 0000 01CD putchar(adres11);  //
;PCODE: $000001EF VOL: 0
;PCODE: $000001F0 VOL: 0
; 0000 01CE printf(fmtstr);
;PCODE: $000001F1 VOL: 0
;PCODE: $000001F2 VOL: 0
;PCODE: $000001F3 VOL: 0
;PCODE: $000001F4 VOL: 0
;PCODE: $000001F5 VOL: 0
;PCODE: $000001F6 VOL: 0
; 0000 01CF 
; 0000 01D0 
; 0000 01D1 if(rzad == 1 & macierz_zaciskow[rzad]==0)
;PCODE: $000001F7 VOL: 0
;PCODE: $000001F8 VOL: 0
;PCODE: $000001F9 VOL: 0
;PCODE: $000001FA VOL: 0
;PCODE: $000001FB VOL: 0
;PCODE: $000001FC VOL: 0
;PCODE: $000001FD VOL: 0
;PCODE: $000001FE VOL: 0
;PCODE: $000001FF VOL: 0
;PCODE: $00000200 VOL: 0
;PCODE: $00000201 VOL: 0
;PCODE: $00000202 VOL: 0
;PCODE: $00000203 VOL: 0
; 0000 01D2     {
; 0000 01D3     komunikat_na_panel("                                                ",adres2,adres22);
;PCODE: $00000204 VOL: 0
;PCODE: $00000205 VOL: 0
;PCODE: $00000206 VOL: 0
;PCODE: $00000207 VOL: 0
;PCODE: $00000208 VOL: 0
;PCODE: $00000209 VOL: 0
;PCODE: $0000020A VOL: 0
;PCODE: $0000020B VOL: 0
; 0000 01D4     komunikat_na_panel("Zacisk nie zmierzony u Wykonawcy",adres2,adres22);
;PCODE: $0000020C VOL: 0
;PCODE: $0000020D VOL: 0
;PCODE: $0000020E VOL: 0
;PCODE: $0000020F VOL: 0
;PCODE: $00000210 VOL: 0
;PCODE: $00000211 VOL: 0
;PCODE: $00000212 VOL: 0
;PCODE: $00000213 VOL: 0
; 0000 01D5     }
; 0000 01D6 
; 0000 01D7 if(rzad == 1 & na_plus_minus == 1)
;PCODE: $00000214 VOL: 0
;PCODE: $00000215 VOL: 0
;PCODE: $00000216 VOL: 0
;PCODE: $00000217 VOL: 0
;PCODE: $00000218 VOL: 0
;PCODE: $00000219 VOL: 0
;PCODE: $0000021A VOL: 0
;PCODE: $0000021B VOL: 0
;PCODE: $0000021C VOL: 0
;PCODE: $0000021D VOL: 0
; 0000 01D8     {
; 0000 01D9     komunikat_na_panel("                                                ",adres2,adres22);
;PCODE: $0000021E VOL: 0
;PCODE: $0000021F VOL: 0
;PCODE: $00000220 VOL: 0
;PCODE: $00000221 VOL: 0
;PCODE: $00000222 VOL: 0
;PCODE: $00000223 VOL: 0
;PCODE: $00000224 VOL: 0
;PCODE: $00000225 VOL: 0
; 0000 01DA     komunikat_na_panel("Os zacisku blizej szafy",adres2,adres22);
;PCODE: $00000226 VOL: 0
;PCODE: $00000227 VOL: 0
;PCODE: $00000228 VOL: 0
;PCODE: $00000229 VOL: 0
;PCODE: $0000022A VOL: 0
;PCODE: $0000022B VOL: 0
;PCODE: $0000022C VOL: 0
;PCODE: $0000022D VOL: 0
; 0000 01DB     }
; 0000 01DC 
; 0000 01DD if(rzad == 1 & na_plus_minus == 0)
;PCODE: $0000022E VOL: 0
;PCODE: $0000022F VOL: 0
;PCODE: $00000230 VOL: 0
;PCODE: $00000231 VOL: 0
;PCODE: $00000232 VOL: 0
;PCODE: $00000233 VOL: 0
;PCODE: $00000234 VOL: 0
;PCODE: $00000235 VOL: 0
;PCODE: $00000236 VOL: 0
;PCODE: $00000237 VOL: 0
; 0000 01DE     {
; 0000 01DF     komunikat_na_panel("                                                ",adres2,adres22);
;PCODE: $00000238 VOL: 0
;PCODE: $00000239 VOL: 0
;PCODE: $0000023A VOL: 0
;PCODE: $0000023B VOL: 0
;PCODE: $0000023C VOL: 0
;PCODE: $0000023D VOL: 0
;PCODE: $0000023E VOL: 0
;PCODE: $0000023F VOL: 0
; 0000 01E0     komunikat_na_panel("Os zacisku dalej od szafy",adres2,adres22);
;PCODE: $00000240 VOL: 0
;PCODE: $00000241 VOL: 0
;PCODE: $00000242 VOL: 0
;PCODE: $00000243 VOL: 0
;PCODE: $00000244 VOL: 0
;PCODE: $00000245 VOL: 0
;PCODE: $00000246 VOL: 0
;PCODE: $00000247 VOL: 0
; 0000 01E1     }
; 0000 01E2 
; 0000 01E3 
; 0000 01E4 if(rzad == 2 & na_plus_minus == 1)
;PCODE: $00000248 VOL: 0
;PCODE: $00000249 VOL: 0
;PCODE: $0000024A VOL: 0
;PCODE: $0000024B VOL: 0
;PCODE: $0000024C VOL: 0
;PCODE: $0000024D VOL: 0
;PCODE: $0000024E VOL: 0
;PCODE: $0000024F VOL: 0
;PCODE: $00000250 VOL: 0
;PCODE: $00000251 VOL: 0
; 0000 01E5     {
; 0000 01E6     komunikat_na_panel("                                                ",adres2,adres22);
;PCODE: $00000252 VOL: 0
;PCODE: $00000253 VOL: 0
;PCODE: $00000254 VOL: 0
;PCODE: $00000255 VOL: 0
;PCODE: $00000256 VOL: 0
;PCODE: $00000257 VOL: 0
;PCODE: $00000258 VOL: 0
;PCODE: $00000259 VOL: 0
; 0000 01E7     komunikat_na_panel("Os zacisku dalej od szafy",adres2,adres22);
;PCODE: $0000025A VOL: 0
;PCODE: $0000025B VOL: 0
;PCODE: $0000025C VOL: 0
;PCODE: $0000025D VOL: 0
;PCODE: $0000025E VOL: 0
;PCODE: $0000025F VOL: 0
;PCODE: $00000260 VOL: 0
;PCODE: $00000261 VOL: 0
; 0000 01E8     }
; 0000 01E9 
; 0000 01EA if(rzad == 2 & na_plus_minus == 0)
;PCODE: $00000262 VOL: 0
;PCODE: $00000263 VOL: 0
;PCODE: $00000264 VOL: 0
;PCODE: $00000265 VOL: 0
;PCODE: $00000266 VOL: 0
;PCODE: $00000267 VOL: 0
;PCODE: $00000268 VOL: 0
;PCODE: $00000269 VOL: 0
;PCODE: $0000026A VOL: 0
;PCODE: $0000026B VOL: 0
; 0000 01EB     {
; 0000 01EC     komunikat_na_panel("                                                ",adres2,adres22);
;PCODE: $0000026C VOL: 0
;PCODE: $0000026D VOL: 0
;PCODE: $0000026E VOL: 0
;PCODE: $0000026F VOL: 0
;PCODE: $00000270 VOL: 0
;PCODE: $00000271 VOL: 0
;PCODE: $00000272 VOL: 0
;PCODE: $00000273 VOL: 0
; 0000 01ED     komunikat_na_panel("Os zacisku blizej szafy",adres2,adres22);
;PCODE: $00000274 VOL: 0
;PCODE: $00000275 VOL: 0
;PCODE: $00000276 VOL: 0
;PCODE: $00000277 VOL: 0
;PCODE: $00000278 VOL: 0
;PCODE: $00000279 VOL: 0
;PCODE: $0000027A VOL: 0
;PCODE: $0000027B VOL: 0
; 0000 01EE     }
; 0000 01EF 
; 0000 01F0 
; 0000 01F1 }
;PCODE: $0000027C VOL: 0
;PCODE: $0000027D VOL: 0
;PCODE: $0000027E VOL: 0
;PCODE: $0000027F VOL: 0
;PCODE: $00000280 VOL: 0
;
;void zerowanie_pam_wew()
; 0000 01F4 {
;PCODE: $00000281 VOL: 0
;PCODE: $00000282 VOL: 0
; 0000 01F5 if(czas_pracy_szczotki_drucianej_h >= 255 | czas_pracy_krazka_sciernego_h >=255 | czas_pracy_krazka_sciernego_stala >= 255 | czas_pracy_szczotki_drucianej_stala >= 255 |
; 0000 01F6    szczotka_druciana_ilosc_cykli >= 255 | krazek_scierny_ilosc_cykli >= 255 | krazek_scierny_cykl_po_okregu_ilosc >=255)
;PCODE: $00000283 VOL: 0
;PCODE: $00000284 VOL: 0
;PCODE: $00000285 VOL: 0
;PCODE: $00000286 VOL: 0
;PCODE: $00000287 VOL: 0
;PCODE: $00000288 VOL: 0
;PCODE: $00000289 VOL: 0
;PCODE: $0000028A VOL: 0
;PCODE: $0000028B VOL: 0
;PCODE: $0000028C VOL: 0
;PCODE: $0000028D VOL: 0
;PCODE: $0000028E VOL: 0
;PCODE: $0000028F VOL: 0
;PCODE: $00000290 VOL: 0
;PCODE: $00000291 VOL: 0
;PCODE: $00000292 VOL: 0
;PCODE: $00000293 VOL: 0
;PCODE: $00000294 VOL: 0
;PCODE: $00000295 VOL: 0
;PCODE: $00000296 VOL: 0
;PCODE: $00000297 VOL: 0
;PCODE: $00000298 VOL: 0
;PCODE: $00000299 VOL: 0
;PCODE: $0000029A VOL: 0
;PCODE: $0000029B VOL: 0
;PCODE: $0000029C VOL: 0
;PCODE: $0000029D VOL: 0
;PCODE: $0000029E VOL: 0
;PCODE: $0000029F VOL: 0
;PCODE: $000002A0 VOL: 0
;PCODE: $000002A1 VOL: 0
;PCODE: $000002A2 VOL: 0
;PCODE: $000002A3 VOL: 0
;PCODE: $000002A4 VOL: 0
;PCODE: $000002A5 VOL: 0
;PCODE: $000002A6 VOL: 0
;PCODE: $000002A7 VOL: 0
;PCODE: $000002A8 VOL: 0
;PCODE: $000002A9 VOL: 0
;PCODE: $000002AA VOL: 0
;PCODE: $000002AB VOL: 0
;PCODE: $000002AC VOL: 0
;PCODE: $000002AD VOL: 0
;PCODE: $000002AE VOL: 0
;PCODE: $000002AF VOL: 0
;PCODE: $000002B0 VOL: 0
;PCODE: $000002B1 VOL: 0
;PCODE: $000002B2 VOL: 0
; 0000 01F7      {
; 0000 01F8      czas_pracy_szczotki_drucianej_h = 0;
;PCODE: $000002B3 VOL: 0
;PCODE: $000002B4 VOL: 0
;PCODE: $000002B5 VOL: 0
; 0000 01F9      czas_pracy_szczotki_drucianej = 0;
;PCODE: $000002B6 VOL: 0
;PCODE: $000002B7 VOL: 0
; 0000 01FA      czas_pracy_krazka_sciernego_h = 0;
;PCODE: $000002B8 VOL: 0
;PCODE: $000002B9 VOL: 0
;PCODE: $000002BA VOL: 0
; 0000 01FB      czas_pracy_krazka_sciernego = 0;
;PCODE: $000002BB VOL: 0
;PCODE: $000002BC VOL: 0
; 0000 01FC      czas_pracy_krazka_sciernego_stala = 5;
;PCODE: $000002BD VOL: 0
;PCODE: $000002BE VOL: 0
;PCODE: $000002BF VOL: 0
; 0000 01FD      czas_pracy_szczotki_drucianej_stala = 5;
;PCODE: $000002C0 VOL: 0
;PCODE: $000002C1 VOL: 0
;PCODE: $000002C2 VOL: 0
; 0000 01FE      szczotka_druciana_ilosc_cykli = 3;
;PCODE: $000002C3 VOL: 0
;PCODE: $000002C4 VOL: 0
;PCODE: $000002C5 VOL: 0
; 0000 01FF      krazek_scierny_ilosc_cykli = 3;
;PCODE: $000002C6 VOL: 0
;PCODE: $000002C7 VOL: 0
;PCODE: $000002C8 VOL: 0
; 0000 0200      krazek_scierny_cykl_po_okregu_ilosc = 3;
;PCODE: $000002C9 VOL: 0
;PCODE: $000002CA VOL: 0
;PCODE: $000002CB VOL: 0
; 0000 0201      }
; 0000 0202 
; 0000 0203 /*
; 0000 0204 if(czas_pracy_krazka_sciernego_h >= 255)
; 0000 0205      {
; 0000 0206      czas_pracy_krazka_sciernego_h = 0;
; 0000 0207      czas_pracy_krazka_sciernego = 0;
; 0000 0208      }
; 0000 0209 if(czas_pracy_krazka_sciernego_stala >= 255)
; 0000 020A      czas_pracy_krazka_sciernego_stala = 5;
; 0000 020B 
; 0000 020C if(czas_pracy_szczotki_drucianej_stala >= 255)
; 0000 020D      czas_pracy_szczotki_drucianej_stala = 5;
; 0000 020E 
; 0000 020F if(szczotka_druciana_ilosc_cykli >= 255)
; 0000 0210 
; 0000 0211 if(krazek_scierny_ilosc_cykli >= 255)
; 0000 0212 
; 0000 0213 if(krazek_scierny_cykl_po_okregu_ilosc >=255)
; 0000 0214 */
; 0000 0215 
; 0000 0216 }
;PCODE: $000002CC VOL: 0
;PCODE: $000002CD VOL: 0
;PCODE: $000002CE VOL: 0
;
;
;void odpytaj_parametry_panelu()
; 0000 021A {
;PCODE: $000002CF VOL: 0
;PCODE: $000002D0 VOL: 0
; 0000 021B if(sprawdz_pin0(PORTMM,0x77) == 0 & sprawdz_pin1(PORTMM,0x77) == 0)
;PCODE: $000002D1 VOL: 0
;PCODE: $000002D2 VOL: 0
;PCODE: $000002D3 VOL: 0
;PCODE: $000002D4 VOL: 0
;PCODE: $000002D5 VOL: 0
;PCODE: $000002D6 VOL: 0
;PCODE: $000002D7 VOL: 0
;PCODE: $000002D8 VOL: 0
;PCODE: $000002D9 VOL: 0
;PCODE: $000002DA VOL: 0
;PCODE: $000002DB VOL: 0
;PCODE: $000002DC VOL: 0
;PCODE: $000002DD VOL: 0
;PCODE: $000002DE VOL: 0
;PCODE: $000002DF VOL: 0
;PCODE: $000002E0 VOL: 0
;PCODE: $000002E1 VOL: 0
;PCODE: $000002E2 VOL: 0
; 0000 021C     start = odczytaj_parametr(0,64);
;PCODE: $000002E3 VOL: 0
;PCODE: $000002E4 VOL: 0
;PCODE: $000002E5 VOL: 0
;PCODE: $000002E6 VOL: 0
;PCODE: $000002E7 VOL: 0
;PCODE: $000002E8 VOL: 0
; 0000 021D il_zaciskow_rzad_1 = odczytaj_parametr(0,128);
;PCODE: $000002E9 VOL: 0
;PCODE: $000002EA VOL: 0
;PCODE: $000002EB VOL: 0
;PCODE: $000002EC VOL: 0
;PCODE: $000002ED VOL: 0
;PCODE: $000002EE VOL: 0
;PCODE: $000002EF VOL: 0
; 0000 021E il_zaciskow_rzad_2 = odczytaj_parametr(0,48);
;PCODE: $000002F0 VOL: 0
;PCODE: $000002F1 VOL: 0
;PCODE: $000002F2 VOL: 0
;PCODE: $000002F3 VOL: 0
;PCODE: $000002F4 VOL: 0
;PCODE: $000002F5 VOL: 0
; 0000 021F 
; 0000 0220 szczotka_druciana_ilosc_cykli = odczytaj_parametr(48,64);
;PCODE: $000002F6 VOL: 0
;PCODE: $000002F7 VOL: 0
;PCODE: $000002F8 VOL: 0
;PCODE: $000002F9 VOL: 0
;PCODE: $000002FA VOL: 0
;PCODE: $000002FB VOL: 0
;PCODE: $000002FC VOL: 0
; 0000 0221                                                 //2090
; 0000 0222 krazek_scierny_ilosc_cykli = odczytaj_parametr(32,144);
;PCODE: $000002FD VOL: 0
;PCODE: $000002FE VOL: 0
;PCODE: $000002FF VOL: 0
;PCODE: $00000300 VOL: 0
;PCODE: $00000301 VOL: 0
;PCODE: $00000302 VOL: 0
;PCODE: $00000303 VOL: 0
; 0000 0223                                                     //3000
; 0000 0224 krazek_scierny_cykl_po_okregu_ilosc = odczytaj_parametr(48,0);
;PCODE: $00000304 VOL: 0
;PCODE: $00000305 VOL: 0
;PCODE: $00000306 VOL: 0
;PCODE: $00000307 VOL: 0
;PCODE: $00000308 VOL: 0
;PCODE: $00000309 VOL: 0
;PCODE: $0000030A VOL: 0
; 0000 0225 
; 0000 0226 
; 0000 0227 czas_pracy_szczotki_drucianej_stala = odczytaj_parametr(16,112);
;PCODE: $0000030B VOL: 0
;PCODE: $0000030C VOL: 0
;PCODE: $0000030D VOL: 0
;PCODE: $0000030E VOL: 0
;PCODE: $0000030F VOL: 0
;PCODE: $00000310 VOL: 0
;PCODE: $00000311 VOL: 0
; 0000 0228 
; 0000 0229 czas_pracy_krazka_sciernego_stala = odczytaj_parametr(32,16);
;PCODE: $00000312 VOL: 0
;PCODE: $00000313 VOL: 0
;PCODE: $00000314 VOL: 0
;PCODE: $00000315 VOL: 0
;PCODE: $00000316 VOL: 0
;PCODE: $00000317 VOL: 0
;PCODE: $00000318 VOL: 0
; 0000 022A 
; 0000 022B czas_pracy_szczotki_drucianej_h = odczytaj_parametr(0,144);
;PCODE: $00000319 VOL: 0
;PCODE: $0000031A VOL: 0
;PCODE: $0000031B VOL: 0
;PCODE: $0000031C VOL: 0
;PCODE: $0000031D VOL: 0
;PCODE: $0000031E VOL: 0
;PCODE: $0000031F VOL: 0
; 0000 022C 
; 0000 022D czas_pracy_krazka_sciernego_h = odczytaj_parametr(16,48);
;PCODE: $00000320 VOL: 0
;PCODE: $00000321 VOL: 0
;PCODE: $00000322 VOL: 0
;PCODE: $00000323 VOL: 0
;PCODE: $00000324 VOL: 0
;PCODE: $00000325 VOL: 0
;PCODE: $00000326 VOL: 0
; 0000 022E 
; 0000 022F test_geometryczny_rzad_1 = odczytaj_parametr(48,80);
;PCODE: $00000327 VOL: 0
;PCODE: $00000328 VOL: 0
;PCODE: $00000329 VOL: 0
;PCODE: $0000032A VOL: 0
;PCODE: $0000032B VOL: 0
;PCODE: $0000032C VOL: 0
; 0000 0230 
; 0000 0231 test_geometryczny_rzad_2 = odczytaj_parametr(48,96);
;PCODE: $0000032D VOL: 0
;PCODE: $0000032E VOL: 0
;PCODE: $0000032F VOL: 0
;PCODE: $00000330 VOL: 0
;PCODE: $00000331 VOL: 0
;PCODE: $00000332 VOL: 0
; 0000 0232 
; 0000 0233                                                 //2050
; 0000 0234 zerowanie_pam_wew();
;PCODE: $00000333 VOL: 0
; 0000 0235 
; 0000 0236 }
;PCODE: $00000334 VOL: 0
;PCODE: $00000335 VOL: 0
;
;void wyrrrjscia_i_wejscia_opis()
; 0000 0239 {
;PCODE: $00000336 VOL: 0
;PCODE: $00000337 VOL: 0
; 0000 023A 
; 0000 023B 
; 0000 023C //IN0
; 0000 023D 
; 0000 023E //komunikacja miedzy slave a master
; 0000 023F //sprawdz_pin0(PORTHH,0x73)
; 0000 0240 //sprawdz_pin1(PORTHH,0x73)
; 0000 0241 //sprawdz_pin2(PORTHH,0x73)
; 0000 0242 //sprawdz_pin3(PORTHH,0x73)
; 0000 0243 //sprawdz_pin4(PORTHH,0x73)
; 0000 0244 //sprawdz_pin5(PORTHH,0x73)
; 0000 0245 //sprawdz_pin6(PORTHH,0x73)
; 0000 0246 //sprawdz_pin7(PORTHH,0x73)
; 0000 0247 
; 0000 0248 //IN1
; 0000 0249 //sprawdz_pin0(PORTJJ,0x79)  BUSY   STEROWNIK1
; 0000 024A //sprawdz_pin1(PORTJJ,0x79)  AREA   STEROWNIK1
; 0000 024B //sprawdz_pin2(PORTJJ,0x79)  SETON  STEROWNIK1
; 0000 024C //sprawdz_pin3(PORTJJ,0x79)  INP    STEROWNIK1
; 0000 024D //sprawdz_pin4(PORTJJ,0x79)  SVRE   STEROWNIK1
; 0000 024E //sprawdz_pin5(PORTJJ,0x79)  ALARM  STEROWNIK1
; 0000 024F //sprawdz_pin6(PORTJJ,0x79)  czujnik cisnienia
; 0000 0250 //sprawdz_pin7(PORTJJ,0x79)
; 0000 0251 
; 0000 0252 //IN2
; 0000 0253 //sprawdz_pin0(PORTKK,0x75)  B7 BUSY    LECCP STEROWNIK3
; 0000 0254 //sprawdz_pin1(PORTKK,0x75)  B8 AREA    LECP6 STEROWNIK3
; 0000 0255 //sprawdz_pin2(PORTKK,0x75)  B9 SETON   LECP6 STEROWNIK3
; 0000 0256 //sprawdz_pin3(PORTKK,0x75)  B10 INP    LECP6 STEROWNIK3
; 0000 0257 //sprawdz_pin4(PORTKK,0x75)  B7 BUSY    LECCP STEROWNIK4
; 0000 0258 //sprawdz_pin5(PORTKK,0x75)  B8 AREA    LECP6 STEROWNIK4
; 0000 0259 //sprawdz_pin6(PORTKK,0x75)  B9 SETON   LECP6 STEROWNIK4
; 0000 025A //sprawdz_pin7(PORTKK,0x75)  B10 INP    LECP6 STEROWNIK4
; 0000 025B 
; 0000 025C //IN3
; 0000 025D //sprawdz_pin0(PORTLL,0x71)  BUSY   STEROWNIK2
; 0000 025E //sprawdz_pin1(PORTLL,0x71)  AREA   STEROWNIK2
; 0000 025F //sprawdz_pin2(PORTLL,0x71)  SETON  STEROWNIK2
; 0000 0260 //sprawdz_pin3(PORTLL,0x71)  INP    STEROWNIK2
; 0000 0261 //sprawdz_pin4(PORTLL,0x71)  SVRE   STEROWNIK2
; 0000 0262 //sprawdz_pin5(PORTLL,0x71)  ALARM  STEROWNIK2
; 0000 0263 //sprawdz_pin6(PORTLL,0x71)  S6A przek³adanie rzedow
; 0000 0264 //sprawdz_pin7(PORTLL,0x71)  S6B przekladanie rzedow
; 0000 0265 
; 0000 0266 //IN4
; 0000 0267 //sprawdz_pin0(PORTMM,0x77) J2  czujnik indukcyjny domkniecia pokrywy
; 0000 0268 //sprawdz_pin1(PORTMM,0x77) J3  czujnik indukcyjny domkniecia pokrywy
; 0000 0269 //sprawdz_pin2(PORTMM,0x77)
; 0000 026A //sprawdz_pin3(PORTMM,0x77)
; 0000 026B //sprawdz_pin4(PORTMM,0x77)
; 0000 026C //sprawdz_pin5(PORTMM,0x77)
; 0000 026D //sprawdz_pin6(PORTMM,0x77) ALARM STEROWNIK4
; 0000 026E //sprawdz_pin7(PORTMM,0x77) ALARM STEROWNIK3
; 0000 026F 
; 0000 0270 //sterownik 1 i sterownik 3 - krazek scierny
; 0000 0271 //sterownik 2 i sterownik 4 - druciak
; 0000 0272 
; 0000 0273 //OUT
; 0000 0274 //PORTA.0   IN0  STEROWNIK1        OUT 1
; 0000 0275 //PORTA.1   IN1  STEROWNIK1
; 0000 0276 //PORTA.2   IN2  STEROWNIK1
; 0000 0277 //PORTA.3   IN3  STEROWNIK1
; 0000 0278 //PORTA.4   IN4  STEROWNIK1
; 0000 0279 //PORTA.5   IN5  STEROWNIK1
; 0000 027A //PORTA.6   IN6  STEROWNIK1
; 0000 027B //PORTA.7   IN7  STEROWNIK1
; 0000 027C 
; 0000 027D //PORTB.0   IN0  STEROWNIK4        OUT 5
; 0000 027E //PORTB.1   IN1  STEROWNIK4
; 0000 027F //PORTB.2   IN2  STEROWNIK4
; 0000 0280 //PORTB.3   IN3  STEROWNIK4
; 0000 0281 //PORTB.4   4B CEWKA przedmuch osi
; 0000 0282 //PORTB.5   DRIVE  STEROWNIK4
; 0000 0283 //PORTB.6   swiatlo zielone
; 0000 0284 //PORTB.7   IN5 STEROWNIK 3
; 0000 0285 
; 0000 0286 //PORTC.0   IN0  STEROWNIK2        OUT 3
; 0000 0287 //PORTC.1   IN1  STEROWNIK2
; 0000 0288 //PORTC.2   IN2  STEROWNIK2
; 0000 0289 //PORTC.3   IN3  STEROWNIK2
; 0000 028A //PORTC.4   IN4  STEROWNIK2
; 0000 028B //PORTC.5   IN5  STEROWNIK2
; 0000 028C //PORTC.6   IN6  STEROWNIK2
; 0000 028D //PORTC.7   IN7  STEROWNIK2
; 0000 028E 
; 0000 028F //PORTD.0  SDA                     OUT 2
; 0000 0290 //PORTD.1  SCL
; 0000 0291 //PORTD.2  SETUP   STEROWNIK1 STEROWNIK 2 STEROIWNIK 3 STEROWNIK 4
; 0000 0292 //PORTD.3  DRIVE   STEROWNIK1
; 0000 0293 //PORTD.4  IN8 STEROWNIK1
; 0000 0294 //PORTD.5  IN8 STEROWNIK2
; 0000 0295 //PORTD.6  DRIVE   STEROWNIK2
; 0000 0296 //PORTD.7  swiatlo czerwone i jednoczesnie HOLD
; 0000 0297 
; 0000 0298 //PORTE.0
; 0000 0299 //PORTE.1
; 0000 029A //PORTE.2  1A CEWKA szczotka druciana                    OUT 6
; 0000 029B //PORTE.3  1B CEWKA krazek scierny
; 0000 029C //PORTE.4  IN4  STEROWNIK4
; 0000 029D //PORTE.5  IN5  STEROWNIK4
; 0000 029E //PORTE.6  2A CEWKA przerzucanie docisku zaciskow
; 0000 029F //PORTE.7  3A CEWKA zacisnij zaciski
; 0000 02A0 
; 0000 02A1 //PORTF.0   IN0  STEROWNIK3             OUT 4
; 0000 02A2 //PORTF.1   IN1  STEROWNIK3
; 0000 02A3 //PORTF.2   IN2  STEROWNIK3
; 0000 02A4 //PORTF.3   IN3  STEROWNIK3
; 0000 02A5 //PORTF.4   4A CEWKA przedmuch zaciskow
; 0000 02A6 //PORTF.5   DRIVE  STEROWNIK3
; 0000 02A7 //PORTF.6   swiatlo zolte
; 0000 02A8 //PORTF.7   IN4 STEROWNIK 3
; 0000 02A9 
; 0000 02AA 
; 0000 02AB 
; 0000 02AC  //PORT_F.bits.b4 = 0;  //przedmuch zaciskow
; 0000 02AD //PORTF = PORT_F.byte;
; 0000 02AE //PORTB.4 = 1;  //przedmuch osi
; 0000 02AF //PORTE.2 = 1;  //szlifierka 1
; 0000 02B0 //PORTE.3 = 1;  //szlifierka 2
; 0000 02B1 //PORTE.6 = 0;  //zacisniety rzad 1
; 0000 02B2 //PORTE.6 = 1;  //zacisniety rzad 2
; 0000 02B3 //PORTE.7 = 0;    //zacisnij zaciski
; 0000 02B4 
; 0000 02B5 
; 0000 02B6 //macierz_zaciskow[rzad]=44; brak
; 0000 02B7 //macierz_zaciskow[rzad]=48; brak
; 0000 02B8 //macierz_zaciskow[rzad]=76  brak
; 0000 02B9 //macierz_zaciskow[rzad]=80; brak
; 0000 02BA //macierz_zaciskow[rzad]=92; brak
; 0000 02BB //macierz_zaciskow[rzad]=96;  brak
; 0000 02BC //macierz_zaciskow[rzad]=107; brak
; 0000 02BD //macierz_zaciskow[rzad]=111; brak
; 0000 02BE 
; 0000 02BF 
; 0000 02C0 
; 0000 02C1 
; 0000 02C2 /*
; 0000 02C3 
; 0000 02C4 //testy parzystych i nieparzystych IN0-IN8
; 0000 02C5 //testy port/pin
; 0000 02C6 //sterownik 3
; 0000 02C7 //PORTF.0   IN0  STEROWNIK3
; 0000 02C8 //PORTF.1   IN1  STEROWNIK3
; 0000 02C9 //PORTF.2   IN2  STEROWNIK3
; 0000 02CA //PORTF.3   IN3  STEROWNIK3
; 0000 02CB //PORTF.7   IN4 STEROWNIK 3
; 0000 02CC //PORTB.7   IN5 STEROWNIK 3
; 0000 02CD 
; 0000 02CE 
; 0000 02CF PORT_F.bits.b0 = 0;
; 0000 02D0 PORT_F.bits.b1 = 1;
; 0000 02D1 PORT_F.bits.b2 = 0;
; 0000 02D2 PORT_F.bits.b3 = 1;
; 0000 02D3 PORT_F.bits.b7 = 0;
; 0000 02D4 PORTF = PORT_F.byte;
; 0000 02D5 PORTB.7 = 1;
; 0000 02D6 
; 0000 02D7 //sterownik 4
; 0000 02D8 
; 0000 02D9 //PORTB.0   IN0  STEROWNIK4        OUT 5
; 0000 02DA //PORTB.1   IN1  STEROWNIK4
; 0000 02DB //PORTB.2   IN2  STEROWNIK4
; 0000 02DC //PORTB.3   IN3  STEROWNIK4
; 0000 02DD //PORTE.4  IN4  STEROWNIK4
; 0000 02DE //PORTE.5  IN5  STEROWNIK4
; 0000 02DF 
; 0000 02E0 PORTB.0 = 0;
; 0000 02E1 PORTB.1 = 1;
; 0000 02E2 PORTB.2 = 0;
; 0000 02E3 PORTB.3 = 1;
; 0000 02E4 PORTE.4 = 0;
; 0000 02E5 PORTE.5 = 1;
; 0000 02E6 
; 0000 02E7 //ster 1
; 0000 02E8 PORTA.0 = 0;   //IN0  STEROWNIK1        OUT 1
; 0000 02E9 PORTA.1 = 1;  //IN1  STEROWNIK1
; 0000 02EA PORTA.2 = 0;  // IN2  STEROWNIK1
; 0000 02EB PORTA.3 = 1;  //IN3  STEROWNIK1
; 0000 02EC PORTA.4 = 0;  // IN4  STEROWNIK1
; 0000 02ED PORTA.5 = 1;  //IN5  STEROWNIK1
; 0000 02EE PORTA.6 = 0;   //IN6  STEROWNIK1
; 0000 02EF PORTA.7 = 1;  //IN7  STEROWNIK1
; 0000 02F0 PORTD.4 = 0; //IN8 STEROWNIK1
; 0000 02F1 
; 0000 02F2 
; 0000 02F3 
; 0000 02F4 //sterownik 2
; 0000 02F5 PORTC.0 = 0;   //IN0  STEROWNIK2        OUT 3
; 0000 02F6 PORTC.1  = 1;  //IN1  STEROWNIK2
; 0000 02F7 PORTC.2 = 0;    //IN2  STEROWNIK2
; 0000 02F8 PORTC.3= 1;   //IN3  STEROWNIK2
; 0000 02F9 PORTC.4 = 0;   // IN4  STEROWNIK2
; 0000 02FA PORTC.5= 1;   //IN5  STEROWNIK2
; 0000 02FB PORTC.6 = 0;   // IN6  STEROWNIK2
; 0000 02FC PORTC.7= 1;   //IN7  STEROWNIK2
; 0000 02FD PORTD.5 = 0;  //IN8 STEROWNIK2
; 0000 02FE 
; 0000 02FF */
; 0000 0300 
; 0000 0301 }
;PCODE: $00000338 VOL: 0
;PCODE: $00000339 VOL: 0
;
;void sprawdz_cisnienie()
; 0000 0304 {
;PCODE: $0000033A VOL: 0
;PCODE: $0000033B VOL: 0
; 0000 0305 int i;
; 0000 0306 //i = 0;
; 0000 0307 i = 1;
;PCODE: $0000033C VOL: 0
;PCODE: $0000033D VOL: 0
;	i -> R16,R17
;PCODE: $0000033E VOL: 0
;PCODE: $0000033F VOL: 0
; 0000 0308 
; 0000 0309 while(i == 0)
;PCODE: $00000340 VOL: 0
;PCODE: $00000341 VOL: 0
;PCODE: $00000342 VOL: 0
; 0000 030A     {
; 0000 030B     if(sprawdz_pin6(PORTJJ,0x79) == 0)
;PCODE: $00000343 VOL: 0
;PCODE: $00000344 VOL: 0
;PCODE: $00000345 VOL: 0
;PCODE: $00000346 VOL: 0
;PCODE: $00000347 VOL: 0
;PCODE: $00000348 VOL: 0
;PCODE: $00000349 VOL: 0
; 0000 030C         {
; 0000 030D         i = 1;
;PCODE: $0000034A VOL: 0
;PCODE: $0000034B VOL: 0
; 0000 030E         komunikat_na_panel("                                                ",adr1,adr2);
;PCODE: $0000034C VOL: 0
;PCODE: $0000034D VOL: 0
;PCODE: $0000034E VOL: 0
;PCODE: $0000034F VOL: 0
;PCODE: $00000350 VOL: 0
;PCODE: $00000351 VOL: 0
;PCODE: $00000352 VOL: 0
;PCODE: $00000353 VOL: 0
; 0000 030F         }
; 0000 0310     else
;PCODE: $00000354 VOL: 0
;PCODE: $00000355 VOL: 0
; 0000 0311         {
; 0000 0312         i = 0;
;PCODE: $00000356 VOL: 0
;PCODE: $00000357 VOL: 0
; 0000 0313         komunikat_na_panel("                                                ",adr1,adr2);
;PCODE: $00000358 VOL: 0
;PCODE: $00000359 VOL: 0
;PCODE: $0000035A VOL: 0
;PCODE: $0000035B VOL: 0
;PCODE: $0000035C VOL: 0
;PCODE: $0000035D VOL: 0
;PCODE: $0000035E VOL: 0
;PCODE: $0000035F VOL: 0
; 0000 0314         komunikat_na_panel("Cisnienie za male - mniejsze niz 6 bar",adr1,adr2);
;PCODE: $00000360 VOL: 0
;PCODE: $00000361 VOL: 0
;PCODE: $00000362 VOL: 0
;PCODE: $00000363 VOL: 0
;PCODE: $00000364 VOL: 0
;PCODE: $00000365 VOL: 0
;PCODE: $00000366 VOL: 0
;PCODE: $00000367 VOL: 0
; 0000 0315         }
;PCODE: $00000368 VOL: 0
; 0000 0316     }
;PCODE: $00000369 VOL: 0
;PCODE: $0000036A VOL: 0
; 0000 0317 }
;PCODE: $0000036B VOL: 0
;PCODE: $0000036C VOL: 0
;PCODE: $0000036D VOL: 0
;
;
;int odczyt_wybranego_zacisku()
; 0000 031B {                         //11
;PCODE: $0000036E VOL: 0
;PCODE: $0000036F VOL: 0
; 0000 031C int rzad;
; 0000 031D 
; 0000 031E PORT_CZYTNIK.bits.b0 = sprawdz_pin0(PORTHH,0x73);
;PCODE: $00000370 VOL: 0
;PCODE: $00000371 VOL: 0
;	rzad -> R16,R17
;PCODE: $00000372 VOL: 0
;PCODE: $00000373 VOL: 0
;PCODE: $00000374 VOL: 0
;PCODE: $00000375 VOL: 0
;PCODE: $00000376 VOL: 0
;PCODE: $00000377 VOL: 0
;PCODE: $00000378 VOL: 0
;PCODE: $00000379 VOL: 0
;PCODE: $0000037A VOL: 0
;PCODE: $0000037B VOL: 0
;PCODE: $0000037C VOL: 0
;PCODE: $0000037D VOL: 0
; 0000 031F PORT_CZYTNIK.bits.b1 = sprawdz_pin1(PORTHH,0x73);
;PCODE: $0000037E VOL: 0
;PCODE: $0000037F VOL: 0
;PCODE: $00000380 VOL: 0
;PCODE: $00000381 VOL: 0
;PCODE: $00000382 VOL: 0
;PCODE: $00000383 VOL: 0
;PCODE: $00000384 VOL: 0
;PCODE: $00000385 VOL: 0
;PCODE: $00000386 VOL: 0
;PCODE: $00000387 VOL: 0
;PCODE: $00000388 VOL: 0
;PCODE: $00000389 VOL: 0
;PCODE: $0000038A VOL: 0
; 0000 0320 PORT_CZYTNIK.bits.b2 = sprawdz_pin2(PORTHH,0x73);
;PCODE: $0000038B VOL: 0
;PCODE: $0000038C VOL: 0
;PCODE: $0000038D VOL: 0
;PCODE: $0000038E VOL: 0
;PCODE: $0000038F VOL: 0
;PCODE: $00000390 VOL: 0
;PCODE: $00000391 VOL: 0
;PCODE: $00000392 VOL: 0
;PCODE: $00000393 VOL: 0
;PCODE: $00000394 VOL: 0
;PCODE: $00000395 VOL: 0
;PCODE: $00000396 VOL: 0
;PCODE: $00000397 VOL: 0
; 0000 0321 PORT_CZYTNIK.bits.b3 = sprawdz_pin3(PORTHH,0x73);
;PCODE: $00000398 VOL: 0
;PCODE: $00000399 VOL: 0
;PCODE: $0000039A VOL: 0
;PCODE: $0000039B VOL: 0
;PCODE: $0000039C VOL: 0
;PCODE: $0000039D VOL: 0
;PCODE: $0000039E VOL: 0
;PCODE: $0000039F VOL: 0
;PCODE: $000003A0 VOL: 0
;PCODE: $000003A1 VOL: 0
;PCODE: $000003A2 VOL: 0
;PCODE: $000003A3 VOL: 0
;PCODE: $000003A4 VOL: 0
; 0000 0322 PORT_CZYTNIK.bits.b4 = sprawdz_pin4(PORTHH,0x73);
;PCODE: $000003A5 VOL: 0
;PCODE: $000003A6 VOL: 0
;PCODE: $000003A7 VOL: 0
;PCODE: $000003A8 VOL: 0
;PCODE: $000003A9 VOL: 0
;PCODE: $000003AA VOL: 0
;PCODE: $000003AB VOL: 0
;PCODE: $000003AC VOL: 0
;PCODE: $000003AD VOL: 0
;PCODE: $000003AE VOL: 0
;PCODE: $000003AF VOL: 0
;PCODE: $000003B0 VOL: 0
;PCODE: $000003B1 VOL: 0
; 0000 0323 PORT_CZYTNIK.bits.b5 = sprawdz_pin5(PORTHH,0x73);
;PCODE: $000003B2 VOL: 0
;PCODE: $000003B3 VOL: 0
;PCODE: $000003B4 VOL: 0
;PCODE: $000003B5 VOL: 0
;PCODE: $000003B6 VOL: 0
;PCODE: $000003B7 VOL: 0
;PCODE: $000003B8 VOL: 0
;PCODE: $000003B9 VOL: 0
;PCODE: $000003BA VOL: 0
;PCODE: $000003BB VOL: 0
;PCODE: $000003BC VOL: 0
;PCODE: $000003BD VOL: 0
;PCODE: $000003BE VOL: 0
; 0000 0324 PORT_CZYTNIK.bits.b6 = sprawdz_pin6(PORTHH,0x73);
;PCODE: $000003BF VOL: 0
;PCODE: $000003C0 VOL: 0
;PCODE: $000003C1 VOL: 0
;PCODE: $000003C2 VOL: 0
;PCODE: $000003C3 VOL: 0
;PCODE: $000003C4 VOL: 0
;PCODE: $000003C5 VOL: 0
;PCODE: $000003C6 VOL: 0
;PCODE: $000003C7 VOL: 0
;PCODE: $000003C8 VOL: 0
;PCODE: $000003C9 VOL: 0
;PCODE: $000003CA VOL: 0
;PCODE: $000003CB VOL: 0
; 0000 0325 PORT_CZYTNIK.bits.b7 = sprawdz_pin7(PORTHH,0x73);
;PCODE: $000003CC VOL: 0
;PCODE: $000003CD VOL: 0
;PCODE: $000003CE VOL: 0
;PCODE: $000003CF VOL: 0
;PCODE: $000003D0 VOL: 0
;PCODE: $000003D1 VOL: 0
;PCODE: $000003D2 VOL: 0
;PCODE: $000003D3 VOL: 0
;PCODE: $000003D4 VOL: 0
;PCODE: $000003D5 VOL: 0
;PCODE: $000003D6 VOL: 0
;PCODE: $000003D7 VOL: 0
;PCODE: $000003D8 VOL: 0
; 0000 0326 
; 0000 0327 rzad = odczytaj_parametr(32,128);       //20,80
;PCODE: $000003D9 VOL: 0
;PCODE: $000003DA VOL: 0
;PCODE: $000003DB VOL: 0
;PCODE: $000003DC VOL: 0
;PCODE: $000003DD VOL: 0
;PCODE: $000003DE VOL: 0
; 0000 0328 
; 0000 0329 if(PORT_CZYTNIK.byte == 0x01)
;PCODE: $000003DF VOL: 0
;PCODE: $000003E0 VOL: 0
;PCODE: $000003E1 VOL: 0
; 0000 032A     {
; 0000 032B     macierz_zaciskow[rzad]=1;
;PCODE: $000003E2 VOL: 0
;PCODE: $000003E3 VOL: 0
;PCODE: $000003E4 VOL: 0
;PCODE: $000003E5 VOL: 0
;PCODE: $000003E6 VOL: 0
;PCODE: $000003E7 VOL: 0
; 0000 032C     komunikat_z_czytnika_kodow("86-0170",rzad,1);
;PCODE: $000003E8 VOL: 0
;PCODE: $000003E9 VOL: 0
;PCODE: $000003EA VOL: 0
;PCODE: $000003EB VOL: 0
;PCODE: $000003EC VOL: 0
;PCODE: $000003ED VOL: 0
;PCODE: $000003EE VOL: 0
; 0000 032D     }
; 0000 032E 
; 0000 032F if(PORT_CZYTNIK.byte == 0x02)
;PCODE: $000003EF VOL: 0
;PCODE: $000003F0 VOL: 0
;PCODE: $000003F1 VOL: 0
;PCODE: $000003F2 VOL: 0
; 0000 0330     {
; 0000 0331     macierz_zaciskow[rzad]=2;
;PCODE: $000003F3 VOL: 0
;PCODE: $000003F4 VOL: 0
;PCODE: $000003F5 VOL: 0
;PCODE: $000003F6 VOL: 0
;PCODE: $000003F7 VOL: 0
;PCODE: $000003F8 VOL: 0
; 0000 0332     komunikat_z_czytnika_kodow("86-1043",rzad,0);
;PCODE: $000003F9 VOL: 0
;PCODE: $000003FA VOL: 0
;PCODE: $000003FB VOL: 0
;PCODE: $000003FC VOL: 0
;PCODE: $000003FD VOL: 0
;PCODE: $000003FE VOL: 0
;PCODE: $000003FF VOL: 0
; 0000 0333 
; 0000 0334     }
; 0000 0335 
; 0000 0336 if(PORT_CZYTNIK.byte == 0x03)
;PCODE: $00000400 VOL: 0
;PCODE: $00000401 VOL: 0
;PCODE: $00000402 VOL: 0
;PCODE: $00000403 VOL: 0
; 0000 0337     {
; 0000 0338       macierz_zaciskow[rzad]=3;
;PCODE: $00000404 VOL: 0
;PCODE: $00000405 VOL: 0
;PCODE: $00000406 VOL: 0
;PCODE: $00000407 VOL: 0
;PCODE: $00000408 VOL: 0
;PCODE: $00000409 VOL: 0
; 0000 0339       komunikat_z_czytnika_kodow("86-1675",rzad,0);
;PCODE: $0000040A VOL: 0
;PCODE: $0000040B VOL: 0
;PCODE: $0000040C VOL: 0
;PCODE: $0000040D VOL: 0
;PCODE: $0000040E VOL: 0
;PCODE: $0000040F VOL: 0
;PCODE: $00000410 VOL: 0
; 0000 033A     }
; 0000 033B 
; 0000 033C if(PORT_CZYTNIK.byte == 0x04)
;PCODE: $00000411 VOL: 0
;PCODE: $00000412 VOL: 0
;PCODE: $00000413 VOL: 0
;PCODE: $00000414 VOL: 0
; 0000 033D     {
; 0000 033E 
; 0000 033F       macierz_zaciskow[rzad]=4;
;PCODE: $00000415 VOL: 0
;PCODE: $00000416 VOL: 0
;PCODE: $00000417 VOL: 0
;PCODE: $00000418 VOL: 0
;PCODE: $00000419 VOL: 0
;PCODE: $0000041A VOL: 0
; 0000 0340       komunikat_z_czytnika_kodow("86-2098",rzad,0);
;PCODE: $0000041B VOL: 0
;PCODE: $0000041C VOL: 0
;PCODE: $0000041D VOL: 0
;PCODE: $0000041E VOL: 0
;PCODE: $0000041F VOL: 0
;PCODE: $00000420 VOL: 0
;PCODE: $00000421 VOL: 0
; 0000 0341 
; 0000 0342     }
; 0000 0343 if(PORT_CZYTNIK.byte == 0x05)
;PCODE: $00000422 VOL: 0
;PCODE: $00000423 VOL: 0
;PCODE: $00000424 VOL: 0
;PCODE: $00000425 VOL: 0
; 0000 0344     {
; 0000 0345       macierz_zaciskow[rzad]=5;
;PCODE: $00000426 VOL: 0
;PCODE: $00000427 VOL: 0
;PCODE: $00000428 VOL: 0
;PCODE: $00000429 VOL: 0
;PCODE: $0000042A VOL: 0
;PCODE: $0000042B VOL: 0
; 0000 0346       komunikat_z_czytnika_kodow("87-0170",rzad,0);
;PCODE: $0000042C VOL: 0
;PCODE: $0000042D VOL: 0
;PCODE: $0000042E VOL: 0
;PCODE: $0000042F VOL: 0
;PCODE: $00000430 VOL: 0
;PCODE: $00000431 VOL: 0
;PCODE: $00000432 VOL: 0
; 0000 0347 
; 0000 0348     }
; 0000 0349 if(PORT_CZYTNIK.byte == 0x06)
;PCODE: $00000433 VOL: 0
;PCODE: $00000434 VOL: 0
;PCODE: $00000435 VOL: 0
;PCODE: $00000436 VOL: 0
; 0000 034A     {
; 0000 034B       macierz_zaciskow[rzad]=6;
;PCODE: $00000437 VOL: 0
;PCODE: $00000438 VOL: 0
;PCODE: $00000439 VOL: 0
;PCODE: $0000043A VOL: 0
;PCODE: $0000043B VOL: 0
;PCODE: $0000043C VOL: 0
; 0000 034C       komunikat_z_czytnika_kodow("87-1043",rzad,1);
;PCODE: $0000043D VOL: 0
;PCODE: $0000043E VOL: 0
;PCODE: $0000043F VOL: 0
;PCODE: $00000440 VOL: 0
;PCODE: $00000441 VOL: 0
;PCODE: $00000442 VOL: 0
;PCODE: $00000443 VOL: 0
; 0000 034D 
; 0000 034E     }
; 0000 034F 
; 0000 0350 if(PORT_CZYTNIK.byte == 0x07)
;PCODE: $00000444 VOL: 0
;PCODE: $00000445 VOL: 0
;PCODE: $00000446 VOL: 0
;PCODE: $00000447 VOL: 0
; 0000 0351     {
; 0000 0352       macierz_zaciskow[rzad]=7;
;PCODE: $00000448 VOL: 0
;PCODE: $00000449 VOL: 0
;PCODE: $0000044A VOL: 0
;PCODE: $0000044B VOL: 0
;PCODE: $0000044C VOL: 0
;PCODE: $0000044D VOL: 0
; 0000 0353       komunikat_z_czytnika_kodow("87-1675",rzad,1);
;PCODE: $0000044E VOL: 0
;PCODE: $0000044F VOL: 0
;PCODE: $00000450 VOL: 0
;PCODE: $00000451 VOL: 0
;PCODE: $00000452 VOL: 0
;PCODE: $00000453 VOL: 0
;PCODE: $00000454 VOL: 0
; 0000 0354 
; 0000 0355     }
; 0000 0356 
; 0000 0357 if(PORT_CZYTNIK.byte == 0x08)
;PCODE: $00000455 VOL: 0
;PCODE: $00000456 VOL: 0
;PCODE: $00000457 VOL: 0
;PCODE: $00000458 VOL: 0
; 0000 0358     {
; 0000 0359       macierz_zaciskow[rzad]=8;
;PCODE: $00000459 VOL: 0
;PCODE: $0000045A VOL: 0
;PCODE: $0000045B VOL: 0
;PCODE: $0000045C VOL: 0
;PCODE: $0000045D VOL: 0
;PCODE: $0000045E VOL: 0
; 0000 035A       komunikat_z_czytnika_kodow("87-2098",rzad,1);
;PCODE: $0000045F VOL: 0
;PCODE: $00000460 VOL: 0
;PCODE: $00000461 VOL: 0
;PCODE: $00000462 VOL: 0
;PCODE: $00000463 VOL: 0
;PCODE: $00000464 VOL: 0
;PCODE: $00000465 VOL: 0
; 0000 035B 
; 0000 035C     }
; 0000 035D if(PORT_CZYTNIK.byte == 0x09)
;PCODE: $00000466 VOL: 0
;PCODE: $00000467 VOL: 0
;PCODE: $00000468 VOL: 0
;PCODE: $00000469 VOL: 0
; 0000 035E     {
; 0000 035F       macierz_zaciskow[rzad]=9;
;PCODE: $0000046A VOL: 0
;PCODE: $0000046B VOL: 0
;PCODE: $0000046C VOL: 0
;PCODE: $0000046D VOL: 0
;PCODE: $0000046E VOL: 0
;PCODE: $0000046F VOL: 0
; 0000 0360       komunikat_z_czytnika_kodow("86-0192",rzad,0);
;PCODE: $00000470 VOL: 0
;PCODE: $00000471 VOL: 0
;PCODE: $00000472 VOL: 0
;PCODE: $00000473 VOL: 0
;PCODE: $00000474 VOL: 0
;PCODE: $00000475 VOL: 0
;PCODE: $00000476 VOL: 0
; 0000 0361 
; 0000 0362     }
; 0000 0363 if(PORT_CZYTNIK.byte == 0x0A)
;PCODE: $00000477 VOL: 0
;PCODE: $00000478 VOL: 0
;PCODE: $00000479 VOL: 0
;PCODE: $0000047A VOL: 0
; 0000 0364     {
; 0000 0365       macierz_zaciskow[rzad]=10;
;PCODE: $0000047B VOL: 0
;PCODE: $0000047C VOL: 0
;PCODE: $0000047D VOL: 0
;PCODE: $0000047E VOL: 0
;PCODE: $0000047F VOL: 0
;PCODE: $00000480 VOL: 0
; 0000 0366       komunikat_z_czytnika_kodow("86-1054",rzad,0);
;PCODE: $00000481 VOL: 0
;PCODE: $00000482 VOL: 0
;PCODE: $00000483 VOL: 0
;PCODE: $00000484 VOL: 0
;PCODE: $00000485 VOL: 0
;PCODE: $00000486 VOL: 0
;PCODE: $00000487 VOL: 0
; 0000 0367 
; 0000 0368     }
; 0000 0369 if(PORT_CZYTNIK.byte == 0x0B)
;PCODE: $00000488 VOL: 0
;PCODE: $00000489 VOL: 0
;PCODE: $0000048A VOL: 0
;PCODE: $0000048B VOL: 0
; 0000 036A     {
; 0000 036B       macierz_zaciskow[rzad]=11;
;PCODE: $0000048C VOL: 0
;PCODE: $0000048D VOL: 0
;PCODE: $0000048E VOL: 0
;PCODE: $0000048F VOL: 0
;PCODE: $00000490 VOL: 0
;PCODE: $00000491 VOL: 0
; 0000 036C       komunikat_z_czytnika_kodow("86-1676",rzad,0);
;PCODE: $00000492 VOL: 0
;PCODE: $00000493 VOL: 0
;PCODE: $00000494 VOL: 0
;PCODE: $00000495 VOL: 0
;PCODE: $00000496 VOL: 0
;PCODE: $00000497 VOL: 0
;PCODE: $00000498 VOL: 0
; 0000 036D 
; 0000 036E     }
; 0000 036F if(PORT_CZYTNIK.byte == 0x0C)
;PCODE: $00000499 VOL: 0
;PCODE: $0000049A VOL: 0
;PCODE: $0000049B VOL: 0
;PCODE: $0000049C VOL: 0
; 0000 0370     {
; 0000 0371       macierz_zaciskow[rzad]=12;
;PCODE: $0000049D VOL: 0
;PCODE: $0000049E VOL: 0
;PCODE: $0000049F VOL: 0
;PCODE: $000004A0 VOL: 0
;PCODE: $000004A1 VOL: 0
;PCODE: $000004A2 VOL: 0
; 0000 0372       komunikat_z_czytnika_kodow("86-2132",rzad,1);
;PCODE: $000004A3 VOL: 0
;PCODE: $000004A4 VOL: 0
;PCODE: $000004A5 VOL: 0
;PCODE: $000004A6 VOL: 0
;PCODE: $000004A7 VOL: 0
;PCODE: $000004A8 VOL: 0
;PCODE: $000004A9 VOL: 0
; 0000 0373 
; 0000 0374     }
; 0000 0375 if(PORT_CZYTNIK.byte == 0x0D)
;PCODE: $000004AA VOL: 0
;PCODE: $000004AB VOL: 0
;PCODE: $000004AC VOL: 0
;PCODE: $000004AD VOL: 0
; 0000 0376     {
; 0000 0377       macierz_zaciskow[rzad]=13;
;PCODE: $000004AE VOL: 0
;PCODE: $000004AF VOL: 0
;PCODE: $000004B0 VOL: 0
;PCODE: $000004B1 VOL: 0
;PCODE: $000004B2 VOL: 0
;PCODE: $000004B3 VOL: 0
; 0000 0378       komunikat_z_czytnika_kodow("87-0192",rzad,1);
;PCODE: $000004B4 VOL: 0
;PCODE: $000004B5 VOL: 0
;PCODE: $000004B6 VOL: 0
;PCODE: $000004B7 VOL: 0
;PCODE: $000004B8 VOL: 0
;PCODE: $000004B9 VOL: 0
;PCODE: $000004BA VOL: 0
; 0000 0379 
; 0000 037A     }
; 0000 037B if(PORT_CZYTNIK.byte == 0x0E)
;PCODE: $000004BB VOL: 0
;PCODE: $000004BC VOL: 0
;PCODE: $000004BD VOL: 0
;PCODE: $000004BE VOL: 0
; 0000 037C     {
; 0000 037D       macierz_zaciskow[rzad]=14;
;PCODE: $000004BF VOL: 0
;PCODE: $000004C0 VOL: 0
;PCODE: $000004C1 VOL: 0
;PCODE: $000004C2 VOL: 0
;PCODE: $000004C3 VOL: 0
;PCODE: $000004C4 VOL: 0
; 0000 037E       komunikat_z_czytnika_kodow("87-1054",rzad,1);
;PCODE: $000004C5 VOL: 0
;PCODE: $000004C6 VOL: 0
;PCODE: $000004C7 VOL: 0
;PCODE: $000004C8 VOL: 0
;PCODE: $000004C9 VOL: 0
;PCODE: $000004CA VOL: 0
;PCODE: $000004CB VOL: 0
; 0000 037F 
; 0000 0380     }
; 0000 0381 
; 0000 0382 if(PORT_CZYTNIK.byte == 0x0F)
;PCODE: $000004CC VOL: 0
;PCODE: $000004CD VOL: 0
;PCODE: $000004CE VOL: 0
;PCODE: $000004CF VOL: 0
; 0000 0383     {
; 0000 0384       macierz_zaciskow[rzad]=15;
;PCODE: $000004D0 VOL: 0
;PCODE: $000004D1 VOL: 0
;PCODE: $000004D2 VOL: 0
;PCODE: $000004D3 VOL: 0
;PCODE: $000004D4 VOL: 0
;PCODE: $000004D5 VOL: 0
; 0000 0385       komunikat_z_czytnika_kodow("87-1676",rzad,1);
;PCODE: $000004D6 VOL: 0
;PCODE: $000004D7 VOL: 0
;PCODE: $000004D8 VOL: 0
;PCODE: $000004D9 VOL: 0
;PCODE: $000004DA VOL: 0
;PCODE: $000004DB VOL: 0
;PCODE: $000004DC VOL: 0
; 0000 0386 
; 0000 0387     }
; 0000 0388 if(PORT_CZYTNIK.byte == 0x10)
;PCODE: $000004DD VOL: 0
;PCODE: $000004DE VOL: 0
;PCODE: $000004DF VOL: 0
;PCODE: $000004E0 VOL: 0
; 0000 0389     {
; 0000 038A       macierz_zaciskow[rzad]=16;
;PCODE: $000004E1 VOL: 0
;PCODE: $000004E2 VOL: 0
;PCODE: $000004E3 VOL: 0
;PCODE: $000004E4 VOL: 0
;PCODE: $000004E5 VOL: 0
;PCODE: $000004E6 VOL: 0
; 0000 038B       komunikat_z_czytnika_kodow("87-2132",rzad,0);
;PCODE: $000004E7 VOL: 0
;PCODE: $000004E8 VOL: 0
;PCODE: $000004E9 VOL: 0
;PCODE: $000004EA VOL: 0
;PCODE: $000004EB VOL: 0
;PCODE: $000004EC VOL: 0
;PCODE: $000004ED VOL: 0
; 0000 038C 
; 0000 038D     }
; 0000 038E 
; 0000 038F if(PORT_CZYTNIK.byte == 0x11)
;PCODE: $000004EE VOL: 0
;PCODE: $000004EF VOL: 0
;PCODE: $000004F0 VOL: 0
;PCODE: $000004F1 VOL: 0
; 0000 0390     {
; 0000 0391       macierz_zaciskow[rzad]=17;
;PCODE: $000004F2 VOL: 0
;PCODE: $000004F3 VOL: 0
;PCODE: $000004F4 VOL: 0
;PCODE: $000004F5 VOL: 0
;PCODE: $000004F6 VOL: 0
;PCODE: $000004F7 VOL: 0
; 0000 0392       komunikat_z_czytnika_kodow("86-0193",rzad,0);
;PCODE: $000004F8 VOL: 0
;PCODE: $000004F9 VOL: 0
;PCODE: $000004FA VOL: 0
;PCODE: $000004FB VOL: 0
;PCODE: $000004FC VOL: 0
;PCODE: $000004FD VOL: 0
;PCODE: $000004FE VOL: 0
; 0000 0393     }
; 0000 0394 
; 0000 0395 if(PORT_CZYTNIK.byte == 0x12)
;PCODE: $000004FF VOL: 0
;PCODE: $00000500 VOL: 0
;PCODE: $00000501 VOL: 0
;PCODE: $00000502 VOL: 0
; 0000 0396     {
; 0000 0397       macierz_zaciskow[rzad]=18;
;PCODE: $00000503 VOL: 0
;PCODE: $00000504 VOL: 0
;PCODE: $00000505 VOL: 0
;PCODE: $00000506 VOL: 0
;PCODE: $00000507 VOL: 0
;PCODE: $00000508 VOL: 0
; 0000 0398       komunikat_z_czytnika_kodow("86-1216",rzad,0);
;PCODE: $00000509 VOL: 0
;PCODE: $0000050A VOL: 0
;PCODE: $0000050B VOL: 0
;PCODE: $0000050C VOL: 0
;PCODE: $0000050D VOL: 0
;PCODE: $0000050E VOL: 0
;PCODE: $0000050F VOL: 0
; 0000 0399 
; 0000 039A     }
; 0000 039B if(PORT_CZYTNIK.byte == 0x13)
;PCODE: $00000510 VOL: 0
;PCODE: $00000511 VOL: 0
;PCODE: $00000512 VOL: 0
;PCODE: $00000513 VOL: 0
; 0000 039C     {
; 0000 039D       macierz_zaciskow[rzad]=19;
;PCODE: $00000514 VOL: 0
;PCODE: $00000515 VOL: 0
;PCODE: $00000516 VOL: 0
;PCODE: $00000517 VOL: 0
;PCODE: $00000518 VOL: 0
;PCODE: $00000519 VOL: 0
; 0000 039E       komunikat_z_czytnika_kodow("86-1832",rzad,0);
;PCODE: $0000051A VOL: 0
;PCODE: $0000051B VOL: 0
;PCODE: $0000051C VOL: 0
;PCODE: $0000051D VOL: 0
;PCODE: $0000051E VOL: 0
;PCODE: $0000051F VOL: 0
;PCODE: $00000520 VOL: 0
; 0000 039F 
; 0000 03A0     }
; 0000 03A1 
; 0000 03A2 if(PORT_CZYTNIK.byte == 0x14)
;PCODE: $00000521 VOL: 0
;PCODE: $00000522 VOL: 0
;PCODE: $00000523 VOL: 0
;PCODE: $00000524 VOL: 0
; 0000 03A3     {
; 0000 03A4       macierz_zaciskow[rzad]=20;
;PCODE: $00000525 VOL: 0
;PCODE: $00000526 VOL: 0
;PCODE: $00000527 VOL: 0
;PCODE: $00000528 VOL: 0
;PCODE: $00000529 VOL: 0
;PCODE: $0000052A VOL: 0
; 0000 03A5       komunikat_z_czytnika_kodow("86-2174",rzad,0);
;PCODE: $0000052B VOL: 0
;PCODE: $0000052C VOL: 0
;PCODE: $0000052D VOL: 0
;PCODE: $0000052E VOL: 0
;PCODE: $0000052F VOL: 0
;PCODE: $00000530 VOL: 0
;PCODE: $00000531 VOL: 0
; 0000 03A6 
; 0000 03A7     }
; 0000 03A8 if(PORT_CZYTNIK.byte == 0x15)
;PCODE: $00000532 VOL: 0
;PCODE: $00000533 VOL: 0
;PCODE: $00000534 VOL: 0
;PCODE: $00000535 VOL: 0
; 0000 03A9     {
; 0000 03AA       macierz_zaciskow[rzad]=21;
;PCODE: $00000536 VOL: 0
;PCODE: $00000537 VOL: 0
;PCODE: $00000538 VOL: 0
;PCODE: $00000539 VOL: 0
;PCODE: $0000053A VOL: 0
;PCODE: $0000053B VOL: 0
; 0000 03AB       komunikat_z_czytnika_kodow("87-0193",rzad,1);
;PCODE: $0000053C VOL: 0
;PCODE: $0000053D VOL: 0
;PCODE: $0000053E VOL: 0
;PCODE: $0000053F VOL: 0
;PCODE: $00000540 VOL: 0
;PCODE: $00000541 VOL: 0
;PCODE: $00000542 VOL: 0
; 0000 03AC 
; 0000 03AD     }
; 0000 03AE 
; 0000 03AF if(PORT_CZYTNIK.byte == 0x16)
;PCODE: $00000543 VOL: 0
;PCODE: $00000544 VOL: 0
;PCODE: $00000545 VOL: 0
;PCODE: $00000546 VOL: 0
; 0000 03B0     {
; 0000 03B1       macierz_zaciskow[rzad]=22;
;PCODE: $00000547 VOL: 0
;PCODE: $00000548 VOL: 0
;PCODE: $00000549 VOL: 0
;PCODE: $0000054A VOL: 0
;PCODE: $0000054B VOL: 0
;PCODE: $0000054C VOL: 0
; 0000 03B2       komunikat_z_czytnika_kodow("87-1216",rzad,1);
;PCODE: $0000054D VOL: 0
;PCODE: $0000054E VOL: 0
;PCODE: $0000054F VOL: 0
;PCODE: $00000550 VOL: 0
;PCODE: $00000551 VOL: 0
;PCODE: $00000552 VOL: 0
;PCODE: $00000553 VOL: 0
; 0000 03B3 
; 0000 03B4     }
; 0000 03B5 if(PORT_CZYTNIK.byte == 0x17)
;PCODE: $00000554 VOL: 0
;PCODE: $00000555 VOL: 0
;PCODE: $00000556 VOL: 0
;PCODE: $00000557 VOL: 0
; 0000 03B6     {
; 0000 03B7       macierz_zaciskow[rzad]=23;
;PCODE: $00000558 VOL: 0
;PCODE: $00000559 VOL: 0
;PCODE: $0000055A VOL: 0
;PCODE: $0000055B VOL: 0
;PCODE: $0000055C VOL: 0
;PCODE: $0000055D VOL: 0
; 0000 03B8       komunikat_z_czytnika_kodow("87-1832",rzad,1);
;PCODE: $0000055E VOL: 0
;PCODE: $0000055F VOL: 0
;PCODE: $00000560 VOL: 0
;PCODE: $00000561 VOL: 0
;PCODE: $00000562 VOL: 0
;PCODE: $00000563 VOL: 0
;PCODE: $00000564 VOL: 0
; 0000 03B9 
; 0000 03BA     }
; 0000 03BB 
; 0000 03BC if(PORT_CZYTNIK.byte == 0x18)
;PCODE: $00000565 VOL: 0
;PCODE: $00000566 VOL: 0
;PCODE: $00000567 VOL: 0
;PCODE: $00000568 VOL: 0
; 0000 03BD     {
; 0000 03BE       macierz_zaciskow[rzad]=24;
;PCODE: $00000569 VOL: 0
;PCODE: $0000056A VOL: 0
;PCODE: $0000056B VOL: 0
;PCODE: $0000056C VOL: 0
;PCODE: $0000056D VOL: 0
;PCODE: $0000056E VOL: 0
; 0000 03BF       komunikat_z_czytnika_kodow("87-2174",rzad,1);
;PCODE: $0000056F VOL: 0
;PCODE: $00000570 VOL: 0
;PCODE: $00000571 VOL: 0
;PCODE: $00000572 VOL: 0
;PCODE: $00000573 VOL: 0
;PCODE: $00000574 VOL: 0
;PCODE: $00000575 VOL: 0
; 0000 03C0 
; 0000 03C1     }
; 0000 03C2 if(PORT_CZYTNIK.byte == 0x19)
;PCODE: $00000576 VOL: 0
;PCODE: $00000577 VOL: 0
;PCODE: $00000578 VOL: 0
;PCODE: $00000579 VOL: 0
; 0000 03C3     {
; 0000 03C4       macierz_zaciskow[rzad]=25;
;PCODE: $0000057A VOL: 0
;PCODE: $0000057B VOL: 0
;PCODE: $0000057C VOL: 0
;PCODE: $0000057D VOL: 0
;PCODE: $0000057E VOL: 0
;PCODE: $0000057F VOL: 0
; 0000 03C5       komunikat_z_czytnika_kodow("86-0194",rzad,0);
;PCODE: $00000580 VOL: 0
;PCODE: $00000581 VOL: 0
;PCODE: $00000582 VOL: 0
;PCODE: $00000583 VOL: 0
;PCODE: $00000584 VOL: 0
;PCODE: $00000585 VOL: 0
;PCODE: $00000586 VOL: 0
; 0000 03C6 
; 0000 03C7     }
; 0000 03C8 
; 0000 03C9 if(PORT_CZYTNIK.byte == 0x1A)
;PCODE: $00000587 VOL: 0
;PCODE: $00000588 VOL: 0
;PCODE: $00000589 VOL: 0
;PCODE: $0000058A VOL: 0
; 0000 03CA     {
; 0000 03CB       macierz_zaciskow[rzad]=26;
;PCODE: $0000058B VOL: 0
;PCODE: $0000058C VOL: 0
;PCODE: $0000058D VOL: 0
;PCODE: $0000058E VOL: 0
;PCODE: $0000058F VOL: 0
;PCODE: $00000590 VOL: 0
; 0000 03CC       komunikat_z_czytnika_kodow("86-1341",rzad,0);
;PCODE: $00000591 VOL: 0
;PCODE: $00000592 VOL: 0
;PCODE: $00000593 VOL: 0
;PCODE: $00000594 VOL: 0
;PCODE: $00000595 VOL: 0
;PCODE: $00000596 VOL: 0
;PCODE: $00000597 VOL: 0
; 0000 03CD 
; 0000 03CE     }
; 0000 03CF if(PORT_CZYTNIK.byte == 0x1B)
;PCODE: $00000598 VOL: 0
;PCODE: $00000599 VOL: 0
;PCODE: $0000059A VOL: 0
;PCODE: $0000059B VOL: 0
; 0000 03D0     {
; 0000 03D1       macierz_zaciskow[rzad]=27;
;PCODE: $0000059C VOL: 0
;PCODE: $0000059D VOL: 0
;PCODE: $0000059E VOL: 0
;PCODE: $0000059F VOL: 0
;PCODE: $000005A0 VOL: 0
;PCODE: $000005A1 VOL: 0
; 0000 03D2       komunikat_z_czytnika_kodow("86-1833",rzad,0);
;PCODE: $000005A2 VOL: 0
;PCODE: $000005A3 VOL: 0
;PCODE: $000005A4 VOL: 0
;PCODE: $000005A5 VOL: 0
;PCODE: $000005A6 VOL: 0
;PCODE: $000005A7 VOL: 0
;PCODE: $000005A8 VOL: 0
; 0000 03D3 
; 0000 03D4     }
; 0000 03D5 if(PORT_CZYTNIK.byte == 0x1C)
;PCODE: $000005A9 VOL: 0
;PCODE: $000005AA VOL: 0
;PCODE: $000005AB VOL: 0
;PCODE: $000005AC VOL: 0
; 0000 03D6     {
; 0000 03D7       macierz_zaciskow[rzad]=28;
;PCODE: $000005AD VOL: 0
;PCODE: $000005AE VOL: 0
;PCODE: $000005AF VOL: 0
;PCODE: $000005B0 VOL: 0
;PCODE: $000005B1 VOL: 0
;PCODE: $000005B2 VOL: 0
; 0000 03D8       komunikat_z_czytnika_kodow("86-2180",rzad,1);
;PCODE: $000005B3 VOL: 0
;PCODE: $000005B4 VOL: 0
;PCODE: $000005B5 VOL: 0
;PCODE: $000005B6 VOL: 0
;PCODE: $000005B7 VOL: 0
;PCODE: $000005B8 VOL: 0
;PCODE: $000005B9 VOL: 0
; 0000 03D9 
; 0000 03DA     }
; 0000 03DB if(PORT_CZYTNIK.byte == 0x1D)
;PCODE: $000005BA VOL: 0
;PCODE: $000005BB VOL: 0
;PCODE: $000005BC VOL: 0
;PCODE: $000005BD VOL: 0
; 0000 03DC     {
; 0000 03DD       macierz_zaciskow[rzad]=29;
;PCODE: $000005BE VOL: 0
;PCODE: $000005BF VOL: 0
;PCODE: $000005C0 VOL: 0
;PCODE: $000005C1 VOL: 0
;PCODE: $000005C2 VOL: 0
;PCODE: $000005C3 VOL: 0
; 0000 03DE       komunikat_z_czytnika_kodow("87-0194",rzad,1);
;PCODE: $000005C4 VOL: 0
;PCODE: $000005C5 VOL: 0
;PCODE: $000005C6 VOL: 0
;PCODE: $000005C7 VOL: 0
;PCODE: $000005C8 VOL: 0
;PCODE: $000005C9 VOL: 0
;PCODE: $000005CA VOL: 0
; 0000 03DF 
; 0000 03E0     }
; 0000 03E1 
; 0000 03E2 if(PORT_CZYTNIK.byte == 0x1E)
;PCODE: $000005CB VOL: 0
;PCODE: $000005CC VOL: 0
;PCODE: $000005CD VOL: 0
;PCODE: $000005CE VOL: 0
; 0000 03E3     {
; 0000 03E4       macierz_zaciskow[rzad]=30;
;PCODE: $000005CF VOL: 0
;PCODE: $000005D0 VOL: 0
;PCODE: $000005D1 VOL: 0
;PCODE: $000005D2 VOL: 0
;PCODE: $000005D3 VOL: 0
;PCODE: $000005D4 VOL: 0
; 0000 03E5       komunikat_z_czytnika_kodow("87-1341",rzad,1);
;PCODE: $000005D5 VOL: 0
;PCODE: $000005D6 VOL: 0
;PCODE: $000005D7 VOL: 0
;PCODE: $000005D8 VOL: 0
;PCODE: $000005D9 VOL: 0
;PCODE: $000005DA VOL: 0
;PCODE: $000005DB VOL: 0
; 0000 03E6 
; 0000 03E7     }
; 0000 03E8 if(PORT_CZYTNIK.byte == 0x1F)
;PCODE: $000005DC VOL: 0
;PCODE: $000005DD VOL: 0
;PCODE: $000005DE VOL: 0
;PCODE: $000005DF VOL: 0
; 0000 03E9     {
; 0000 03EA       macierz_zaciskow[rzad]=31;
;PCODE: $000005E0 VOL: 0
;PCODE: $000005E1 VOL: 0
;PCODE: $000005E2 VOL: 0
;PCODE: $000005E3 VOL: 0
;PCODE: $000005E4 VOL: 0
;PCODE: $000005E5 VOL: 0
; 0000 03EB       komunikat_z_czytnika_kodow("87-1833",rzad,1);
;PCODE: $000005E6 VOL: 0
;PCODE: $000005E7 VOL: 0
;PCODE: $000005E8 VOL: 0
;PCODE: $000005E9 VOL: 0
;PCODE: $000005EA VOL: 0
;PCODE: $000005EB VOL: 0
;PCODE: $000005EC VOL: 0
; 0000 03EC 
; 0000 03ED     }
; 0000 03EE 
; 0000 03EF if(PORT_CZYTNIK.byte == 0x20)
;PCODE: $000005ED VOL: 0
;PCODE: $000005EE VOL: 0
;PCODE: $000005EF VOL: 0
;PCODE: $000005F0 VOL: 0
; 0000 03F0     {
; 0000 03F1       macierz_zaciskow[rzad]=32;
;PCODE: $000005F1 VOL: 0
;PCODE: $000005F2 VOL: 0
;PCODE: $000005F3 VOL: 0
;PCODE: $000005F4 VOL: 0
;PCODE: $000005F5 VOL: 0
;PCODE: $000005F6 VOL: 0
; 0000 03F2       komunikat_z_czytnika_kodow("87-2180",rzad,0);
;PCODE: $000005F7 VOL: 0
;PCODE: $000005F8 VOL: 0
;PCODE: $000005F9 VOL: 0
;PCODE: $000005FA VOL: 0
;PCODE: $000005FB VOL: 0
;PCODE: $000005FC VOL: 0
;PCODE: $000005FD VOL: 0
; 0000 03F3 
; 0000 03F4     }
; 0000 03F5 if(PORT_CZYTNIK.byte == 0x21)
;PCODE: $000005FE VOL: 0
;PCODE: $000005FF VOL: 0
;PCODE: $00000600 VOL: 0
;PCODE: $00000601 VOL: 0
; 0000 03F6     {
; 0000 03F7       macierz_zaciskow[rzad]=33;
;PCODE: $00000602 VOL: 0
;PCODE: $00000603 VOL: 0
;PCODE: $00000604 VOL: 0
;PCODE: $00000605 VOL: 0
;PCODE: $00000606 VOL: 0
;PCODE: $00000607 VOL: 0
; 0000 03F8       komunikat_z_czytnika_kodow("86-0663",rzad,1);
;PCODE: $00000608 VOL: 0
;PCODE: $00000609 VOL: 0
;PCODE: $0000060A VOL: 0
;PCODE: $0000060B VOL: 0
;PCODE: $0000060C VOL: 0
;PCODE: $0000060D VOL: 0
;PCODE: $0000060E VOL: 0
; 0000 03F9 
; 0000 03FA     }
; 0000 03FB 
; 0000 03FC if(PORT_CZYTNIK.byte == 0x22)
;PCODE: $0000060F VOL: 0
;PCODE: $00000610 VOL: 0
;PCODE: $00000611 VOL: 0
;PCODE: $00000612 VOL: 0
; 0000 03FD     {
; 0000 03FE       macierz_zaciskow[rzad]=34;
;PCODE: $00000613 VOL: 0
;PCODE: $00000614 VOL: 0
;PCODE: $00000615 VOL: 0
;PCODE: $00000616 VOL: 0
;PCODE: $00000617 VOL: 0
;PCODE: $00000618 VOL: 0
; 0000 03FF       komunikat_z_czytnika_kodow("86-1349",rzad,0);
;PCODE: $00000619 VOL: 0
;PCODE: $0000061A VOL: 0
;PCODE: $0000061B VOL: 0
;PCODE: $0000061C VOL: 0
;PCODE: $0000061D VOL: 0
;PCODE: $0000061E VOL: 0
;PCODE: $0000061F VOL: 0
; 0000 0400 
; 0000 0401     }
; 0000 0402 if(PORT_CZYTNIK.byte == 0x23)
;PCODE: $00000620 VOL: 0
;PCODE: $00000621 VOL: 0
;PCODE: $00000622 VOL: 0
;PCODE: $00000623 VOL: 0
; 0000 0403     {
; 0000 0404       macierz_zaciskow[rzad]=35;
;PCODE: $00000624 VOL: 0
;PCODE: $00000625 VOL: 0
;PCODE: $00000626 VOL: 0
;PCODE: $00000627 VOL: 0
;PCODE: $00000628 VOL: 0
;PCODE: $00000629 VOL: 0
; 0000 0405       komunikat_z_czytnika_kodow("86-1834",rzad,0);
;PCODE: $0000062A VOL: 0
;PCODE: $0000062B VOL: 0
;PCODE: $0000062C VOL: 0
;PCODE: $0000062D VOL: 0
;PCODE: $0000062E VOL: 0
;PCODE: $0000062F VOL: 0
;PCODE: $00000630 VOL: 0
; 0000 0406 
; 0000 0407     }
; 0000 0408 if(PORT_CZYTNIK.byte == 0x24)
;PCODE: $00000631 VOL: 0
;PCODE: $00000632 VOL: 0
;PCODE: $00000633 VOL: 0
;PCODE: $00000634 VOL: 0
; 0000 0409     {
; 0000 040A       macierz_zaciskow[rzad]=36;
;PCODE: $00000635 VOL: 0
;PCODE: $00000636 VOL: 0
;PCODE: $00000637 VOL: 0
;PCODE: $00000638 VOL: 0
;PCODE: $00000639 VOL: 0
;PCODE: $0000063A VOL: 0
; 0000 040B       komunikat_z_czytnika_kodow("86-2204",rzad,0);
;PCODE: $0000063B VOL: 0
;PCODE: $0000063C VOL: 0
;PCODE: $0000063D VOL: 0
;PCODE: $0000063E VOL: 0
;PCODE: $0000063F VOL: 0
;PCODE: $00000640 VOL: 0
;PCODE: $00000641 VOL: 0
; 0000 040C 
; 0000 040D     }
; 0000 040E if(PORT_CZYTNIK.byte == 0x25)
;PCODE: $00000642 VOL: 0
;PCODE: $00000643 VOL: 0
;PCODE: $00000644 VOL: 0
;PCODE: $00000645 VOL: 0
; 0000 040F     {
; 0000 0410       macierz_zaciskow[rzad]=37;
;PCODE: $00000646 VOL: 0
;PCODE: $00000647 VOL: 0
;PCODE: $00000648 VOL: 0
;PCODE: $00000649 VOL: 0
;PCODE: $0000064A VOL: 0
;PCODE: $0000064B VOL: 0
; 0000 0411       komunikat_z_czytnika_kodow("87-0663",rzad,0);
;PCODE: $0000064C VOL: 0
;PCODE: $0000064D VOL: 0
;PCODE: $0000064E VOL: 0
;PCODE: $0000064F VOL: 0
;PCODE: $00000650 VOL: 0
;PCODE: $00000651 VOL: 0
;PCODE: $00000652 VOL: 0
; 0000 0412 
; 0000 0413     }
; 0000 0414 if(PORT_CZYTNIK.byte == 0x26)
;PCODE: $00000653 VOL: 0
;PCODE: $00000654 VOL: 0
;PCODE: $00000655 VOL: 0
;PCODE: $00000656 VOL: 0
; 0000 0415     {
; 0000 0416       macierz_zaciskow[rzad]=38;
;PCODE: $00000657 VOL: 0
;PCODE: $00000658 VOL: 0
;PCODE: $00000659 VOL: 0
;PCODE: $0000065A VOL: 0
;PCODE: $0000065B VOL: 0
;PCODE: $0000065C VOL: 0
; 0000 0417       komunikat_z_czytnika_kodow("87-1349",rzad,1);
;PCODE: $0000065D VOL: 0
;PCODE: $0000065E VOL: 0
;PCODE: $0000065F VOL: 0
;PCODE: $00000660 VOL: 0
;PCODE: $00000661 VOL: 0
;PCODE: $00000662 VOL: 0
;PCODE: $00000663 VOL: 0
; 0000 0418 
; 0000 0419     }
; 0000 041A if(PORT_CZYTNIK.byte == 0x27)
;PCODE: $00000664 VOL: 0
;PCODE: $00000665 VOL: 0
;PCODE: $00000666 VOL: 0
;PCODE: $00000667 VOL: 0
; 0000 041B     {
; 0000 041C       macierz_zaciskow[rzad]=39;
;PCODE: $00000668 VOL: 0
;PCODE: $00000669 VOL: 0
;PCODE: $0000066A VOL: 0
;PCODE: $0000066B VOL: 0
;PCODE: $0000066C VOL: 0
;PCODE: $0000066D VOL: 0
; 0000 041D       komunikat_z_czytnika_kodow("87-1834",rzad,1);
;PCODE: $0000066E VOL: 0
;PCODE: $0000066F VOL: 0
;PCODE: $00000670 VOL: 0
;PCODE: $00000671 VOL: 0
;PCODE: $00000672 VOL: 0
;PCODE: $00000673 VOL: 0
;PCODE: $00000674 VOL: 0
; 0000 041E 
; 0000 041F     }
; 0000 0420 if(PORT_CZYTNIK.byte == 0x28)
;PCODE: $00000675 VOL: 0
;PCODE: $00000676 VOL: 0
;PCODE: $00000677 VOL: 0
;PCODE: $00000678 VOL: 0
; 0000 0421     {
; 0000 0422       macierz_zaciskow[rzad]=40;
;PCODE: $00000679 VOL: 0
;PCODE: $0000067A VOL: 0
;PCODE: $0000067B VOL: 0
;PCODE: $0000067C VOL: 0
;PCODE: $0000067D VOL: 0
;PCODE: $0000067E VOL: 0
; 0000 0423       komunikat_z_czytnika_kodow("87-2204",rzad,1);
;PCODE: $0000067F VOL: 0
;PCODE: $00000680 VOL: 0
;PCODE: $00000681 VOL: 0
;PCODE: $00000682 VOL: 0
;PCODE: $00000683 VOL: 0
;PCODE: $00000684 VOL: 0
;PCODE: $00000685 VOL: 0
; 0000 0424 
; 0000 0425     }
; 0000 0426 if(PORT_CZYTNIK.byte == 0x29)
;PCODE: $00000686 VOL: 0
;PCODE: $00000687 VOL: 0
;PCODE: $00000688 VOL: 0
;PCODE: $00000689 VOL: 0
; 0000 0427     {
; 0000 0428       macierz_zaciskow[rzad]=41;
;PCODE: $0000068A VOL: 0
;PCODE: $0000068B VOL: 0
;PCODE: $0000068C VOL: 0
;PCODE: $0000068D VOL: 0
;PCODE: $0000068E VOL: 0
;PCODE: $0000068F VOL: 0
; 0000 0429       komunikat_z_czytnika_kodow("86-0768",rzad,1);
;PCODE: $00000690 VOL: 0
;PCODE: $00000691 VOL: 0
;PCODE: $00000692 VOL: 0
;PCODE: $00000693 VOL: 0
;PCODE: $00000694 VOL: 0
;PCODE: $00000695 VOL: 0
;PCODE: $00000696 VOL: 0
; 0000 042A 
; 0000 042B     }
; 0000 042C if(PORT_CZYTNIK.byte == 0x2A)
;PCODE: $00000697 VOL: 0
;PCODE: $00000698 VOL: 0
;PCODE: $00000699 VOL: 0
;PCODE: $0000069A VOL: 0
; 0000 042D     {
; 0000 042E       macierz_zaciskow[rzad]=42;
;PCODE: $0000069B VOL: 0
;PCODE: $0000069C VOL: 0
;PCODE: $0000069D VOL: 0
;PCODE: $0000069E VOL: 0
;PCODE: $0000069F VOL: 0
;PCODE: $000006A0 VOL: 0
; 0000 042F       komunikat_z_czytnika_kodow("86-1357",rzad,0);
;PCODE: $000006A1 VOL: 0
;PCODE: $000006A2 VOL: 0
;PCODE: $000006A3 VOL: 0
;PCODE: $000006A4 VOL: 0
;PCODE: $000006A5 VOL: 0
;PCODE: $000006A6 VOL: 0
;PCODE: $000006A7 VOL: 0
; 0000 0430 
; 0000 0431     }
; 0000 0432 if(PORT_CZYTNIK.byte == 0x2B)
;PCODE: $000006A8 VOL: 0
;PCODE: $000006A9 VOL: 0
;PCODE: $000006AA VOL: 0
;PCODE: $000006AB VOL: 0
; 0000 0433     {
; 0000 0434       macierz_zaciskow[rzad]=43;
;PCODE: $000006AC VOL: 0
;PCODE: $000006AD VOL: 0
;PCODE: $000006AE VOL: 0
;PCODE: $000006AF VOL: 0
;PCODE: $000006B0 VOL: 0
;PCODE: $000006B1 VOL: 0
; 0000 0435       komunikat_z_czytnika_kodow("86-1848",rzad,0);
;PCODE: $000006B2 VOL: 0
;PCODE: $000006B3 VOL: 0
;PCODE: $000006B4 VOL: 0
;PCODE: $000006B5 VOL: 0
;PCODE: $000006B6 VOL: 0
;PCODE: $000006B7 VOL: 0
;PCODE: $000006B8 VOL: 0
; 0000 0436 
; 0000 0437     }
; 0000 0438 if(PORT_CZYTNIK.byte == 0x2C)
;PCODE: $000006B9 VOL: 0
;PCODE: $000006BA VOL: 0
;PCODE: $000006BB VOL: 0
;PCODE: $000006BC VOL: 0
; 0000 0439     {
; 0000 043A      macierz_zaciskow[rzad]=44;
;PCODE: $000006BD VOL: 0
;PCODE: $000006BE VOL: 0
;PCODE: $000006BF VOL: 0
;PCODE: $000006C0 VOL: 0
;PCODE: $000006C1 VOL: 0
;PCODE: $000006C2 VOL: 0
; 0000 043B       macierz_zaciskow[rzad]=0;   ////////////////////////////////////////////////////brak zacisku
;PCODE: $000006C3 VOL: 0
;PCODE: $000006C4 VOL: 0
;PCODE: $000006C5 VOL: 0
;PCODE: $000006C6 VOL: 0
;PCODE: $000006C7 VOL: 0
;PCODE: $000006C8 VOL: 0
; 0000 043C 
; 0000 043D      komunikat_z_czytnika_kodow("86-2212",rzad,0);
;PCODE: $000006C9 VOL: 0
;PCODE: $000006CA VOL: 0
;PCODE: $000006CB VOL: 0
;PCODE: $000006CC VOL: 0
;PCODE: $000006CD VOL: 0
;PCODE: $000006CE VOL: 0
;PCODE: $000006CF VOL: 0
; 0000 043E 
; 0000 043F     }
; 0000 0440 if(PORT_CZYTNIK.byte == 0x2D)
;PCODE: $000006D0 VOL: 0
;PCODE: $000006D1 VOL: 0
;PCODE: $000006D2 VOL: 0
;PCODE: $000006D3 VOL: 0
; 0000 0441     {
; 0000 0442       macierz_zaciskow[rzad]=45;
;PCODE: $000006D4 VOL: 0
;PCODE: $000006D5 VOL: 0
;PCODE: $000006D6 VOL: 0
;PCODE: $000006D7 VOL: 0
;PCODE: $000006D8 VOL: 0
;PCODE: $000006D9 VOL: 0
; 0000 0443       komunikat_z_czytnika_kodow("87-0768",rzad,0);
;PCODE: $000006DA VOL: 0
;PCODE: $000006DB VOL: 0
;PCODE: $000006DC VOL: 0
;PCODE: $000006DD VOL: 0
;PCODE: $000006DE VOL: 0
;PCODE: $000006DF VOL: 0
;PCODE: $000006E0 VOL: 0
; 0000 0444 
; 0000 0445     }
; 0000 0446 if(PORT_CZYTNIK.byte == 0x2E)
;PCODE: $000006E1 VOL: 0
;PCODE: $000006E2 VOL: 0
;PCODE: $000006E3 VOL: 0
;PCODE: $000006E4 VOL: 0
; 0000 0447     {
; 0000 0448       macierz_zaciskow[rzad]=46;
;PCODE: $000006E5 VOL: 0
;PCODE: $000006E6 VOL: 0
;PCODE: $000006E7 VOL: 0
;PCODE: $000006E8 VOL: 0
;PCODE: $000006E9 VOL: 0
;PCODE: $000006EA VOL: 0
; 0000 0449       komunikat_z_czytnika_kodow("87-1357",rzad,1);
;PCODE: $000006EB VOL: 0
;PCODE: $000006EC VOL: 0
;PCODE: $000006ED VOL: 0
;PCODE: $000006EE VOL: 0
;PCODE: $000006EF VOL: 0
;PCODE: $000006F0 VOL: 0
;PCODE: $000006F1 VOL: 0
; 0000 044A 
; 0000 044B     }
; 0000 044C if(PORT_CZYTNIK.byte == 0x2F)
;PCODE: $000006F2 VOL: 0
;PCODE: $000006F3 VOL: 0
;PCODE: $000006F4 VOL: 0
;PCODE: $000006F5 VOL: 0
; 0000 044D     {
; 0000 044E       macierz_zaciskow[rzad]=47;
;PCODE: $000006F6 VOL: 0
;PCODE: $000006F7 VOL: 0
;PCODE: $000006F8 VOL: 0
;PCODE: $000006F9 VOL: 0
;PCODE: $000006FA VOL: 0
;PCODE: $000006FB VOL: 0
; 0000 044F       komunikat_z_czytnika_kodow("87-1848",rzad,1);
;PCODE: $000006FC VOL: 0
;PCODE: $000006FD VOL: 0
;PCODE: $000006FE VOL: 0
;PCODE: $000006FF VOL: 0
;PCODE: $00000700 VOL: 0
;PCODE: $00000701 VOL: 0
;PCODE: $00000702 VOL: 0
; 0000 0450 
; 0000 0451     }
; 0000 0452 if(PORT_CZYTNIK.byte == 0x30)
;PCODE: $00000703 VOL: 0
;PCODE: $00000704 VOL: 0
;PCODE: $00000705 VOL: 0
;PCODE: $00000706 VOL: 0
; 0000 0453     {
; 0000 0454       macierz_zaciskow[rzad]=48;
;PCODE: $00000707 VOL: 0
;PCODE: $00000708 VOL: 0
;PCODE: $00000709 VOL: 0
;PCODE: $0000070A VOL: 0
;PCODE: $0000070B VOL: 0
;PCODE: $0000070C VOL: 0
; 0000 0455       macierz_zaciskow[rzad]=0;    /////////////////////////////////////////////////brak zacisku
;PCODE: $0000070D VOL: 0
;PCODE: $0000070E VOL: 0
;PCODE: $0000070F VOL: 0
;PCODE: $00000710 VOL: 0
;PCODE: $00000711 VOL: 0
;PCODE: $00000712 VOL: 0
; 0000 0456       komunikat_z_czytnika_kodow("87-2212",rzad,1);
;PCODE: $00000713 VOL: 0
;PCODE: $00000714 VOL: 0
;PCODE: $00000715 VOL: 0
;PCODE: $00000716 VOL: 0
;PCODE: $00000717 VOL: 0
;PCODE: $00000718 VOL: 0
;PCODE: $00000719 VOL: 0
; 0000 0457 
; 0000 0458     }
; 0000 0459 if(PORT_CZYTNIK.byte == 0x31)
;PCODE: $0000071A VOL: 0
;PCODE: $0000071B VOL: 0
;PCODE: $0000071C VOL: 0
;PCODE: $0000071D VOL: 0
; 0000 045A     {
; 0000 045B       macierz_zaciskow[rzad]=49;
;PCODE: $0000071E VOL: 0
;PCODE: $0000071F VOL: 0
;PCODE: $00000720 VOL: 0
;PCODE: $00000721 VOL: 0
;PCODE: $00000722 VOL: 0
;PCODE: $00000723 VOL: 0
; 0000 045C       komunikat_z_czytnika_kodow("86-0800",rzad,0);
;PCODE: $00000724 VOL: 0
;PCODE: $00000725 VOL: 0
;PCODE: $00000726 VOL: 0
;PCODE: $00000727 VOL: 0
;PCODE: $00000728 VOL: 0
;PCODE: $00000729 VOL: 0
;PCODE: $0000072A VOL: 0
; 0000 045D 
; 0000 045E     }
; 0000 045F if(PORT_CZYTNIK.byte == 0x32)
;PCODE: $0000072B VOL: 0
;PCODE: $0000072C VOL: 0
;PCODE: $0000072D VOL: 0
;PCODE: $0000072E VOL: 0
; 0000 0460     {
; 0000 0461       macierz_zaciskow[rzad]=50;
;PCODE: $0000072F VOL: 0
;PCODE: $00000730 VOL: 0
;PCODE: $00000731 VOL: 0
;PCODE: $00000732 VOL: 0
;PCODE: $00000733 VOL: 0
;PCODE: $00000734 VOL: 0
; 0000 0462       komunikat_z_czytnika_kodow("86-1363",rzad,0);
;PCODE: $00000735 VOL: 0
;PCODE: $00000736 VOL: 0
;PCODE: $00000737 VOL: 0
;PCODE: $00000738 VOL: 0
;PCODE: $00000739 VOL: 0
;PCODE: $0000073A VOL: 0
;PCODE: $0000073B VOL: 0
; 0000 0463 
; 0000 0464     }
; 0000 0465 if(PORT_CZYTNIK.byte == 0x33)
;PCODE: $0000073C VOL: 0
;PCODE: $0000073D VOL: 0
;PCODE: $0000073E VOL: 0
;PCODE: $0000073F VOL: 0
; 0000 0466     {
; 0000 0467       macierz_zaciskow[rzad]=51;
;PCODE: $00000740 VOL: 0
;PCODE: $00000741 VOL: 0
;PCODE: $00000742 VOL: 0
;PCODE: $00000743 VOL: 0
;PCODE: $00000744 VOL: 0
;PCODE: $00000745 VOL: 0
; 0000 0468       komunikat_z_czytnika_kodow("86-1904",rzad,0);
;PCODE: $00000746 VOL: 0
;PCODE: $00000747 VOL: 0
;PCODE: $00000748 VOL: 0
;PCODE: $00000749 VOL: 0
;PCODE: $0000074A VOL: 0
;PCODE: $0000074B VOL: 0
;PCODE: $0000074C VOL: 0
; 0000 0469 
; 0000 046A     }
; 0000 046B if(PORT_CZYTNIK.byte == 0x34)
;PCODE: $0000074D VOL: 0
;PCODE: $0000074E VOL: 0
;PCODE: $0000074F VOL: 0
;PCODE: $00000750 VOL: 0
; 0000 046C     {
; 0000 046D       macierz_zaciskow[rzad]=52;
;PCODE: $00000751 VOL: 0
;PCODE: $00000752 VOL: 0
;PCODE: $00000753 VOL: 0
;PCODE: $00000754 VOL: 0
;PCODE: $00000755 VOL: 0
;PCODE: $00000756 VOL: 0
; 0000 046E       komunikat_z_czytnika_kodow("86-2241",rzad,1);
;PCODE: $00000757 VOL: 0
;PCODE: $00000758 VOL: 0
;PCODE: $00000759 VOL: 0
;PCODE: $0000075A VOL: 0
;PCODE: $0000075B VOL: 0
;PCODE: $0000075C VOL: 0
;PCODE: $0000075D VOL: 0
; 0000 046F 
; 0000 0470     }
; 0000 0471 if(PORT_CZYTNIK.byte == 0x35)
;PCODE: $0000075E VOL: 0
;PCODE: $0000075F VOL: 0
;PCODE: $00000760 VOL: 0
;PCODE: $00000761 VOL: 0
; 0000 0472     {
; 0000 0473       macierz_zaciskow[rzad]=53;
;PCODE: $00000762 VOL: 0
;PCODE: $00000763 VOL: 0
;PCODE: $00000764 VOL: 0
;PCODE: $00000765 VOL: 0
;PCODE: $00000766 VOL: 0
;PCODE: $00000767 VOL: 0
; 0000 0474       komunikat_z_czytnika_kodow("87-0800",rzad,1);
;PCODE: $00000768 VOL: 0
;PCODE: $00000769 VOL: 0
;PCODE: $0000076A VOL: 0
;PCODE: $0000076B VOL: 0
;PCODE: $0000076C VOL: 0
;PCODE: $0000076D VOL: 0
;PCODE: $0000076E VOL: 0
; 0000 0475 
; 0000 0476     }
; 0000 0477 
; 0000 0478 if(PORT_CZYTNIK.byte == 0x36)
;PCODE: $0000076F VOL: 0
;PCODE: $00000770 VOL: 0
;PCODE: $00000771 VOL: 0
;PCODE: $00000772 VOL: 0
; 0000 0479     {
; 0000 047A       macierz_zaciskow[rzad]=54;
;PCODE: $00000773 VOL: 0
;PCODE: $00000774 VOL: 0
;PCODE: $00000775 VOL: 0
;PCODE: $00000776 VOL: 0
;PCODE: $00000777 VOL: 0
;PCODE: $00000778 VOL: 0
; 0000 047B       komunikat_z_czytnika_kodow("87-1363",rzad,1);
;PCODE: $00000779 VOL: 0
;PCODE: $0000077A VOL: 0
;PCODE: $0000077B VOL: 0
;PCODE: $0000077C VOL: 0
;PCODE: $0000077D VOL: 0
;PCODE: $0000077E VOL: 0
;PCODE: $0000077F VOL: 0
; 0000 047C 
; 0000 047D     }
; 0000 047E if(PORT_CZYTNIK.byte == 0x37)
;PCODE: $00000780 VOL: 0
;PCODE: $00000781 VOL: 0
;PCODE: $00000782 VOL: 0
;PCODE: $00000783 VOL: 0
; 0000 047F     {
; 0000 0480       macierz_zaciskow[rzad]=55;
;PCODE: $00000784 VOL: 0
;PCODE: $00000785 VOL: 0
;PCODE: $00000786 VOL: 0
;PCODE: $00000787 VOL: 0
;PCODE: $00000788 VOL: 0
;PCODE: $00000789 VOL: 0
; 0000 0481       komunikat_z_czytnika_kodow("87-1904",rzad,1);
;PCODE: $0000078A VOL: 0
;PCODE: $0000078B VOL: 0
;PCODE: $0000078C VOL: 0
;PCODE: $0000078D VOL: 0
;PCODE: $0000078E VOL: 0
;PCODE: $0000078F VOL: 0
;PCODE: $00000790 VOL: 0
; 0000 0482 
; 0000 0483     }
; 0000 0484 if(PORT_CZYTNIK.byte == 0x38)
;PCODE: $00000791 VOL: 0
;PCODE: $00000792 VOL: 0
;PCODE: $00000793 VOL: 0
;PCODE: $00000794 VOL: 0
; 0000 0485     {
; 0000 0486       macierz_zaciskow[rzad]=56;
;PCODE: $00000795 VOL: 0
;PCODE: $00000796 VOL: 0
;PCODE: $00000797 VOL: 0
;PCODE: $00000798 VOL: 0
;PCODE: $00000799 VOL: 0
;PCODE: $0000079A VOL: 0
; 0000 0487       komunikat_z_czytnika_kodow("87-2241",rzad,0);
;PCODE: $0000079B VOL: 0
;PCODE: $0000079C VOL: 0
;PCODE: $0000079D VOL: 0
;PCODE: $0000079E VOL: 0
;PCODE: $0000079F VOL: 0
;PCODE: $000007A0 VOL: 0
;PCODE: $000007A1 VOL: 0
; 0000 0488 
; 0000 0489     }
; 0000 048A if(PORT_CZYTNIK.byte == 0x39)
;PCODE: $000007A2 VOL: 0
;PCODE: $000007A3 VOL: 0
;PCODE: $000007A4 VOL: 0
;PCODE: $000007A5 VOL: 0
; 0000 048B     {
; 0000 048C       macierz_zaciskow[rzad]=57;
;PCODE: $000007A6 VOL: 0
;PCODE: $000007A7 VOL: 0
;PCODE: $000007A8 VOL: 0
;PCODE: $000007A9 VOL: 0
;PCODE: $000007AA VOL: 0
;PCODE: $000007AB VOL: 0
; 0000 048D       komunikat_z_czytnika_kodow("86-0811",rzad,0);
;PCODE: $000007AC VOL: 0
;PCODE: $000007AD VOL: 0
;PCODE: $000007AE VOL: 0
;PCODE: $000007AF VOL: 0
;PCODE: $000007B0 VOL: 0
;PCODE: $000007B1 VOL: 0
;PCODE: $000007B2 VOL: 0
; 0000 048E 
; 0000 048F     }
; 0000 0490 if(PORT_CZYTNIK.byte == 0x3A)
;PCODE: $000007B3 VOL: 0
;PCODE: $000007B4 VOL: 0
;PCODE: $000007B5 VOL: 0
;PCODE: $000007B6 VOL: 0
; 0000 0491     {
; 0000 0492       macierz_zaciskow[rzad]=58;
;PCODE: $000007B7 VOL: 0
;PCODE: $000007B8 VOL: 0
;PCODE: $000007B9 VOL: 0
;PCODE: $000007BA VOL: 0
;PCODE: $000007BB VOL: 0
;PCODE: $000007BC VOL: 0
; 0000 0493       komunikat_z_czytnika_kodow("86-1523",rzad,0);
;PCODE: $000007BD VOL: 0
;PCODE: $000007BE VOL: 0
;PCODE: $000007BF VOL: 0
;PCODE: $000007C0 VOL: 0
;PCODE: $000007C1 VOL: 0
;PCODE: $000007C2 VOL: 0
;PCODE: $000007C3 VOL: 0
; 0000 0494 
; 0000 0495     }
; 0000 0496 if(PORT_CZYTNIK.byte == 0x3B)
;PCODE: $000007C4 VOL: 0
;PCODE: $000007C5 VOL: 0
;PCODE: $000007C6 VOL: 0
;PCODE: $000007C7 VOL: 0
; 0000 0497     {
; 0000 0498       macierz_zaciskow[rzad]=59;
;PCODE: $000007C8 VOL: 0
;PCODE: $000007C9 VOL: 0
;PCODE: $000007CA VOL: 0
;PCODE: $000007CB VOL: 0
;PCODE: $000007CC VOL: 0
;PCODE: $000007CD VOL: 0
; 0000 0499       komunikat_z_czytnika_kodow("86-1929",rzad,0);
;PCODE: $000007CE VOL: 0
;PCODE: $000007CF VOL: 0
;PCODE: $000007D0 VOL: 0
;PCODE: $000007D1 VOL: 0
;PCODE: $000007D2 VOL: 0
;PCODE: $000007D3 VOL: 0
;PCODE: $000007D4 VOL: 0
; 0000 049A 
; 0000 049B     }
; 0000 049C if(PORT_CZYTNIK.byte == 0x3C)
;PCODE: $000007D5 VOL: 0
;PCODE: $000007D6 VOL: 0
;PCODE: $000007D7 VOL: 0
;PCODE: $000007D8 VOL: 0
; 0000 049D     {
; 0000 049E       macierz_zaciskow[rzad]=60;
;PCODE: $000007D9 VOL: 0
;PCODE: $000007DA VOL: 0
;PCODE: $000007DB VOL: 0
;PCODE: $000007DC VOL: 0
;PCODE: $000007DD VOL: 0
;PCODE: $000007DE VOL: 0
; 0000 049F       komunikat_z_czytnika_kodow("86-2261",rzad,0);
;PCODE: $000007DF VOL: 0
;PCODE: $000007E0 VOL: 0
;PCODE: $000007E1 VOL: 0
;PCODE: $000007E2 VOL: 0
;PCODE: $000007E3 VOL: 0
;PCODE: $000007E4 VOL: 0
;PCODE: $000007E5 VOL: 0
; 0000 04A0 
; 0000 04A1     }
; 0000 04A2 if(PORT_CZYTNIK.byte == 0x3D)
;PCODE: $000007E6 VOL: 0
;PCODE: $000007E7 VOL: 0
;PCODE: $000007E8 VOL: 0
;PCODE: $000007E9 VOL: 0
; 0000 04A3     {
; 0000 04A4       macierz_zaciskow[rzad]=61;
;PCODE: $000007EA VOL: 0
;PCODE: $000007EB VOL: 0
;PCODE: $000007EC VOL: 0
;PCODE: $000007ED VOL: 0
;PCODE: $000007EE VOL: 0
;PCODE: $000007EF VOL: 0
; 0000 04A5       komunikat_z_czytnika_kodow("87-0811",rzad,1);
;PCODE: $000007F0 VOL: 0
;PCODE: $000007F1 VOL: 0
;PCODE: $000007F2 VOL: 0
;PCODE: $000007F3 VOL: 0
;PCODE: $000007F4 VOL: 0
;PCODE: $000007F5 VOL: 0
;PCODE: $000007F6 VOL: 0
; 0000 04A6 
; 0000 04A7     }
; 0000 04A8 if(PORT_CZYTNIK.byte == 0x3E)
;PCODE: $000007F7 VOL: 0
;PCODE: $000007F8 VOL: 0
;PCODE: $000007F9 VOL: 0
;PCODE: $000007FA VOL: 0
; 0000 04A9     {
; 0000 04AA       macierz_zaciskow[rzad]=62;
;PCODE: $000007FB VOL: 0
;PCODE: $000007FC VOL: 0
;PCODE: $000007FD VOL: 0
;PCODE: $000007FE VOL: 0
;PCODE: $000007FF VOL: 0
;PCODE: $00000800 VOL: 0
; 0000 04AB       komunikat_z_czytnika_kodow("87-1523",rzad,1);
;PCODE: $00000801 VOL: 0
;PCODE: $00000802 VOL: 0
;PCODE: $00000803 VOL: 0
;PCODE: $00000804 VOL: 0
;PCODE: $00000805 VOL: 0
;PCODE: $00000806 VOL: 0
;PCODE: $00000807 VOL: 0
; 0000 04AC 
; 0000 04AD     }
; 0000 04AE if(PORT_CZYTNIK.byte == 0x3F)
;PCODE: $00000808 VOL: 0
;PCODE: $00000809 VOL: 0
;PCODE: $0000080A VOL: 0
;PCODE: $0000080B VOL: 0
; 0000 04AF     {
; 0000 04B0       macierz_zaciskow[rzad]=63;
;PCODE: $0000080C VOL: 0
;PCODE: $0000080D VOL: 0
;PCODE: $0000080E VOL: 0
;PCODE: $0000080F VOL: 0
;PCODE: $00000810 VOL: 0
;PCODE: $00000811 VOL: 0
; 0000 04B1       komunikat_z_czytnika_kodow("87-1929",rzad,1);
;PCODE: $00000812 VOL: 0
;PCODE: $00000813 VOL: 0
;PCODE: $00000814 VOL: 0
;PCODE: $00000815 VOL: 0
;PCODE: $00000816 VOL: 0
;PCODE: $00000817 VOL: 0
;PCODE: $00000818 VOL: 0
; 0000 04B2 
; 0000 04B3     }
; 0000 04B4 if(PORT_CZYTNIK.byte == 0x40)
;PCODE: $00000819 VOL: 0
;PCODE: $0000081A VOL: 0
;PCODE: $0000081B VOL: 0
;PCODE: $0000081C VOL: 0
; 0000 04B5     {
; 0000 04B6       macierz_zaciskow[rzad]=64;
;PCODE: $0000081D VOL: 0
;PCODE: $0000081E VOL: 0
;PCODE: $0000081F VOL: 0
;PCODE: $00000820 VOL: 0
;PCODE: $00000821 VOL: 0
;PCODE: $00000822 VOL: 0
; 0000 04B7       komunikat_z_czytnika_kodow("87-2261",rzad,1);
;PCODE: $00000823 VOL: 0
;PCODE: $00000824 VOL: 0
;PCODE: $00000825 VOL: 0
;PCODE: $00000826 VOL: 0
;PCODE: $00000827 VOL: 0
;PCODE: $00000828 VOL: 0
;PCODE: $00000829 VOL: 0
; 0000 04B8 
; 0000 04B9     }
; 0000 04BA if(PORT_CZYTNIK.byte == 0x41)
;PCODE: $0000082A VOL: 0
;PCODE: $0000082B VOL: 0
;PCODE: $0000082C VOL: 0
;PCODE: $0000082D VOL: 0
; 0000 04BB     {
; 0000 04BC       macierz_zaciskow[rzad]=65;
;PCODE: $0000082E VOL: 0
;PCODE: $0000082F VOL: 0
;PCODE: $00000830 VOL: 0
;PCODE: $00000831 VOL: 0
;PCODE: $00000832 VOL: 0
;PCODE: $00000833 VOL: 0
; 0000 04BD       komunikat_z_czytnika_kodow("86-0814",rzad,0);
;PCODE: $00000834 VOL: 0
;PCODE: $00000835 VOL: 0
;PCODE: $00000836 VOL: 0
;PCODE: $00000837 VOL: 0
;PCODE: $00000838 VOL: 0
;PCODE: $00000839 VOL: 0
;PCODE: $0000083A VOL: 0
; 0000 04BE 
; 0000 04BF     }
; 0000 04C0 if(PORT_CZYTNIK.byte == 0x42)
;PCODE: $0000083B VOL: 0
;PCODE: $0000083C VOL: 0
;PCODE: $0000083D VOL: 0
;PCODE: $0000083E VOL: 0
; 0000 04C1     {
; 0000 04C2       macierz_zaciskow[rzad]=66;
;PCODE: $0000083F VOL: 0
;PCODE: $00000840 VOL: 0
;PCODE: $00000841 VOL: 0
;PCODE: $00000842 VOL: 0
;PCODE: $00000843 VOL: 0
;PCODE: $00000844 VOL: 0
; 0000 04C3       komunikat_z_czytnika_kodow("86-1530",rzad,1);
;PCODE: $00000845 VOL: 0
;PCODE: $00000846 VOL: 0
;PCODE: $00000847 VOL: 0
;PCODE: $00000848 VOL: 0
;PCODE: $00000849 VOL: 0
;PCODE: $0000084A VOL: 0
;PCODE: $0000084B VOL: 0
; 0000 04C4 
; 0000 04C5     }
; 0000 04C6 if(PORT_CZYTNIK.byte == 0x43)
;PCODE: $0000084C VOL: 0
;PCODE: $0000084D VOL: 0
;PCODE: $0000084E VOL: 0
;PCODE: $0000084F VOL: 0
; 0000 04C7     {
; 0000 04C8       macierz_zaciskow[rzad]=67;
;PCODE: $00000850 VOL: 0
;PCODE: $00000851 VOL: 0
;PCODE: $00000852 VOL: 0
;PCODE: $00000853 VOL: 0
;PCODE: $00000854 VOL: 0
;PCODE: $00000855 VOL: 0
; 0000 04C9       komunikat_z_czytnika_kodow("86-1936",rzad,1);
;PCODE: $00000856 VOL: 0
;PCODE: $00000857 VOL: 0
;PCODE: $00000858 VOL: 0
;PCODE: $00000859 VOL: 0
;PCODE: $0000085A VOL: 0
;PCODE: $0000085B VOL: 0
;PCODE: $0000085C VOL: 0
; 0000 04CA 
; 0000 04CB     }
; 0000 04CC if(PORT_CZYTNIK.byte == 0x44)
;PCODE: $0000085D VOL: 0
;PCODE: $0000085E VOL: 0
;PCODE: $0000085F VOL: 0
;PCODE: $00000860 VOL: 0
; 0000 04CD     {
; 0000 04CE       macierz_zaciskow[rzad]=68;
;PCODE: $00000861 VOL: 0
;PCODE: $00000862 VOL: 0
;PCODE: $00000863 VOL: 0
;PCODE: $00000864 VOL: 0
;PCODE: $00000865 VOL: 0
;PCODE: $00000866 VOL: 0
; 0000 04CF       komunikat_z_czytnika_kodow("86-2285",rzad,1);
;PCODE: $00000867 VOL: 0
;PCODE: $00000868 VOL: 0
;PCODE: $00000869 VOL: 0
;PCODE: $0000086A VOL: 0
;PCODE: $0000086B VOL: 0
;PCODE: $0000086C VOL: 0
;PCODE: $0000086D VOL: 0
; 0000 04D0 
; 0000 04D1     }
; 0000 04D2 if(PORT_CZYTNIK.byte == 0x45)
;PCODE: $0000086E VOL: 0
;PCODE: $0000086F VOL: 0
;PCODE: $00000870 VOL: 0
;PCODE: $00000871 VOL: 0
; 0000 04D3     {
; 0000 04D4       macierz_zaciskow[rzad]=69;
;PCODE: $00000872 VOL: 0
;PCODE: $00000873 VOL: 0
;PCODE: $00000874 VOL: 0
;PCODE: $00000875 VOL: 0
;PCODE: $00000876 VOL: 0
;PCODE: $00000877 VOL: 0
; 0000 04D5       komunikat_z_czytnika_kodow("87-0814",rzad,1);
;PCODE: $00000878 VOL: 0
;PCODE: $00000879 VOL: 0
;PCODE: $0000087A VOL: 0
;PCODE: $0000087B VOL: 0
;PCODE: $0000087C VOL: 0
;PCODE: $0000087D VOL: 0
;PCODE: $0000087E VOL: 0
; 0000 04D6 
; 0000 04D7     }
; 0000 04D8 if(PORT_CZYTNIK.byte == 0x46)
;PCODE: $0000087F VOL: 0
;PCODE: $00000880 VOL: 0
;PCODE: $00000881 VOL: 0
;PCODE: $00000882 VOL: 0
; 0000 04D9     {
; 0000 04DA       macierz_zaciskow[rzad]=70;
;PCODE: $00000883 VOL: 0
;PCODE: $00000884 VOL: 0
;PCODE: $00000885 VOL: 0
;PCODE: $00000886 VOL: 0
;PCODE: $00000887 VOL: 0
;PCODE: $00000888 VOL: 0
; 0000 04DB       komunikat_z_czytnika_kodow("87-1530",rzad,0);
;PCODE: $00000889 VOL: 0
;PCODE: $0000088A VOL: 0
;PCODE: $0000088B VOL: 0
;PCODE: $0000088C VOL: 0
;PCODE: $0000088D VOL: 0
;PCODE: $0000088E VOL: 0
;PCODE: $0000088F VOL: 0
; 0000 04DC 
; 0000 04DD     }
; 0000 04DE if(PORT_CZYTNIK.byte == 0x47)
;PCODE: $00000890 VOL: 0
;PCODE: $00000891 VOL: 0
;PCODE: $00000892 VOL: 0
;PCODE: $00000893 VOL: 0
; 0000 04DF     {
; 0000 04E0       macierz_zaciskow[rzad]=71;
;PCODE: $00000894 VOL: 0
;PCODE: $00000895 VOL: 0
;PCODE: $00000896 VOL: 0
;PCODE: $00000897 VOL: 0
;PCODE: $00000898 VOL: 0
;PCODE: $00000899 VOL: 0
; 0000 04E1       komunikat_z_czytnika_kodow("87-1936",rzad,0);
;PCODE: $0000089A VOL: 0
;PCODE: $0000089B VOL: 0
;PCODE: $0000089C VOL: 0
;PCODE: $0000089D VOL: 0
;PCODE: $0000089E VOL: 0
;PCODE: $0000089F VOL: 0
;PCODE: $000008A0 VOL: 0
; 0000 04E2 
; 0000 04E3     }
; 0000 04E4 if(PORT_CZYTNIK.byte == 0x48)
;PCODE: $000008A1 VOL: 0
;PCODE: $000008A2 VOL: 0
;PCODE: $000008A3 VOL: 0
;PCODE: $000008A4 VOL: 0
; 0000 04E5     {
; 0000 04E6       macierz_zaciskow[rzad]=72;
;PCODE: $000008A5 VOL: 0
;PCODE: $000008A6 VOL: 0
;PCODE: $000008A7 VOL: 0
;PCODE: $000008A8 VOL: 0
;PCODE: $000008A9 VOL: 0
;PCODE: $000008AA VOL: 0
; 0000 04E7       komunikat_z_czytnika_kodow("87-2285",rzad,0);
;PCODE: $000008AB VOL: 0
;PCODE: $000008AC VOL: 0
;PCODE: $000008AD VOL: 0
;PCODE: $000008AE VOL: 0
;PCODE: $000008AF VOL: 0
;PCODE: $000008B0 VOL: 0
;PCODE: $000008B1 VOL: 0
; 0000 04E8 
; 0000 04E9     }
; 0000 04EA if(PORT_CZYTNIK.byte == 0x49)
;PCODE: $000008B2 VOL: 0
;PCODE: $000008B3 VOL: 0
;PCODE: $000008B4 VOL: 0
;PCODE: $000008B5 VOL: 0
; 0000 04EB     {
; 0000 04EC       macierz_zaciskow[rzad]=73;
;PCODE: $000008B6 VOL: 0
;PCODE: $000008B7 VOL: 0
;PCODE: $000008B8 VOL: 0
;PCODE: $000008B9 VOL: 0
;PCODE: $000008BA VOL: 0
;PCODE: $000008BB VOL: 0
; 0000 04ED       komunikat_z_czytnika_kodow("86-0815",rzad,0);
;PCODE: $000008BC VOL: 0
;PCODE: $000008BD VOL: 0
;PCODE: $000008BE VOL: 0
;PCODE: $000008BF VOL: 0
;PCODE: $000008C0 VOL: 0
;PCODE: $000008C1 VOL: 0
;PCODE: $000008C2 VOL: 0
; 0000 04EE 
; 0000 04EF     }
; 0000 04F0 
; 0000 04F1 if(PORT_CZYTNIK.byte == 0x4A)
;PCODE: $000008C3 VOL: 0
;PCODE: $000008C4 VOL: 0
;PCODE: $000008C5 VOL: 0
;PCODE: $000008C6 VOL: 0
; 0000 04F2     {
; 0000 04F3       macierz_zaciskow[rzad]=74;
;PCODE: $000008C7 VOL: 0
;PCODE: $000008C8 VOL: 0
;PCODE: $000008C9 VOL: 0
;PCODE: $000008CA VOL: 0
;PCODE: $000008CB VOL: 0
;PCODE: $000008CC VOL: 0
; 0000 04F4       komunikat_z_czytnika_kodow("86-1551",rzad,0);
;PCODE: $000008CD VOL: 0
;PCODE: $000008CE VOL: 0
;PCODE: $000008CF VOL: 0
;PCODE: $000008D0 VOL: 0
;PCODE: $000008D1 VOL: 0
;PCODE: $000008D2 VOL: 0
;PCODE: $000008D3 VOL: 0
; 0000 04F5 
; 0000 04F6     }
; 0000 04F7 if(PORT_CZYTNIK.byte == 0x4B)
;PCODE: $000008D4 VOL: 0
;PCODE: $000008D5 VOL: 0
;PCODE: $000008D6 VOL: 0
;PCODE: $000008D7 VOL: 0
; 0000 04F8     {
; 0000 04F9       macierz_zaciskow[rzad]=75;
;PCODE: $000008D8 VOL: 0
;PCODE: $000008D9 VOL: 0
;PCODE: $000008DA VOL: 0
;PCODE: $000008DB VOL: 0
;PCODE: $000008DC VOL: 0
;PCODE: $000008DD VOL: 0
; 0000 04FA       komunikat_z_czytnika_kodow("86-1941",rzad,0);
;PCODE: $000008DE VOL: 0
;PCODE: $000008DF VOL: 0
;PCODE: $000008E0 VOL: 0
;PCODE: $000008E1 VOL: 0
;PCODE: $000008E2 VOL: 0
;PCODE: $000008E3 VOL: 0
;PCODE: $000008E4 VOL: 0
; 0000 04FB 
; 0000 04FC     }
; 0000 04FD if(PORT_CZYTNIK.byte == 0x4C)
;PCODE: $000008E5 VOL: 0
;PCODE: $000008E6 VOL: 0
;PCODE: $000008E7 VOL: 0
;PCODE: $000008E8 VOL: 0
; 0000 04FE     {
; 0000 04FF       macierz_zaciskow[rzad]=76;
;PCODE: $000008E9 VOL: 0
;PCODE: $000008EA VOL: 0
;PCODE: $000008EB VOL: 0
;PCODE: $000008EC VOL: 0
;PCODE: $000008ED VOL: 0
;PCODE: $000008EE VOL: 0
; 0000 0500       macierz_zaciskow[rzad]=0;    ////////////////////////////////brak zacisku
;PCODE: $000008EF VOL: 0
;PCODE: $000008F0 VOL: 0
;PCODE: $000008F1 VOL: 0
;PCODE: $000008F2 VOL: 0
;PCODE: $000008F3 VOL: 0
;PCODE: $000008F4 VOL: 0
; 0000 0501       komunikat_z_czytnika_kodow("86-2286",rzad,0);
;PCODE: $000008F5 VOL: 0
;PCODE: $000008F6 VOL: 0
;PCODE: $000008F7 VOL: 0
;PCODE: $000008F8 VOL: 0
;PCODE: $000008F9 VOL: 0
;PCODE: $000008FA VOL: 0
;PCODE: $000008FB VOL: 0
; 0000 0502 
; 0000 0503     }
; 0000 0504 if(PORT_CZYTNIK.byte == 0x4D)
;PCODE: $000008FC VOL: 0
;PCODE: $000008FD VOL: 0
;PCODE: $000008FE VOL: 0
;PCODE: $000008FF VOL: 0
; 0000 0505     {
; 0000 0506       macierz_zaciskow[rzad]=77;
;PCODE: $00000900 VOL: 0
;PCODE: $00000901 VOL: 0
;PCODE: $00000902 VOL: 0
;PCODE: $00000903 VOL: 0
;PCODE: $00000904 VOL: 0
;PCODE: $00000905 VOL: 0
; 0000 0507       komunikat_z_czytnika_kodow("87-0815",rzad,1);
;PCODE: $00000906 VOL: 0
;PCODE: $00000907 VOL: 0
;PCODE: $00000908 VOL: 0
;PCODE: $00000909 VOL: 0
;PCODE: $0000090A VOL: 0
;PCODE: $0000090B VOL: 0
;PCODE: $0000090C VOL: 0
; 0000 0508 
; 0000 0509     }
; 0000 050A if(PORT_CZYTNIK.byte == 0x4E)
;PCODE: $0000090D VOL: 0
;PCODE: $0000090E VOL: 0
;PCODE: $0000090F VOL: 0
;PCODE: $00000910 VOL: 0
; 0000 050B     {
; 0000 050C       macierz_zaciskow[rzad]=78;
;PCODE: $00000911 VOL: 0
;PCODE: $00000912 VOL: 0
;PCODE: $00000913 VOL: 0
;PCODE: $00000914 VOL: 0
;PCODE: $00000915 VOL: 0
;PCODE: $00000916 VOL: 0
; 0000 050D       komunikat_z_czytnika_kodow("87-1551",rzad,1);
;PCODE: $00000917 VOL: 0
;PCODE: $00000918 VOL: 0
;PCODE: $00000919 VOL: 0
;PCODE: $0000091A VOL: 0
;PCODE: $0000091B VOL: 0
;PCODE: $0000091C VOL: 0
;PCODE: $0000091D VOL: 0
; 0000 050E 
; 0000 050F     }
; 0000 0510 if(PORT_CZYTNIK.byte == 0x4F)
;PCODE: $0000091E VOL: 0
;PCODE: $0000091F VOL: 0
;PCODE: $00000920 VOL: 0
;PCODE: $00000921 VOL: 0
; 0000 0511     {
; 0000 0512       macierz_zaciskow[rzad]=79;
;PCODE: $00000922 VOL: 0
;PCODE: $00000923 VOL: 0
;PCODE: $00000924 VOL: 0
;PCODE: $00000925 VOL: 0
;PCODE: $00000926 VOL: 0
;PCODE: $00000927 VOL: 0
; 0000 0513       komunikat_z_czytnika_kodow("87-1941",rzad,1);
;PCODE: $00000928 VOL: 0
;PCODE: $00000929 VOL: 0
;PCODE: $0000092A VOL: 0
;PCODE: $0000092B VOL: 0
;PCODE: $0000092C VOL: 0
;PCODE: $0000092D VOL: 0
;PCODE: $0000092E VOL: 0
; 0000 0514 
; 0000 0515     }
; 0000 0516 if(PORT_CZYTNIK.byte == 0x50)
;PCODE: $0000092F VOL: 0
;PCODE: $00000930 VOL: 0
;PCODE: $00000931 VOL: 0
;PCODE: $00000932 VOL: 0
; 0000 0517     {
; 0000 0518       macierz_zaciskow[rzad]=80;
;PCODE: $00000933 VOL: 0
;PCODE: $00000934 VOL: 0
;PCODE: $00000935 VOL: 0
;PCODE: $00000936 VOL: 0
;PCODE: $00000937 VOL: 0
;PCODE: $00000938 VOL: 0
; 0000 0519       macierz_zaciskow[rzad]=0;  ////////////////////////////////////////////////////////////////////////brak zacisku
;PCODE: $00000939 VOL: 0
;PCODE: $0000093A VOL: 0
;PCODE: $0000093B VOL: 0
;PCODE: $0000093C VOL: 0
;PCODE: $0000093D VOL: 0
;PCODE: $0000093E VOL: 0
; 0000 051A       komunikat_z_czytnika_kodow("87-2286",rzad,0);
;PCODE: $0000093F VOL: 0
;PCODE: $00000940 VOL: 0
;PCODE: $00000941 VOL: 0
;PCODE: $00000942 VOL: 0
;PCODE: $00000943 VOL: 0
;PCODE: $00000944 VOL: 0
;PCODE: $00000945 VOL: 0
; 0000 051B 
; 0000 051C     }
; 0000 051D if(PORT_CZYTNIK.byte == 0x51)
;PCODE: $00000946 VOL: 0
;PCODE: $00000947 VOL: 0
;PCODE: $00000948 VOL: 0
;PCODE: $00000949 VOL: 0
; 0000 051E     {
; 0000 051F       macierz_zaciskow[rzad]=81;
;PCODE: $0000094A VOL: 0
;PCODE: $0000094B VOL: 0
;PCODE: $0000094C VOL: 0
;PCODE: $0000094D VOL: 0
;PCODE: $0000094E VOL: 0
;PCODE: $0000094F VOL: 0
; 0000 0520       komunikat_z_czytnika_kodow("86-0816",rzad,0);
;PCODE: $00000950 VOL: 0
;PCODE: $00000951 VOL: 0
;PCODE: $00000952 VOL: 0
;PCODE: $00000953 VOL: 0
;PCODE: $00000954 VOL: 0
;PCODE: $00000955 VOL: 0
;PCODE: $00000956 VOL: 0
; 0000 0521 
; 0000 0522     }
; 0000 0523 if(PORT_CZYTNIK.byte == 0x52)
;PCODE: $00000957 VOL: 0
;PCODE: $00000958 VOL: 0
;PCODE: $00000959 VOL: 0
;PCODE: $0000095A VOL: 0
; 0000 0524     {
; 0000 0525       macierz_zaciskow[rzad]=82;
;PCODE: $0000095B VOL: 0
;PCODE: $0000095C VOL: 0
;PCODE: $0000095D VOL: 0
;PCODE: $0000095E VOL: 0
;PCODE: $0000095F VOL: 0
;PCODE: $00000960 VOL: 0
; 0000 0526       komunikat_z_czytnika_kodow("86-1552",rzad,0);
;PCODE: $00000961 VOL: 0
;PCODE: $00000962 VOL: 0
;PCODE: $00000963 VOL: 0
;PCODE: $00000964 VOL: 0
;PCODE: $00000965 VOL: 0
;PCODE: $00000966 VOL: 0
;PCODE: $00000967 VOL: 0
; 0000 0527 
; 0000 0528     }
; 0000 0529 if(PORT_CZYTNIK.byte == 0x53)
;PCODE: $00000968 VOL: 0
;PCODE: $00000969 VOL: 0
;PCODE: $0000096A VOL: 0
;PCODE: $0000096B VOL: 0
; 0000 052A     {
; 0000 052B       macierz_zaciskow[rzad]=83;
;PCODE: $0000096C VOL: 0
;PCODE: $0000096D VOL: 0
;PCODE: $0000096E VOL: 0
;PCODE: $0000096F VOL: 0
;PCODE: $00000970 VOL: 0
;PCODE: $00000971 VOL: 0
; 0000 052C       komunikat_z_czytnika_kodow("86-2007",rzad,1);
;PCODE: $00000972 VOL: 0
;PCODE: $00000973 VOL: 0
;PCODE: $00000974 VOL: 0
;PCODE: $00000975 VOL: 0
;PCODE: $00000976 VOL: 0
;PCODE: $00000977 VOL: 0
;PCODE: $00000978 VOL: 0
; 0000 052D 
; 0000 052E     }
; 0000 052F if(PORT_CZYTNIK.byte == 0x54)
;PCODE: $00000979 VOL: 0
;PCODE: $0000097A VOL: 0
;PCODE: $0000097B VOL: 0
;PCODE: $0000097C VOL: 0
; 0000 0530     {
; 0000 0531       macierz_zaciskow[rzad]=84;
;PCODE: $0000097D VOL: 0
;PCODE: $0000097E VOL: 0
;PCODE: $0000097F VOL: 0
;PCODE: $00000980 VOL: 0
;PCODE: $00000981 VOL: 0
;PCODE: $00000982 VOL: 0
; 0000 0532       komunikat_z_czytnika_kodow("86-2292",rzad,1);
;PCODE: $00000983 VOL: 0
;PCODE: $00000984 VOL: 0
;PCODE: $00000985 VOL: 0
;PCODE: $00000986 VOL: 0
;PCODE: $00000987 VOL: 0
;PCODE: $00000988 VOL: 0
;PCODE: $00000989 VOL: 0
; 0000 0533 
; 0000 0534     }
; 0000 0535 if(PORT_CZYTNIK.byte == 0x55)
;PCODE: $0000098A VOL: 0
;PCODE: $0000098B VOL: 0
;PCODE: $0000098C VOL: 0
;PCODE: $0000098D VOL: 0
; 0000 0536     {
; 0000 0537       macierz_zaciskow[rzad]=85;
;PCODE: $0000098E VOL: 0
;PCODE: $0000098F VOL: 0
;PCODE: $00000990 VOL: 0
;PCODE: $00000991 VOL: 0
;PCODE: $00000992 VOL: 0
;PCODE: $00000993 VOL: 0
; 0000 0538       komunikat_z_czytnika_kodow("87-0816",rzad,1);
;PCODE: $00000994 VOL: 0
;PCODE: $00000995 VOL: 0
;PCODE: $00000996 VOL: 0
;PCODE: $00000997 VOL: 0
;PCODE: $00000998 VOL: 0
;PCODE: $00000999 VOL: 0
;PCODE: $0000099A VOL: 0
; 0000 0539 
; 0000 053A      }
; 0000 053B if(PORT_CZYTNIK.byte == 0x56)
;PCODE: $0000099B VOL: 0
;PCODE: $0000099C VOL: 0
;PCODE: $0000099D VOL: 0
;PCODE: $0000099E VOL: 0
; 0000 053C     {
; 0000 053D       macierz_zaciskow[rzad]=86;
;PCODE: $0000099F VOL: 0
;PCODE: $000009A0 VOL: 0
;PCODE: $000009A1 VOL: 0
;PCODE: $000009A2 VOL: 0
;PCODE: $000009A3 VOL: 0
;PCODE: $000009A4 VOL: 0
; 0000 053E       komunikat_z_czytnika_kodow("87-1552",rzad,1);
;PCODE: $000009A5 VOL: 0
;PCODE: $000009A6 VOL: 0
;PCODE: $000009A7 VOL: 0
;PCODE: $000009A8 VOL: 0
;PCODE: $000009A9 VOL: 0
;PCODE: $000009AA VOL: 0
;PCODE: $000009AB VOL: 0
; 0000 053F 
; 0000 0540     }
; 0000 0541 if(PORT_CZYTNIK.byte == 0x57)
;PCODE: $000009AC VOL: 0
;PCODE: $000009AD VOL: 0
;PCODE: $000009AE VOL: 0
;PCODE: $000009AF VOL: 0
; 0000 0542     {
; 0000 0543       macierz_zaciskow[rzad]=87;
;PCODE: $000009B0 VOL: 0
;PCODE: $000009B1 VOL: 0
;PCODE: $000009B2 VOL: 0
;PCODE: $000009B3 VOL: 0
;PCODE: $000009B4 VOL: 0
;PCODE: $000009B5 VOL: 0
; 0000 0544       komunikat_z_czytnika_kodow("87-2007",rzad,0);
;PCODE: $000009B6 VOL: 0
;PCODE: $000009B7 VOL: 0
;PCODE: $000009B8 VOL: 0
;PCODE: $000009B9 VOL: 0
;PCODE: $000009BA VOL: 0
;PCODE: $000009BB VOL: 0
;PCODE: $000009BC VOL: 0
; 0000 0545 
; 0000 0546     }
; 0000 0547 if(PORT_CZYTNIK.byte == 0x58)
;PCODE: $000009BD VOL: 0
;PCODE: $000009BE VOL: 0
;PCODE: $000009BF VOL: 0
;PCODE: $000009C0 VOL: 0
; 0000 0548     {
; 0000 0549       macierz_zaciskow[rzad]=88;
;PCODE: $000009C1 VOL: 0
;PCODE: $000009C2 VOL: 0
;PCODE: $000009C3 VOL: 0
;PCODE: $000009C4 VOL: 0
;PCODE: $000009C5 VOL: 0
;PCODE: $000009C6 VOL: 0
; 0000 054A       komunikat_z_czytnika_kodow("87-2292",rzad,0);
;PCODE: $000009C7 VOL: 0
;PCODE: $000009C8 VOL: 0
;PCODE: $000009C9 VOL: 0
;PCODE: $000009CA VOL: 0
;PCODE: $000009CB VOL: 0
;PCODE: $000009CC VOL: 0
;PCODE: $000009CD VOL: 0
; 0000 054B 
; 0000 054C     }
; 0000 054D if(PORT_CZYTNIK.byte == 0x59)
;PCODE: $000009CE VOL: 0
;PCODE: $000009CF VOL: 0
;PCODE: $000009D0 VOL: 0
;PCODE: $000009D1 VOL: 0
; 0000 054E     {
; 0000 054F       macierz_zaciskow[rzad]=89;
;PCODE: $000009D2 VOL: 0
;PCODE: $000009D3 VOL: 0
;PCODE: $000009D4 VOL: 0
;PCODE: $000009D5 VOL: 0
;PCODE: $000009D6 VOL: 0
;PCODE: $000009D7 VOL: 0
; 0000 0550       komunikat_z_czytnika_kodow("86-0817",rzad,0);
;PCODE: $000009D8 VOL: 0
;PCODE: $000009D9 VOL: 0
;PCODE: $000009DA VOL: 0
;PCODE: $000009DB VOL: 0
;PCODE: $000009DC VOL: 0
;PCODE: $000009DD VOL: 0
;PCODE: $000009DE VOL: 0
; 0000 0551 
; 0000 0552     }
; 0000 0553 if(PORT_CZYTNIK.byte == 0x5A)
;PCODE: $000009DF VOL: 0
;PCODE: $000009E0 VOL: 0
;PCODE: $000009E1 VOL: 0
;PCODE: $000009E2 VOL: 0
; 0000 0554     {
; 0000 0555       macierz_zaciskow[rzad]=90;
;PCODE: $000009E3 VOL: 0
;PCODE: $000009E4 VOL: 0
;PCODE: $000009E5 VOL: 0
;PCODE: $000009E6 VOL: 0
;PCODE: $000009E7 VOL: 0
;PCODE: $000009E8 VOL: 0
; 0000 0556       komunikat_z_czytnika_kodow("86-1602",rzad,1);
;PCODE: $000009E9 VOL: 0
;PCODE: $000009EA VOL: 0
;PCODE: $000009EB VOL: 0
;PCODE: $000009EC VOL: 0
;PCODE: $000009ED VOL: 0
;PCODE: $000009EE VOL: 0
;PCODE: $000009EF VOL: 0
; 0000 0557 
; 0000 0558     }
; 0000 0559 if(PORT_CZYTNIK.byte == 0x5B)
;PCODE: $000009F0 VOL: 0
;PCODE: $000009F1 VOL: 0
;PCODE: $000009F2 VOL: 0
;PCODE: $000009F3 VOL: 0
; 0000 055A     {
; 0000 055B       macierz_zaciskow[rzad]=91;
;PCODE: $000009F4 VOL: 0
;PCODE: $000009F5 VOL: 0
;PCODE: $000009F6 VOL: 0
;PCODE: $000009F7 VOL: 0
;PCODE: $000009F8 VOL: 0
;PCODE: $000009F9 VOL: 0
; 0000 055C       komunikat_z_czytnika_kodow("86-2017",rzad,1);
;PCODE: $000009FA VOL: 0
;PCODE: $000009FB VOL: 0
;PCODE: $000009FC VOL: 0
;PCODE: $000009FD VOL: 0
;PCODE: $000009FE VOL: 0
;PCODE: $000009FF VOL: 0
;PCODE: $00000A00 VOL: 0
; 0000 055D 
; 0000 055E     }
; 0000 055F if(PORT_CZYTNIK.byte == 0x5C)
;PCODE: $00000A01 VOL: 0
;PCODE: $00000A02 VOL: 0
;PCODE: $00000A03 VOL: 0
;PCODE: $00000A04 VOL: 0
; 0000 0560     {
; 0000 0561       macierz_zaciskow[rzad]=92;
;PCODE: $00000A05 VOL: 0
;PCODE: $00000A06 VOL: 0
;PCODE: $00000A07 VOL: 0
;PCODE: $00000A08 VOL: 0
;PCODE: $00000A09 VOL: 0
;PCODE: $00000A0A VOL: 0
; 0000 0562       macierz_zaciskow[rzad]=0;           /////////////////////////////////////////brak zacisku
;PCODE: $00000A0B VOL: 0
;PCODE: $00000A0C VOL: 0
;PCODE: $00000A0D VOL: 0
;PCODE: $00000A0E VOL: 0
;PCODE: $00000A0F VOL: 0
;PCODE: $00000A10 VOL: 0
; 0000 0563       komunikat_z_czytnika_kodow("86-2384",rzad,0);
;PCODE: $00000A11 VOL: 0
;PCODE: $00000A12 VOL: 0
;PCODE: $00000A13 VOL: 0
;PCODE: $00000A14 VOL: 0
;PCODE: $00000A15 VOL: 0
;PCODE: $00000A16 VOL: 0
;PCODE: $00000A17 VOL: 0
; 0000 0564 
; 0000 0565     }
; 0000 0566 if(PORT_CZYTNIK.byte == 0x5D)
;PCODE: $00000A18 VOL: 0
;PCODE: $00000A19 VOL: 0
;PCODE: $00000A1A VOL: 0
;PCODE: $00000A1B VOL: 0
; 0000 0567     {
; 0000 0568       macierz_zaciskow[rzad]=93;
;PCODE: $00000A1C VOL: 0
;PCODE: $00000A1D VOL: 0
;PCODE: $00000A1E VOL: 0
;PCODE: $00000A1F VOL: 0
;PCODE: $00000A20 VOL: 0
;PCODE: $00000A21 VOL: 0
; 0000 0569       komunikat_z_czytnika_kodow("87-0817",rzad,1);
;PCODE: $00000A22 VOL: 0
;PCODE: $00000A23 VOL: 0
;PCODE: $00000A24 VOL: 0
;PCODE: $00000A25 VOL: 0
;PCODE: $00000A26 VOL: 0
;PCODE: $00000A27 VOL: 0
;PCODE: $00000A28 VOL: 0
; 0000 056A 
; 0000 056B     }
; 0000 056C if(PORT_CZYTNIK.byte == 0x5E)
;PCODE: $00000A29 VOL: 0
;PCODE: $00000A2A VOL: 0
;PCODE: $00000A2B VOL: 0
;PCODE: $00000A2C VOL: 0
; 0000 056D     {
; 0000 056E       macierz_zaciskow[rzad]=94;
;PCODE: $00000A2D VOL: 0
;PCODE: $00000A2E VOL: 0
;PCODE: $00000A2F VOL: 0
;PCODE: $00000A30 VOL: 0
;PCODE: $00000A31 VOL: 0
;PCODE: $00000A32 VOL: 0
; 0000 056F       komunikat_z_czytnika_kodow("87-1602",rzad,0);
;PCODE: $00000A33 VOL: 0
;PCODE: $00000A34 VOL: 0
;PCODE: $00000A35 VOL: 0
;PCODE: $00000A36 VOL: 0
;PCODE: $00000A37 VOL: 0
;PCODE: $00000A38 VOL: 0
;PCODE: $00000A39 VOL: 0
; 0000 0570 
; 0000 0571     }
; 0000 0572 if(PORT_CZYTNIK.byte == 0x5F)
;PCODE: $00000A3A VOL: 0
;PCODE: $00000A3B VOL: 0
;PCODE: $00000A3C VOL: 0
;PCODE: $00000A3D VOL: 0
; 0000 0573     {
; 0000 0574       macierz_zaciskow[rzad]=95;
;PCODE: $00000A3E VOL: 0
;PCODE: $00000A3F VOL: 0
;PCODE: $00000A40 VOL: 0
;PCODE: $00000A41 VOL: 0
;PCODE: $00000A42 VOL: 0
;PCODE: $00000A43 VOL: 0
; 0000 0575       komunikat_z_czytnika_kodow("87-2017",rzad,0);
;PCODE: $00000A44 VOL: 0
;PCODE: $00000A45 VOL: 0
;PCODE: $00000A46 VOL: 0
;PCODE: $00000A47 VOL: 0
;PCODE: $00000A48 VOL: 0
;PCODE: $00000A49 VOL: 0
;PCODE: $00000A4A VOL: 0
; 0000 0576 
; 0000 0577     }
; 0000 0578 if(PORT_CZYTNIK.byte == 0x60)
;PCODE: $00000A4B VOL: 0
;PCODE: $00000A4C VOL: 0
;PCODE: $00000A4D VOL: 0
;PCODE: $00000A4E VOL: 0
; 0000 0579     {
; 0000 057A       macierz_zaciskow[rzad]=96;   ///////////////////////////////////////////////brak zacisku
;PCODE: $00000A4F VOL: 0
;PCODE: $00000A50 VOL: 0
;PCODE: $00000A51 VOL: 0
;PCODE: $00000A52 VOL: 0
;PCODE: $00000A53 VOL: 0
;PCODE: $00000A54 VOL: 0
; 0000 057B       macierz_zaciskow[rzad]=0;
;PCODE: $00000A55 VOL: 0
;PCODE: $00000A56 VOL: 0
;PCODE: $00000A57 VOL: 0
;PCODE: $00000A58 VOL: 0
;PCODE: $00000A59 VOL: 0
;PCODE: $00000A5A VOL: 0
; 0000 057C       komunikat_z_czytnika_kodow("87-2384",rzad,0);
;PCODE: $00000A5B VOL: 0
;PCODE: $00000A5C VOL: 0
;PCODE: $00000A5D VOL: 0
;PCODE: $00000A5E VOL: 0
;PCODE: $00000A5F VOL: 0
;PCODE: $00000A60 VOL: 0
;PCODE: $00000A61 VOL: 0
; 0000 057D 
; 0000 057E     }
; 0000 057F 
; 0000 0580 if(PORT_CZYTNIK.byte == 0x61)
;PCODE: $00000A62 VOL: 0
;PCODE: $00000A63 VOL: 0
;PCODE: $00000A64 VOL: 0
;PCODE: $00000A65 VOL: 0
; 0000 0581     {
; 0000 0582       macierz_zaciskow[rzad]=97;
;PCODE: $00000A66 VOL: 0
;PCODE: $00000A67 VOL: 0
;PCODE: $00000A68 VOL: 0
;PCODE: $00000A69 VOL: 0
;PCODE: $00000A6A VOL: 0
;PCODE: $00000A6B VOL: 0
; 0000 0583       komunikat_z_czytnika_kodow("86-0847",rzad,0);
;PCODE: $00000A6C VOL: 0
;PCODE: $00000A6D VOL: 0
;PCODE: $00000A6E VOL: 0
;PCODE: $00000A6F VOL: 0
;PCODE: $00000A70 VOL: 0
;PCODE: $00000A71 VOL: 0
;PCODE: $00000A72 VOL: 0
; 0000 0584 
; 0000 0585     }
; 0000 0586 
; 0000 0587 if(PORT_CZYTNIK.byte == 0x62)
;PCODE: $00000A73 VOL: 0
;PCODE: $00000A74 VOL: 0
;PCODE: $00000A75 VOL: 0
;PCODE: $00000A76 VOL: 0
; 0000 0588     {
; 0000 0589       macierz_zaciskow[rzad]=98;
;PCODE: $00000A77 VOL: 0
;PCODE: $00000A78 VOL: 0
;PCODE: $00000A79 VOL: 0
;PCODE: $00000A7A VOL: 0
;PCODE: $00000A7B VOL: 0
;PCODE: $00000A7C VOL: 0
; 0000 058A       komunikat_z_czytnika_kodow("86-1620",rzad,0);
;PCODE: $00000A7D VOL: 0
;PCODE: $00000A7E VOL: 0
;PCODE: $00000A7F VOL: 0
;PCODE: $00000A80 VOL: 0
;PCODE: $00000A81 VOL: 0
;PCODE: $00000A82 VOL: 0
;PCODE: $00000A83 VOL: 0
; 0000 058B 
; 0000 058C     }
; 0000 058D if(PORT_CZYTNIK.byte == 0x63)
;PCODE: $00000A84 VOL: 0
;PCODE: $00000A85 VOL: 0
;PCODE: $00000A86 VOL: 0
;PCODE: $00000A87 VOL: 0
; 0000 058E     {
; 0000 058F       macierz_zaciskow[rzad]=99;
;PCODE: $00000A88 VOL: 0
;PCODE: $00000A89 VOL: 0
;PCODE: $00000A8A VOL: 0
;PCODE: $00000A8B VOL: 0
;PCODE: $00000A8C VOL: 0
;PCODE: $00000A8D VOL: 0
; 0000 0590       komunikat_z_czytnika_kodow("86-2019",rzad,1);
;PCODE: $00000A8E VOL: 0
;PCODE: $00000A8F VOL: 0
;PCODE: $00000A90 VOL: 0
;PCODE: $00000A91 VOL: 0
;PCODE: $00000A92 VOL: 0
;PCODE: $00000A93 VOL: 0
;PCODE: $00000A94 VOL: 0
; 0000 0591 
; 0000 0592     }
; 0000 0593 if(PORT_CZYTNIK.byte == 0x64)
;PCODE: $00000A95 VOL: 0
;PCODE: $00000A96 VOL: 0
;PCODE: $00000A97 VOL: 0
;PCODE: $00000A98 VOL: 0
; 0000 0594     {
; 0000 0595       macierz_zaciskow[rzad]=100;
;PCODE: $00000A99 VOL: 0
;PCODE: $00000A9A VOL: 0
;PCODE: $00000A9B VOL: 0
;PCODE: $00000A9C VOL: 0
;PCODE: $00000A9D VOL: 0
;PCODE: $00000A9E VOL: 0
; 0000 0596       komunikat_z_czytnika_kodow("86-2385",rzad,0);
;PCODE: $00000A9F VOL: 0
;PCODE: $00000AA0 VOL: 0
;PCODE: $00000AA1 VOL: 0
;PCODE: $00000AA2 VOL: 0
;PCODE: $00000AA3 VOL: 0
;PCODE: $00000AA4 VOL: 0
;PCODE: $00000AA5 VOL: 0
; 0000 0597 
; 0000 0598     }
; 0000 0599 if(PORT_CZYTNIK.byte == 0x65)
;PCODE: $00000AA6 VOL: 0
;PCODE: $00000AA7 VOL: 0
;PCODE: $00000AA8 VOL: 0
;PCODE: $00000AA9 VOL: 0
; 0000 059A     {
; 0000 059B       macierz_zaciskow[rzad]=101;
;PCODE: $00000AAA VOL: 0
;PCODE: $00000AAB VOL: 0
;PCODE: $00000AAC VOL: 0
;PCODE: $00000AAD VOL: 0
;PCODE: $00000AAE VOL: 0
;PCODE: $00000AAF VOL: 0
; 0000 059C       komunikat_z_czytnika_kodow("87-0847",rzad,1);
;PCODE: $00000AB0 VOL: 0
;PCODE: $00000AB1 VOL: 0
;PCODE: $00000AB2 VOL: 0
;PCODE: $00000AB3 VOL: 0
;PCODE: $00000AB4 VOL: 0
;PCODE: $00000AB5 VOL: 0
;PCODE: $00000AB6 VOL: 0
; 0000 059D 
; 0000 059E     }
; 0000 059F if(PORT_CZYTNIK.byte == 0x66)
;PCODE: $00000AB7 VOL: 0
;PCODE: $00000AB8 VOL: 0
;PCODE: $00000AB9 VOL: 0
;PCODE: $00000ABA VOL: 0
; 0000 05A0     {
; 0000 05A1       macierz_zaciskow[rzad]=102;
;PCODE: $00000ABB VOL: 0
;PCODE: $00000ABC VOL: 0
;PCODE: $00000ABD VOL: 0
;PCODE: $00000ABE VOL: 0
;PCODE: $00000ABF VOL: 0
;PCODE: $00000AC0 VOL: 0
; 0000 05A2       komunikat_z_czytnika_kodow("87-1620",rzad,1);
;PCODE: $00000AC1 VOL: 0
;PCODE: $00000AC2 VOL: 0
;PCODE: $00000AC3 VOL: 0
;PCODE: $00000AC4 VOL: 0
;PCODE: $00000AC5 VOL: 0
;PCODE: $00000AC6 VOL: 0
;PCODE: $00000AC7 VOL: 0
; 0000 05A3 
; 0000 05A4     }
; 0000 05A5 if(PORT_CZYTNIK.byte == 0x67)
;PCODE: $00000AC8 VOL: 0
;PCODE: $00000AC9 VOL: 0
;PCODE: $00000ACA VOL: 0
;PCODE: $00000ACB VOL: 0
; 0000 05A6     {
; 0000 05A7       macierz_zaciskow[rzad]=103;
;PCODE: $00000ACC VOL: 0
;PCODE: $00000ACD VOL: 0
;PCODE: $00000ACE VOL: 0
;PCODE: $00000ACF VOL: 0
;PCODE: $00000AD0 VOL: 0
;PCODE: $00000AD1 VOL: 0
; 0000 05A8       komunikat_z_czytnika_kodow("87-2019",rzad,0);
;PCODE: $00000AD2 VOL: 0
;PCODE: $00000AD3 VOL: 0
;PCODE: $00000AD4 VOL: 0
;PCODE: $00000AD5 VOL: 0
;PCODE: $00000AD6 VOL: 0
;PCODE: $00000AD7 VOL: 0
;PCODE: $00000AD8 VOL: 0
; 0000 05A9 
; 0000 05AA     }
; 0000 05AB if(PORT_CZYTNIK.byte == 0x68)
;PCODE: $00000AD9 VOL: 0
;PCODE: $00000ADA VOL: 0
;PCODE: $00000ADB VOL: 0
;PCODE: $00000ADC VOL: 0
; 0000 05AC     {
; 0000 05AD       macierz_zaciskow[rzad]=104;
;PCODE: $00000ADD VOL: 0
;PCODE: $00000ADE VOL: 0
;PCODE: $00000ADF VOL: 0
;PCODE: $00000AE0 VOL: 0
;PCODE: $00000AE1 VOL: 0
;PCODE: $00000AE2 VOL: 0
; 0000 05AE       komunikat_z_czytnika_kodow("87-2385",rzad,1);
;PCODE: $00000AE3 VOL: 0
;PCODE: $00000AE4 VOL: 0
;PCODE: $00000AE5 VOL: 0
;PCODE: $00000AE6 VOL: 0
;PCODE: $00000AE7 VOL: 0
;PCODE: $00000AE8 VOL: 0
;PCODE: $00000AE9 VOL: 0
; 0000 05AF 
; 0000 05B0     }
; 0000 05B1 if(PORT_CZYTNIK.byte == 0x69)
;PCODE: $00000AEA VOL: 0
;PCODE: $00000AEB VOL: 0
;PCODE: $00000AEC VOL: 0
;PCODE: $00000AED VOL: 0
; 0000 05B2     {
; 0000 05B3       macierz_zaciskow[rzad]=105;
;PCODE: $00000AEE VOL: 0
;PCODE: $00000AEF VOL: 0
;PCODE: $00000AF0 VOL: 0
;PCODE: $00000AF1 VOL: 0
;PCODE: $00000AF2 VOL: 0
;PCODE: $00000AF3 VOL: 0
; 0000 05B4       komunikat_z_czytnika_kodow("86-0854",rzad,0);
;PCODE: $00000AF4 VOL: 0
;PCODE: $00000AF5 VOL: 0
;PCODE: $00000AF6 VOL: 0
;PCODE: $00000AF7 VOL: 0
;PCODE: $00000AF8 VOL: 0
;PCODE: $00000AF9 VOL: 0
;PCODE: $00000AFA VOL: 0
; 0000 05B5 
; 0000 05B6     }
; 0000 05B7 if(PORT_CZYTNIK.byte == 0x6A)
;PCODE: $00000AFB VOL: 0
;PCODE: $00000AFC VOL: 0
;PCODE: $00000AFD VOL: 0
;PCODE: $00000AFE VOL: 0
; 0000 05B8     {
; 0000 05B9       macierz_zaciskow[rzad]=106;
;PCODE: $00000AFF VOL: 0
;PCODE: $00000B00 VOL: 0
;PCODE: $00000B01 VOL: 0
;PCODE: $00000B02 VOL: 0
;PCODE: $00000B03 VOL: 0
;PCODE: $00000B04 VOL: 0
; 0000 05BA       komunikat_z_czytnika_kodow("86-1622",rzad,1);
;PCODE: $00000B05 VOL: 0
;PCODE: $00000B06 VOL: 0
;PCODE: $00000B07 VOL: 0
;PCODE: $00000B08 VOL: 0
;PCODE: $00000B09 VOL: 0
;PCODE: $00000B0A VOL: 0
;PCODE: $00000B0B VOL: 0
; 0000 05BB 
; 0000 05BC     }
; 0000 05BD if(PORT_CZYTNIK.byte == 0x6B)
;PCODE: $00000B0C VOL: 0
;PCODE: $00000B0D VOL: 0
;PCODE: $00000B0E VOL: 0
;PCODE: $00000B0F VOL: 0
; 0000 05BE     {
; 0000 05BF       macierz_zaciskow[rzad]=107;
;PCODE: $00000B10 VOL: 0
;PCODE: $00000B11 VOL: 0
;PCODE: $00000B12 VOL: 0
;PCODE: $00000B13 VOL: 0
;PCODE: $00000B14 VOL: 0
;PCODE: $00000B15 VOL: 0
; 0000 05C0       macierz_zaciskow[rzad]=0;          //brak zacisku
;PCODE: $00000B16 VOL: 0
;PCODE: $00000B17 VOL: 0
;PCODE: $00000B18 VOL: 0
;PCODE: $00000B19 VOL: 0
;PCODE: $00000B1A VOL: 0
;PCODE: $00000B1B VOL: 0
; 0000 05C1       komunikat_z_czytnika_kodow("86-2028",rzad,0);
;PCODE: $00000B1C VOL: 0
;PCODE: $00000B1D VOL: 0
;PCODE: $00000B1E VOL: 0
;PCODE: $00000B1F VOL: 0
;PCODE: $00000B20 VOL: 0
;PCODE: $00000B21 VOL: 0
;PCODE: $00000B22 VOL: 0
; 0000 05C2 
; 0000 05C3     }
; 0000 05C4 if(PORT_CZYTNIK.byte == 0x6C)
;PCODE: $00000B23 VOL: 0
;PCODE: $00000B24 VOL: 0
;PCODE: $00000B25 VOL: 0
;PCODE: $00000B26 VOL: 0
; 0000 05C5     {
; 0000 05C6       macierz_zaciskow[rzad]=108;
;PCODE: $00000B27 VOL: 0
;PCODE: $00000B28 VOL: 0
;PCODE: $00000B29 VOL: 0
;PCODE: $00000B2A VOL: 0
;PCODE: $00000B2B VOL: 0
;PCODE: $00000B2C VOL: 0
; 0000 05C7       komunikat_z_czytnika_kodow("86-2437",rzad,0);
;PCODE: $00000B2D VOL: 0
;PCODE: $00000B2E VOL: 0
;PCODE: $00000B2F VOL: 0
;PCODE: $00000B30 VOL: 0
;PCODE: $00000B31 VOL: 0
;PCODE: $00000B32 VOL: 0
;PCODE: $00000B33 VOL: 0
; 0000 05C8 
; 0000 05C9     }
; 0000 05CA if(PORT_CZYTNIK.byte == 0x6D)
;PCODE: $00000B34 VOL: 0
;PCODE: $00000B35 VOL: 0
;PCODE: $00000B36 VOL: 0
;PCODE: $00000B37 VOL: 0
; 0000 05CB     {
; 0000 05CC       macierz_zaciskow[rzad]=109;
;PCODE: $00000B38 VOL: 0
;PCODE: $00000B39 VOL: 0
;PCODE: $00000B3A VOL: 0
;PCODE: $00000B3B VOL: 0
;PCODE: $00000B3C VOL: 0
;PCODE: $00000B3D VOL: 0
; 0000 05CD       komunikat_z_czytnika_kodow("87-0854",rzad,1);
;PCODE: $00000B3E VOL: 0
;PCODE: $00000B3F VOL: 0
;PCODE: $00000B40 VOL: 0
;PCODE: $00000B41 VOL: 0
;PCODE: $00000B42 VOL: 0
;PCODE: $00000B43 VOL: 0
;PCODE: $00000B44 VOL: 0
; 0000 05CE 
; 0000 05CF     }
; 0000 05D0 if(PORT_CZYTNIK.byte == 0x6E)
;PCODE: $00000B45 VOL: 0
;PCODE: $00000B46 VOL: 0
;PCODE: $00000B47 VOL: 0
;PCODE: $00000B48 VOL: 0
; 0000 05D1     {
; 0000 05D2       macierz_zaciskow[rzad]=110;
;PCODE: $00000B49 VOL: 0
;PCODE: $00000B4A VOL: 0
;PCODE: $00000B4B VOL: 0
;PCODE: $00000B4C VOL: 0
;PCODE: $00000B4D VOL: 0
;PCODE: $00000B4E VOL: 0
; 0000 05D3       komunikat_z_czytnika_kodow("87-1622",rzad,0);
;PCODE: $00000B4F VOL: 0
;PCODE: $00000B50 VOL: 0
;PCODE: $00000B51 VOL: 0
;PCODE: $00000B52 VOL: 0
;PCODE: $00000B53 VOL: 0
;PCODE: $00000B54 VOL: 0
;PCODE: $00000B55 VOL: 0
; 0000 05D4 
; 0000 05D5     }
; 0000 05D6 
; 0000 05D7 if(PORT_CZYTNIK.byte == 0x6F)
;PCODE: $00000B56 VOL: 0
;PCODE: $00000B57 VOL: 0
;PCODE: $00000B58 VOL: 0
;PCODE: $00000B59 VOL: 0
; 0000 05D8     {
; 0000 05D9       macierz_zaciskow[rzad]=111;
;PCODE: $00000B5A VOL: 0
;PCODE: $00000B5B VOL: 0
;PCODE: $00000B5C VOL: 0
;PCODE: $00000B5D VOL: 0
;PCODE: $00000B5E VOL: 0
;PCODE: $00000B5F VOL: 0
; 0000 05DA       macierz_zaciskow[rzad]=0;      //brak zacisku
;PCODE: $00000B60 VOL: 0
;PCODE: $00000B61 VOL: 0
;PCODE: $00000B62 VOL: 0
;PCODE: $00000B63 VOL: 0
;PCODE: $00000B64 VOL: 0
;PCODE: $00000B65 VOL: 0
; 0000 05DB       komunikat_z_czytnika_kodow("87-2028",rzad,0);
;PCODE: $00000B66 VOL: 0
;PCODE: $00000B67 VOL: 0
;PCODE: $00000B68 VOL: 0
;PCODE: $00000B69 VOL: 0
;PCODE: $00000B6A VOL: 0
;PCODE: $00000B6B VOL: 0
;PCODE: $00000B6C VOL: 0
; 0000 05DC 
; 0000 05DD     }
; 0000 05DE 
; 0000 05DF if(PORT_CZYTNIK.byte == 0x70)
;PCODE: $00000B6D VOL: 0
;PCODE: $00000B6E VOL: 0
;PCODE: $00000B6F VOL: 0
;PCODE: $00000B70 VOL: 0
; 0000 05E0     {
; 0000 05E1       macierz_zaciskow[rzad]=112;
;PCODE: $00000B71 VOL: 0
;PCODE: $00000B72 VOL: 0
;PCODE: $00000B73 VOL: 0
;PCODE: $00000B74 VOL: 0
;PCODE: $00000B75 VOL: 0
;PCODE: $00000B76 VOL: 0
; 0000 05E2       komunikat_z_czytnika_kodow("87-2437",rzad,1);
;PCODE: $00000B77 VOL: 0
;PCODE: $00000B78 VOL: 0
;PCODE: $00000B79 VOL: 0
;PCODE: $00000B7A VOL: 0
;PCODE: $00000B7B VOL: 0
;PCODE: $00000B7C VOL: 0
;PCODE: $00000B7D VOL: 0
; 0000 05E3 
; 0000 05E4     }
; 0000 05E5 if(PORT_CZYTNIK.byte == 0x71)
;PCODE: $00000B7E VOL: 0
;PCODE: $00000B7F VOL: 0
;PCODE: $00000B80 VOL: 0
;PCODE: $00000B81 VOL: 0
; 0000 05E6     {
; 0000 05E7       macierz_zaciskow[rzad]=113;
;PCODE: $00000B82 VOL: 0
;PCODE: $00000B83 VOL: 0
;PCODE: $00000B84 VOL: 0
;PCODE: $00000B85 VOL: 0
;PCODE: $00000B86 VOL: 0
;PCODE: $00000B87 VOL: 0
; 0000 05E8       komunikat_z_czytnika_kodow("86-0862",rzad,0);
;PCODE: $00000B88 VOL: 0
;PCODE: $00000B89 VOL: 0
;PCODE: $00000B8A VOL: 0
;PCODE: $00000B8B VOL: 0
;PCODE: $00000B8C VOL: 0
;PCODE: $00000B8D VOL: 0
;PCODE: $00000B8E VOL: 0
; 0000 05E9 
; 0000 05EA     }
; 0000 05EB if(PORT_CZYTNIK.byte == 0x72)
;PCODE: $00000B8F VOL: 0
;PCODE: $00000B90 VOL: 0
;PCODE: $00000B91 VOL: 0
;PCODE: $00000B92 VOL: 0
; 0000 05EC     {
; 0000 05ED       macierz_zaciskow[rzad]=114;
;PCODE: $00000B93 VOL: 0
;PCODE: $00000B94 VOL: 0
;PCODE: $00000B95 VOL: 0
;PCODE: $00000B96 VOL: 0
;PCODE: $00000B97 VOL: 0
;PCODE: $00000B98 VOL: 0
; 0000 05EE       komunikat_z_czytnika_kodow("86-1625",rzad,0);
;PCODE: $00000B99 VOL: 0
;PCODE: $00000B9A VOL: 0
;PCODE: $00000B9B VOL: 0
;PCODE: $00000B9C VOL: 0
;PCODE: $00000B9D VOL: 0
;PCODE: $00000B9E VOL: 0
;PCODE: $00000B9F VOL: 0
; 0000 05EF 
; 0000 05F0     }
; 0000 05F1 if(PORT_CZYTNIK.byte == 0x73)
;PCODE: $00000BA0 VOL: 0
;PCODE: $00000BA1 VOL: 0
;PCODE: $00000BA2 VOL: 0
;PCODE: $00000BA3 VOL: 0
; 0000 05F2     {
; 0000 05F3       macierz_zaciskow[rzad]=115;
;PCODE: $00000BA4 VOL: 0
;PCODE: $00000BA5 VOL: 0
;PCODE: $00000BA6 VOL: 0
;PCODE: $00000BA7 VOL: 0
;PCODE: $00000BA8 VOL: 0
;PCODE: $00000BA9 VOL: 0
; 0000 05F4       komunikat_z_czytnika_kodow("86-2052",rzad,0);
;PCODE: $00000BAA VOL: 0
;PCODE: $00000BAB VOL: 0
;PCODE: $00000BAC VOL: 0
;PCODE: $00000BAD VOL: 0
;PCODE: $00000BAE VOL: 0
;PCODE: $00000BAF VOL: 0
;PCODE: $00000BB0 VOL: 0
; 0000 05F5 
; 0000 05F6     }
; 0000 05F7 if(PORT_CZYTNIK.byte == 0x74)
;PCODE: $00000BB1 VOL: 0
;PCODE: $00000BB2 VOL: 0
;PCODE: $00000BB3 VOL: 0
;PCODE: $00000BB4 VOL: 0
; 0000 05F8     {
; 0000 05F9       macierz_zaciskow[rzad]=116;
;PCODE: $00000BB5 VOL: 0
;PCODE: $00000BB6 VOL: 0
;PCODE: $00000BB7 VOL: 0
;PCODE: $00000BB8 VOL: 0
;PCODE: $00000BB9 VOL: 0
;PCODE: $00000BBA VOL: 0
; 0000 05FA       komunikat_z_czytnika_kodow("86-2492",rzad,1);
;PCODE: $00000BBB VOL: 0
;PCODE: $00000BBC VOL: 0
;PCODE: $00000BBD VOL: 0
;PCODE: $00000BBE VOL: 0
;PCODE: $00000BBF VOL: 0
;PCODE: $00000BC0 VOL: 0
;PCODE: $00000BC1 VOL: 0
; 0000 05FB 
; 0000 05FC     }
; 0000 05FD if(PORT_CZYTNIK.byte == 0x75)
;PCODE: $00000BC2 VOL: 0
;PCODE: $00000BC3 VOL: 0
;PCODE: $00000BC4 VOL: 0
;PCODE: $00000BC5 VOL: 0
; 0000 05FE     {
; 0000 05FF       macierz_zaciskow[rzad]=117;
;PCODE: $00000BC6 VOL: 0
;PCODE: $00000BC7 VOL: 0
;PCODE: $00000BC8 VOL: 0
;PCODE: $00000BC9 VOL: 0
;PCODE: $00000BCA VOL: 0
;PCODE: $00000BCB VOL: 0
; 0000 0600       komunikat_z_czytnika_kodow("87-0862",rzad,1);
;PCODE: $00000BCC VOL: 0
;PCODE: $00000BCD VOL: 0
;PCODE: $00000BCE VOL: 0
;PCODE: $00000BCF VOL: 0
;PCODE: $00000BD0 VOL: 0
;PCODE: $00000BD1 VOL: 0
;PCODE: $00000BD2 VOL: 0
; 0000 0601 
; 0000 0602     }
; 0000 0603 if(PORT_CZYTNIK.byte == 0x76)
;PCODE: $00000BD3 VOL: 0
;PCODE: $00000BD4 VOL: 0
;PCODE: $00000BD5 VOL: 0
;PCODE: $00000BD6 VOL: 0
; 0000 0604     {
; 0000 0605       macierz_zaciskow[rzad]=118;
;PCODE: $00000BD7 VOL: 0
;PCODE: $00000BD8 VOL: 0
;PCODE: $00000BD9 VOL: 0
;PCODE: $00000BDA VOL: 0
;PCODE: $00000BDB VOL: 0
;PCODE: $00000BDC VOL: 0
; 0000 0606       komunikat_z_czytnika_kodow("87-1625",rzad,1);
;PCODE: $00000BDD VOL: 0
;PCODE: $00000BDE VOL: 0
;PCODE: $00000BDF VOL: 0
;PCODE: $00000BE0 VOL: 0
;PCODE: $00000BE1 VOL: 0
;PCODE: $00000BE2 VOL: 0
;PCODE: $00000BE3 VOL: 0
; 0000 0607 
; 0000 0608     }
; 0000 0609 if(PORT_CZYTNIK.byte == 0x77)
;PCODE: $00000BE4 VOL: 0
;PCODE: $00000BE5 VOL: 0
;PCODE: $00000BE6 VOL: 0
;PCODE: $00000BE7 VOL: 0
; 0000 060A     {
; 0000 060B       macierz_zaciskow[rzad]=119;
;PCODE: $00000BE8 VOL: 0
;PCODE: $00000BE9 VOL: 0
;PCODE: $00000BEA VOL: 0
;PCODE: $00000BEB VOL: 0
;PCODE: $00000BEC VOL: 0
;PCODE: $00000BED VOL: 0
; 0000 060C       komunikat_z_czytnika_kodow("87-2052",rzad,1);
;PCODE: $00000BEE VOL: 0
;PCODE: $00000BEF VOL: 0
;PCODE: $00000BF0 VOL: 0
;PCODE: $00000BF1 VOL: 0
;PCODE: $00000BF2 VOL: 0
;PCODE: $00000BF3 VOL: 0
;PCODE: $00000BF4 VOL: 0
; 0000 060D 
; 0000 060E     }
; 0000 060F if(PORT_CZYTNIK.byte == 0x78)
;PCODE: $00000BF5 VOL: 0
;PCODE: $00000BF6 VOL: 0
;PCODE: $00000BF7 VOL: 0
;PCODE: $00000BF8 VOL: 0
; 0000 0610     {
; 0000 0611       macierz_zaciskow[rzad]=120;
;PCODE: $00000BF9 VOL: 0
;PCODE: $00000BFA VOL: 0
;PCODE: $00000BFB VOL: 0
;PCODE: $00000BFC VOL: 0
;PCODE: $00000BFD VOL: 0
;PCODE: $00000BFE VOL: 0
; 0000 0612       komunikat_z_czytnika_kodow("87-2492",rzad,0);
;PCODE: $00000BFF VOL: 0
;PCODE: $00000C00 VOL: 0
;PCODE: $00000C01 VOL: 0
;PCODE: $00000C02 VOL: 0
;PCODE: $00000C03 VOL: 0
;PCODE: $00000C04 VOL: 0
;PCODE: $00000C05 VOL: 0
; 0000 0613 
; 0000 0614     }
; 0000 0615 if(PORT_CZYTNIK.byte == 0x79)
;PCODE: $00000C06 VOL: 0
;PCODE: $00000C07 VOL: 0
;PCODE: $00000C08 VOL: 0
;PCODE: $00000C09 VOL: 0
; 0000 0616     {
; 0000 0617       macierz_zaciskow[rzad]=121;
;PCODE: $00000C0A VOL: 0
;PCODE: $00000C0B VOL: 0
;PCODE: $00000C0C VOL: 0
;PCODE: $00000C0D VOL: 0
;PCODE: $00000C0E VOL: 0
;PCODE: $00000C0F VOL: 0
; 0000 0618       komunikat_z_czytnika_kodow("86-0935",rzad,0);
;PCODE: $00000C10 VOL: 0
;PCODE: $00000C11 VOL: 0
;PCODE: $00000C12 VOL: 0
;PCODE: $00000C13 VOL: 0
;PCODE: $00000C14 VOL: 0
;PCODE: $00000C15 VOL: 0
;PCODE: $00000C16 VOL: 0
; 0000 0619 
; 0000 061A     }
; 0000 061B if(PORT_CZYTNIK.byte == 0x7A)
;PCODE: $00000C17 VOL: 0
;PCODE: $00000C18 VOL: 0
;PCODE: $00000C19 VOL: 0
;PCODE: $00000C1A VOL: 0
; 0000 061C     {
; 0000 061D       macierz_zaciskow[rzad]=122;
;PCODE: $00000C1B VOL: 0
;PCODE: $00000C1C VOL: 0
;PCODE: $00000C1D VOL: 0
;PCODE: $00000C1E VOL: 0
;PCODE: $00000C1F VOL: 0
;PCODE: $00000C20 VOL: 0
; 0000 061E       komunikat_z_czytnika_kodow("86-1648",rzad,0);
;PCODE: $00000C21 VOL: 0
;PCODE: $00000C22 VOL: 0
;PCODE: $00000C23 VOL: 0
;PCODE: $00000C24 VOL: 0
;PCODE: $00000C25 VOL: 0
;PCODE: $00000C26 VOL: 0
;PCODE: $00000C27 VOL: 0
; 0000 061F 
; 0000 0620     }
; 0000 0621 if(PORT_CZYTNIK.byte == 0x7B)
;PCODE: $00000C28 VOL: 0
;PCODE: $00000C29 VOL: 0
;PCODE: $00000C2A VOL: 0
;PCODE: $00000C2B VOL: 0
; 0000 0622     {
; 0000 0623       macierz_zaciskow[rzad]=123;
;PCODE: $00000C2C VOL: 0
;PCODE: $00000C2D VOL: 0
;PCODE: $00000C2E VOL: 0
;PCODE: $00000C2F VOL: 0
;PCODE: $00000C30 VOL: 0
;PCODE: $00000C31 VOL: 0
; 0000 0624       komunikat_z_czytnika_kodow("86-2082",rzad,0);
;PCODE: $00000C32 VOL: 0
;PCODE: $00000C33 VOL: 0
;PCODE: $00000C34 VOL: 0
;PCODE: $00000C35 VOL: 0
;PCODE: $00000C36 VOL: 0
;PCODE: $00000C37 VOL: 0
;PCODE: $00000C38 VOL: 0
; 0000 0625 
; 0000 0626     }
; 0000 0627 if(PORT_CZYTNIK.byte == 0x7C)
;PCODE: $00000C39 VOL: 0
;PCODE: $00000C3A VOL: 0
;PCODE: $00000C3B VOL: 0
;PCODE: $00000C3C VOL: 0
; 0000 0628     {
; 0000 0629       macierz_zaciskow[rzad]=124;
;PCODE: $00000C3D VOL: 0
;PCODE: $00000C3E VOL: 0
;PCODE: $00000C3F VOL: 0
;PCODE: $00000C40 VOL: 0
;PCODE: $00000C41 VOL: 0
;PCODE: $00000C42 VOL: 0
; 0000 062A       komunikat_z_czytnika_kodow("86-2500",rzad,0);
;PCODE: $00000C43 VOL: 0
;PCODE: $00000C44 VOL: 0
;PCODE: $00000C45 VOL: 0
;PCODE: $00000C46 VOL: 0
;PCODE: $00000C47 VOL: 0
;PCODE: $00000C48 VOL: 0
;PCODE: $00000C49 VOL: 0
; 0000 062B 
; 0000 062C     }
; 0000 062D if(PORT_CZYTNIK.byte == 0x7D)
;PCODE: $00000C4A VOL: 0
;PCODE: $00000C4B VOL: 0
;PCODE: $00000C4C VOL: 0
;PCODE: $00000C4D VOL: 0
; 0000 062E     {
; 0000 062F       macierz_zaciskow[rzad]=125;
;PCODE: $00000C4E VOL: 0
;PCODE: $00000C4F VOL: 0
;PCODE: $00000C50 VOL: 0
;PCODE: $00000C51 VOL: 0
;PCODE: $00000C52 VOL: 0
;PCODE: $00000C53 VOL: 0
; 0000 0630       komunikat_z_czytnika_kodow("87-0935",rzad,1);
;PCODE: $00000C54 VOL: 0
;PCODE: $00000C55 VOL: 0
;PCODE: $00000C56 VOL: 0
;PCODE: $00000C57 VOL: 0
;PCODE: $00000C58 VOL: 0
;PCODE: $00000C59 VOL: 0
;PCODE: $00000C5A VOL: 0
; 0000 0631 
; 0000 0632     }
; 0000 0633 if(PORT_CZYTNIK.byte == 0x7E)
;PCODE: $00000C5B VOL: 0
;PCODE: $00000C5C VOL: 0
;PCODE: $00000C5D VOL: 0
;PCODE: $00000C5E VOL: 0
; 0000 0634     {
; 0000 0635       macierz_zaciskow[rzad]=126;
;PCODE: $00000C5F VOL: 0
;PCODE: $00000C60 VOL: 0
;PCODE: $00000C61 VOL: 0
;PCODE: $00000C62 VOL: 0
;PCODE: $00000C63 VOL: 0
;PCODE: $00000C64 VOL: 0
; 0000 0636       komunikat_z_czytnika_kodow("87-1648",rzad,1);
;PCODE: $00000C65 VOL: 0
;PCODE: $00000C66 VOL: 0
;PCODE: $00000C67 VOL: 0
;PCODE: $00000C68 VOL: 0
;PCODE: $00000C69 VOL: 0
;PCODE: $00000C6A VOL: 0
;PCODE: $00000C6B VOL: 0
; 0000 0637 
; 0000 0638     }
; 0000 0639 
; 0000 063A if(PORT_CZYTNIK.byte == 0x7F)
;PCODE: $00000C6C VOL: 0
;PCODE: $00000C6D VOL: 0
;PCODE: $00000C6E VOL: 0
;PCODE: $00000C6F VOL: 0
; 0000 063B     {
; 0000 063C       macierz_zaciskow[rzad]=127;
;PCODE: $00000C70 VOL: 0
;PCODE: $00000C71 VOL: 0
;PCODE: $00000C72 VOL: 0
;PCODE: $00000C73 VOL: 0
;PCODE: $00000C74 VOL: 0
;PCODE: $00000C75 VOL: 0
; 0000 063D       komunikat_z_czytnika_kodow("87-2082",rzad,1);
;PCODE: $00000C76 VOL: 0
;PCODE: $00000C77 VOL: 0
;PCODE: $00000C78 VOL: 0
;PCODE: $00000C79 VOL: 0
;PCODE: $00000C7A VOL: 0
;PCODE: $00000C7B VOL: 0
;PCODE: $00000C7C VOL: 0
; 0000 063E 
; 0000 063F     }
; 0000 0640 if(PORT_CZYTNIK.byte == 0x80)
;PCODE: $00000C7D VOL: 0
;PCODE: $00000C7E VOL: 0
;PCODE: $00000C7F VOL: 0
;PCODE: $00000C80 VOL: 0
; 0000 0641     {
; 0000 0642       macierz_zaciskow[rzad]=128;
;PCODE: $00000C81 VOL: 0
;PCODE: $00000C82 VOL: 0
;PCODE: $00000C83 VOL: 0
;PCODE: $00000C84 VOL: 0
;PCODE: $00000C85 VOL: 0
;PCODE: $00000C86 VOL: 0
; 0000 0643       komunikat_z_czytnika_kodow("87-2500",rzad,1);
;PCODE: $00000C87 VOL: 0
;PCODE: $00000C88 VOL: 0
;PCODE: $00000C89 VOL: 0
;PCODE: $00000C8A VOL: 0
;PCODE: $00000C8B VOL: 0
;PCODE: $00000C8C VOL: 0
;PCODE: $00000C8D VOL: 0
; 0000 0644 
; 0000 0645     }
; 0000 0646 if(PORT_CZYTNIK.byte == 0x81)
;PCODE: $00000C8E VOL: 0
;PCODE: $00000C8F VOL: 0
;PCODE: $00000C90 VOL: 0
;PCODE: $00000C91 VOL: 0
; 0000 0647     {
; 0000 0648       macierz_zaciskow[rzad]=129;
;PCODE: $00000C92 VOL: 0
;PCODE: $00000C93 VOL: 0
;PCODE: $00000C94 VOL: 0
;PCODE: $00000C95 VOL: 0
;PCODE: $00000C96 VOL: 0
;PCODE: $00000C97 VOL: 0
; 0000 0649       komunikat_z_czytnika_kodow("86-1019",rzad,0);
;PCODE: $00000C98 VOL: 0
;PCODE: $00000C99 VOL: 0
;PCODE: $00000C9A VOL: 0
;PCODE: $00000C9B VOL: 0
;PCODE: $00000C9C VOL: 0
;PCODE: $00000C9D VOL: 0
;PCODE: $00000C9E VOL: 0
; 0000 064A 
; 0000 064B     }
; 0000 064C if(PORT_CZYTNIK.byte == 0x82)
;PCODE: $00000C9F VOL: 0
;PCODE: $00000CA0 VOL: 0
;PCODE: $00000CA1 VOL: 0
;PCODE: $00000CA2 VOL: 0
; 0000 064D     {
; 0000 064E       macierz_zaciskow[rzad]=130;
;PCODE: $00000CA3 VOL: 0
;PCODE: $00000CA4 VOL: 0
;PCODE: $00000CA5 VOL: 0
;PCODE: $00000CA6 VOL: 0
;PCODE: $00000CA7 VOL: 0
;PCODE: $00000CA8 VOL: 0
; 0000 064F       komunikat_z_czytnika_kodow("86-1649",rzad,0);
;PCODE: $00000CA9 VOL: 0
;PCODE: $00000CAA VOL: 0
;PCODE: $00000CAB VOL: 0
;PCODE: $00000CAC VOL: 0
;PCODE: $00000CAD VOL: 0
;PCODE: $00000CAE VOL: 0
;PCODE: $00000CAF VOL: 0
; 0000 0650 
; 0000 0651     }
; 0000 0652 if(PORT_CZYTNIK.byte == 0x83)
;PCODE: $00000CB0 VOL: 0
;PCODE: $00000CB1 VOL: 0
;PCODE: $00000CB2 VOL: 0
;PCODE: $00000CB3 VOL: 0
; 0000 0653     {
; 0000 0654       macierz_zaciskow[rzad]=131;
;PCODE: $00000CB4 VOL: 0
;PCODE: $00000CB5 VOL: 0
;PCODE: $00000CB6 VOL: 0
;PCODE: $00000CB7 VOL: 0
;PCODE: $00000CB8 VOL: 0
;PCODE: $00000CB9 VOL: 0
; 0000 0655       komunikat_z_czytnika_kodow("86-2083",rzad,1);
;PCODE: $00000CBA VOL: 0
;PCODE: $00000CBB VOL: 0
;PCODE: $00000CBC VOL: 0
;PCODE: $00000CBD VOL: 0
;PCODE: $00000CBE VOL: 0
;PCODE: $00000CBF VOL: 0
;PCODE: $00000CC0 VOL: 0
; 0000 0656 
; 0000 0657     }
; 0000 0658 if(PORT_CZYTNIK.byte == 0x84)
;PCODE: $00000CC1 VOL: 0
;PCODE: $00000CC2 VOL: 0
;PCODE: $00000CC3 VOL: 0
;PCODE: $00000CC4 VOL: 0
; 0000 0659     {
; 0000 065A       macierz_zaciskow[rzad]=132;
;PCODE: $00000CC5 VOL: 0
;PCODE: $00000CC6 VOL: 0
;PCODE: $00000CC7 VOL: 0
;PCODE: $00000CC8 VOL: 0
;PCODE: $00000CC9 VOL: 0
;PCODE: $00000CCA VOL: 0
; 0000 065B       komunikat_z_czytnika_kodow("86-2585",rzad,0);
;PCODE: $00000CCB VOL: 0
;PCODE: $00000CCC VOL: 0
;PCODE: $00000CCD VOL: 0
;PCODE: $00000CCE VOL: 0
;PCODE: $00000CCF VOL: 0
;PCODE: $00000CD0 VOL: 0
;PCODE: $00000CD1 VOL: 0
; 0000 065C 
; 0000 065D     }
; 0000 065E if(PORT_CZYTNIK.byte == 0x85)
;PCODE: $00000CD2 VOL: 0
;PCODE: $00000CD3 VOL: 0
;PCODE: $00000CD4 VOL: 0
;PCODE: $00000CD5 VOL: 0
; 0000 065F     {
; 0000 0660       macierz_zaciskow[rzad]=133;
;PCODE: $00000CD6 VOL: 0
;PCODE: $00000CD7 VOL: 0
;PCODE: $00000CD8 VOL: 0
;PCODE: $00000CD9 VOL: 0
;PCODE: $00000CDA VOL: 0
;PCODE: $00000CDB VOL: 0
; 0000 0661       komunikat_z_czytnika_kodow("87-1019",rzad,1);
;PCODE: $00000CDC VOL: 0
;PCODE: $00000CDD VOL: 0
;PCODE: $00000CDE VOL: 0
;PCODE: $00000CDF VOL: 0
;PCODE: $00000CE0 VOL: 0
;PCODE: $00000CE1 VOL: 0
;PCODE: $00000CE2 VOL: 0
; 0000 0662 
; 0000 0663     }
; 0000 0664 if(PORT_CZYTNIK.byte == 0x86)
;PCODE: $00000CE3 VOL: 0
;PCODE: $00000CE4 VOL: 0
;PCODE: $00000CE5 VOL: 0
;PCODE: $00000CE6 VOL: 0
; 0000 0665     {
; 0000 0666       macierz_zaciskow[rzad]=134;
;PCODE: $00000CE7 VOL: 0
;PCODE: $00000CE8 VOL: 0
;PCODE: $00000CE9 VOL: 0
;PCODE: $00000CEA VOL: 0
;PCODE: $00000CEB VOL: 0
;PCODE: $00000CEC VOL: 0
; 0000 0667       komunikat_z_czytnika_kodow("87-1649",rzad,1);
;PCODE: $00000CED VOL: 0
;PCODE: $00000CEE VOL: 0
;PCODE: $00000CEF VOL: 0
;PCODE: $00000CF0 VOL: 0
;PCODE: $00000CF1 VOL: 0
;PCODE: $00000CF2 VOL: 0
;PCODE: $00000CF3 VOL: 0
; 0000 0668 
; 0000 0669     }
; 0000 066A if(PORT_CZYTNIK.byte == 0x87)
;PCODE: $00000CF4 VOL: 0
;PCODE: $00000CF5 VOL: 0
;PCODE: $00000CF6 VOL: 0
;PCODE: $00000CF7 VOL: 0
; 0000 066B     {
; 0000 066C       macierz_zaciskow[rzad]=135;
;PCODE: $00000CF8 VOL: 0
;PCODE: $00000CF9 VOL: 0
;PCODE: $00000CFA VOL: 0
;PCODE: $00000CFB VOL: 0
;PCODE: $00000CFC VOL: 0
;PCODE: $00000CFD VOL: 0
; 0000 066D       komunikat_z_czytnika_kodow("87-2083",rzad,0);
;PCODE: $00000CFE VOL: 0
;PCODE: $00000CFF VOL: 0
;PCODE: $00000D00 VOL: 0
;PCODE: $00000D01 VOL: 0
;PCODE: $00000D02 VOL: 0
;PCODE: $00000D03 VOL: 0
;PCODE: $00000D04 VOL: 0
; 0000 066E 
; 0000 066F     }
; 0000 0670 
; 0000 0671 if(PORT_CZYTNIK.byte == 0x88)
;PCODE: $00000D05 VOL: 0
;PCODE: $00000D06 VOL: 0
;PCODE: $00000D07 VOL: 0
;PCODE: $00000D08 VOL: 0
; 0000 0672     {
; 0000 0673       macierz_zaciskow[rzad]=136;
;PCODE: $00000D09 VOL: 0
;PCODE: $00000D0A VOL: 0
;PCODE: $00000D0B VOL: 0
;PCODE: $00000D0C VOL: 0
;PCODE: $00000D0D VOL: 0
;PCODE: $00000D0E VOL: 0
; 0000 0674       komunikat_z_czytnika_kodow("87-2624",rzad,1);
;PCODE: $00000D0F VOL: 0
;PCODE: $00000D10 VOL: 0
;PCODE: $00000D11 VOL: 0
;PCODE: $00000D12 VOL: 0
;PCODE: $00000D13 VOL: 0
;PCODE: $00000D14 VOL: 0
;PCODE: $00000D15 VOL: 0
; 0000 0675 
; 0000 0676     }
; 0000 0677 if(PORT_CZYTNIK.byte == 0x89)
;PCODE: $00000D16 VOL: 0
;PCODE: $00000D17 VOL: 0
;PCODE: $00000D18 VOL: 0
;PCODE: $00000D19 VOL: 0
; 0000 0678     {
; 0000 0679       macierz_zaciskow[rzad]=137;
;PCODE: $00000D1A VOL: 0
;PCODE: $00000D1B VOL: 0
;PCODE: $00000D1C VOL: 0
;PCODE: $00000D1D VOL: 0
;PCODE: $00000D1E VOL: 0
;PCODE: $00000D1F VOL: 0
; 0000 067A       komunikat_z_czytnika_kodow("86-1027",rzad,0);
;PCODE: $00000D20 VOL: 0
;PCODE: $00000D21 VOL: 0
;PCODE: $00000D22 VOL: 0
;PCODE: $00000D23 VOL: 0
;PCODE: $00000D24 VOL: 0
;PCODE: $00000D25 VOL: 0
;PCODE: $00000D26 VOL: 0
; 0000 067B 
; 0000 067C     }
; 0000 067D if(PORT_CZYTNIK.byte == 0x8A)
;PCODE: $00000D27 VOL: 0
;PCODE: $00000D28 VOL: 0
;PCODE: $00000D29 VOL: 0
;PCODE: $00000D2A VOL: 0
; 0000 067E     {
; 0000 067F       macierz_zaciskow[rzad]=138;
;PCODE: $00000D2B VOL: 0
;PCODE: $00000D2C VOL: 0
;PCODE: $00000D2D VOL: 0
;PCODE: $00000D2E VOL: 0
;PCODE: $00000D2F VOL: 0
;PCODE: $00000D30 VOL: 0
; 0000 0680       komunikat_z_czytnika_kodow("86-1669",rzad,1);
;PCODE: $00000D31 VOL: 0
;PCODE: $00000D32 VOL: 0
;PCODE: $00000D33 VOL: 0
;PCODE: $00000D34 VOL: 0
;PCODE: $00000D35 VOL: 0
;PCODE: $00000D36 VOL: 0
;PCODE: $00000D37 VOL: 0
; 0000 0681 
; 0000 0682     }
; 0000 0683 if(PORT_CZYTNIK.byte == 0x8B)
;PCODE: $00000D38 VOL: 0
;PCODE: $00000D39 VOL: 0
;PCODE: $00000D3A VOL: 0
;PCODE: $00000D3B VOL: 0
; 0000 0684     {
; 0000 0685       macierz_zaciskow[rzad]=139;
;PCODE: $00000D3C VOL: 0
;PCODE: $00000D3D VOL: 0
;PCODE: $00000D3E VOL: 0
;PCODE: $00000D3F VOL: 0
;PCODE: $00000D40 VOL: 0
;PCODE: $00000D41 VOL: 0
; 0000 0686       komunikat_z_czytnika_kodow("86-2087",rzad,1);
;PCODE: $00000D42 VOL: 0
;PCODE: $00000D43 VOL: 0
;PCODE: $00000D44 VOL: 0
;PCODE: $00000D45 VOL: 0
;PCODE: $00000D46 VOL: 0
;PCODE: $00000D47 VOL: 0
;PCODE: $00000D48 VOL: 0
; 0000 0687 
; 0000 0688     }
; 0000 0689 if(PORT_CZYTNIK.byte == 0x8C)
;PCODE: $00000D49 VOL: 0
;PCODE: $00000D4A VOL: 0
;PCODE: $00000D4B VOL: 0
;PCODE: $00000D4C VOL: 0
; 0000 068A     {
; 0000 068B       macierz_zaciskow[rzad]=140;
;PCODE: $00000D4D VOL: 0
;PCODE: $00000D4E VOL: 0
;PCODE: $00000D4F VOL: 0
;PCODE: $00000D50 VOL: 0
;PCODE: $00000D51 VOL: 0
;PCODE: $00000D52 VOL: 0
; 0000 068C       komunikat_z_czytnika_kodow("86-2624",rzad,0);
;PCODE: $00000D53 VOL: 0
;PCODE: $00000D54 VOL: 0
;PCODE: $00000D55 VOL: 0
;PCODE: $00000D56 VOL: 0
;PCODE: $00000D57 VOL: 0
;PCODE: $00000D58 VOL: 0
;PCODE: $00000D59 VOL: 0
; 0000 068D 
; 0000 068E     }
; 0000 068F if(PORT_CZYTNIK.byte == 0x8D)
;PCODE: $00000D5A VOL: 0
;PCODE: $00000D5B VOL: 0
;PCODE: $00000D5C VOL: 0
;PCODE: $00000D5D VOL: 0
; 0000 0690     {
; 0000 0691       macierz_zaciskow[rzad]=141;
;PCODE: $00000D5E VOL: 0
;PCODE: $00000D5F VOL: 0
;PCODE: $00000D60 VOL: 0
;PCODE: $00000D61 VOL: 0
;PCODE: $00000D62 VOL: 0
;PCODE: $00000D63 VOL: 0
; 0000 0692       komunikat_z_czytnika_kodow("87-1027",rzad,1);
;PCODE: $00000D64 VOL: 0
;PCODE: $00000D65 VOL: 0
;PCODE: $00000D66 VOL: 0
;PCODE: $00000D67 VOL: 0
;PCODE: $00000D68 VOL: 0
;PCODE: $00000D69 VOL: 0
;PCODE: $00000D6A VOL: 0
; 0000 0693 
; 0000 0694     }
; 0000 0695 if(PORT_CZYTNIK.byte == 0x8E)
;PCODE: $00000D6B VOL: 0
;PCODE: $00000D6C VOL: 0
;PCODE: $00000D6D VOL: 0
;PCODE: $00000D6E VOL: 0
; 0000 0696     {
; 0000 0697       macierz_zaciskow[rzad]=142;
;PCODE: $00000D6F VOL: 0
;PCODE: $00000D70 VOL: 0
;PCODE: $00000D71 VOL: 0
;PCODE: $00000D72 VOL: 0
;PCODE: $00000D73 VOL: 0
;PCODE: $00000D74 VOL: 0
; 0000 0698       komunikat_z_czytnika_kodow("87-1669",rzad,0);
;PCODE: $00000D75 VOL: 0
;PCODE: $00000D76 VOL: 0
;PCODE: $00000D77 VOL: 0
;PCODE: $00000D78 VOL: 0
;PCODE: $00000D79 VOL: 0
;PCODE: $00000D7A VOL: 0
;PCODE: $00000D7B VOL: 0
; 0000 0699 
; 0000 069A     }
; 0000 069B if(PORT_CZYTNIK.byte == 0x8F)
;PCODE: $00000D7C VOL: 0
;PCODE: $00000D7D VOL: 0
;PCODE: $00000D7E VOL: 0
;PCODE: $00000D7F VOL: 0
; 0000 069C     {
; 0000 069D       macierz_zaciskow[rzad]=143;
;PCODE: $00000D80 VOL: 0
;PCODE: $00000D81 VOL: 0
;PCODE: $00000D82 VOL: 0
;PCODE: $00000D83 VOL: 0
;PCODE: $00000D84 VOL: 0
;PCODE: $00000D85 VOL: 0
; 0000 069E       komunikat_z_czytnika_kodow("87-2087",rzad,0);
;PCODE: $00000D86 VOL: 0
;PCODE: $00000D87 VOL: 0
;PCODE: $00000D88 VOL: 0
;PCODE: $00000D89 VOL: 0
;PCODE: $00000D8A VOL: 0
;PCODE: $00000D8B VOL: 0
;PCODE: $00000D8C VOL: 0
; 0000 069F 
; 0000 06A0     }
; 0000 06A1 if(PORT_CZYTNIK.byte == 0x90)
;PCODE: $00000D8D VOL: 0
;PCODE: $00000D8E VOL: 0
;PCODE: $00000D8F VOL: 0
;PCODE: $00000D90 VOL: 0
; 0000 06A2     {
; 0000 06A3       macierz_zaciskow[rzad]=144;
;PCODE: $00000D91 VOL: 0
;PCODE: $00000D92 VOL: 0
;PCODE: $00000D93 VOL: 0
;PCODE: $00000D94 VOL: 0
;PCODE: $00000D95 VOL: 0
;PCODE: $00000D96 VOL: 0
; 0000 06A4       komunikat_z_czytnika_kodow("87-2585",rzad,1);
;PCODE: $00000D97 VOL: 0
;PCODE: $00000D98 VOL: 0
;PCODE: $00000D99 VOL: 0
;PCODE: $00000D9A VOL: 0
;PCODE: $00000D9B VOL: 0
;PCODE: $00000D9C VOL: 0
;PCODE: $00000D9D VOL: 0
; 0000 06A5 
; 0000 06A6     }
; 0000 06A7 
; 0000 06A8 
; 0000 06A9 return rzad;
;PCODE: $00000D9E VOL: 0
;PCODE: $00000D9F VOL: 0
;PCODE: $00000DA0 VOL: 0
;PCODE: $00000DA1 VOL: 0
; 0000 06AA }
;PCODE: $00000DA2 VOL: 0
;
;
;void wybor_linijek_sterownikow(int rzad_local)
; 0000 06AE {
;PCODE: $00000DA3 VOL: 0
;PCODE: $00000DA4 VOL: 0
; 0000 06AF //zaczynam od tego
; 0000 06B0 //komentarz: celowo upraszam:
; 0000 06B1 //  a[2] = 0x22;    //ster4 ABS             //1,0,0,0,1,0  druciak    (1,0,0,0,1,0);
; 0000 06B2 //a[4] = 0x21;    //ster3 ABS             //krazek scierny
; 0000 06B3 
; 0000 06B4 //legenda pierwotna
; 0000 06B5             /*
; 0000 06B6             a[0] = 0x05A;   //ster1
; 0000 06B7             a[1] = a[0]+0x001;                                   //0x05B;   //ster2
; 0000 06B8             a[2] = 0x22;    //ster4 ABS             //1,0,0,0,1,0  druciak    (1,0,0,0,1,0);
; 0000 06B9             a[3] = 0x11;    //ster4 INV             //druciak
; 0000 06BA             a[4] = a[2];   //0x21;    //ster3 ABS             //krazek scierny
; 0000 06BB             a[5] = 0x196;   //delta okrag
; 0000 06BC             a[6] = a[5]+0x001;            //0x197;   //okrag
; 0000 06BD             a[7] = 0x12;    //ster3 INV             krazek scierny
; 0000 06BE             a[8] = a[6]+0x001;                0x198;   //-delta okrag
; 0000 06BF             a[9] = 0;          //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
; 0000 06C0             */
; 0000 06C1 
; 0000 06C2 
; 0000 06C3 //macierz_zaciskow[rzad_local]
; 0000 06C4 //macierz_zaciskow[rzad_local] = 140;
; 0000 06C5 
; 0000 06C6 
; 0000 06C7 
; 0000 06C8 switch(macierz_zaciskow[rzad_local])
;	rzad_local -> Y+0
;PCODE: $00000DA5 VOL: 0
;PCODE: $00000DA6 VOL: 0
;PCODE: $00000DA7 VOL: 0
;PCODE: $00000DA8 VOL: 0
;PCODE: $00000DA9 VOL: 0
; 0000 06C9 {
; 0000 06CA     case 0:
;PCODE: $00000DAA VOL: 0
;PCODE: $00000DAB VOL: 0
; 0000 06CB 
; 0000 06CC             komunikat_na_panel("                                                ",adr1,adr2);
;PCODE: $00000DAC VOL: 0
;PCODE: $00000DAD VOL: 0
;PCODE: $00000DAE VOL: 0
;PCODE: $00000DAF VOL: 0
;PCODE: $00000DB0 VOL: 0
;PCODE: $00000DB1 VOL: 0
;PCODE: $00000DB2 VOL: 0
;PCODE: $00000DB3 VOL: 0
; 0000 06CD             komunikat_na_panel("Nie wczytano zacisku",adr1,adr2);
;PCODE: $00000DB4 VOL: 0
;PCODE: $00000DB5 VOL: 0
;PCODE: $00000DB6 VOL: 0
;PCODE: $00000DB7 VOL: 0
;PCODE: $00000DB8 VOL: 0
;PCODE: $00000DB9 VOL: 0
;PCODE: $00000DBA VOL: 0
;PCODE: $00000DBB VOL: 0
; 0000 06CE 
; 0000 06CF     break;
;PCODE: $00000DBC VOL: 0
; 0000 06D0 
; 0000 06D1 
; 0000 06D2      case 1:
;PCODE: $00000DBD VOL: 0
;PCODE: $00000DBE VOL: 0
;PCODE: $00000DBF VOL: 0
; 0000 06D3 
; 0000 06D4             a[0] = 0x0C8;   //ster1
;PCODE: $00000DC0 VOL: 0
;PCODE: $00000DC1 VOL: 0
; 0000 06D5             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $00000DC2 VOL: 0
;PCODE: $00000DC3 VOL: 0
;PCODE: $00000DC4 VOL: 0
;PCODE: $00000DC5 VOL: 0
; 0000 06D6             a[4] = 0x1B;    //ster3 ABS krazek scierny
;PCODE: $00000DC6 VOL: 0
;PCODE: $00000DC7 VOL: 0
;PCODE: $00000DC8 VOL: 0
;PCODE: $00000DC9 VOL: 0
; 0000 06D7             a[5] = 0x196;   //delta okrag
;PCODE: $00000DCA VOL: 0
;PCODE: $00000DCB VOL: 0
;PCODE: $00000DCC VOL: 0
;PCODE: $00000DCD VOL: 0
; 0000 06D8             a[7] = 0x11;    //ster3 INV krazek scierny
;PCODE: $00000DCE VOL: 0
;PCODE: $00000DCF VOL: 0
;PCODE: $00000DD0 VOL: 0
;PCODE: $00000DD1 VOL: 0
; 0000 06D9             a[9] = 1;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $00000DD2 VOL: 0
;PCODE: $00000DD3 VOL: 0
;PCODE: $00000DD4 VOL: 0
;PCODE: $00000DD5 VOL: 0
; 0000 06DA 
; 0000 06DB             a[1] = a[0]+0x001;  //ster2
;PCODE: $00000DD6 VOL: 0
;PCODE: $00000DD7 VOL: 0
;PCODE: $00000DD8 VOL: 0
;PCODE: $00000DD9 VOL: 0
; 0000 06DC             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $00000DDA VOL: 0
;PCODE: $00000DDB VOL: 0
;PCODE: $00000DDC VOL: 0
;PCODE: $00000DDD VOL: 0
; 0000 06DD             a[6] = a[5]+0x001;  //okrag
;PCODE: $00000DDE VOL: 0
;PCODE: $00000DDF VOL: 0
;PCODE: $00000DE0 VOL: 0
;PCODE: $00000DE1 VOL: 0
;PCODE: $00000DE2 VOL: 0
; 0000 06DE             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $00000DE3 VOL: 0
;PCODE: $00000DE4 VOL: 0
;PCODE: $00000DE5 VOL: 0
;PCODE: $00000DE6 VOL: 0
;PCODE: $00000DE7 VOL: 0
; 0000 06DF 
; 0000 06E0     break;
;PCODE: $00000DE8 VOL: 0
; 0000 06E1 
; 0000 06E2       case 2:
;PCODE: $00000DE9 VOL: 0
;PCODE: $00000DEA VOL: 0
;PCODE: $00000DEB VOL: 0
; 0000 06E3 
; 0000 06E4             a[0] = 0x110;   //ster1
;PCODE: $00000DEC VOL: 0
;PCODE: $00000DED VOL: 0
; 0000 06E5             a[3] = 0x10;    //ster4 INV druciak
;PCODE: $00000DEE VOL: 0
;PCODE: $00000DEF VOL: 0
;PCODE: $00000DF0 VOL: 0
;PCODE: $00000DF1 VOL: 0
; 0000 06E6             a[4] = 0x1C;    //ster3 ABS krazek scierny
;PCODE: $00000DF2 VOL: 0
;PCODE: $00000DF3 VOL: 0
;PCODE: $00000DF4 VOL: 0
;PCODE: $00000DF5 VOL: 0
; 0000 06E7             a[5] = 0x190;   //delta okrag
;PCODE: $00000DF6 VOL: 0
;PCODE: $00000DF7 VOL: 0
;PCODE: $00000DF8 VOL: 0
;PCODE: $00000DF9 VOL: 0
; 0000 06E8             a[7] = 0x10;    //ster3 INV krazek scierny
;PCODE: $00000DFA VOL: 0
;PCODE: $00000DFB VOL: 0
;PCODE: $00000DFC VOL: 0
;PCODE: $00000DFD VOL: 0
; 0000 06E9             a[9] = 0;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $00000DFE VOL: 0
;PCODE: $00000DFF VOL: 0
;PCODE: $00000E00 VOL: 0
;PCODE: $00000E01 VOL: 0
; 0000 06EA 
; 0000 06EB             a[1] = a[0]+0x001;  //ster2
;PCODE: $00000E02 VOL: 0
;PCODE: $00000E03 VOL: 0
;PCODE: $00000E04 VOL: 0
;PCODE: $00000E05 VOL: 0
; 0000 06EC             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $00000E06 VOL: 0
;PCODE: $00000E07 VOL: 0
;PCODE: $00000E08 VOL: 0
;PCODE: $00000E09 VOL: 0
; 0000 06ED             a[6] = a[5]+0x001;  //okrag
;PCODE: $00000E0A VOL: 0
;PCODE: $00000E0B VOL: 0
;PCODE: $00000E0C VOL: 0
;PCODE: $00000E0D VOL: 0
;PCODE: $00000E0E VOL: 0
; 0000 06EE             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $00000E0F VOL: 0
;PCODE: $00000E10 VOL: 0
;PCODE: $00000E11 VOL: 0
;PCODE: $00000E12 VOL: 0
;PCODE: $00000E13 VOL: 0
; 0000 06EF 
; 0000 06F0     break;
;PCODE: $00000E14 VOL: 0
; 0000 06F1 
; 0000 06F2       case 3:
;PCODE: $00000E15 VOL: 0
;PCODE: $00000E16 VOL: 0
;PCODE: $00000E17 VOL: 0
; 0000 06F3 
; 0000 06F4             a[0] = 0x07A;   //ster1
;PCODE: $00000E18 VOL: 0
;PCODE: $00000E19 VOL: 0
; 0000 06F5             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $00000E1A VOL: 0
;PCODE: $00000E1B VOL: 0
;PCODE: $00000E1C VOL: 0
;PCODE: $00000E1D VOL: 0
; 0000 06F6             a[4] = 0x18;    //ster3 ABS krazek scierny
;PCODE: $00000E1E VOL: 0
;PCODE: $00000E1F VOL: 0
;PCODE: $00000E20 VOL: 0
;PCODE: $00000E21 VOL: 0
; 0000 06F7             a[5] = 0x196;   //delta okrag
;PCODE: $00000E22 VOL: 0
;PCODE: $00000E23 VOL: 0
;PCODE: $00000E24 VOL: 0
;PCODE: $00000E25 VOL: 0
; 0000 06F8             a[7] = 0x12;    //ster3 INV krazek scierny
;PCODE: $00000E26 VOL: 0
;PCODE: $00000E27 VOL: 0
;PCODE: $00000E28 VOL: 0
;PCODE: $00000E29 VOL: 0
; 0000 06F9             a[9] = 0;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $00000E2A VOL: 0
;PCODE: $00000E2B VOL: 0
;PCODE: $00000E2C VOL: 0
;PCODE: $00000E2D VOL: 0
; 0000 06FA 
; 0000 06FB             a[1] = a[0]+0x001;  //ster2
;PCODE: $00000E2E VOL: 0
;PCODE: $00000E2F VOL: 0
;PCODE: $00000E30 VOL: 0
;PCODE: $00000E31 VOL: 0
; 0000 06FC             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $00000E32 VOL: 0
;PCODE: $00000E33 VOL: 0
;PCODE: $00000E34 VOL: 0
;PCODE: $00000E35 VOL: 0
; 0000 06FD             a[6] = a[5]+0x001;  //okrag
;PCODE: $00000E36 VOL: 0
;PCODE: $00000E37 VOL: 0
;PCODE: $00000E38 VOL: 0
;PCODE: $00000E39 VOL: 0
;PCODE: $00000E3A VOL: 0
; 0000 06FE             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $00000E3B VOL: 0
;PCODE: $00000E3C VOL: 0
;PCODE: $00000E3D VOL: 0
;PCODE: $00000E3E VOL: 0
;PCODE: $00000E3F VOL: 0
; 0000 06FF 
; 0000 0700     break;
;PCODE: $00000E40 VOL: 0
; 0000 0701 
; 0000 0702       case 4:
;PCODE: $00000E41 VOL: 0
;PCODE: $00000E42 VOL: 0
;PCODE: $00000E43 VOL: 0
; 0000 0703 
; 0000 0704             a[0] = 0x102;   //ster1
;PCODE: $00000E44 VOL: 0
;PCODE: $00000E45 VOL: 0
; 0000 0705             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $00000E46 VOL: 0
;PCODE: $00000E47 VOL: 0
;PCODE: $00000E48 VOL: 0
;PCODE: $00000E49 VOL: 0
; 0000 0706             a[4] = 0x1F;    //ster3 ABS krazek scierny
;PCODE: $00000E4A VOL: 0
;PCODE: $00000E4B VOL: 0
;PCODE: $00000E4C VOL: 0
;PCODE: $00000E4D VOL: 0
; 0000 0707             a[5] = 0x196;   //delta okrag
;PCODE: $00000E4E VOL: 0
;PCODE: $00000E4F VOL: 0
;PCODE: $00000E50 VOL: 0
;PCODE: $00000E51 VOL: 0
; 0000 0708             a[7] = 0x12;    //ster3 INV krazek scierny
;PCODE: $00000E52 VOL: 0
;PCODE: $00000E53 VOL: 0
;PCODE: $00000E54 VOL: 0
;PCODE: $00000E55 VOL: 0
; 0000 0709             a[9] = 0;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $00000E56 VOL: 0
;PCODE: $00000E57 VOL: 0
;PCODE: $00000E58 VOL: 0
;PCODE: $00000E59 VOL: 0
; 0000 070A 
; 0000 070B             a[1] = a[0]+0x001;  //ster2
;PCODE: $00000E5A VOL: 0
;PCODE: $00000E5B VOL: 0
;PCODE: $00000E5C VOL: 0
;PCODE: $00000E5D VOL: 0
; 0000 070C             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $00000E5E VOL: 0
;PCODE: $00000E5F VOL: 0
;PCODE: $00000E60 VOL: 0
;PCODE: $00000E61 VOL: 0
; 0000 070D             a[6] = a[5]+0x001;  //okrag
;PCODE: $00000E62 VOL: 0
;PCODE: $00000E63 VOL: 0
;PCODE: $00000E64 VOL: 0
;PCODE: $00000E65 VOL: 0
;PCODE: $00000E66 VOL: 0
; 0000 070E             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $00000E67 VOL: 0
;PCODE: $00000E68 VOL: 0
;PCODE: $00000E69 VOL: 0
;PCODE: $00000E6A VOL: 0
;PCODE: $00000E6B VOL: 0
; 0000 070F 
; 0000 0710     break;
;PCODE: $00000E6C VOL: 0
; 0000 0711 
; 0000 0712       case 5:
;PCODE: $00000E6D VOL: 0
;PCODE: $00000E6E VOL: 0
;PCODE: $00000E6F VOL: 0
; 0000 0713 
; 0000 0714             a[0] = 0x0B0;   //ster1
;PCODE: $00000E70 VOL: 0
;PCODE: $00000E71 VOL: 0
; 0000 0715             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $00000E72 VOL: 0
;PCODE: $00000E73 VOL: 0
;PCODE: $00000E74 VOL: 0
;PCODE: $00000E75 VOL: 0
; 0000 0716             a[4] = 0x1B;    //ster3 ABS krazek scierny
;PCODE: $00000E76 VOL: 0
;PCODE: $00000E77 VOL: 0
;PCODE: $00000E78 VOL: 0
;PCODE: $00000E79 VOL: 0
; 0000 0717             a[5] = 0x196;   //delta okrag
;PCODE: $00000E7A VOL: 0
;PCODE: $00000E7B VOL: 0
;PCODE: $00000E7C VOL: 0
;PCODE: $00000E7D VOL: 0
; 0000 0718             a[7] = 0x11;    //ster3 INV krazek scierny
;PCODE: $00000E7E VOL: 0
;PCODE: $00000E7F VOL: 0
;PCODE: $00000E80 VOL: 0
;PCODE: $00000E81 VOL: 0
; 0000 0719             a[9] = 0;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $00000E82 VOL: 0
;PCODE: $00000E83 VOL: 0
;PCODE: $00000E84 VOL: 0
;PCODE: $00000E85 VOL: 0
; 0000 071A 
; 0000 071B             a[1] = a[0]+0x001;  //ster2
;PCODE: $00000E86 VOL: 0
;PCODE: $00000E87 VOL: 0
;PCODE: $00000E88 VOL: 0
;PCODE: $00000E89 VOL: 0
; 0000 071C             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $00000E8A VOL: 0
;PCODE: $00000E8B VOL: 0
;PCODE: $00000E8C VOL: 0
;PCODE: $00000E8D VOL: 0
; 0000 071D             a[6] = a[5]+0x001;  //okrag
;PCODE: $00000E8E VOL: 0
;PCODE: $00000E8F VOL: 0
;PCODE: $00000E90 VOL: 0
;PCODE: $00000E91 VOL: 0
;PCODE: $00000E92 VOL: 0
; 0000 071E             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $00000E93 VOL: 0
;PCODE: $00000E94 VOL: 0
;PCODE: $00000E95 VOL: 0
;PCODE: $00000E96 VOL: 0
;PCODE: $00000E97 VOL: 0
; 0000 071F 
; 0000 0720     break;
;PCODE: $00000E98 VOL: 0
; 0000 0721 
; 0000 0722       case 6:
;PCODE: $00000E99 VOL: 0
;PCODE: $00000E9A VOL: 0
;PCODE: $00000E9B VOL: 0
; 0000 0723 
; 0000 0724             a[0] = 0x0FE;   //ster1
;PCODE: $00000E9C VOL: 0
;PCODE: $00000E9D VOL: 0
; 0000 0725             a[3] = 0x10;    //ster4 INV druciak
;PCODE: $00000E9E VOL: 0
;PCODE: $00000E9F VOL: 0
;PCODE: $00000EA0 VOL: 0
;PCODE: $00000EA1 VOL: 0
; 0000 0726             a[4] = 0x1C;    //ster3 ABS krazek scierny
;PCODE: $00000EA2 VOL: 0
;PCODE: $00000EA3 VOL: 0
;PCODE: $00000EA4 VOL: 0
;PCODE: $00000EA5 VOL: 0
; 0000 0727             a[5] = 0x190;   //delta okrag
;PCODE: $00000EA6 VOL: 0
;PCODE: $00000EA7 VOL: 0
;PCODE: $00000EA8 VOL: 0
;PCODE: $00000EA9 VOL: 0
; 0000 0728             a[7] = 0x10;    //ster3 INV krazek scierny
;PCODE: $00000EAA VOL: 0
;PCODE: $00000EAB VOL: 0
;PCODE: $00000EAC VOL: 0
;PCODE: $00000EAD VOL: 0
; 0000 0729             a[9] = 1;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $00000EAE VOL: 0
;PCODE: $00000EAF VOL: 0
;PCODE: $00000EB0 VOL: 0
;PCODE: $00000EB1 VOL: 0
; 0000 072A 
; 0000 072B             a[1] = a[0]+0x001;  //ster2
;PCODE: $00000EB2 VOL: 0
;PCODE: $00000EB3 VOL: 0
;PCODE: $00000EB4 VOL: 0
;PCODE: $00000EB5 VOL: 0
; 0000 072C             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $00000EB6 VOL: 0
;PCODE: $00000EB7 VOL: 0
;PCODE: $00000EB8 VOL: 0
;PCODE: $00000EB9 VOL: 0
; 0000 072D             a[6] = a[5]+0x001;  //okrag
;PCODE: $00000EBA VOL: 0
;PCODE: $00000EBB VOL: 0
;PCODE: $00000EBC VOL: 0
;PCODE: $00000EBD VOL: 0
;PCODE: $00000EBE VOL: 0
; 0000 072E             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $00000EBF VOL: 0
;PCODE: $00000EC0 VOL: 0
;PCODE: $00000EC1 VOL: 0
;PCODE: $00000EC2 VOL: 0
;PCODE: $00000EC3 VOL: 0
; 0000 072F 
; 0000 0730     break;
;PCODE: $00000EC4 VOL: 0
; 0000 0731 
; 0000 0732 
; 0000 0733       case 7:
;PCODE: $00000EC5 VOL: 0
;PCODE: $00000EC6 VOL: 0
;PCODE: $00000EC7 VOL: 0
; 0000 0734 
; 0000 0735             a[0] = 0x078;   //ster1
;PCODE: $00000EC8 VOL: 0
;PCODE: $00000EC9 VOL: 0
; 0000 0736             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $00000ECA VOL: 0
;PCODE: $00000ECB VOL: 0
;PCODE: $00000ECC VOL: 0
;PCODE: $00000ECD VOL: 0
; 0000 0737             a[4] = 0x18;    //ster3 ABS krazek scierny
;PCODE: $00000ECE VOL: 0
;PCODE: $00000ECF VOL: 0
;PCODE: $00000ED0 VOL: 0
;PCODE: $00000ED1 VOL: 0
; 0000 0738             a[5] = 0x196;   //delta okrag
;PCODE: $00000ED2 VOL: 0
;PCODE: $00000ED3 VOL: 0
;PCODE: $00000ED4 VOL: 0
;PCODE: $00000ED5 VOL: 0
; 0000 0739             a[7] = 0x12;    //ster3 INV krazek scierny
;PCODE: $00000ED6 VOL: 0
;PCODE: $00000ED7 VOL: 0
;PCODE: $00000ED8 VOL: 0
;PCODE: $00000ED9 VOL: 0
; 0000 073A             a[9] = 1;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $00000EDA VOL: 0
;PCODE: $00000EDB VOL: 0
;PCODE: $00000EDC VOL: 0
;PCODE: $00000EDD VOL: 0
; 0000 073B 
; 0000 073C             a[1] = a[0]+0x001;  //ster2
;PCODE: $00000EDE VOL: 0
;PCODE: $00000EDF VOL: 0
;PCODE: $00000EE0 VOL: 0
;PCODE: $00000EE1 VOL: 0
; 0000 073D             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $00000EE2 VOL: 0
;PCODE: $00000EE3 VOL: 0
;PCODE: $00000EE4 VOL: 0
;PCODE: $00000EE5 VOL: 0
; 0000 073E             a[6] = a[5]+0x001;  //okrag
;PCODE: $00000EE6 VOL: 0
;PCODE: $00000EE7 VOL: 0
;PCODE: $00000EE8 VOL: 0
;PCODE: $00000EE9 VOL: 0
;PCODE: $00000EEA VOL: 0
; 0000 073F             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $00000EEB VOL: 0
;PCODE: $00000EEC VOL: 0
;PCODE: $00000EED VOL: 0
;PCODE: $00000EEE VOL: 0
;PCODE: $00000EEF VOL: 0
; 0000 0740 
; 0000 0741     break;
;PCODE: $00000EF0 VOL: 0
; 0000 0742 
; 0000 0743 
; 0000 0744       case 8:
;PCODE: $00000EF1 VOL: 0
;PCODE: $00000EF2 VOL: 0
;PCODE: $00000EF3 VOL: 0
; 0000 0745 
; 0000 0746             a[0] = 0x0C0;   //ster1
;PCODE: $00000EF4 VOL: 0
;PCODE: $00000EF5 VOL: 0
; 0000 0747             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $00000EF6 VOL: 0
;PCODE: $00000EF7 VOL: 0
;PCODE: $00000EF8 VOL: 0
;PCODE: $00000EF9 VOL: 0
; 0000 0748             a[4] = 0x1F;    //ster3 ABS krazek scierny
;PCODE: $00000EFA VOL: 0
;PCODE: $00000EFB VOL: 0
;PCODE: $00000EFC VOL: 0
;PCODE: $00000EFD VOL: 0
; 0000 0749             a[5] = 0x196;   //delta okrag
;PCODE: $00000EFE VOL: 0
;PCODE: $00000EFF VOL: 0
;PCODE: $00000F00 VOL: 0
;PCODE: $00000F01 VOL: 0
; 0000 074A             a[7] = 0x12;    //ster3 INV krazek scierny
;PCODE: $00000F02 VOL: 0
;PCODE: $00000F03 VOL: 0
;PCODE: $00000F04 VOL: 0
;PCODE: $00000F05 VOL: 0
; 0000 074B             a[9] = 1;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $00000F06 VOL: 0
;PCODE: $00000F07 VOL: 0
;PCODE: $00000F08 VOL: 0
;PCODE: $00000F09 VOL: 0
; 0000 074C 
; 0000 074D             a[1] = a[0]+0x001;  //ster2
;PCODE: $00000F0A VOL: 0
;PCODE: $00000F0B VOL: 0
;PCODE: $00000F0C VOL: 0
;PCODE: $00000F0D VOL: 0
; 0000 074E             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $00000F0E VOL: 0
;PCODE: $00000F0F VOL: 0
;PCODE: $00000F10 VOL: 0
;PCODE: $00000F11 VOL: 0
; 0000 074F             a[6] = a[5]+0x001;  //okrag
;PCODE: $00000F12 VOL: 0
;PCODE: $00000F13 VOL: 0
;PCODE: $00000F14 VOL: 0
;PCODE: $00000F15 VOL: 0
;PCODE: $00000F16 VOL: 0
; 0000 0750             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $00000F17 VOL: 0
;PCODE: $00000F18 VOL: 0
;PCODE: $00000F19 VOL: 0
;PCODE: $00000F1A VOL: 0
;PCODE: $00000F1B VOL: 0
; 0000 0751 
; 0000 0752     break;
;PCODE: $00000F1C VOL: 0
; 0000 0753 
; 0000 0754 
; 0000 0755       case 9:
;PCODE: $00000F1D VOL: 0
;PCODE: $00000F1E VOL: 0
;PCODE: $00000F1F VOL: 0
; 0000 0756 
; 0000 0757             a[0] = 0x018;   //ster1
;PCODE: $00000F20 VOL: 0
;PCODE: $00000F21 VOL: 0
; 0000 0758             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $00000F22 VOL: 0
;PCODE: $00000F23 VOL: 0
;PCODE: $00000F24 VOL: 0
;PCODE: $00000F25 VOL: 0
; 0000 0759             a[4] = 0x1F;    //ster3 ABS krazek scierny
;PCODE: $00000F26 VOL: 0
;PCODE: $00000F27 VOL: 0
;PCODE: $00000F28 VOL: 0
;PCODE: $00000F29 VOL: 0
; 0000 075A             a[5] = 0x196;   //delta okrag
;PCODE: $00000F2A VOL: 0
;PCODE: $00000F2B VOL: 0
;PCODE: $00000F2C VOL: 0
;PCODE: $00000F2D VOL: 0
; 0000 075B             a[7] = 0x11;    //ster3 INV krazek scierny
;PCODE: $00000F2E VOL: 0
;PCODE: $00000F2F VOL: 0
;PCODE: $00000F30 VOL: 0
;PCODE: $00000F31 VOL: 0
; 0000 075C             a[9] = 0;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $00000F32 VOL: 0
;PCODE: $00000F33 VOL: 0
;PCODE: $00000F34 VOL: 0
;PCODE: $00000F35 VOL: 0
; 0000 075D 
; 0000 075E             a[1] = a[0]+0x001;  //ster2
;PCODE: $00000F36 VOL: 0
;PCODE: $00000F37 VOL: 0
;PCODE: $00000F38 VOL: 0
;PCODE: $00000F39 VOL: 0
; 0000 075F             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $00000F3A VOL: 0
;PCODE: $00000F3B VOL: 0
;PCODE: $00000F3C VOL: 0
;PCODE: $00000F3D VOL: 0
; 0000 0760             a[6] = a[5]+0x001;  //okrag
;PCODE: $00000F3E VOL: 0
;PCODE: $00000F3F VOL: 0
;PCODE: $00000F40 VOL: 0
;PCODE: $00000F41 VOL: 0
;PCODE: $00000F42 VOL: 0
; 0000 0761             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $00000F43 VOL: 0
;PCODE: $00000F44 VOL: 0
;PCODE: $00000F45 VOL: 0
;PCODE: $00000F46 VOL: 0
;PCODE: $00000F47 VOL: 0
; 0000 0762 
; 0000 0763     break;
;PCODE: $00000F48 VOL: 0
; 0000 0764 
; 0000 0765 
; 0000 0766       case 10:
;PCODE: $00000F49 VOL: 0
;PCODE: $00000F4A VOL: 0
;PCODE: $00000F4B VOL: 0
; 0000 0767 
; 0000 0768             a[0] = 0x016;   //ster1
;PCODE: $00000F4C VOL: 0
;PCODE: $00000F4D VOL: 0
; 0000 0769             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $00000F4E VOL: 0
;PCODE: $00000F4F VOL: 0
;PCODE: $00000F50 VOL: 0
;PCODE: $00000F51 VOL: 0
; 0000 076A             a[4] = 0x1F;    //ster3 ABS krazek scierny
;PCODE: $00000F52 VOL: 0
;PCODE: $00000F53 VOL: 0
;PCODE: $00000F54 VOL: 0
;PCODE: $00000F55 VOL: 0
; 0000 076B             a[5] = 0x199;   //delta okrag
;PCODE: $00000F56 VOL: 0
;PCODE: $00000F57 VOL: 0
;PCODE: $00000F58 VOL: 0
;PCODE: $00000F59 VOL: 0
; 0000 076C             a[7] = 0x12;    //ster3 INV krazek scierny
;PCODE: $00000F5A VOL: 0
;PCODE: $00000F5B VOL: 0
;PCODE: $00000F5C VOL: 0
;PCODE: $00000F5D VOL: 0
; 0000 076D             a[9] = 0;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $00000F5E VOL: 0
;PCODE: $00000F5F VOL: 0
;PCODE: $00000F60 VOL: 0
;PCODE: $00000F61 VOL: 0
; 0000 076E 
; 0000 076F             a[1] = a[0]+0x001;  //ster2
;PCODE: $00000F62 VOL: 0
;PCODE: $00000F63 VOL: 0
;PCODE: $00000F64 VOL: 0
;PCODE: $00000F65 VOL: 0
; 0000 0770             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $00000F66 VOL: 0
;PCODE: $00000F67 VOL: 0
;PCODE: $00000F68 VOL: 0
;PCODE: $00000F69 VOL: 0
; 0000 0771             a[6] = a[5]+0x001;  //okrag
;PCODE: $00000F6A VOL: 0
;PCODE: $00000F6B VOL: 0
;PCODE: $00000F6C VOL: 0
;PCODE: $00000F6D VOL: 0
;PCODE: $00000F6E VOL: 0
; 0000 0772             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $00000F6F VOL: 0
;PCODE: $00000F70 VOL: 0
;PCODE: $00000F71 VOL: 0
;PCODE: $00000F72 VOL: 0
;PCODE: $00000F73 VOL: 0
; 0000 0773 
; 0000 0774     break;
;PCODE: $00000F74 VOL: 0
; 0000 0775 
; 0000 0776 
; 0000 0777       case 11:
;PCODE: $00000F75 VOL: 0
;PCODE: $00000F76 VOL: 0
;PCODE: $00000F77 VOL: 0
; 0000 0778 
; 0000 0779             a[0] = 0x074;   //ster1
;PCODE: $00000F78 VOL: 0
;PCODE: $00000F79 VOL: 0
; 0000 077A             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $00000F7A VOL: 0
;PCODE: $00000F7B VOL: 0
;PCODE: $00000F7C VOL: 0
;PCODE: $00000F7D VOL: 0
; 0000 077B             a[4] = 0x19;    //ster3 ABS krazek scierny
;PCODE: $00000F7E VOL: 0
;PCODE: $00000F7F VOL: 0
;PCODE: $00000F80 VOL: 0
;PCODE: $00000F81 VOL: 0
; 0000 077C             a[5] = 0x199;   //delta okrag
;PCODE: $00000F82 VOL: 0
;PCODE: $00000F83 VOL: 0
;PCODE: $00000F84 VOL: 0
;PCODE: $00000F85 VOL: 0
; 0000 077D             a[7] = 0x12;    //ster3 INV krazek scierny
;PCODE: $00000F86 VOL: 0
;PCODE: $00000F87 VOL: 0
;PCODE: $00000F88 VOL: 0
;PCODE: $00000F89 VOL: 0
; 0000 077E             a[9] = 0;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $00000F8A VOL: 0
;PCODE: $00000F8B VOL: 0
;PCODE: $00000F8C VOL: 0
;PCODE: $00000F8D VOL: 0
; 0000 077F 
; 0000 0780             a[1] = a[0]+0x001;  //ster2
;PCODE: $00000F8E VOL: 0
;PCODE: $00000F8F VOL: 0
;PCODE: $00000F90 VOL: 0
;PCODE: $00000F91 VOL: 0
; 0000 0781             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $00000F92 VOL: 0
;PCODE: $00000F93 VOL: 0
;PCODE: $00000F94 VOL: 0
;PCODE: $00000F95 VOL: 0
; 0000 0782             a[6] = a[5]+0x001;  //okrag
;PCODE: $00000F96 VOL: 0
;PCODE: $00000F97 VOL: 0
;PCODE: $00000F98 VOL: 0
;PCODE: $00000F99 VOL: 0
;PCODE: $00000F9A VOL: 0
; 0000 0783             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $00000F9B VOL: 0
;PCODE: $00000F9C VOL: 0
;PCODE: $00000F9D VOL: 0
;PCODE: $00000F9E VOL: 0
;PCODE: $00000F9F VOL: 0
; 0000 0784 
; 0000 0785     break;
;PCODE: $00000FA0 VOL: 0
; 0000 0786 
; 0000 0787 
; 0000 0788       case 12:
;PCODE: $00000FA1 VOL: 0
;PCODE: $00000FA2 VOL: 0
;PCODE: $00000FA3 VOL: 0
; 0000 0789 
; 0000 078A             a[0] = 0x096;   //ster1
;PCODE: $00000FA4 VOL: 0
;PCODE: $00000FA5 VOL: 0
; 0000 078B             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $00000FA6 VOL: 0
;PCODE: $00000FA7 VOL: 0
;PCODE: $00000FA8 VOL: 0
;PCODE: $00000FA9 VOL: 0
; 0000 078C             a[4] = 0x21;    //ster3 ABS krazek scierny
;PCODE: $00000FAA VOL: 0
;PCODE: $00000FAB VOL: 0
;PCODE: $00000FAC VOL: 0
;PCODE: $00000FAD VOL: 0
; 0000 078D             a[5] = 0x199;   //delta okrag
;PCODE: $00000FAE VOL: 0
;PCODE: $00000FAF VOL: 0
;PCODE: $00000FB0 VOL: 0
;PCODE: $00000FB1 VOL: 0
; 0000 078E             a[7] = 0x12;    //ster3 INV krazek scierny
;PCODE: $00000FB2 VOL: 0
;PCODE: $00000FB3 VOL: 0
;PCODE: $00000FB4 VOL: 0
;PCODE: $00000FB5 VOL: 0
; 0000 078F             a[9] = 1;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $00000FB6 VOL: 0
;PCODE: $00000FB7 VOL: 0
;PCODE: $00000FB8 VOL: 0
;PCODE: $00000FB9 VOL: 0
; 0000 0790 
; 0000 0791             a[1] = a[0]+0x001;  //ster2
;PCODE: $00000FBA VOL: 0
;PCODE: $00000FBB VOL: 0
;PCODE: $00000FBC VOL: 0
;PCODE: $00000FBD VOL: 0
; 0000 0792             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $00000FBE VOL: 0
;PCODE: $00000FBF VOL: 0
;PCODE: $00000FC0 VOL: 0
;PCODE: $00000FC1 VOL: 0
; 0000 0793             a[6] = a[5]+0x001;  //okrag
;PCODE: $00000FC2 VOL: 0
;PCODE: $00000FC3 VOL: 0
;PCODE: $00000FC4 VOL: 0
;PCODE: $00000FC5 VOL: 0
;PCODE: $00000FC6 VOL: 0
; 0000 0794             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $00000FC7 VOL: 0
;PCODE: $00000FC8 VOL: 0
;PCODE: $00000FC9 VOL: 0
;PCODE: $00000FCA VOL: 0
;PCODE: $00000FCB VOL: 0
; 0000 0795 
; 0000 0796     break;
;PCODE: $00000FCC VOL: 0
; 0000 0797 
; 0000 0798 
; 0000 0799       case 13:
;PCODE: $00000FCD VOL: 0
;PCODE: $00000FCE VOL: 0
;PCODE: $00000FCF VOL: 0
; 0000 079A 
; 0000 079B             a[0] = 0x01A;   //ster1
;PCODE: $00000FD0 VOL: 0
;PCODE: $00000FD1 VOL: 0
; 0000 079C             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $00000FD2 VOL: 0
;PCODE: $00000FD3 VOL: 0
;PCODE: $00000FD4 VOL: 0
;PCODE: $00000FD5 VOL: 0
; 0000 079D             a[4] = 0x1F;    //ster3 ABS krazek scierny
;PCODE: $00000FD6 VOL: 0
;PCODE: $00000FD7 VOL: 0
;PCODE: $00000FD8 VOL: 0
;PCODE: $00000FD9 VOL: 0
; 0000 079E             a[5] = 0x196;   //delta okrag
;PCODE: $00000FDA VOL: 0
;PCODE: $00000FDB VOL: 0
;PCODE: $00000FDC VOL: 0
;PCODE: $00000FDD VOL: 0
; 0000 079F             a[7] = 0x11;    //ster3 INV krazek scierny
;PCODE: $00000FDE VOL: 0
;PCODE: $00000FDF VOL: 0
;PCODE: $00000FE0 VOL: 0
;PCODE: $00000FE1 VOL: 0
; 0000 07A0             a[9] = 1;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $00000FE2 VOL: 0
;PCODE: $00000FE3 VOL: 0
;PCODE: $00000FE4 VOL: 0
;PCODE: $00000FE5 VOL: 0
; 0000 07A1 
; 0000 07A2             a[1] = a[0]+0x001;  //ster2
;PCODE: $00000FE6 VOL: 0
;PCODE: $00000FE7 VOL: 0
;PCODE: $00000FE8 VOL: 0
;PCODE: $00000FE9 VOL: 0
; 0000 07A3             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $00000FEA VOL: 0
;PCODE: $00000FEB VOL: 0
;PCODE: $00000FEC VOL: 0
;PCODE: $00000FED VOL: 0
; 0000 07A4             a[6] = a[5]+0x001;  //okrag
;PCODE: $00000FEE VOL: 0
;PCODE: $00000FEF VOL: 0
;PCODE: $00000FF0 VOL: 0
;PCODE: $00000FF1 VOL: 0
;PCODE: $00000FF2 VOL: 0
; 0000 07A5             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $00000FF3 VOL: 0
;PCODE: $00000FF4 VOL: 0
;PCODE: $00000FF5 VOL: 0
;PCODE: $00000FF6 VOL: 0
;PCODE: $00000FF7 VOL: 0
; 0000 07A6 
; 0000 07A7     break;
;PCODE: $00000FF8 VOL: 0
; 0000 07A8 
; 0000 07A9 
; 0000 07AA       case 14:
;PCODE: $00000FF9 VOL: 0
;PCODE: $00000FFA VOL: 0
;PCODE: $00000FFB VOL: 0
; 0000 07AB 
; 0000 07AC             a[0] = 0x05E;   //ster1
;PCODE: $00000FFC VOL: 0
;PCODE: $00000FFD VOL: 0
; 0000 07AD             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $00000FFE VOL: 0
;PCODE: $00000FFF VOL: 0
;PCODE: $00001000 VOL: 0
;PCODE: $00001001 VOL: 0
; 0000 07AE             a[4] = 0x1F;    //ster3 ABS krazek scierny
;PCODE: $00001002 VOL: 0
;PCODE: $00001003 VOL: 0
;PCODE: $00001004 VOL: 0
;PCODE: $00001005 VOL: 0
; 0000 07AF             a[5] = 0x199;   //delta okrag
;PCODE: $00001006 VOL: 0
;PCODE: $00001007 VOL: 0
;PCODE: $00001008 VOL: 0
;PCODE: $00001009 VOL: 0
; 0000 07B0             a[7] = 0x12;    //ster3 INV krazek scierny
;PCODE: $0000100A VOL: 0
;PCODE: $0000100B VOL: 0
;PCODE: $0000100C VOL: 0
;PCODE: $0000100D VOL: 0
; 0000 07B1             a[9] = 1;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $0000100E VOL: 0
;PCODE: $0000100F VOL: 0
;PCODE: $00001010 VOL: 0
;PCODE: $00001011 VOL: 0
; 0000 07B2 
; 0000 07B3             a[1] = a[0]+0x001;  //ster2
;PCODE: $00001012 VOL: 0
;PCODE: $00001013 VOL: 0
;PCODE: $00001014 VOL: 0
;PCODE: $00001015 VOL: 0
; 0000 07B4             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $00001016 VOL: 0
;PCODE: $00001017 VOL: 0
;PCODE: $00001018 VOL: 0
;PCODE: $00001019 VOL: 0
; 0000 07B5             a[6] = a[5]+0x001;  //okrag
;PCODE: $0000101A VOL: 0
;PCODE: $0000101B VOL: 0
;PCODE: $0000101C VOL: 0
;PCODE: $0000101D VOL: 0
;PCODE: $0000101E VOL: 0
; 0000 07B6             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $0000101F VOL: 0
;PCODE: $00001020 VOL: 0
;PCODE: $00001021 VOL: 0
;PCODE: $00001022 VOL: 0
;PCODE: $00001023 VOL: 0
; 0000 07B7 
; 0000 07B8     break;
;PCODE: $00001024 VOL: 0
; 0000 07B9 
; 0000 07BA 
; 0000 07BB       case 15:
;PCODE: $00001025 VOL: 0
;PCODE: $00001026 VOL: 0
;PCODE: $00001027 VOL: 0
; 0000 07BC 
; 0000 07BD             a[0] = 0x084;   //ster1
;PCODE: $00001028 VOL: 0
;PCODE: $00001029 VOL: 0
; 0000 07BE             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $0000102A VOL: 0
;PCODE: $0000102B VOL: 0
;PCODE: $0000102C VOL: 0
;PCODE: $0000102D VOL: 0
; 0000 07BF             a[4] = 0x19;    //ster3 ABS krazek scierny
;PCODE: $0000102E VOL: 0
;PCODE: $0000102F VOL: 0
;PCODE: $00001030 VOL: 0
;PCODE: $00001031 VOL: 0
; 0000 07C0             a[5] = 0x199;   //delta okrag
;PCODE: $00001032 VOL: 0
;PCODE: $00001033 VOL: 0
;PCODE: $00001034 VOL: 0
;PCODE: $00001035 VOL: 0
; 0000 07C1             a[7] = 0x12;    //ster3 INV krazek scierny
;PCODE: $00001036 VOL: 0
;PCODE: $00001037 VOL: 0
;PCODE: $00001038 VOL: 0
;PCODE: $00001039 VOL: 0
; 0000 07C2             a[9] = 1;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $0000103A VOL: 0
;PCODE: $0000103B VOL: 0
;PCODE: $0000103C VOL: 0
;PCODE: $0000103D VOL: 0
; 0000 07C3 
; 0000 07C4             a[1] = a[0]+0x001;  //ster2
;PCODE: $0000103E VOL: 0
;PCODE: $0000103F VOL: 0
;PCODE: $00001040 VOL: 0
;PCODE: $00001041 VOL: 0
; 0000 07C5             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $00001042 VOL: 0
;PCODE: $00001043 VOL: 0
;PCODE: $00001044 VOL: 0
;PCODE: $00001045 VOL: 0
; 0000 07C6             a[6] = a[5]+0x001;  //okrag
;PCODE: $00001046 VOL: 0
;PCODE: $00001047 VOL: 0
;PCODE: $00001048 VOL: 0
;PCODE: $00001049 VOL: 0
;PCODE: $0000104A VOL: 0
; 0000 07C7             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $0000104B VOL: 0
;PCODE: $0000104C VOL: 0
;PCODE: $0000104D VOL: 0
;PCODE: $0000104E VOL: 0
;PCODE: $0000104F VOL: 0
; 0000 07C8 
; 0000 07C9     break;
;PCODE: $00001050 VOL: 0
; 0000 07CA 
; 0000 07CB 
; 0000 07CC       case 16:
;PCODE: $00001051 VOL: 0
;PCODE: $00001052 VOL: 0
;PCODE: $00001053 VOL: 0
; 0000 07CD 
; 0000 07CE             a[0] = 0x0B8;   //ster1
;PCODE: $00001054 VOL: 0
;PCODE: $00001055 VOL: 0
; 0000 07CF             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $00001056 VOL: 0
;PCODE: $00001057 VOL: 0
;PCODE: $00001058 VOL: 0
;PCODE: $00001059 VOL: 0
; 0000 07D0             a[4] = 0x20;    //ster3 ABS krazek scierny
;PCODE: $0000105A VOL: 0
;PCODE: $0000105B VOL: 0
;PCODE: $0000105C VOL: 0
;PCODE: $0000105D VOL: 0
; 0000 07D1             a[5] = 0x199;   //delta okrag
;PCODE: $0000105E VOL: 0
;PCODE: $0000105F VOL: 0
;PCODE: $00001060 VOL: 0
;PCODE: $00001061 VOL: 0
; 0000 07D2             a[7] = 0x12;    //ster3 INV krazek scierny
;PCODE: $00001062 VOL: 0
;PCODE: $00001063 VOL: 0
;PCODE: $00001064 VOL: 0
;PCODE: $00001065 VOL: 0
; 0000 07D3             a[9] = 0;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $00001066 VOL: 0
;PCODE: $00001067 VOL: 0
;PCODE: $00001068 VOL: 0
;PCODE: $00001069 VOL: 0
; 0000 07D4 
; 0000 07D5             a[1] = a[0]+0x001;  //ster2
;PCODE: $0000106A VOL: 0
;PCODE: $0000106B VOL: 0
;PCODE: $0000106C VOL: 0
;PCODE: $0000106D VOL: 0
; 0000 07D6             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $0000106E VOL: 0
;PCODE: $0000106F VOL: 0
;PCODE: $00001070 VOL: 0
;PCODE: $00001071 VOL: 0
; 0000 07D7             a[6] = a[5]+0x001;  //okrag
;PCODE: $00001072 VOL: 0
;PCODE: $00001073 VOL: 0
;PCODE: $00001074 VOL: 0
;PCODE: $00001075 VOL: 0
;PCODE: $00001076 VOL: 0
; 0000 07D8             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $00001077 VOL: 0
;PCODE: $00001078 VOL: 0
;PCODE: $00001079 VOL: 0
;PCODE: $0000107A VOL: 0
;PCODE: $0000107B VOL: 0
; 0000 07D9 
; 0000 07DA     break;
;PCODE: $0000107C VOL: 0
; 0000 07DB 
; 0000 07DC       case 17:
;PCODE: $0000107D VOL: 0
;PCODE: $0000107E VOL: 0
;PCODE: $0000107F VOL: 0
; 0000 07DD 
; 0000 07DE             a[0] = 0x020;   //ster1
;PCODE: $00001080 VOL: 0
;PCODE: $00001081 VOL: 0
; 0000 07DF             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $00001082 VOL: 0
;PCODE: $00001083 VOL: 0
;PCODE: $00001084 VOL: 0
;PCODE: $00001085 VOL: 0
; 0000 07E0             a[4] = 0x1B;    //ster3 ABS krazek scierny
;PCODE: $00001086 VOL: 0
;PCODE: $00001087 VOL: 0
;PCODE: $00001088 VOL: 0
;PCODE: $00001089 VOL: 0
; 0000 07E1             a[5] = 0x196;   //delta okrag
;PCODE: $0000108A VOL: 0
;PCODE: $0000108B VOL: 0
;PCODE: $0000108C VOL: 0
;PCODE: $0000108D VOL: 0
; 0000 07E2             a[7] = 0x11;    //ster3 INV krazek scierny
;PCODE: $0000108E VOL: 0
;PCODE: $0000108F VOL: 0
;PCODE: $00001090 VOL: 0
;PCODE: $00001091 VOL: 0
; 0000 07E3             a[9] = 0;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $00001092 VOL: 0
;PCODE: $00001093 VOL: 0
;PCODE: $00001094 VOL: 0
;PCODE: $00001095 VOL: 0
; 0000 07E4 
; 0000 07E5             a[1] = a[0]+0x001;  //ster2
;PCODE: $00001096 VOL: 0
;PCODE: $00001097 VOL: 0
;PCODE: $00001098 VOL: 0
;PCODE: $00001099 VOL: 0
; 0000 07E6             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $0000109A VOL: 0
;PCODE: $0000109B VOL: 0
;PCODE: $0000109C VOL: 0
;PCODE: $0000109D VOL: 0
; 0000 07E7             a[6] = a[5]+0x001;  //okrag
;PCODE: $0000109E VOL: 0
;PCODE: $0000109F VOL: 0
;PCODE: $000010A0 VOL: 0
;PCODE: $000010A1 VOL: 0
;PCODE: $000010A2 VOL: 0
; 0000 07E8             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $000010A3 VOL: 0
;PCODE: $000010A4 VOL: 0
;PCODE: $000010A5 VOL: 0
;PCODE: $000010A6 VOL: 0
;PCODE: $000010A7 VOL: 0
; 0000 07E9 
; 0000 07EA     break;
;PCODE: $000010A8 VOL: 0
; 0000 07EB 
; 0000 07EC 
; 0000 07ED       case 18:
;PCODE: $000010A9 VOL: 0
;PCODE: $000010AA VOL: 0
;PCODE: $000010AB VOL: 0
; 0000 07EE 
; 0000 07EF             a[0] = 0x098;   //ster1
;PCODE: $000010AC VOL: 0
;PCODE: $000010AD VOL: 0
; 0000 07F0             a[3] = 0x10;    //ster4 INV druciak
;PCODE: $000010AE VOL: 0
;PCODE: $000010AF VOL: 0
;PCODE: $000010B0 VOL: 0
;PCODE: $000010B1 VOL: 0
; 0000 07F1             a[4] = 0x16;    //ster3 ABS krazek scierny
;PCODE: $000010B2 VOL: 0
;PCODE: $000010B3 VOL: 0
;PCODE: $000010B4 VOL: 0
;PCODE: $000010B5 VOL: 0
; 0000 07F2             a[5] = 0x190;   //delta okrag
;PCODE: $000010B6 VOL: 0
;PCODE: $000010B7 VOL: 0
;PCODE: $000010B8 VOL: 0
;PCODE: $000010B9 VOL: 0
; 0000 07F3             a[7] = 0x10;    //ster3 INV krazek scierny
;PCODE: $000010BA VOL: 0
;PCODE: $000010BB VOL: 0
;PCODE: $000010BC VOL: 0
;PCODE: $000010BD VOL: 0
; 0000 07F4             a[9] = 0;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $000010BE VOL: 0
;PCODE: $000010BF VOL: 0
;PCODE: $000010C0 VOL: 0
;PCODE: $000010C1 VOL: 0
; 0000 07F5 
; 0000 07F6             a[1] = a[0]+0x001;  //ster2
;PCODE: $000010C2 VOL: 0
;PCODE: $000010C3 VOL: 0
;PCODE: $000010C4 VOL: 0
;PCODE: $000010C5 VOL: 0
; 0000 07F7             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $000010C6 VOL: 0
;PCODE: $000010C7 VOL: 0
;PCODE: $000010C8 VOL: 0
;PCODE: $000010C9 VOL: 0
; 0000 07F8             a[6] = a[5]+0x001;  //okrag
;PCODE: $000010CA VOL: 0
;PCODE: $000010CB VOL: 0
;PCODE: $000010CC VOL: 0
;PCODE: $000010CD VOL: 0
;PCODE: $000010CE VOL: 0
; 0000 07F9             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $000010CF VOL: 0
;PCODE: $000010D0 VOL: 0
;PCODE: $000010D1 VOL: 0
;PCODE: $000010D2 VOL: 0
;PCODE: $000010D3 VOL: 0
; 0000 07FA 
; 0000 07FB     break;
;PCODE: $000010D4 VOL: 0
; 0000 07FC 
; 0000 07FD 
; 0000 07FE 
; 0000 07FF       case 19:
;PCODE: $000010D5 VOL: 0
;PCODE: $000010D6 VOL: 0
;PCODE: $000010D7 VOL: 0
; 0000 0800 
; 0000 0801             a[0] = 0x0AA;   //ster1
;PCODE: $000010D8 VOL: 0
;PCODE: $000010D9 VOL: 0
; 0000 0802             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $000010DA VOL: 0
;PCODE: $000010DB VOL: 0
;PCODE: $000010DC VOL: 0
;PCODE: $000010DD VOL: 0
; 0000 0803             a[4] = 0x1D;    //ster3 ABS krazek scierny
;PCODE: $000010DE VOL: 0
;PCODE: $000010DF VOL: 0
;PCODE: $000010E0 VOL: 0
;PCODE: $000010E1 VOL: 0
; 0000 0804             a[5] = 0x199;   //delta okrag
;PCODE: $000010E2 VOL: 0
;PCODE: $000010E3 VOL: 0
;PCODE: $000010E4 VOL: 0
;PCODE: $000010E5 VOL: 0
; 0000 0805             a[7] = 0x12;    //ster3 INV krazek scierny
;PCODE: $000010E6 VOL: 0
;PCODE: $000010E7 VOL: 0
;PCODE: $000010E8 VOL: 0
;PCODE: $000010E9 VOL: 0
; 0000 0806             a[9] = 0;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $000010EA VOL: 0
;PCODE: $000010EB VOL: 0
;PCODE: $000010EC VOL: 0
;PCODE: $000010ED VOL: 0
; 0000 0807 
; 0000 0808             a[1] = a[0]+0x001;  //ster2
;PCODE: $000010EE VOL: 0
;PCODE: $000010EF VOL: 0
;PCODE: $000010F0 VOL: 0
;PCODE: $000010F1 VOL: 0
; 0000 0809             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $000010F2 VOL: 0
;PCODE: $000010F3 VOL: 0
;PCODE: $000010F4 VOL: 0
;PCODE: $000010F5 VOL: 0
; 0000 080A             a[6] = a[5]+0x001;  //okrag
;PCODE: $000010F6 VOL: 0
;PCODE: $000010F7 VOL: 0
;PCODE: $000010F8 VOL: 0
;PCODE: $000010F9 VOL: 0
;PCODE: $000010FA VOL: 0
; 0000 080B             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $000010FB VOL: 0
;PCODE: $000010FC VOL: 0
;PCODE: $000010FD VOL: 0
;PCODE: $000010FE VOL: 0
;PCODE: $000010FF VOL: 0
; 0000 080C 
; 0000 080D     break;
;PCODE: $00001100 VOL: 0
; 0000 080E 
; 0000 080F 
; 0000 0810       case 20:
;PCODE: $00001101 VOL: 0
;PCODE: $00001102 VOL: 0
;PCODE: $00001103 VOL: 0
; 0000 0811 
; 0000 0812             a[0] = 0x042;   //ster1
;PCODE: $00001104 VOL: 0
;PCODE: $00001105 VOL: 0
; 0000 0813             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $00001106 VOL: 0
;PCODE: $00001107 VOL: 0
;PCODE: $00001108 VOL: 0
;PCODE: $00001109 VOL: 0
; 0000 0814             a[4] = 0x1D;    //ster3 ABS krazek scierny
;PCODE: $0000110A VOL: 0
;PCODE: $0000110B VOL: 0
;PCODE: $0000110C VOL: 0
;PCODE: $0000110D VOL: 0
; 0000 0815             a[5] = 0x190;   //delta okrag
;PCODE: $0000110E VOL: 0
;PCODE: $0000110F VOL: 0
;PCODE: $00001110 VOL: 0
;PCODE: $00001111 VOL: 0
; 0000 0816             a[7] = 0x0F;    //ster3 INV krazek scierny
;PCODE: $00001112 VOL: 0
;PCODE: $00001113 VOL: 0
;PCODE: $00001114 VOL: 0
;PCODE: $00001115 VOL: 0
; 0000 0817             a[9] = 0;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $00001116 VOL: 0
;PCODE: $00001117 VOL: 0
;PCODE: $00001118 VOL: 0
;PCODE: $00001119 VOL: 0
; 0000 0818 
; 0000 0819             a[1] = a[0]+0x001;  //ster2
;PCODE: $0000111A VOL: 0
;PCODE: $0000111B VOL: 0
;PCODE: $0000111C VOL: 0
;PCODE: $0000111D VOL: 0
; 0000 081A             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $0000111E VOL: 0
;PCODE: $0000111F VOL: 0
;PCODE: $00001120 VOL: 0
;PCODE: $00001121 VOL: 0
; 0000 081B             a[6] = a[5]+0x001;  //okrag
;PCODE: $00001122 VOL: 0
;PCODE: $00001123 VOL: 0
;PCODE: $00001124 VOL: 0
;PCODE: $00001125 VOL: 0
;PCODE: $00001126 VOL: 0
; 0000 081C             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $00001127 VOL: 0
;PCODE: $00001128 VOL: 0
;PCODE: $00001129 VOL: 0
;PCODE: $0000112A VOL: 0
;PCODE: $0000112B VOL: 0
; 0000 081D 
; 0000 081E     break;
;PCODE: $0000112C VOL: 0
; 0000 081F 
; 0000 0820 
; 0000 0821       case 21:
;PCODE: $0000112D VOL: 0
;PCODE: $0000112E VOL: 0
;PCODE: $0000112F VOL: 0
; 0000 0822 
; 0000 0823             a[0] = 0x04E;   //ster1
;PCODE: $00001130 VOL: 0
;PCODE: $00001131 VOL: 0
; 0000 0824             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $00001132 VOL: 0
;PCODE: $00001133 VOL: 0
;PCODE: $00001134 VOL: 0
;PCODE: $00001135 VOL: 0
; 0000 0825             a[4] = 0x1B;    //ster3 ABS krazek scierny
;PCODE: $00001136 VOL: 0
;PCODE: $00001137 VOL: 0
;PCODE: $00001138 VOL: 0
;PCODE: $00001139 VOL: 0
; 0000 0826             a[5] = 0x196;   //delta okrag
;PCODE: $0000113A VOL: 0
;PCODE: $0000113B VOL: 0
;PCODE: $0000113C VOL: 0
;PCODE: $0000113D VOL: 0
; 0000 0827             a[7] = 0x11;    //ster3 INV krazek scierny
;PCODE: $0000113E VOL: 0
;PCODE: $0000113F VOL: 0
;PCODE: $00001140 VOL: 0
;PCODE: $00001141 VOL: 0
; 0000 0828             a[9] = 1;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $00001142 VOL: 0
;PCODE: $00001143 VOL: 0
;PCODE: $00001144 VOL: 0
;PCODE: $00001145 VOL: 0
; 0000 0829 
; 0000 082A             a[1] = a[0]+0x001;  //ster2
;PCODE: $00001146 VOL: 0
;PCODE: $00001147 VOL: 0
;PCODE: $00001148 VOL: 0
;PCODE: $00001149 VOL: 0
; 0000 082B             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $0000114A VOL: 0
;PCODE: $0000114B VOL: 0
;PCODE: $0000114C VOL: 0
;PCODE: $0000114D VOL: 0
; 0000 082C             a[6] = a[5]+0x001;  //okrag
;PCODE: $0000114E VOL: 0
;PCODE: $0000114F VOL: 0
;PCODE: $00001150 VOL: 0
;PCODE: $00001151 VOL: 0
;PCODE: $00001152 VOL: 0
; 0000 082D             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $00001153 VOL: 0
;PCODE: $00001154 VOL: 0
;PCODE: $00001155 VOL: 0
;PCODE: $00001156 VOL: 0
;PCODE: $00001157 VOL: 0
; 0000 082E 
; 0000 082F     break;
;PCODE: $00001158 VOL: 0
; 0000 0830 
; 0000 0831       case 22:
;PCODE: $00001159 VOL: 0
;PCODE: $0000115A VOL: 0
;PCODE: $0000115B VOL: 0
; 0000 0832 
; 0000 0833             a[0] = 0x0C2;   //ster1
;PCODE: $0000115C VOL: 0
;PCODE: $0000115D VOL: 0
; 0000 0834             a[3] = 0x10;    //ster4 INV druciak
;PCODE: $0000115E VOL: 0
;PCODE: $0000115F VOL: 0
;PCODE: $00001160 VOL: 0
;PCODE: $00001161 VOL: 0
; 0000 0835             a[4] = 0x16;    //ster3 ABS krazek scierny
;PCODE: $00001162 VOL: 0
;PCODE: $00001163 VOL: 0
;PCODE: $00001164 VOL: 0
;PCODE: $00001165 VOL: 0
; 0000 0836             a[5] = 0x190;   //delta okrag
;PCODE: $00001166 VOL: 0
;PCODE: $00001167 VOL: 0
;PCODE: $00001168 VOL: 0
;PCODE: $00001169 VOL: 0
; 0000 0837             a[7] = 0x10;    //ster3 INV krazek scierny
;PCODE: $0000116A VOL: 0
;PCODE: $0000116B VOL: 0
;PCODE: $0000116C VOL: 0
;PCODE: $0000116D VOL: 0
; 0000 0838             a[9] = 1;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $0000116E VOL: 0
;PCODE: $0000116F VOL: 0
;PCODE: $00001170 VOL: 0
;PCODE: $00001171 VOL: 0
; 0000 0839 
; 0000 083A             a[1] = a[0]+0x001;  //ster2
;PCODE: $00001172 VOL: 0
;PCODE: $00001173 VOL: 0
;PCODE: $00001174 VOL: 0
;PCODE: $00001175 VOL: 0
; 0000 083B             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $00001176 VOL: 0
;PCODE: $00001177 VOL: 0
;PCODE: $00001178 VOL: 0
;PCODE: $00001179 VOL: 0
; 0000 083C             a[6] = a[5]+0x001;  //okrag
;PCODE: $0000117A VOL: 0
;PCODE: $0000117B VOL: 0
;PCODE: $0000117C VOL: 0
;PCODE: $0000117D VOL: 0
;PCODE: $0000117E VOL: 0
; 0000 083D             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $0000117F VOL: 0
;PCODE: $00001180 VOL: 0
;PCODE: $00001181 VOL: 0
;PCODE: $00001182 VOL: 0
;PCODE: $00001183 VOL: 0
; 0000 083E 
; 0000 083F     break;
;PCODE: $00001184 VOL: 0
; 0000 0840 
; 0000 0841 
; 0000 0842       case 23:
;PCODE: $00001185 VOL: 0
;PCODE: $00001186 VOL: 0
;PCODE: $00001187 VOL: 0
; 0000 0843 
; 0000 0844             a[0] = 0x0CE;   //ster1
;PCODE: $00001188 VOL: 0
;PCODE: $00001189 VOL: 0
; 0000 0845             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $0000118A VOL: 0
;PCODE: $0000118B VOL: 0
;PCODE: $0000118C VOL: 0
;PCODE: $0000118D VOL: 0
; 0000 0846             a[4] = 0x1D;    //ster3 ABS krazek scierny
;PCODE: $0000118E VOL: 0
;PCODE: $0000118F VOL: 0
;PCODE: $00001190 VOL: 0
;PCODE: $00001191 VOL: 0
; 0000 0847             a[5] = 0x199;   //delta okrag
;PCODE: $00001192 VOL: 0
;PCODE: $00001193 VOL: 0
;PCODE: $00001194 VOL: 0
;PCODE: $00001195 VOL: 0
; 0000 0848             a[7] = 0x12;    //ster3 INV krazek scierny
;PCODE: $00001196 VOL: 0
;PCODE: $00001197 VOL: 0
;PCODE: $00001198 VOL: 0
;PCODE: $00001199 VOL: 0
; 0000 0849             a[9] = 1;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $0000119A VOL: 0
;PCODE: $0000119B VOL: 0
;PCODE: $0000119C VOL: 0
;PCODE: $0000119D VOL: 0
; 0000 084A 
; 0000 084B             a[1] = a[0]+0x001;  //ster2
;PCODE: $0000119E VOL: 0
;PCODE: $0000119F VOL: 0
;PCODE: $000011A0 VOL: 0
;PCODE: $000011A1 VOL: 0
; 0000 084C             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $000011A2 VOL: 0
;PCODE: $000011A3 VOL: 0
;PCODE: $000011A4 VOL: 0
;PCODE: $000011A5 VOL: 0
; 0000 084D             a[6] = a[5]+0x001;  //okrag
;PCODE: $000011A6 VOL: 0
;PCODE: $000011A7 VOL: 0
;PCODE: $000011A8 VOL: 0
;PCODE: $000011A9 VOL: 0
;PCODE: $000011AA VOL: 0
; 0000 084E             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $000011AB VOL: 0
;PCODE: $000011AC VOL: 0
;PCODE: $000011AD VOL: 0
;PCODE: $000011AE VOL: 0
;PCODE: $000011AF VOL: 0
; 0000 084F 
; 0000 0850     break;
;PCODE: $000011B0 VOL: 0
; 0000 0851 
; 0000 0852 
; 0000 0853       case 24:
;PCODE: $000011B1 VOL: 0
;PCODE: $000011B2 VOL: 0
;PCODE: $000011B3 VOL: 0
; 0000 0854 
; 0000 0855             a[0] = 0x040;   //ster1
;PCODE: $000011B4 VOL: 0
;PCODE: $000011B5 VOL: 0
; 0000 0856             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $000011B6 VOL: 0
;PCODE: $000011B7 VOL: 0
;PCODE: $000011B8 VOL: 0
;PCODE: $000011B9 VOL: 0
; 0000 0857             a[4] = 0x1D;    //ster3 ABS krazek scierny
;PCODE: $000011BA VOL: 0
;PCODE: $000011BB VOL: 0
;PCODE: $000011BC VOL: 0
;PCODE: $000011BD VOL: 0
; 0000 0858             a[5] = 0x190;   //delta okrag
;PCODE: $000011BE VOL: 0
;PCODE: $000011BF VOL: 0
;PCODE: $000011C0 VOL: 0
;PCODE: $000011C1 VOL: 0
; 0000 0859             a[7] = 0x0F;    //ster3 INV krazek scierny
;PCODE: $000011C2 VOL: 0
;PCODE: $000011C3 VOL: 0
;PCODE: $000011C4 VOL: 0
;PCODE: $000011C5 VOL: 0
; 0000 085A             a[9] = 1;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $000011C6 VOL: 0
;PCODE: $000011C7 VOL: 0
;PCODE: $000011C8 VOL: 0
;PCODE: $000011C9 VOL: 0
; 0000 085B 
; 0000 085C             a[1] = a[0]+0x001;  //ster2
;PCODE: $000011CA VOL: 0
;PCODE: $000011CB VOL: 0
;PCODE: $000011CC VOL: 0
;PCODE: $000011CD VOL: 0
; 0000 085D             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $000011CE VOL: 0
;PCODE: $000011CF VOL: 0
;PCODE: $000011D0 VOL: 0
;PCODE: $000011D1 VOL: 0
; 0000 085E             a[6] = a[5]+0x001;  //okrag
;PCODE: $000011D2 VOL: 0
;PCODE: $000011D3 VOL: 0
;PCODE: $000011D4 VOL: 0
;PCODE: $000011D5 VOL: 0
;PCODE: $000011D6 VOL: 0
; 0000 085F             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $000011D7 VOL: 0
;PCODE: $000011D8 VOL: 0
;PCODE: $000011D9 VOL: 0
;PCODE: $000011DA VOL: 0
;PCODE: $000011DB VOL: 0
; 0000 0860 
; 0000 0861     break;
;PCODE: $000011DC VOL: 0
; 0000 0862 
; 0000 0863       case 25:
;PCODE: $000011DD VOL: 0
;PCODE: $000011DE VOL: 0
;PCODE: $000011DF VOL: 0
; 0000 0864 
; 0000 0865             a[0] = 0x02E;   //ster1
;PCODE: $000011E0 VOL: 0
;PCODE: $000011E1 VOL: 0
; 0000 0866             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $000011E2 VOL: 0
;PCODE: $000011E3 VOL: 0
;PCODE: $000011E4 VOL: 0
;PCODE: $000011E5 VOL: 0
; 0000 0867             a[4] = 0x1F;    //ster3 ABS krazek scierny
;PCODE: $000011E6 VOL: 0
;PCODE: $000011E7 VOL: 0
;PCODE: $000011E8 VOL: 0
;PCODE: $000011E9 VOL: 0
; 0000 0868             a[5] = 0x199;   //delta okrag
;PCODE: $000011EA VOL: 0
;PCODE: $000011EB VOL: 0
;PCODE: $000011EC VOL: 0
;PCODE: $000011ED VOL: 0
; 0000 0869             a[7] = 0x12;    //ster3 INV krazek scierny
;PCODE: $000011EE VOL: 0
;PCODE: $000011EF VOL: 0
;PCODE: $000011F0 VOL: 0
;PCODE: $000011F1 VOL: 0
; 0000 086A             a[9] = 0;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $000011F2 VOL: 0
;PCODE: $000011F3 VOL: 0
;PCODE: $000011F4 VOL: 0
;PCODE: $000011F5 VOL: 0
; 0000 086B 
; 0000 086C             a[1] = a[0]+0x001;  //ster2
;PCODE: $000011F6 VOL: 0
;PCODE: $000011F7 VOL: 0
;PCODE: $000011F8 VOL: 0
;PCODE: $000011F9 VOL: 0
; 0000 086D             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $000011FA VOL: 0
;PCODE: $000011FB VOL: 0
;PCODE: $000011FC VOL: 0
;PCODE: $000011FD VOL: 0
; 0000 086E             a[6] = a[5]+0x001;  //okrag
;PCODE: $000011FE VOL: 0
;PCODE: $000011FF VOL: 0
;PCODE: $00001200 VOL: 0
;PCODE: $00001201 VOL: 0
;PCODE: $00001202 VOL: 0
; 0000 086F             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $00001203 VOL: 0
;PCODE: $00001204 VOL: 0
;PCODE: $00001205 VOL: 0
;PCODE: $00001206 VOL: 0
;PCODE: $00001207 VOL: 0
; 0000 0870 
; 0000 0871     break;
;PCODE: $00001208 VOL: 0
; 0000 0872 
; 0000 0873       case 26:
;PCODE: $00001209 VOL: 0
;PCODE: $0000120A VOL: 0
;PCODE: $0000120B VOL: 0
; 0000 0874 
; 0000 0875             a[0] = 0x0FA;   //ster1
;PCODE: $0000120C VOL: 0
;PCODE: $0000120D VOL: 0
; 0000 0876             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $0000120E VOL: 0
;PCODE: $0000120F VOL: 0
;PCODE: $00001210 VOL: 0
;PCODE: $00001211 VOL: 0
; 0000 0877             a[4] = 0x18;    //ster3 ABS krazek scierny
;PCODE: $00001212 VOL: 0
;PCODE: $00001213 VOL: 0
;PCODE: $00001214 VOL: 0
;PCODE: $00001215 VOL: 0
; 0000 0878             a[5] = 0x190;   //delta okrag
;PCODE: $00001216 VOL: 0
;PCODE: $00001217 VOL: 0
;PCODE: $00001218 VOL: 0
;PCODE: $00001219 VOL: 0
; 0000 0879             a[7] = 0x11;    //ster3 INV krazek scierny
;PCODE: $0000121A VOL: 0
;PCODE: $0000121B VOL: 0
;PCODE: $0000121C VOL: 0
;PCODE: $0000121D VOL: 0
; 0000 087A             a[9] = 0;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $0000121E VOL: 0
;PCODE: $0000121F VOL: 0
;PCODE: $00001220 VOL: 0
;PCODE: $00001221 VOL: 0
; 0000 087B 
; 0000 087C             a[1] = a[0]+0x001;  //ster2
;PCODE: $00001222 VOL: 0
;PCODE: $00001223 VOL: 0
;PCODE: $00001224 VOL: 0
;PCODE: $00001225 VOL: 0
; 0000 087D             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $00001226 VOL: 0
;PCODE: $00001227 VOL: 0
;PCODE: $00001228 VOL: 0
;PCODE: $00001229 VOL: 0
; 0000 087E             a[6] = a[5]+0x001;  //okrag
;PCODE: $0000122A VOL: 0
;PCODE: $0000122B VOL: 0
;PCODE: $0000122C VOL: 0
;PCODE: $0000122D VOL: 0
;PCODE: $0000122E VOL: 0
; 0000 087F             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $0000122F VOL: 0
;PCODE: $00001230 VOL: 0
;PCODE: $00001231 VOL: 0
;PCODE: $00001232 VOL: 0
;PCODE: $00001233 VOL: 0
; 0000 0880 
; 0000 0881     break;
;PCODE: $00001234 VOL: 0
; 0000 0882 
; 0000 0883 
; 0000 0884       case 27:
;PCODE: $00001235 VOL: 0
;PCODE: $00001236 VOL: 0
;PCODE: $00001237 VOL: 0
; 0000 0885 
; 0000 0886             a[0] = 0x06C;   //ster1
;PCODE: $00001238 VOL: 0
;PCODE: $00001239 VOL: 0
; 0000 0887             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $0000123A VOL: 0
;PCODE: $0000123B VOL: 0
;PCODE: $0000123C VOL: 0
;PCODE: $0000123D VOL: 0
; 0000 0888             a[4] = 0x20;    //ster3 ABS krazek scierny
;PCODE: $0000123E VOL: 0
;PCODE: $0000123F VOL: 0
;PCODE: $00001240 VOL: 0
;PCODE: $00001241 VOL: 0
; 0000 0889             a[5] = 0x199;   //delta okrag
;PCODE: $00001242 VOL: 0
;PCODE: $00001243 VOL: 0
;PCODE: $00001244 VOL: 0
;PCODE: $00001245 VOL: 0
; 0000 088A             a[7] = 0x12;    //ster3 INV krazek scierny
;PCODE: $00001246 VOL: 0
;PCODE: $00001247 VOL: 0
;PCODE: $00001248 VOL: 0
;PCODE: $00001249 VOL: 0
; 0000 088B             a[9] = 0;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $0000124A VOL: 0
;PCODE: $0000124B VOL: 0
;PCODE: $0000124C VOL: 0
;PCODE: $0000124D VOL: 0
; 0000 088C 
; 0000 088D             a[1] = a[0]+0x001;  //ster2
;PCODE: $0000124E VOL: 0
;PCODE: $0000124F VOL: 0
;PCODE: $00001250 VOL: 0
;PCODE: $00001251 VOL: 0
; 0000 088E             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $00001252 VOL: 0
;PCODE: $00001253 VOL: 0
;PCODE: $00001254 VOL: 0
;PCODE: $00001255 VOL: 0
; 0000 088F             a[6] = a[5]+0x001;  //okrag
;PCODE: $00001256 VOL: 0
;PCODE: $00001257 VOL: 0
;PCODE: $00001258 VOL: 0
;PCODE: $00001259 VOL: 0
;PCODE: $0000125A VOL: 0
; 0000 0890             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $0000125B VOL: 0
;PCODE: $0000125C VOL: 0
;PCODE: $0000125D VOL: 0
;PCODE: $0000125E VOL: 0
;PCODE: $0000125F VOL: 0
; 0000 0891 
; 0000 0892     break;
;PCODE: $00001260 VOL: 0
; 0000 0893 
; 0000 0894 
; 0000 0895       case 28:
;PCODE: $00001261 VOL: 0
;PCODE: $00001262 VOL: 0
;PCODE: $00001263 VOL: 0
; 0000 0896 
; 0000 0897             a[0] = 0x0A4;   //ster1
;PCODE: $00001264 VOL: 0
;PCODE: $00001265 VOL: 0
; 0000 0898             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $00001266 VOL: 0
;PCODE: $00001267 VOL: 0
;PCODE: $00001268 VOL: 0
;PCODE: $00001269 VOL: 0
; 0000 0899             a[4] = 0x21;    //ster3 ABS krazek scierny
;PCODE: $0000126A VOL: 0
;PCODE: $0000126B VOL: 0
;PCODE: $0000126C VOL: 0
;PCODE: $0000126D VOL: 0
; 0000 089A             a[5] = 0x199;   //delta okrag
;PCODE: $0000126E VOL: 0
;PCODE: $0000126F VOL: 0
;PCODE: $00001270 VOL: 0
;PCODE: $00001271 VOL: 0
; 0000 089B             a[7] = 0x12;    //ster3 INV krazek scierny
;PCODE: $00001272 VOL: 0
;PCODE: $00001273 VOL: 0
;PCODE: $00001274 VOL: 0
;PCODE: $00001275 VOL: 0
; 0000 089C             a[9] = 1;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $00001276 VOL: 0
;PCODE: $00001277 VOL: 0
;PCODE: $00001278 VOL: 0
;PCODE: $00001279 VOL: 0
; 0000 089D 
; 0000 089E             a[1] = a[0]+0x001;  //ster2
;PCODE: $0000127A VOL: 0
;PCODE: $0000127B VOL: 0
;PCODE: $0000127C VOL: 0
;PCODE: $0000127D VOL: 0
; 0000 089F             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $0000127E VOL: 0
;PCODE: $0000127F VOL: 0
;PCODE: $00001280 VOL: 0
;PCODE: $00001281 VOL: 0
; 0000 08A0             a[6] = a[5]+0x001;  //okrag
;PCODE: $00001282 VOL: 0
;PCODE: $00001283 VOL: 0
;PCODE: $00001284 VOL: 0
;PCODE: $00001285 VOL: 0
;PCODE: $00001286 VOL: 0
; 0000 08A1             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $00001287 VOL: 0
;PCODE: $00001288 VOL: 0
;PCODE: $00001289 VOL: 0
;PCODE: $0000128A VOL: 0
;PCODE: $0000128B VOL: 0
; 0000 08A2 
; 0000 08A3     break;
;PCODE: $0000128C VOL: 0
; 0000 08A4 
; 0000 08A5       case 29:
;PCODE: $0000128D VOL: 0
;PCODE: $0000128E VOL: 0
;PCODE: $0000128F VOL: 0
; 0000 08A6 
; 0000 08A7             a[0] = 0x02A;   //ster1
;PCODE: $00001290 VOL: 0
;PCODE: $00001291 VOL: 0
; 0000 08A8             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $00001292 VOL: 0
;PCODE: $00001293 VOL: 0
;PCODE: $00001294 VOL: 0
;PCODE: $00001295 VOL: 0
; 0000 08A9             a[4] = 0x1F;    //ster3 ABS krazek scierny
;PCODE: $00001296 VOL: 0
;PCODE: $00001297 VOL: 0
;PCODE: $00001298 VOL: 0
;PCODE: $00001299 VOL: 0
; 0000 08AA             a[5] = 0x199;   //delta okrag
;PCODE: $0000129A VOL: 0
;PCODE: $0000129B VOL: 0
;PCODE: $0000129C VOL: 0
;PCODE: $0000129D VOL: 0
; 0000 08AB             a[7] = 0x12;    //ster3 INV krazek scierny
;PCODE: $0000129E VOL: 0
;PCODE: $0000129F VOL: 0
;PCODE: $000012A0 VOL: 0
;PCODE: $000012A1 VOL: 0
; 0000 08AC             a[9] = 1;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $000012A2 VOL: 0
;PCODE: $000012A3 VOL: 0
;PCODE: $000012A4 VOL: 0
;PCODE: $000012A5 VOL: 0
; 0000 08AD 
; 0000 08AE             a[1] = a[0]+0x001;  //ster2
;PCODE: $000012A6 VOL: 0
;PCODE: $000012A7 VOL: 0
;PCODE: $000012A8 VOL: 0
;PCODE: $000012A9 VOL: 0
; 0000 08AF             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $000012AA VOL: 0
;PCODE: $000012AB VOL: 0
;PCODE: $000012AC VOL: 0
;PCODE: $000012AD VOL: 0
; 0000 08B0             a[6] = a[5]+0x001;  //okrag
;PCODE: $000012AE VOL: 0
;PCODE: $000012AF VOL: 0
;PCODE: $000012B0 VOL: 0
;PCODE: $000012B1 VOL: 0
;PCODE: $000012B2 VOL: 0
; 0000 08B1             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $000012B3 VOL: 0
;PCODE: $000012B4 VOL: 0
;PCODE: $000012B5 VOL: 0
;PCODE: $000012B6 VOL: 0
;PCODE: $000012B7 VOL: 0
; 0000 08B2 
; 0000 08B3     break;
;PCODE: $000012B8 VOL: 0
; 0000 08B4 
; 0000 08B5       case 30:
;PCODE: $000012B9 VOL: 0
;PCODE: $000012BA VOL: 0
;PCODE: $000012BB VOL: 0
; 0000 08B6 
; 0000 08B7             a[0] = 0x094;   //ster1
;PCODE: $000012BC VOL: 0
;PCODE: $000012BD VOL: 0
; 0000 08B8             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $000012BE VOL: 0
;PCODE: $000012BF VOL: 0
;PCODE: $000012C0 VOL: 0
;PCODE: $000012C1 VOL: 0
; 0000 08B9             a[4] = 0x18;    //ster3 ABS krazek scierny
;PCODE: $000012C2 VOL: 0
;PCODE: $000012C3 VOL: 0
;PCODE: $000012C4 VOL: 0
;PCODE: $000012C5 VOL: 0
; 0000 08BA             a[5] = 0x190;   //delta okrag
;PCODE: $000012C6 VOL: 0
;PCODE: $000012C7 VOL: 0
;PCODE: $000012C8 VOL: 0
;PCODE: $000012C9 VOL: 0
; 0000 08BB             a[7] = 0x11;    //ster3 INV krazek scierny
;PCODE: $000012CA VOL: 0
;PCODE: $000012CB VOL: 0
;PCODE: $000012CC VOL: 0
;PCODE: $000012CD VOL: 0
; 0000 08BC             a[9] = 1;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $000012CE VOL: 0
;PCODE: $000012CF VOL: 0
;PCODE: $000012D0 VOL: 0
;PCODE: $000012D1 VOL: 0
; 0000 08BD 
; 0000 08BE             a[1] = a[0]+0x001;  //ster2
;PCODE: $000012D2 VOL: 0
;PCODE: $000012D3 VOL: 0
;PCODE: $000012D4 VOL: 0
;PCODE: $000012D5 VOL: 0
; 0000 08BF             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $000012D6 VOL: 0
;PCODE: $000012D7 VOL: 0
;PCODE: $000012D8 VOL: 0
;PCODE: $000012D9 VOL: 0
; 0000 08C0             a[6] = a[5]+0x001;  //okrag
;PCODE: $000012DA VOL: 0
;PCODE: $000012DB VOL: 0
;PCODE: $000012DC VOL: 0
;PCODE: $000012DD VOL: 0
;PCODE: $000012DE VOL: 0
; 0000 08C1             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $000012DF VOL: 0
;PCODE: $000012E0 VOL: 0
;PCODE: $000012E1 VOL: 0
;PCODE: $000012E2 VOL: 0
;PCODE: $000012E3 VOL: 0
; 0000 08C2 
; 0000 08C3     break;
;PCODE: $000012E4 VOL: 0
; 0000 08C4 
; 0000 08C5       case 31:
;PCODE: $000012E5 VOL: 0
;PCODE: $000012E6 VOL: 0
;PCODE: $000012E7 VOL: 0
; 0000 08C6 
; 0000 08C7             a[0] = 0x06E;   //ster1
;PCODE: $000012E8 VOL: 0
;PCODE: $000012E9 VOL: 0
; 0000 08C8             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $000012EA VOL: 0
;PCODE: $000012EB VOL: 0
;PCODE: $000012EC VOL: 0
;PCODE: $000012ED VOL: 0
; 0000 08C9             a[4] = 0x20;    //ster3 ABS krazek scierny
;PCODE: $000012EE VOL: 0
;PCODE: $000012EF VOL: 0
;PCODE: $000012F0 VOL: 0
;PCODE: $000012F1 VOL: 0
; 0000 08CA             a[5] = 0x199;   //delta okrag
;PCODE: $000012F2 VOL: 0
;PCODE: $000012F3 VOL: 0
;PCODE: $000012F4 VOL: 0
;PCODE: $000012F5 VOL: 0
; 0000 08CB             a[7] = 0x12;  //ster3 INV krazek scierny
;PCODE: $000012F6 VOL: 0
;PCODE: $000012F7 VOL: 0
;PCODE: $000012F8 VOL: 0
;PCODE: $000012F9 VOL: 0
; 0000 08CC             a[9] = 1;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $000012FA VOL: 0
;PCODE: $000012FB VOL: 0
;PCODE: $000012FC VOL: 0
;PCODE: $000012FD VOL: 0
; 0000 08CD 
; 0000 08CE             a[1] = a[0]+0x001;  //ster2
;PCODE: $000012FE VOL: 0
;PCODE: $000012FF VOL: 0
;PCODE: $00001300 VOL: 0
;PCODE: $00001301 VOL: 0
; 0000 08CF             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $00001302 VOL: 0
;PCODE: $00001303 VOL: 0
;PCODE: $00001304 VOL: 0
;PCODE: $00001305 VOL: 0
; 0000 08D0             a[6] = a[5]+0x001;  //okrag
;PCODE: $00001306 VOL: 0
;PCODE: $00001307 VOL: 0
;PCODE: $00001308 VOL: 0
;PCODE: $00001309 VOL: 0
;PCODE: $0000130A VOL: 0
; 0000 08D1             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $0000130B VOL: 0
;PCODE: $0000130C VOL: 0
;PCODE: $0000130D VOL: 0
;PCODE: $0000130E VOL: 0
;PCODE: $0000130F VOL: 0
; 0000 08D2 
; 0000 08D3     break;
;PCODE: $00001310 VOL: 0
; 0000 08D4 
; 0000 08D5 
; 0000 08D6        case 32:
;PCODE: $00001311 VOL: 0
;PCODE: $00001312 VOL: 0
;PCODE: $00001313 VOL: 0
; 0000 08D7 
; 0000 08D8             a[0] = 0x086;   //ster1
;PCODE: $00001314 VOL: 0
;PCODE: $00001315 VOL: 0
; 0000 08D9             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $00001316 VOL: 0
;PCODE: $00001317 VOL: 0
;PCODE: $00001318 VOL: 0
;PCODE: $00001319 VOL: 0
; 0000 08DA             a[4] = 0x21;    //ster3 ABS krazek scierny
;PCODE: $0000131A VOL: 0
;PCODE: $0000131B VOL: 0
;PCODE: $0000131C VOL: 0
;PCODE: $0000131D VOL: 0
; 0000 08DB             a[5] = 0x199;   //delta okrag
;PCODE: $0000131E VOL: 0
;PCODE: $0000131F VOL: 0
;PCODE: $00001320 VOL: 0
;PCODE: $00001321 VOL: 0
; 0000 08DC             a[7] = 0x12;    //ster3 INV krazek scierny
;PCODE: $00001322 VOL: 0
;PCODE: $00001323 VOL: 0
;PCODE: $00001324 VOL: 0
;PCODE: $00001325 VOL: 0
; 0000 08DD             a[9] = 0;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $00001326 VOL: 0
;PCODE: $00001327 VOL: 0
;PCODE: $00001328 VOL: 0
;PCODE: $00001329 VOL: 0
; 0000 08DE 
; 0000 08DF             a[1] = a[0]+0x001;  //ster2
;PCODE: $0000132A VOL: 0
;PCODE: $0000132B VOL: 0
;PCODE: $0000132C VOL: 0
;PCODE: $0000132D VOL: 0
; 0000 08E0             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $0000132E VOL: 0
;PCODE: $0000132F VOL: 0
;PCODE: $00001330 VOL: 0
;PCODE: $00001331 VOL: 0
; 0000 08E1             a[6] = a[5]+0x001;  //okrag
;PCODE: $00001332 VOL: 0
;PCODE: $00001333 VOL: 0
;PCODE: $00001334 VOL: 0
;PCODE: $00001335 VOL: 0
;PCODE: $00001336 VOL: 0
; 0000 08E2             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $00001337 VOL: 0
;PCODE: $00001338 VOL: 0
;PCODE: $00001339 VOL: 0
;PCODE: $0000133A VOL: 0
;PCODE: $0000133B VOL: 0
; 0000 08E3 
; 0000 08E4     break;
;PCODE: $0000133C VOL: 0
; 0000 08E5 
; 0000 08E6        case 33:
;PCODE: $0000133D VOL: 0
;PCODE: $0000133E VOL: 0
;PCODE: $0000133F VOL: 0
; 0000 08E7 
; 0000 08E8             a[0] = 0x08E;   //ster1
;PCODE: $00001340 VOL: 0
;PCODE: $00001341 VOL: 0
; 0000 08E9             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $00001342 VOL: 0
;PCODE: $00001343 VOL: 0
;PCODE: $00001344 VOL: 0
;PCODE: $00001345 VOL: 0
; 0000 08EA             a[4] = 0x20;    //ster3 ABS krazek scierny
;PCODE: $00001346 VOL: 0
;PCODE: $00001347 VOL: 0
;PCODE: $00001348 VOL: 0
;PCODE: $00001349 VOL: 0
; 0000 08EB             a[5] = 0x19C;   //delta okrag
;PCODE: $0000134A VOL: 0
;PCODE: $0000134B VOL: 0
;PCODE: $0000134C VOL: 0
;PCODE: $0000134D VOL: 0
; 0000 08EC             a[7] = 0x12;    //ster3 INV krazek scierny
;PCODE: $0000134E VOL: 0
;PCODE: $0000134F VOL: 0
;PCODE: $00001350 VOL: 0
;PCODE: $00001351 VOL: 0
; 0000 08ED             a[9] = 1;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $00001352 VOL: 0
;PCODE: $00001353 VOL: 0
;PCODE: $00001354 VOL: 0
;PCODE: $00001355 VOL: 0
; 0000 08EE 
; 0000 08EF             a[1] = a[0]+0x001;  //ster2
;PCODE: $00001356 VOL: 0
;PCODE: $00001357 VOL: 0
;PCODE: $00001358 VOL: 0
;PCODE: $00001359 VOL: 0
; 0000 08F0             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $0000135A VOL: 0
;PCODE: $0000135B VOL: 0
;PCODE: $0000135C VOL: 0
;PCODE: $0000135D VOL: 0
; 0000 08F1             a[6] = a[5]+0x001;  //okrag
;PCODE: $0000135E VOL: 0
;PCODE: $0000135F VOL: 0
;PCODE: $00001360 VOL: 0
;PCODE: $00001361 VOL: 0
;PCODE: $00001362 VOL: 0
; 0000 08F2             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $00001363 VOL: 0
;PCODE: $00001364 VOL: 0
;PCODE: $00001365 VOL: 0
;PCODE: $00001366 VOL: 0
;PCODE: $00001367 VOL: 0
; 0000 08F3 
; 0000 08F4     break;
;PCODE: $00001368 VOL: 0
; 0000 08F5 
; 0000 08F6 
; 0000 08F7     case 34: //86-1349
;PCODE: $00001369 VOL: 0
;PCODE: $0000136A VOL: 0
;PCODE: $0000136B VOL: 0
; 0000 08F8 
; 0000 08F9             a[0] = 0x05A;   //ster1
;PCODE: $0000136C VOL: 0
;PCODE: $0000136D VOL: 0
; 0000 08FA             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $0000136E VOL: 0
;PCODE: $0000136F VOL: 0
;PCODE: $00001370 VOL: 0
;PCODE: $00001371 VOL: 0
; 0000 08FB             a[4] = 0x21;    //ster3 ABS krazek scierny
;PCODE: $00001372 VOL: 0
;PCODE: $00001373 VOL: 0
;PCODE: $00001374 VOL: 0
;PCODE: $00001375 VOL: 0
; 0000 08FC             a[5] = 0x196;   //delta okrag
;PCODE: $00001376 VOL: 0
;PCODE: $00001377 VOL: 0
;PCODE: $00001378 VOL: 0
;PCODE: $00001379 VOL: 0
; 0000 08FD             a[7] = 0x12;    //ster3 INV krazek scierny
;PCODE: $0000137A VOL: 0
;PCODE: $0000137B VOL: 0
;PCODE: $0000137C VOL: 0
;PCODE: $0000137D VOL: 0
; 0000 08FE             a[9] = 0;       //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $0000137E VOL: 0
;PCODE: $0000137F VOL: 0
;PCODE: $00001380 VOL: 0
;PCODE: $00001381 VOL: 0
; 0000 08FF 
; 0000 0900             a[1] = a[0]+0x001;  //ster2
;PCODE: $00001382 VOL: 0
;PCODE: $00001383 VOL: 0
;PCODE: $00001384 VOL: 0
;PCODE: $00001385 VOL: 0
; 0000 0901             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $00001386 VOL: 0
;PCODE: $00001387 VOL: 0
;PCODE: $00001388 VOL: 0
;PCODE: $00001389 VOL: 0
; 0000 0902             a[6] = a[5]+0x001;  //okrag
;PCODE: $0000138A VOL: 0
;PCODE: $0000138B VOL: 0
;PCODE: $0000138C VOL: 0
;PCODE: $0000138D VOL: 0
;PCODE: $0000138E VOL: 0
; 0000 0903             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $0000138F VOL: 0
;PCODE: $00001390 VOL: 0
;PCODE: $00001391 VOL: 0
;PCODE: $00001392 VOL: 0
;PCODE: $00001393 VOL: 0
; 0000 0904 
; 0000 0905     break;
;PCODE: $00001394 VOL: 0
; 0000 0906 
; 0000 0907 
; 0000 0908     case 35:
;PCODE: $00001395 VOL: 0
;PCODE: $00001396 VOL: 0
;PCODE: $00001397 VOL: 0
; 0000 0909 
; 0000 090A             a[0] = 0x0DA;   //ster1
;PCODE: $00001398 VOL: 0
;PCODE: $00001399 VOL: 0
; 0000 090B             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $0000139A VOL: 0
;PCODE: $0000139B VOL: 0
;PCODE: $0000139C VOL: 0
;PCODE: $0000139D VOL: 0
; 0000 090C             a[4] = 0x1E;    //ster3 ABS krazek scierny
;PCODE: $0000139E VOL: 0
;PCODE: $0000139F VOL: 0
;PCODE: $000013A0 VOL: 0
;PCODE: $000013A1 VOL: 0
; 0000 090D             a[5] = 0x190;   //delta okrag
;PCODE: $000013A2 VOL: 0
;PCODE: $000013A3 VOL: 0
;PCODE: $000013A4 VOL: 0
;PCODE: $000013A5 VOL: 0
; 0000 090E             a[7] = 0x0F;    //ster3 INV krazek scierny
;PCODE: $000013A6 VOL: 0
;PCODE: $000013A7 VOL: 0
;PCODE: $000013A8 VOL: 0
;PCODE: $000013A9 VOL: 0
; 0000 090F             a[9] = 0;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $000013AA VOL: 0
;PCODE: $000013AB VOL: 0
;PCODE: $000013AC VOL: 0
;PCODE: $000013AD VOL: 0
; 0000 0910 
; 0000 0911             a[1] = a[0]+0x001;  //ster2
;PCODE: $000013AE VOL: 0
;PCODE: $000013AF VOL: 0
;PCODE: $000013B0 VOL: 0
;PCODE: $000013B1 VOL: 0
; 0000 0912             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $000013B2 VOL: 0
;PCODE: $000013B3 VOL: 0
;PCODE: $000013B4 VOL: 0
;PCODE: $000013B5 VOL: 0
; 0000 0913             a[6] = a[5]+0x001;  //okrag
;PCODE: $000013B6 VOL: 0
;PCODE: $000013B7 VOL: 0
;PCODE: $000013B8 VOL: 0
;PCODE: $000013B9 VOL: 0
;PCODE: $000013BA VOL: 0
; 0000 0914             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $000013BB VOL: 0
;PCODE: $000013BC VOL: 0
;PCODE: $000013BD VOL: 0
;PCODE: $000013BE VOL: 0
;PCODE: $000013BF VOL: 0
; 0000 0915 
; 0000 0916     break;
;PCODE: $000013C0 VOL: 0
; 0000 0917 
; 0000 0918          case 36:
;PCODE: $000013C1 VOL: 0
;PCODE: $000013C2 VOL: 0
;PCODE: $000013C3 VOL: 0
; 0000 0919 
; 0000 091A             a[0] = 0x0A2;   //ster1
;PCODE: $000013C4 VOL: 0
;PCODE: $000013C5 VOL: 0
; 0000 091B             a[3] = 0x12;    //ster4 INV druciak
;PCODE: $000013C6 VOL: 0
;PCODE: $000013C7 VOL: 0
;PCODE: $000013C8 VOL: 0
;PCODE: $000013C9 VOL: 0
; 0000 091C             a[4] = 0x22;    //ster3 ABS krazek scierny
;PCODE: $000013CA VOL: 0
;PCODE: $000013CB VOL: 0
;PCODE: $000013CC VOL: 0
;PCODE: $000013CD VOL: 0
; 0000 091D             a[5] = 0x196;   //delta okrag
;PCODE: $000013CE VOL: 0
;PCODE: $000013CF VOL: 0
;PCODE: $000013D0 VOL: 0
;PCODE: $000013D1 VOL: 0
; 0000 091E             a[7] = 0x10;    //ster3 INV krazek scierny
;PCODE: $000013D2 VOL: 0
;PCODE: $000013D3 VOL: 0
;PCODE: $000013D4 VOL: 0
;PCODE: $000013D5 VOL: 0
; 0000 091F             a[9] = 0;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $000013D6 VOL: 0
;PCODE: $000013D7 VOL: 0
;PCODE: $000013D8 VOL: 0
;PCODE: $000013D9 VOL: 0
; 0000 0920 
; 0000 0921             a[1] = a[0]+0x001;  //ster2
;PCODE: $000013DA VOL: 0
;PCODE: $000013DB VOL: 0
;PCODE: $000013DC VOL: 0
;PCODE: $000013DD VOL: 0
; 0000 0922             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $000013DE VOL: 0
;PCODE: $000013DF VOL: 0
;PCODE: $000013E0 VOL: 0
;PCODE: $000013E1 VOL: 0
; 0000 0923             a[6] = a[5]+0x001;  //okrag
;PCODE: $000013E2 VOL: 0
;PCODE: $000013E3 VOL: 0
;PCODE: $000013E4 VOL: 0
;PCODE: $000013E5 VOL: 0
;PCODE: $000013E6 VOL: 0
; 0000 0924             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $000013E7 VOL: 0
;PCODE: $000013E8 VOL: 0
;PCODE: $000013E9 VOL: 0
;PCODE: $000013EA VOL: 0
;PCODE: $000013EB VOL: 0
; 0000 0925 
; 0000 0926     break;
;PCODE: $000013EC VOL: 0
; 0000 0927 
; 0000 0928          case 37:
;PCODE: $000013ED VOL: 0
;PCODE: $000013EE VOL: 0
;PCODE: $000013EF VOL: 0
; 0000 0929 
; 0000 092A             a[0] = 0x104;   //ster1
;PCODE: $000013F0 VOL: 0
;PCODE: $000013F1 VOL: 0
; 0000 092B             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $000013F2 VOL: 0
;PCODE: $000013F3 VOL: 0
;PCODE: $000013F4 VOL: 0
;PCODE: $000013F5 VOL: 0
; 0000 092C             a[4] = 0x21;    //ster3 ABS krazek scierny
;PCODE: $000013F6 VOL: 0
;PCODE: $000013F7 VOL: 0
;PCODE: $000013F8 VOL: 0
;PCODE: $000013F9 VOL: 0
; 0000 092D             a[5] = 0x19C;   //delta okrag
;PCODE: $000013FA VOL: 0
;PCODE: $000013FB VOL: 0
;PCODE: $000013FC VOL: 0
;PCODE: $000013FD VOL: 0
; 0000 092E             a[7] = 0x12;    //ster3 INV krazek scierny
;PCODE: $000013FE VOL: 0
;PCODE: $000013FF VOL: 0
;PCODE: $00001400 VOL: 0
;PCODE: $00001401 VOL: 0
; 0000 092F             a[9] = 0;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $00001402 VOL: 0
;PCODE: $00001403 VOL: 0
;PCODE: $00001404 VOL: 0
;PCODE: $00001405 VOL: 0
; 0000 0930 
; 0000 0931             a[1] = a[0]+0x001;  //ster2
;PCODE: $00001406 VOL: 0
;PCODE: $00001407 VOL: 0
;PCODE: $00001408 VOL: 0
;PCODE: $00001409 VOL: 0
; 0000 0932             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $0000140A VOL: 0
;PCODE: $0000140B VOL: 0
;PCODE: $0000140C VOL: 0
;PCODE: $0000140D VOL: 0
; 0000 0933             a[6] = a[5]+0x001;  //okrag
;PCODE: $0000140E VOL: 0
;PCODE: $0000140F VOL: 0
;PCODE: $00001410 VOL: 0
;PCODE: $00001411 VOL: 0
;PCODE: $00001412 VOL: 0
; 0000 0934             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $00001413 VOL: 0
;PCODE: $00001414 VOL: 0
;PCODE: $00001415 VOL: 0
;PCODE: $00001416 VOL: 0
;PCODE: $00001417 VOL: 0
; 0000 0935 
; 0000 0936     break;
;PCODE: $00001418 VOL: 0
; 0000 0937 
; 0000 0938          case 38:
;PCODE: $00001419 VOL: 0
;PCODE: $0000141A VOL: 0
;PCODE: $0000141B VOL: 0
; 0000 0939 
; 0000 093A             a[0] = 0x036;   //ster1
;PCODE: $0000141C VOL: 0
;PCODE: $0000141D VOL: 0
; 0000 093B             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $0000141E VOL: 0
;PCODE: $0000141F VOL: 0
;PCODE: $00001420 VOL: 0
;PCODE: $00001421 VOL: 0
; 0000 093C             a[4] = 0x21;    //ster3 ABS krazek scierny
;PCODE: $00001422 VOL: 0
;PCODE: $00001423 VOL: 0
;PCODE: $00001424 VOL: 0
;PCODE: $00001425 VOL: 0
; 0000 093D             a[5] = 0x196;   //delta okrag
;PCODE: $00001426 VOL: 0
;PCODE: $00001427 VOL: 0
;PCODE: $00001428 VOL: 0
;PCODE: $00001429 VOL: 0
; 0000 093E             a[7] = 0x12;    //ster3 INV krazek scierny
;PCODE: $0000142A VOL: 0
;PCODE: $0000142B VOL: 0
;PCODE: $0000142C VOL: 0
;PCODE: $0000142D VOL: 0
; 0000 093F             a[9] = 1;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $0000142E VOL: 0
;PCODE: $0000142F VOL: 0
;PCODE: $00001430 VOL: 0
;PCODE: $00001431 VOL: 0
; 0000 0940 
; 0000 0941             a[1] = a[0]+0x001;  //ster2
;PCODE: $00001432 VOL: 0
;PCODE: $00001433 VOL: 0
;PCODE: $00001434 VOL: 0
;PCODE: $00001435 VOL: 0
; 0000 0942             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $00001436 VOL: 0
;PCODE: $00001437 VOL: 0
;PCODE: $00001438 VOL: 0
;PCODE: $00001439 VOL: 0
; 0000 0943             a[6] = a[5]+0x001;  //okrag
;PCODE: $0000143A VOL: 0
;PCODE: $0000143B VOL: 0
;PCODE: $0000143C VOL: 0
;PCODE: $0000143D VOL: 0
;PCODE: $0000143E VOL: 0
; 0000 0944             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $0000143F VOL: 0
;PCODE: $00001440 VOL: 0
;PCODE: $00001441 VOL: 0
;PCODE: $00001442 VOL: 0
;PCODE: $00001443 VOL: 0
; 0000 0945 
; 0000 0946     break;
;PCODE: $00001444 VOL: 0
; 0000 0947 
; 0000 0948 
; 0000 0949          case 39:
;PCODE: $00001445 VOL: 0
;PCODE: $00001446 VOL: 0
;PCODE: $00001447 VOL: 0
; 0000 094A 
; 0000 094B             a[0] = 0x118;   //ster1
;PCODE: $00001448 VOL: 0
;PCODE: $00001449 VOL: 0
; 0000 094C             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $0000144A VOL: 0
;PCODE: $0000144B VOL: 0
;PCODE: $0000144C VOL: 0
;PCODE: $0000144D VOL: 0
; 0000 094D             a[4] = 0x1E;    //ster3 ABS krazek scierny
;PCODE: $0000144E VOL: 0
;PCODE: $0000144F VOL: 0
;PCODE: $00001450 VOL: 0
;PCODE: $00001451 VOL: 0
; 0000 094E             a[5] = 0x190;   //delta okrag
;PCODE: $00001452 VOL: 0
;PCODE: $00001453 VOL: 0
;PCODE: $00001454 VOL: 0
;PCODE: $00001455 VOL: 0
; 0000 094F             a[7] = 0x0F;    //ster3 INV krazek scierny
;PCODE: $00001456 VOL: 0
;PCODE: $00001457 VOL: 0
;PCODE: $00001458 VOL: 0
;PCODE: $00001459 VOL: 0
; 0000 0950             a[9] = 1;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $0000145A VOL: 0
;PCODE: $0000145B VOL: 0
;PCODE: $0000145C VOL: 0
;PCODE: $0000145D VOL: 0
; 0000 0951 
; 0000 0952             a[1] = a[0]+0x001;  //ster2
;PCODE: $0000145E VOL: 0
;PCODE: $0000145F VOL: 0
;PCODE: $00001460 VOL: 0
;PCODE: $00001461 VOL: 0
; 0000 0953             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $00001462 VOL: 0
;PCODE: $00001463 VOL: 0
;PCODE: $00001464 VOL: 0
;PCODE: $00001465 VOL: 0
; 0000 0954             a[6] = a[5]+0x001;  //okrag
;PCODE: $00001466 VOL: 0
;PCODE: $00001467 VOL: 0
;PCODE: $00001468 VOL: 0
;PCODE: $00001469 VOL: 0
;PCODE: $0000146A VOL: 0
; 0000 0955             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $0000146B VOL: 0
;PCODE: $0000146C VOL: 0
;PCODE: $0000146D VOL: 0
;PCODE: $0000146E VOL: 0
;PCODE: $0000146F VOL: 0
; 0000 0956 
; 0000 0957     break;
;PCODE: $00001470 VOL: 0
; 0000 0958 
; 0000 0959 
; 0000 095A          case 40:
;PCODE: $00001471 VOL: 0
;PCODE: $00001472 VOL: 0
;PCODE: $00001473 VOL: 0
; 0000 095B 
; 0000 095C             a[0] = 0x0A6;   //ster1
;PCODE: $00001474 VOL: 0
;PCODE: $00001475 VOL: 0
; 0000 095D             a[3] = 0x12;    //ster4 INV druciak
;PCODE: $00001476 VOL: 0
;PCODE: $00001477 VOL: 0
;PCODE: $00001478 VOL: 0
;PCODE: $00001479 VOL: 0
; 0000 095E             a[4] = 0x22;    //ster3 ABS krazek scierny
;PCODE: $0000147A VOL: 0
;PCODE: $0000147B VOL: 0
;PCODE: $0000147C VOL: 0
;PCODE: $0000147D VOL: 0
; 0000 095F             a[5] = 0x196;   //delta okrag
;PCODE: $0000147E VOL: 0
;PCODE: $0000147F VOL: 0
;PCODE: $00001480 VOL: 0
;PCODE: $00001481 VOL: 0
; 0000 0960             a[7] = 0x10;    //ster3 INV krazek scierny
;PCODE: $00001482 VOL: 0
;PCODE: $00001483 VOL: 0
;PCODE: $00001484 VOL: 0
;PCODE: $00001485 VOL: 0
; 0000 0961             a[9] = 1;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $00001486 VOL: 0
;PCODE: $00001487 VOL: 0
;PCODE: $00001488 VOL: 0
;PCODE: $00001489 VOL: 0
; 0000 0962 
; 0000 0963             a[1] = a[0]+0x001;  //ster2
;PCODE: $0000148A VOL: 0
;PCODE: $0000148B VOL: 0
;PCODE: $0000148C VOL: 0
;PCODE: $0000148D VOL: 0
; 0000 0964             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $0000148E VOL: 0
;PCODE: $0000148F VOL: 0
;PCODE: $00001490 VOL: 0
;PCODE: $00001491 VOL: 0
; 0000 0965             a[6] = a[5]+0x001;  //okrag
;PCODE: $00001492 VOL: 0
;PCODE: $00001493 VOL: 0
;PCODE: $00001494 VOL: 0
;PCODE: $00001495 VOL: 0
;PCODE: $00001496 VOL: 0
; 0000 0966             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $00001497 VOL: 0
;PCODE: $00001498 VOL: 0
;PCODE: $00001499 VOL: 0
;PCODE: $0000149A VOL: 0
;PCODE: $0000149B VOL: 0
; 0000 0967 
; 0000 0968     break;
;PCODE: $0000149C VOL: 0
; 0000 0969 
; 0000 096A          case 41:
;PCODE: $0000149D VOL: 0
;PCODE: $0000149E VOL: 0
;PCODE: $0000149F VOL: 0
; 0000 096B 
; 0000 096C             a[0] = 0x01E;   //ster1
;PCODE: $000014A0 VOL: 0
;PCODE: $000014A1 VOL: 0
; 0000 096D             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $000014A2 VOL: 0
;PCODE: $000014A3 VOL: 0
;PCODE: $000014A4 VOL: 0
;PCODE: $000014A5 VOL: 0
; 0000 096E             a[4] = 0x1F;    //ster3 ABS krazek scierny
;PCODE: $000014A6 VOL: 0
;PCODE: $000014A7 VOL: 0
;PCODE: $000014A8 VOL: 0
;PCODE: $000014A9 VOL: 0
; 0000 096F             a[5] = 0x196;   //delta okrag
;PCODE: $000014AA VOL: 0
;PCODE: $000014AB VOL: 0
;PCODE: $000014AC VOL: 0
;PCODE: $000014AD VOL: 0
; 0000 0970             a[7] = 0x11;    //ster3 INV krazek scierny
;PCODE: $000014AE VOL: 0
;PCODE: $000014AF VOL: 0
;PCODE: $000014B0 VOL: 0
;PCODE: $000014B1 VOL: 0
; 0000 0971             a[9] = 1;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $000014B2 VOL: 0
;PCODE: $000014B3 VOL: 0
;PCODE: $000014B4 VOL: 0
;PCODE: $000014B5 VOL: 0
; 0000 0972 
; 0000 0973             a[1] = a[0]+0x001;  //ster2
;PCODE: $000014B6 VOL: 0
;PCODE: $000014B7 VOL: 0
;PCODE: $000014B8 VOL: 0
;PCODE: $000014B9 VOL: 0
; 0000 0974             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $000014BA VOL: 0
;PCODE: $000014BB VOL: 0
;PCODE: $000014BC VOL: 0
;PCODE: $000014BD VOL: 0
; 0000 0975             a[6] = a[5]+0x001;  //okrag
;PCODE: $000014BE VOL: 0
;PCODE: $000014BF VOL: 0
;PCODE: $000014C0 VOL: 0
;PCODE: $000014C1 VOL: 0
;PCODE: $000014C2 VOL: 0
; 0000 0976             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $000014C3 VOL: 0
;PCODE: $000014C4 VOL: 0
;PCODE: $000014C5 VOL: 0
;PCODE: $000014C6 VOL: 0
;PCODE: $000014C7 VOL: 0
; 0000 0977 
; 0000 0978     break;
;PCODE: $000014C8 VOL: 0
; 0000 0979 
; 0000 097A 
; 0000 097B          case 42:
;PCODE: $000014C9 VOL: 0
;PCODE: $000014CA VOL: 0
;PCODE: $000014CB VOL: 0
; 0000 097C 
; 0000 097D             a[0] = 0x05C;   //ster1
;PCODE: $000014CC VOL: 0
;PCODE: $000014CD VOL: 0
; 0000 097E             a[3] = 0x10;    //ster4 INV druciak
;PCODE: $000014CE VOL: 0
;PCODE: $000014CF VOL: 0
;PCODE: $000014D0 VOL: 0
;PCODE: $000014D1 VOL: 0
; 0000 097F             a[4] = 0x1E;    //ster3 ABS krazek scierny
;PCODE: $000014D2 VOL: 0
;PCODE: $000014D3 VOL: 0
;PCODE: $000014D4 VOL: 0
;PCODE: $000014D5 VOL: 0
; 0000 0980             a[5] = 0x196;   //delta okrag
;PCODE: $000014D6 VOL: 0
;PCODE: $000014D7 VOL: 0
;PCODE: $000014D8 VOL: 0
;PCODE: $000014D9 VOL: 0
; 0000 0981             a[7] = 0x11;    //ster3 INV krazek scierny
;PCODE: $000014DA VOL: 0
;PCODE: $000014DB VOL: 0
;PCODE: $000014DC VOL: 0
;PCODE: $000014DD VOL: 0
; 0000 0982             a[9] = 0;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $000014DE VOL: 0
;PCODE: $000014DF VOL: 0
;PCODE: $000014E0 VOL: 0
;PCODE: $000014E1 VOL: 0
; 0000 0983 
; 0000 0984             a[1] = a[0]+0x001;  //ster2
;PCODE: $000014E2 VOL: 0
;PCODE: $000014E3 VOL: 0
;PCODE: $000014E4 VOL: 0
;PCODE: $000014E5 VOL: 0
; 0000 0985             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $000014E6 VOL: 0
;PCODE: $000014E7 VOL: 0
;PCODE: $000014E8 VOL: 0
;PCODE: $000014E9 VOL: 0
; 0000 0986             a[6] = a[5]+0x001;  //okrag
;PCODE: $000014EA VOL: 0
;PCODE: $000014EB VOL: 0
;PCODE: $000014EC VOL: 0
;PCODE: $000014ED VOL: 0
;PCODE: $000014EE VOL: 0
; 0000 0987             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $000014EF VOL: 0
;PCODE: $000014F0 VOL: 0
;PCODE: $000014F1 VOL: 0
;PCODE: $000014F2 VOL: 0
;PCODE: $000014F3 VOL: 0
; 0000 0988 
; 0000 0989     break;
;PCODE: $000014F4 VOL: 0
; 0000 098A 
; 0000 098B 
; 0000 098C          case 43:
;PCODE: $000014F5 VOL: 0
;PCODE: $000014F6 VOL: 0
;PCODE: $000014F7 VOL: 0
; 0000 098D 
; 0000 098E             a[0] = 0x062;   //ster1
;PCODE: $000014F8 VOL: 0
;PCODE: $000014F9 VOL: 0
; 0000 098F             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $000014FA VOL: 0
;PCODE: $000014FB VOL: 0
;PCODE: $000014FC VOL: 0
;PCODE: $000014FD VOL: 0
; 0000 0990             a[4] = 0x20;    //ster3 ABS krazek scierny
;PCODE: $000014FE VOL: 0
;PCODE: $000014FF VOL: 0
;PCODE: $00001500 VOL: 0
;PCODE: $00001501 VOL: 0
; 0000 0991             a[5] = 0x196;   //delta okrag
;PCODE: $00001502 VOL: 0
;PCODE: $00001503 VOL: 0
;PCODE: $00001504 VOL: 0
;PCODE: $00001505 VOL: 0
; 0000 0992             a[7] = 0x12;    //ster3 INV krazek scierny
;PCODE: $00001506 VOL: 0
;PCODE: $00001507 VOL: 0
;PCODE: $00001508 VOL: 0
;PCODE: $00001509 VOL: 0
; 0000 0993             a[9] = 0;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $0000150A VOL: 0
;PCODE: $0000150B VOL: 0
;PCODE: $0000150C VOL: 0
;PCODE: $0000150D VOL: 0
; 0000 0994 
; 0000 0995             a[1] = a[0]+0x001;  //ster2
;PCODE: $0000150E VOL: 0
;PCODE: $0000150F VOL: 0
;PCODE: $00001510 VOL: 0
;PCODE: $00001511 VOL: 0
; 0000 0996             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $00001512 VOL: 0
;PCODE: $00001513 VOL: 0
;PCODE: $00001514 VOL: 0
;PCODE: $00001515 VOL: 0
; 0000 0997             a[6] = a[5]+0x001;  //okrag
;PCODE: $00001516 VOL: 0
;PCODE: $00001517 VOL: 0
;PCODE: $00001518 VOL: 0
;PCODE: $00001519 VOL: 0
;PCODE: $0000151A VOL: 0
; 0000 0998             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $0000151B VOL: 0
;PCODE: $0000151C VOL: 0
;PCODE: $0000151D VOL: 0
;PCODE: $0000151E VOL: 0
;PCODE: $0000151F VOL: 0
; 0000 0999 
; 0000 099A     break;
;PCODE: $00001520 VOL: 0
; 0000 099B 
; 0000 099C 
; 0000 099D          case 44:
;PCODE: $00001521 VOL: 0
;PCODE: $00001522 VOL: 0
;PCODE: $00001523 VOL: 0
; 0000 099E 
; 0000 099F             a[0] = 0x;   //ster1
;PCODE: $00001524 VOL: 0
;PCODE: $00001525 VOL: 0
; 0000 09A0             a[3] = 0x;    //ster4 INV druciak
;PCODE: $00001526 VOL: 0
;PCODE: $00001527 VOL: 0
;PCODE: $00001528 VOL: 0
;PCODE: $00001529 VOL: 0
; 0000 09A1             a[4] = 0x;    //ster3 ABS krazek scierny
;PCODE: $0000152A VOL: 0
;PCODE: $0000152B VOL: 0
;PCODE: $0000152C VOL: 0
;PCODE: $0000152D VOL: 0
; 0000 09A2             a[5] = 0x;   //delta okrag
;PCODE: $0000152E VOL: 0
;PCODE: $0000152F VOL: 0
;PCODE: $00001530 VOL: 0
;PCODE: $00001531 VOL: 0
; 0000 09A3             a[7] = 0x;    //ster3 INV krazek scierny
;PCODE: $00001532 VOL: 0
;PCODE: $00001533 VOL: 0
;PCODE: $00001534 VOL: 0
;PCODE: $00001535 VOL: 0
; 0000 09A4             a[9] = 0;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $00001536 VOL: 0
;PCODE: $00001537 VOL: 0
;PCODE: $00001538 VOL: 0
;PCODE: $00001539 VOL: 0
; 0000 09A5 
; 0000 09A6             a[1] = a[0]+0x001;  //ster2
;PCODE: $0000153A VOL: 0
;PCODE: $0000153B VOL: 0
;PCODE: $0000153C VOL: 0
;PCODE: $0000153D VOL: 0
; 0000 09A7             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $0000153E VOL: 0
;PCODE: $0000153F VOL: 0
;PCODE: $00001540 VOL: 0
;PCODE: $00001541 VOL: 0
; 0000 09A8             a[6] = a[5]+0x001;  //okrag
;PCODE: $00001542 VOL: 0
;PCODE: $00001543 VOL: 0
;PCODE: $00001544 VOL: 0
;PCODE: $00001545 VOL: 0
;PCODE: $00001546 VOL: 0
; 0000 09A9             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $00001547 VOL: 0
;PCODE: $00001548 VOL: 0
;PCODE: $00001549 VOL: 0
;PCODE: $0000154A VOL: 0
;PCODE: $0000154B VOL: 0
; 0000 09AA 
; 0000 09AB     break;
;PCODE: $0000154C VOL: 0
; 0000 09AC 
; 0000 09AD 
; 0000 09AE          case 45:
;PCODE: $0000154D VOL: 0
;PCODE: $0000154E VOL: 0
;PCODE: $0000154F VOL: 0
; 0000 09AF 
; 0000 09B0             a[0] = 0x010;   //ster1
;PCODE: $00001550 VOL: 0
;PCODE: $00001551 VOL: 0
; 0000 09B1             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $00001552 VOL: 0
;PCODE: $00001553 VOL: 0
;PCODE: $00001554 VOL: 0
;PCODE: $00001555 VOL: 0
; 0000 09B2             a[4] = 0x1F;    //ster3 ABS krazek scierny
;PCODE: $00001556 VOL: 0
;PCODE: $00001557 VOL: 0
;PCODE: $00001558 VOL: 0
;PCODE: $00001559 VOL: 0
; 0000 09B3             a[5] = 0x196;   //delta okrag
;PCODE: $0000155A VOL: 0
;PCODE: $0000155B VOL: 0
;PCODE: $0000155C VOL: 0
;PCODE: $0000155D VOL: 0
; 0000 09B4             a[7] = 0x11;    //ster3 INV krazek scierny
;PCODE: $0000155E VOL: 0
;PCODE: $0000155F VOL: 0
;PCODE: $00001560 VOL: 0
;PCODE: $00001561 VOL: 0
; 0000 09B5             a[9] = 0;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $00001562 VOL: 0
;PCODE: $00001563 VOL: 0
;PCODE: $00001564 VOL: 0
;PCODE: $00001565 VOL: 0
; 0000 09B6 
; 0000 09B7             a[1] = a[0]+0x001;  //ster2
;PCODE: $00001566 VOL: 0
;PCODE: $00001567 VOL: 0
;PCODE: $00001568 VOL: 0
;PCODE: $00001569 VOL: 0
; 0000 09B8             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $0000156A VOL: 0
;PCODE: $0000156B VOL: 0
;PCODE: $0000156C VOL: 0
;PCODE: $0000156D VOL: 0
; 0000 09B9             a[6] = a[5]+0x001;  //okrag
;PCODE: $0000156E VOL: 0
;PCODE: $0000156F VOL: 0
;PCODE: $00001570 VOL: 0
;PCODE: $00001571 VOL: 0
;PCODE: $00001572 VOL: 0
; 0000 09BA             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $00001573 VOL: 0
;PCODE: $00001574 VOL: 0
;PCODE: $00001575 VOL: 0
;PCODE: $00001576 VOL: 0
;PCODE: $00001577 VOL: 0
; 0000 09BB 
; 0000 09BC     break;
;PCODE: $00001578 VOL: 0
; 0000 09BD 
; 0000 09BE 
; 0000 09BF     case 46:
;PCODE: $00001579 VOL: 0
;PCODE: $0000157A VOL: 0
;PCODE: $0000157B VOL: 0
; 0000 09C0 
; 0000 09C1             a[0] = 0x050;   //ster1
;PCODE: $0000157C VOL: 0
;PCODE: $0000157D VOL: 0
; 0000 09C2             a[3] = 0x10;    //ster4 INV druciak
;PCODE: $0000157E VOL: 0
;PCODE: $0000157F VOL: 0
;PCODE: $00001580 VOL: 0
;PCODE: $00001581 VOL: 0
; 0000 09C3             a[4] = 0x1E;    //ster3 ABS krazek scierny
;PCODE: $00001582 VOL: 0
;PCODE: $00001583 VOL: 0
;PCODE: $00001584 VOL: 0
;PCODE: $00001585 VOL: 0
; 0000 09C4             a[5] = 0x196;   //delta okrag
;PCODE: $00001586 VOL: 0
;PCODE: $00001587 VOL: 0
;PCODE: $00001588 VOL: 0
;PCODE: $00001589 VOL: 0
; 0000 09C5             a[7] = 0x11;    //ster3 INV krazek scierny
;PCODE: $0000158A VOL: 0
;PCODE: $0000158B VOL: 0
;PCODE: $0000158C VOL: 0
;PCODE: $0000158D VOL: 0
; 0000 09C6             a[9] = 1;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $0000158E VOL: 0
;PCODE: $0000158F VOL: 0
;PCODE: $00001590 VOL: 0
;PCODE: $00001591 VOL: 0
; 0000 09C7 
; 0000 09C8             a[1] = a[0]+0x001;  //ster2
;PCODE: $00001592 VOL: 0
;PCODE: $00001593 VOL: 0
;PCODE: $00001594 VOL: 0
;PCODE: $00001595 VOL: 0
; 0000 09C9             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $00001596 VOL: 0
;PCODE: $00001597 VOL: 0
;PCODE: $00001598 VOL: 0
;PCODE: $00001599 VOL: 0
; 0000 09CA             a[6] = a[5]+0x001;  //okrag
;PCODE: $0000159A VOL: 0
;PCODE: $0000159B VOL: 0
;PCODE: $0000159C VOL: 0
;PCODE: $0000159D VOL: 0
;PCODE: $0000159E VOL: 0
; 0000 09CB             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $0000159F VOL: 0
;PCODE: $000015A0 VOL: 0
;PCODE: $000015A1 VOL: 0
;PCODE: $000015A2 VOL: 0
;PCODE: $000015A3 VOL: 0
; 0000 09CC 
; 0000 09CD     break;
;PCODE: $000015A4 VOL: 0
; 0000 09CE 
; 0000 09CF 
; 0000 09D0     case 47:
;PCODE: $000015A5 VOL: 0
;PCODE: $000015A6 VOL: 0
;PCODE: $000015A7 VOL: 0
; 0000 09D1 
; 0000 09D2             a[0] = 0x068;   //ster1
;PCODE: $000015A8 VOL: 0
;PCODE: $000015A9 VOL: 0
; 0000 09D3             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $000015AA VOL: 0
;PCODE: $000015AB VOL: 0
;PCODE: $000015AC VOL: 0
;PCODE: $000015AD VOL: 0
; 0000 09D4             a[4] = 0x20;    //ster3 ABS krazek scierny
;PCODE: $000015AE VOL: 0
;PCODE: $000015AF VOL: 0
;PCODE: $000015B0 VOL: 0
;PCODE: $000015B1 VOL: 0
; 0000 09D5             a[5] = 0x196;   //delta okrag
;PCODE: $000015B2 VOL: 0
;PCODE: $000015B3 VOL: 0
;PCODE: $000015B4 VOL: 0
;PCODE: $000015B5 VOL: 0
; 0000 09D6             a[7] = 0x12;    //ster3 INV krazek scierny
;PCODE: $000015B6 VOL: 0
;PCODE: $000015B7 VOL: 0
;PCODE: $000015B8 VOL: 0
;PCODE: $000015B9 VOL: 0
; 0000 09D7             a[9] = 1;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $000015BA VOL: 0
;PCODE: $000015BB VOL: 0
;PCODE: $000015BC VOL: 0
;PCODE: $000015BD VOL: 0
; 0000 09D8 
; 0000 09D9             a[1] = a[0]+0x001;  //ster2
;PCODE: $000015BE VOL: 0
;PCODE: $000015BF VOL: 0
;PCODE: $000015C0 VOL: 0
;PCODE: $000015C1 VOL: 0
; 0000 09DA             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $000015C2 VOL: 0
;PCODE: $000015C3 VOL: 0
;PCODE: $000015C4 VOL: 0
;PCODE: $000015C5 VOL: 0
; 0000 09DB             a[6] = a[5]+0x001;  //okrag
;PCODE: $000015C6 VOL: 0
;PCODE: $000015C7 VOL: 0
;PCODE: $000015C8 VOL: 0
;PCODE: $000015C9 VOL: 0
;PCODE: $000015CA VOL: 0
; 0000 09DC             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $000015CB VOL: 0
;PCODE: $000015CC VOL: 0
;PCODE: $000015CD VOL: 0
;PCODE: $000015CE VOL: 0
;PCODE: $000015CF VOL: 0
; 0000 09DD 
; 0000 09DE     break;
;PCODE: $000015D0 VOL: 0
; 0000 09DF 
; 0000 09E0 
; 0000 09E1 
; 0000 09E2     case 48:
;PCODE: $000015D1 VOL: 0
;PCODE: $000015D2 VOL: 0
;PCODE: $000015D3 VOL: 0
; 0000 09E3 
; 0000 09E4             a[0] = 0x;   //ster1
;PCODE: $000015D4 VOL: 0
;PCODE: $000015D5 VOL: 0
; 0000 09E5             a[3] = 0x;    //ster4 INV druciak
;PCODE: $000015D6 VOL: 0
;PCODE: $000015D7 VOL: 0
;PCODE: $000015D8 VOL: 0
;PCODE: $000015D9 VOL: 0
; 0000 09E6             a[4] = 0x;    //ster3 ABS krazek scierny
;PCODE: $000015DA VOL: 0
;PCODE: $000015DB VOL: 0
;PCODE: $000015DC VOL: 0
;PCODE: $000015DD VOL: 0
; 0000 09E7             a[5] = 0x;   //delta okrag
;PCODE: $000015DE VOL: 0
;PCODE: $000015DF VOL: 0
;PCODE: $000015E0 VOL: 0
;PCODE: $000015E1 VOL: 0
; 0000 09E8             a[7] = 0x;    //ster3 INV krazek scierny
;PCODE: $000015E2 VOL: 0
;PCODE: $000015E3 VOL: 0
;PCODE: $000015E4 VOL: 0
;PCODE: $000015E5 VOL: 0
; 0000 09E9             a[9] = 0;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $000015E6 VOL: 0
;PCODE: $000015E7 VOL: 0
;PCODE: $000015E8 VOL: 0
;PCODE: $000015E9 VOL: 0
; 0000 09EA 
; 0000 09EB             a[1] = a[0]+0x001;  //ster2
;PCODE: $000015EA VOL: 0
;PCODE: $000015EB VOL: 0
;PCODE: $000015EC VOL: 0
;PCODE: $000015ED VOL: 0
; 0000 09EC             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $000015EE VOL: 0
;PCODE: $000015EF VOL: 0
;PCODE: $000015F0 VOL: 0
;PCODE: $000015F1 VOL: 0
; 0000 09ED             a[6] = a[5]+0x001;  //okrag
;PCODE: $000015F2 VOL: 0
;PCODE: $000015F3 VOL: 0
;PCODE: $000015F4 VOL: 0
;PCODE: $000015F5 VOL: 0
;PCODE: $000015F6 VOL: 0
; 0000 09EE             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $000015F7 VOL: 0
;PCODE: $000015F8 VOL: 0
;PCODE: $000015F9 VOL: 0
;PCODE: $000015FA VOL: 0
;PCODE: $000015FB VOL: 0
; 0000 09EF 
; 0000 09F0     break;
;PCODE: $000015FC VOL: 0
; 0000 09F1 
; 0000 09F2 
; 0000 09F3     case 49:
;PCODE: $000015FD VOL: 0
;PCODE: $000015FE VOL: 0
;PCODE: $000015FF VOL: 0
; 0000 09F4 
; 0000 09F5             a[0] = 0x024;   //ster1
;PCODE: $00001600 VOL: 0
;PCODE: $00001601 VOL: 0
; 0000 09F6             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $00001602 VOL: 0
;PCODE: $00001603 VOL: 0
;PCODE: $00001604 VOL: 0
;PCODE: $00001605 VOL: 0
; 0000 09F7             a[4] = 0x1F;    //ster3 ABS krazek scierny
;PCODE: $00001606 VOL: 0
;PCODE: $00001607 VOL: 0
;PCODE: $00001608 VOL: 0
;PCODE: $00001609 VOL: 0
; 0000 09F8             a[5] = 0x196;   //delta okrag
;PCODE: $0000160A VOL: 0
;PCODE: $0000160B VOL: 0
;PCODE: $0000160C VOL: 0
;PCODE: $0000160D VOL: 0
; 0000 09F9             a[7] = 0x12;    //ster3 INV krazek scierny
;PCODE: $0000160E VOL: 0
;PCODE: $0000160F VOL: 0
;PCODE: $00001610 VOL: 0
;PCODE: $00001611 VOL: 0
; 0000 09FA             a[9] = 0;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $00001612 VOL: 0
;PCODE: $00001613 VOL: 0
;PCODE: $00001614 VOL: 0
;PCODE: $00001615 VOL: 0
; 0000 09FB 
; 0000 09FC             a[1] = a[0]+0x001;  //ster2
;PCODE: $00001616 VOL: 0
;PCODE: $00001617 VOL: 0
;PCODE: $00001618 VOL: 0
;PCODE: $00001619 VOL: 0
; 0000 09FD             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $0000161A VOL: 0
;PCODE: $0000161B VOL: 0
;PCODE: $0000161C VOL: 0
;PCODE: $0000161D VOL: 0
; 0000 09FE             a[6] = a[5]+0x001;  //okrag
;PCODE: $0000161E VOL: 0
;PCODE: $0000161F VOL: 0
;PCODE: $00001620 VOL: 0
;PCODE: $00001621 VOL: 0
;PCODE: $00001622 VOL: 0
; 0000 09FF             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $00001623 VOL: 0
;PCODE: $00001624 VOL: 0
;PCODE: $00001625 VOL: 0
;PCODE: $00001626 VOL: 0
;PCODE: $00001627 VOL: 0
; 0000 0A00 
; 0000 0A01     break;
;PCODE: $00001628 VOL: 0
; 0000 0A02 
; 0000 0A03 
; 0000 0A04     case 50:
;PCODE: $00001629 VOL: 0
;PCODE: $0000162A VOL: 0
;PCODE: $0000162B VOL: 0
; 0000 0A05 
; 0000 0A06             a[0] = 0x014;   //ster1
;PCODE: $0000162C VOL: 0
;PCODE: $0000162D VOL: 0
; 0000 0A07             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $0000162E VOL: 0
;PCODE: $0000162F VOL: 0
;PCODE: $00001630 VOL: 0
;PCODE: $00001631 VOL: 0
; 0000 0A08             a[4] = 0x1E;    //ster3 ABS krazek scierny
;PCODE: $00001632 VOL: 0
;PCODE: $00001633 VOL: 0
;PCODE: $00001634 VOL: 0
;PCODE: $00001635 VOL: 0
; 0000 0A09             a[5] = 0x190;   //delta okrag
;PCODE: $00001636 VOL: 0
;PCODE: $00001637 VOL: 0
;PCODE: $00001638 VOL: 0
;PCODE: $00001639 VOL: 0
; 0000 0A0A             a[7] = 0x0F;    //ster3 INV krazek scierny
;PCODE: $0000163A VOL: 0
;PCODE: $0000163B VOL: 0
;PCODE: $0000163C VOL: 0
;PCODE: $0000163D VOL: 0
; 0000 0A0B             a[9] = 0;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $0000163E VOL: 0
;PCODE: $0000163F VOL: 0
;PCODE: $00001640 VOL: 0
;PCODE: $00001641 VOL: 0
; 0000 0A0C 
; 0000 0A0D             a[1] = a[0]+0x001;  //ster2
;PCODE: $00001642 VOL: 0
;PCODE: $00001643 VOL: 0
;PCODE: $00001644 VOL: 0
;PCODE: $00001645 VOL: 0
; 0000 0A0E             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $00001646 VOL: 0
;PCODE: $00001647 VOL: 0
;PCODE: $00001648 VOL: 0
;PCODE: $00001649 VOL: 0
; 0000 0A0F             a[6] = a[5]+0x001;  //okrag
;PCODE: $0000164A VOL: 0
;PCODE: $0000164B VOL: 0
;PCODE: $0000164C VOL: 0
;PCODE: $0000164D VOL: 0
;PCODE: $0000164E VOL: 0
; 0000 0A10             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $0000164F VOL: 0
;PCODE: $00001650 VOL: 0
;PCODE: $00001651 VOL: 0
;PCODE: $00001652 VOL: 0
;PCODE: $00001653 VOL: 0
; 0000 0A11 
; 0000 0A12     break;
;PCODE: $00001654 VOL: 0
; 0000 0A13 
; 0000 0A14     case 51:
;PCODE: $00001655 VOL: 0
;PCODE: $00001656 VOL: 0
;PCODE: $00001657 VOL: 0
; 0000 0A15 
; 0000 0A16             a[0] = 0x082;   //ster1
;PCODE: $00001658 VOL: 0
;PCODE: $00001659 VOL: 0
; 0000 0A17             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $0000165A VOL: 0
;PCODE: $0000165B VOL: 0
;PCODE: $0000165C VOL: 0
;PCODE: $0000165D VOL: 0
; 0000 0A18             a[4] = 0x1B;    //ster3 ABS krazek scierny
;PCODE: $0000165E VOL: 0
;PCODE: $0000165F VOL: 0
;PCODE: $00001660 VOL: 0
;PCODE: $00001661 VOL: 0
; 0000 0A19             a[5] = 0x19C;   //delta okrag
;PCODE: $00001662 VOL: 0
;PCODE: $00001663 VOL: 0
;PCODE: $00001664 VOL: 0
;PCODE: $00001665 VOL: 0
; 0000 0A1A             a[7] = 0x12;    //ster3 INV krazek scierny
;PCODE: $00001666 VOL: 0
;PCODE: $00001667 VOL: 0
;PCODE: $00001668 VOL: 0
;PCODE: $00001669 VOL: 0
; 0000 0A1B             a[9] = 0;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $0000166A VOL: 0
;PCODE: $0000166B VOL: 0
;PCODE: $0000166C VOL: 0
;PCODE: $0000166D VOL: 0
; 0000 0A1C 
; 0000 0A1D             a[1] = a[0]+0x001;  //ster2
;PCODE: $0000166E VOL: 0
;PCODE: $0000166F VOL: 0
;PCODE: $00001670 VOL: 0
;PCODE: $00001671 VOL: 0
; 0000 0A1E             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $00001672 VOL: 0
;PCODE: $00001673 VOL: 0
;PCODE: $00001674 VOL: 0
;PCODE: $00001675 VOL: 0
; 0000 0A1F             a[6] = a[5]+0x001;  //okrag
;PCODE: $00001676 VOL: 0
;PCODE: $00001677 VOL: 0
;PCODE: $00001678 VOL: 0
;PCODE: $00001679 VOL: 0
;PCODE: $0000167A VOL: 0
; 0000 0A20             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $0000167B VOL: 0
;PCODE: $0000167C VOL: 0
;PCODE: $0000167D VOL: 0
;PCODE: $0000167E VOL: 0
;PCODE: $0000167F VOL: 0
; 0000 0A21 
; 0000 0A22     break;
;PCODE: $00001680 VOL: 0
; 0000 0A23 
; 0000 0A24     case 52:
;PCODE: $00001681 VOL: 0
;PCODE: $00001682 VOL: 0
;PCODE: $00001683 VOL: 0
; 0000 0A25 
; 0000 0A26             a[0] = 0x106;   //ster1
;PCODE: $00001684 VOL: 0
;PCODE: $00001685 VOL: 0
; 0000 0A27             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $00001686 VOL: 0
;PCODE: $00001687 VOL: 0
;PCODE: $00001688 VOL: 0
;PCODE: $00001689 VOL: 0
; 0000 0A28             a[4] = 0x19;    //ster3 ABS krazek scierny
;PCODE: $0000168A VOL: 0
;PCODE: $0000168B VOL: 0
;PCODE: $0000168C VOL: 0
;PCODE: $0000168D VOL: 0
; 0000 0A29             a[5] = 0x190;   //delta okrag
;PCODE: $0000168E VOL: 0
;PCODE: $0000168F VOL: 0
;PCODE: $00001690 VOL: 0
;PCODE: $00001691 VOL: 0
; 0000 0A2A             a[7] = 0x13;    //ster3 INV krazek scierny
;PCODE: $00001692 VOL: 0
;PCODE: $00001693 VOL: 0
;PCODE: $00001694 VOL: 0
;PCODE: $00001695 VOL: 0
; 0000 0A2B             a[9] = 1;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $00001696 VOL: 0
;PCODE: $00001697 VOL: 0
;PCODE: $00001698 VOL: 0
;PCODE: $00001699 VOL: 0
; 0000 0A2C 
; 0000 0A2D             a[1] = a[0]+0x001;  //ster2
;PCODE: $0000169A VOL: 0
;PCODE: $0000169B VOL: 0
;PCODE: $0000169C VOL: 0
;PCODE: $0000169D VOL: 0
; 0000 0A2E             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $0000169E VOL: 0
;PCODE: $0000169F VOL: 0
;PCODE: $000016A0 VOL: 0
;PCODE: $000016A1 VOL: 0
; 0000 0A2F             a[6] = a[5]+0x001;  //okrag
;PCODE: $000016A2 VOL: 0
;PCODE: $000016A3 VOL: 0
;PCODE: $000016A4 VOL: 0
;PCODE: $000016A5 VOL: 0
;PCODE: $000016A6 VOL: 0
; 0000 0A30             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $000016A7 VOL: 0
;PCODE: $000016A8 VOL: 0
;PCODE: $000016A9 VOL: 0
;PCODE: $000016AA VOL: 0
;PCODE: $000016AB VOL: 0
; 0000 0A31 
; 0000 0A32     break;
;PCODE: $000016AC VOL: 0
; 0000 0A33 
; 0000 0A34 
; 0000 0A35     case 53:
;PCODE: $000016AD VOL: 0
;PCODE: $000016AE VOL: 0
;PCODE: $000016AF VOL: 0
; 0000 0A36 
; 0000 0A37             a[0] = 0x04C;   //ster1
;PCODE: $000016B0 VOL: 0
;PCODE: $000016B1 VOL: 0
; 0000 0A38             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $000016B2 VOL: 0
;PCODE: $000016B3 VOL: 0
;PCODE: $000016B4 VOL: 0
;PCODE: $000016B5 VOL: 0
; 0000 0A39             a[4] = 0x1F;    //ster3 ABS krazek scierny
;PCODE: $000016B6 VOL: 0
;PCODE: $000016B7 VOL: 0
;PCODE: $000016B8 VOL: 0
;PCODE: $000016B9 VOL: 0
; 0000 0A3A             a[5] = 0x196;   //delta okrag
;PCODE: $000016BA VOL: 0
;PCODE: $000016BB VOL: 0
;PCODE: $000016BC VOL: 0
;PCODE: $000016BD VOL: 0
; 0000 0A3B             a[7] = 0x12;    //ster3 INV krazek scierny
;PCODE: $000016BE VOL: 0
;PCODE: $000016BF VOL: 0
;PCODE: $000016C0 VOL: 0
;PCODE: $000016C1 VOL: 0
; 0000 0A3C             a[9] = 1;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $000016C2 VOL: 0
;PCODE: $000016C3 VOL: 0
;PCODE: $000016C4 VOL: 0
;PCODE: $000016C5 VOL: 0
; 0000 0A3D 
; 0000 0A3E             a[1] = a[0]+0x001;  //ster2
;PCODE: $000016C6 VOL: 0
;PCODE: $000016C7 VOL: 0
;PCODE: $000016C8 VOL: 0
;PCODE: $000016C9 VOL: 0
; 0000 0A3F             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $000016CA VOL: 0
;PCODE: $000016CB VOL: 0
;PCODE: $000016CC VOL: 0
;PCODE: $000016CD VOL: 0
; 0000 0A40             a[6] = a[5]+0x001;  //okrag
;PCODE: $000016CE VOL: 0
;PCODE: $000016CF VOL: 0
;PCODE: $000016D0 VOL: 0
;PCODE: $000016D1 VOL: 0
;PCODE: $000016D2 VOL: 0
; 0000 0A41             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $000016D3 VOL: 0
;PCODE: $000016D4 VOL: 0
;PCODE: $000016D5 VOL: 0
;PCODE: $000016D6 VOL: 0
;PCODE: $000016D7 VOL: 0
; 0000 0A42 
; 0000 0A43     break;
;PCODE: $000016D8 VOL: 0
; 0000 0A44 
; 0000 0A45 
; 0000 0A46     case 54:
;PCODE: $000016D9 VOL: 0
;PCODE: $000016DA VOL: 0
;PCODE: $000016DB VOL: 0
; 0000 0A47 
; 0000 0A48             a[0] = 0x01C;   //ster1
;PCODE: $000016DC VOL: 0
;PCODE: $000016DD VOL: 0
; 0000 0A49             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $000016DE VOL: 0
;PCODE: $000016DF VOL: 0
;PCODE: $000016E0 VOL: 0
;PCODE: $000016E1 VOL: 0
; 0000 0A4A             a[4] = 0x1E;    //ster3 ABS krazek scierny
;PCODE: $000016E2 VOL: 0
;PCODE: $000016E3 VOL: 0
;PCODE: $000016E4 VOL: 0
;PCODE: $000016E5 VOL: 0
; 0000 0A4B             a[5] = 0x190;   //delta okrag
;PCODE: $000016E6 VOL: 0
;PCODE: $000016E7 VOL: 0
;PCODE: $000016E8 VOL: 0
;PCODE: $000016E9 VOL: 0
; 0000 0A4C             a[7] = 0x0F;    //ster3 INV krazek scierny
;PCODE: $000016EA VOL: 0
;PCODE: $000016EB VOL: 0
;PCODE: $000016EC VOL: 0
;PCODE: $000016ED VOL: 0
; 0000 0A4D             a[9] = 1;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $000016EE VOL: 0
;PCODE: $000016EF VOL: 0
;PCODE: $000016F0 VOL: 0
;PCODE: $000016F1 VOL: 0
; 0000 0A4E 
; 0000 0A4F             a[1] = a[0]+0x001;  //ster2
;PCODE: $000016F2 VOL: 0
;PCODE: $000016F3 VOL: 0
;PCODE: $000016F4 VOL: 0
;PCODE: $000016F5 VOL: 0
; 0000 0A50             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $000016F6 VOL: 0
;PCODE: $000016F7 VOL: 0
;PCODE: $000016F8 VOL: 0
;PCODE: $000016F9 VOL: 0
; 0000 0A51             a[6] = a[5]+0x001;  //okrag
;PCODE: $000016FA VOL: 0
;PCODE: $000016FB VOL: 0
;PCODE: $000016FC VOL: 0
;PCODE: $000016FD VOL: 0
;PCODE: $000016FE VOL: 0
; 0000 0A52             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $000016FF VOL: 0
;PCODE: $00001700 VOL: 0
;PCODE: $00001701 VOL: 0
;PCODE: $00001702 VOL: 0
;PCODE: $00001703 VOL: 0
; 0000 0A53 
; 0000 0A54     break;
;PCODE: $00001704 VOL: 0
; 0000 0A55 
; 0000 0A56     case 55:
;PCODE: $00001705 VOL: 0
;PCODE: $00001706 VOL: 0
;PCODE: $00001707 VOL: 0
; 0000 0A57 
; 0000 0A58             a[0] = 0x114;   //ster1
;PCODE: $00001708 VOL: 0
;PCODE: $00001709 VOL: 0
; 0000 0A59             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $0000170A VOL: 0
;PCODE: $0000170B VOL: 0
;PCODE: $0000170C VOL: 0
;PCODE: $0000170D VOL: 0
; 0000 0A5A             a[4] = 0x1A;    //ster3 ABS krazek scierny
;PCODE: $0000170E VOL: 0
;PCODE: $0000170F VOL: 0
;PCODE: $00001710 VOL: 0
;PCODE: $00001711 VOL: 0
; 0000 0A5B             a[5] = 0x19C;   //delta okrag
;PCODE: $00001712 VOL: 0
;PCODE: $00001713 VOL: 0
;PCODE: $00001714 VOL: 0
;PCODE: $00001715 VOL: 0
; 0000 0A5C             a[7] = 0x12;    //ster3 INV krazek scierny
;PCODE: $00001716 VOL: 0
;PCODE: $00001717 VOL: 0
;PCODE: $00001718 VOL: 0
;PCODE: $00001719 VOL: 0
; 0000 0A5D             a[9] = 1;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $0000171A VOL: 0
;PCODE: $0000171B VOL: 0
;PCODE: $0000171C VOL: 0
;PCODE: $0000171D VOL: 0
; 0000 0A5E 
; 0000 0A5F             a[1] = a[0]+0x001;  //ster2
;PCODE: $0000171E VOL: 0
;PCODE: $0000171F VOL: 0
;PCODE: $00001720 VOL: 0
;PCODE: $00001721 VOL: 0
; 0000 0A60             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $00001722 VOL: 0
;PCODE: $00001723 VOL: 0
;PCODE: $00001724 VOL: 0
;PCODE: $00001725 VOL: 0
; 0000 0A61             a[6] = a[5]+0x001;  //okrag
;PCODE: $00001726 VOL: 0
;PCODE: $00001727 VOL: 0
;PCODE: $00001728 VOL: 0
;PCODE: $00001729 VOL: 0
;PCODE: $0000172A VOL: 0
; 0000 0A62             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $0000172B VOL: 0
;PCODE: $0000172C VOL: 0
;PCODE: $0000172D VOL: 0
;PCODE: $0000172E VOL: 0
;PCODE: $0000172F VOL: 0
; 0000 0A63 
; 0000 0A64     break;
;PCODE: $00001730 VOL: 0
; 0000 0A65 
; 0000 0A66 
; 0000 0A67     case 56:
;PCODE: $00001731 VOL: 0
;PCODE: $00001732 VOL: 0
;PCODE: $00001733 VOL: 0
; 0000 0A68 
; 0000 0A69             a[0] = 0x0EE;   //ster1
;PCODE: $00001734 VOL: 0
;PCODE: $00001735 VOL: 0
; 0000 0A6A             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $00001736 VOL: 0
;PCODE: $00001737 VOL: 0
;PCODE: $00001738 VOL: 0
;PCODE: $00001739 VOL: 0
; 0000 0A6B             a[4] = 0x19;    //ster3 ABS krazek scierny
;PCODE: $0000173A VOL: 0
;PCODE: $0000173B VOL: 0
;PCODE: $0000173C VOL: 0
;PCODE: $0000173D VOL: 0
; 0000 0A6C             a[5] = 0x190;   //delta okrag
;PCODE: $0000173E VOL: 0
;PCODE: $0000173F VOL: 0
;PCODE: $00001740 VOL: 0
;PCODE: $00001741 VOL: 0
; 0000 0A6D             a[7] = 0x13;    //ster3 INV krazek scierny
;PCODE: $00001742 VOL: 0
;PCODE: $00001743 VOL: 0
;PCODE: $00001744 VOL: 0
;PCODE: $00001745 VOL: 0
; 0000 0A6E             a[9] = 0;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $00001746 VOL: 0
;PCODE: $00001747 VOL: 0
;PCODE: $00001748 VOL: 0
;PCODE: $00001749 VOL: 0
; 0000 0A6F 
; 0000 0A70             a[1] = a[0]+0x001;  //ster2
;PCODE: $0000174A VOL: 0
;PCODE: $0000174B VOL: 0
;PCODE: $0000174C VOL: 0
;PCODE: $0000174D VOL: 0
; 0000 0A71             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $0000174E VOL: 0
;PCODE: $0000174F VOL: 0
;PCODE: $00001750 VOL: 0
;PCODE: $00001751 VOL: 0
; 0000 0A72             a[6] = a[5]+0x001;  //okrag
;PCODE: $00001752 VOL: 0
;PCODE: $00001753 VOL: 0
;PCODE: $00001754 VOL: 0
;PCODE: $00001755 VOL: 0
;PCODE: $00001756 VOL: 0
; 0000 0A73             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $00001757 VOL: 0
;PCODE: $00001758 VOL: 0
;PCODE: $00001759 VOL: 0
;PCODE: $0000175A VOL: 0
;PCODE: $0000175B VOL: 0
; 0000 0A74 
; 0000 0A75     break;
;PCODE: $0000175C VOL: 0
; 0000 0A76 
; 0000 0A77 
; 0000 0A78     case 57:
;PCODE: $0000175D VOL: 0
;PCODE: $0000175E VOL: 0
;PCODE: $0000175F VOL: 0
; 0000 0A79 
; 0000 0A7A             a[0] = 0x0F8;   //ster1
;PCODE: $00001760 VOL: 0
;PCODE: $00001761 VOL: 0
; 0000 0A7B             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $00001762 VOL: 0
;PCODE: $00001763 VOL: 0
;PCODE: $00001764 VOL: 0
;PCODE: $00001765 VOL: 0
; 0000 0A7C             a[4] = 0x19;    //ster3 ABS krazek scierny
;PCODE: $00001766 VOL: 0
;PCODE: $00001767 VOL: 0
;PCODE: $00001768 VOL: 0
;PCODE: $00001769 VOL: 0
; 0000 0A7D             a[5] = 0x190;   //delta okrag
;PCODE: $0000176A VOL: 0
;PCODE: $0000176B VOL: 0
;PCODE: $0000176C VOL: 0
;PCODE: $0000176D VOL: 0
; 0000 0A7E             a[7] = 0x11;    //ster3 INV krazek scierny
;PCODE: $0000176E VOL: 0
;PCODE: $0000176F VOL: 0
;PCODE: $00001770 VOL: 0
;PCODE: $00001771 VOL: 0
; 0000 0A7F             a[9] = 0;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $00001772 VOL: 0
;PCODE: $00001773 VOL: 0
;PCODE: $00001774 VOL: 0
;PCODE: $00001775 VOL: 0
; 0000 0A80 
; 0000 0A81             a[1] = a[0]+0x001;  //ster2
;PCODE: $00001776 VOL: 0
;PCODE: $00001777 VOL: 0
;PCODE: $00001778 VOL: 0
;PCODE: $00001779 VOL: 0
; 0000 0A82             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $0000177A VOL: 0
;PCODE: $0000177B VOL: 0
;PCODE: $0000177C VOL: 0
;PCODE: $0000177D VOL: 0
; 0000 0A83             a[6] = a[5]+0x001;  //okrag
;PCODE: $0000177E VOL: 0
;PCODE: $0000177F VOL: 0
;PCODE: $00001780 VOL: 0
;PCODE: $00001781 VOL: 0
;PCODE: $00001782 VOL: 0
; 0000 0A84             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $00001783 VOL: 0
;PCODE: $00001784 VOL: 0
;PCODE: $00001785 VOL: 0
;PCODE: $00001786 VOL: 0
;PCODE: $00001787 VOL: 0
; 0000 0A85 
; 0000 0A86     break;
;PCODE: $00001788 VOL: 0
; 0000 0A87 
; 0000 0A88 
; 0000 0A89     case 58:
;PCODE: $00001789 VOL: 0
;PCODE: $0000178A VOL: 0
;PCODE: $0000178B VOL: 0
; 0000 0A8A 
; 0000 0A8B             a[0] = 0x0E4;   //ster1
;PCODE: $0000178C VOL: 0
;PCODE: $0000178D VOL: 0
; 0000 0A8C             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $0000178E VOL: 0
;PCODE: $0000178F VOL: 0
;PCODE: $00001790 VOL: 0
;PCODE: $00001791 VOL: 0
; 0000 0A8D             a[4] = 0x20;    //ster3 ABS krazek scierny
;PCODE: $00001792 VOL: 0
;PCODE: $00001793 VOL: 0
;PCODE: $00001794 VOL: 0
;PCODE: $00001795 VOL: 0
; 0000 0A8E             a[5] = 0x196;   //delta okrag
;PCODE: $00001796 VOL: 0
;PCODE: $00001797 VOL: 0
;PCODE: $00001798 VOL: 0
;PCODE: $00001799 VOL: 0
; 0000 0A8F             a[7] = 0x12;    //ster3 INV krazek scierny
;PCODE: $0000179A VOL: 0
;PCODE: $0000179B VOL: 0
;PCODE: $0000179C VOL: 0
;PCODE: $0000179D VOL: 0
; 0000 0A90             a[9] = 0;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $0000179E VOL: 0
;PCODE: $0000179F VOL: 0
;PCODE: $000017A0 VOL: 0
;PCODE: $000017A1 VOL: 0
; 0000 0A91 
; 0000 0A92             a[1] = a[0]+0x001;  //ster2
;PCODE: $000017A2 VOL: 0
;PCODE: $000017A3 VOL: 0
;PCODE: $000017A4 VOL: 0
;PCODE: $000017A5 VOL: 0
; 0000 0A93             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $000017A6 VOL: 0
;PCODE: $000017A7 VOL: 0
;PCODE: $000017A8 VOL: 0
;PCODE: $000017A9 VOL: 0
; 0000 0A94             a[6] = a[5]+0x001;  //okrag
;PCODE: $000017AA VOL: 0
;PCODE: $000017AB VOL: 0
;PCODE: $000017AC VOL: 0
;PCODE: $000017AD VOL: 0
;PCODE: $000017AE VOL: 0
; 0000 0A95             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $000017AF VOL: 0
;PCODE: $000017B0 VOL: 0
;PCODE: $000017B1 VOL: 0
;PCODE: $000017B2 VOL: 0
;PCODE: $000017B3 VOL: 0
; 0000 0A96 
; 0000 0A97     break;
;PCODE: $000017B4 VOL: 0
; 0000 0A98 
; 0000 0A99 
; 0000 0A9A     case 59:
;PCODE: $000017B5 VOL: 0
;PCODE: $000017B6 VOL: 0
;PCODE: $000017B7 VOL: 0
; 0000 0A9B 
; 0000 0A9C             a[0] = 0x052;   //ster1
;PCODE: $000017B8 VOL: 0
;PCODE: $000017B9 VOL: 0
; 0000 0A9D             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $000017BA VOL: 0
;PCODE: $000017BB VOL: 0
;PCODE: $000017BC VOL: 0
;PCODE: $000017BD VOL: 0
; 0000 0A9E             a[4] = 0x1C;    //ster3 ABS krazek scierny
;PCODE: $000017BE VOL: 0
;PCODE: $000017BF VOL: 0
;PCODE: $000017C0 VOL: 0
;PCODE: $000017C1 VOL: 0
; 0000 0A9F             a[5] = 0x199;   //delta okrag
;PCODE: $000017C2 VOL: 0
;PCODE: $000017C3 VOL: 0
;PCODE: $000017C4 VOL: 0
;PCODE: $000017C5 VOL: 0
; 0000 0AA0             a[7] = 0x12;    //ster3 INV krazek scierny
;PCODE: $000017C6 VOL: 0
;PCODE: $000017C7 VOL: 0
;PCODE: $000017C8 VOL: 0
;PCODE: $000017C9 VOL: 0
; 0000 0AA1             a[9] = 0;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $000017CA VOL: 0
;PCODE: $000017CB VOL: 0
;PCODE: $000017CC VOL: 0
;PCODE: $000017CD VOL: 0
; 0000 0AA2 
; 0000 0AA3             a[1] = a[0]+0x001;  //ster2
;PCODE: $000017CE VOL: 0
;PCODE: $000017CF VOL: 0
;PCODE: $000017D0 VOL: 0
;PCODE: $000017D1 VOL: 0
; 0000 0AA4             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $000017D2 VOL: 0
;PCODE: $000017D3 VOL: 0
;PCODE: $000017D4 VOL: 0
;PCODE: $000017D5 VOL: 0
; 0000 0AA5             a[6] = a[5]+0x001;  //okrag
;PCODE: $000017D6 VOL: 0
;PCODE: $000017D7 VOL: 0
;PCODE: $000017D8 VOL: 0
;PCODE: $000017D9 VOL: 0
;PCODE: $000017DA VOL: 0
; 0000 0AA6             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $000017DB VOL: 0
;PCODE: $000017DC VOL: 0
;PCODE: $000017DD VOL: 0
;PCODE: $000017DE VOL: 0
;PCODE: $000017DF VOL: 0
; 0000 0AA7 
; 0000 0AA8     break;
;PCODE: $000017E0 VOL: 0
; 0000 0AA9 
; 0000 0AAA 
; 0000 0AAB     case 60:
;PCODE: $000017E1 VOL: 0
;PCODE: $000017E2 VOL: 0
;PCODE: $000017E3 VOL: 0
; 0000 0AAC 
; 0000 0AAD             a[0] = 0x090;   //ster1
;PCODE: $000017E4 VOL: 0
;PCODE: $000017E5 VOL: 0
; 0000 0AAE             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $000017E6 VOL: 0
;PCODE: $000017E7 VOL: 0
;PCODE: $000017E8 VOL: 0
;PCODE: $000017E9 VOL: 0
; 0000 0AAF             a[4] = 0x1A;    //ster3 ABS krazek scierny
;PCODE: $000017EA VOL: 0
;PCODE: $000017EB VOL: 0
;PCODE: $000017EC VOL: 0
;PCODE: $000017ED VOL: 0
; 0000 0AB0             a[5] = 0x190;   //delta okrag
;PCODE: $000017EE VOL: 0
;PCODE: $000017EF VOL: 0
;PCODE: $000017F0 VOL: 0
;PCODE: $000017F1 VOL: 0
; 0000 0AB1             a[7] = 0x11;    //ster3 INV krazek scierny
;PCODE: $000017F2 VOL: 0
;PCODE: $000017F3 VOL: 0
;PCODE: $000017F4 VOL: 0
;PCODE: $000017F5 VOL: 0
; 0000 0AB2             a[9] = 0;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $000017F6 VOL: 0
;PCODE: $000017F7 VOL: 0
;PCODE: $000017F8 VOL: 0
;PCODE: $000017F9 VOL: 0
; 0000 0AB3 
; 0000 0AB4             a[1] = a[0]+0x001;  //ster2
;PCODE: $000017FA VOL: 0
;PCODE: $000017FB VOL: 0
;PCODE: $000017FC VOL: 0
;PCODE: $000017FD VOL: 0
; 0000 0AB5             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $000017FE VOL: 0
;PCODE: $000017FF VOL: 0
;PCODE: $00001800 VOL: 0
;PCODE: $00001801 VOL: 0
; 0000 0AB6             a[6] = a[5]+0x001;  //okrag
;PCODE: $00001802 VOL: 0
;PCODE: $00001803 VOL: 0
;PCODE: $00001804 VOL: 0
;PCODE: $00001805 VOL: 0
;PCODE: $00001806 VOL: 0
; 0000 0AB7             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $00001807 VOL: 0
;PCODE: $00001808 VOL: 0
;PCODE: $00001809 VOL: 0
;PCODE: $0000180A VOL: 0
;PCODE: $0000180B VOL: 0
; 0000 0AB8 
; 0000 0AB9     break;
;PCODE: $0000180C VOL: 0
; 0000 0ABA 
; 0000 0ABB 
; 0000 0ABC     case 61:
;PCODE: $0000180D VOL: 0
;PCODE: $0000180E VOL: 0
;PCODE: $0000180F VOL: 0
; 0000 0ABD 
; 0000 0ABE             a[0] = 0x0FC;   //ster1
;PCODE: $00001810 VOL: 0
;PCODE: $00001811 VOL: 0
; 0000 0ABF             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $00001812 VOL: 0
;PCODE: $00001813 VOL: 0
;PCODE: $00001814 VOL: 0
;PCODE: $00001815 VOL: 0
; 0000 0AC0             a[4] = 0x18;    //ster3 ABS krazek scierny
;PCODE: $00001816 VOL: 0
;PCODE: $00001817 VOL: 0
;PCODE: $00001818 VOL: 0
;PCODE: $00001819 VOL: 0
; 0000 0AC1             a[5] = 0x190;   //delta okrag
;PCODE: $0000181A VOL: 0
;PCODE: $0000181B VOL: 0
;PCODE: $0000181C VOL: 0
;PCODE: $0000181D VOL: 0
; 0000 0AC2             a[7] = 0x11;    //ster3 INV krazek scierny
;PCODE: $0000181E VOL: 0
;PCODE: $0000181F VOL: 0
;PCODE: $00001820 VOL: 0
;PCODE: $00001821 VOL: 0
; 0000 0AC3             a[9] = 1;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $00001822 VOL: 0
;PCODE: $00001823 VOL: 0
;PCODE: $00001824 VOL: 0
;PCODE: $00001825 VOL: 0
; 0000 0AC4 
; 0000 0AC5             a[1] = a[0]+0x001;  //ster2
;PCODE: $00001826 VOL: 0
;PCODE: $00001827 VOL: 0
;PCODE: $00001828 VOL: 0
;PCODE: $00001829 VOL: 0
; 0000 0AC6             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $0000182A VOL: 0
;PCODE: $0000182B VOL: 0
;PCODE: $0000182C VOL: 0
;PCODE: $0000182D VOL: 0
; 0000 0AC7             a[6] = a[5]+0x001;  //okrag
;PCODE: $0000182E VOL: 0
;PCODE: $0000182F VOL: 0
;PCODE: $00001830 VOL: 0
;PCODE: $00001831 VOL: 0
;PCODE: $00001832 VOL: 0
; 0000 0AC8             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $00001833 VOL: 0
;PCODE: $00001834 VOL: 0
;PCODE: $00001835 VOL: 0
;PCODE: $00001836 VOL: 0
;PCODE: $00001837 VOL: 0
; 0000 0AC9 
; 0000 0ACA     break;
;PCODE: $00001838 VOL: 0
; 0000 0ACB 
; 0000 0ACC 
; 0000 0ACD     case 62:
;PCODE: $00001839 VOL: 0
;PCODE: $0000183A VOL: 0
;PCODE: $0000183B VOL: 0
; 0000 0ACE 
; 0000 0ACF             a[0] = 0x028;   //ster1
;PCODE: $0000183C VOL: 0
;PCODE: $0000183D VOL: 0
; 0000 0AD0             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $0000183E VOL: 0
;PCODE: $0000183F VOL: 0
;PCODE: $00001840 VOL: 0
;PCODE: $00001841 VOL: 0
; 0000 0AD1             a[4] = 0x20;    //ster3 ABS krazek scierny
;PCODE: $00001842 VOL: 0
;PCODE: $00001843 VOL: 0
;PCODE: $00001844 VOL: 0
;PCODE: $00001845 VOL: 0
; 0000 0AD2             a[5] = 0x196;   //delta okrag
;PCODE: $00001846 VOL: 0
;PCODE: $00001847 VOL: 0
;PCODE: $00001848 VOL: 0
;PCODE: $00001849 VOL: 0
; 0000 0AD3             a[7] = 0x12;    //ster3 INV krazek scierny
;PCODE: $0000184A VOL: 0
;PCODE: $0000184B VOL: 0
;PCODE: $0000184C VOL: 0
;PCODE: $0000184D VOL: 0
; 0000 0AD4             a[9] = 1;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $0000184E VOL: 0
;PCODE: $0000184F VOL: 0
;PCODE: $00001850 VOL: 0
;PCODE: $00001851 VOL: 0
; 0000 0AD5 
; 0000 0AD6             a[1] = a[0]+0x001;  //ster2
;PCODE: $00001852 VOL: 0
;PCODE: $00001853 VOL: 0
;PCODE: $00001854 VOL: 0
;PCODE: $00001855 VOL: 0
; 0000 0AD7             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $00001856 VOL: 0
;PCODE: $00001857 VOL: 0
;PCODE: $00001858 VOL: 0
;PCODE: $00001859 VOL: 0
; 0000 0AD8             a[6] = a[5]+0x001;  //okrag
;PCODE: $0000185A VOL: 0
;PCODE: $0000185B VOL: 0
;PCODE: $0000185C VOL: 0
;PCODE: $0000185D VOL: 0
;PCODE: $0000185E VOL: 0
; 0000 0AD9             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $0000185F VOL: 0
;PCODE: $00001860 VOL: 0
;PCODE: $00001861 VOL: 0
;PCODE: $00001862 VOL: 0
;PCODE: $00001863 VOL: 0
; 0000 0ADA 
; 0000 0ADB     break;
;PCODE: $00001864 VOL: 0
; 0000 0ADC 
; 0000 0ADD 
; 0000 0ADE     case 63:
;PCODE: $00001865 VOL: 0
;PCODE: $00001866 VOL: 0
;PCODE: $00001867 VOL: 0
; 0000 0ADF 
; 0000 0AE0             a[0] = 0x034;   //ster1
;PCODE: $00001868 VOL: 0
;PCODE: $00001869 VOL: 0
; 0000 0AE1             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $0000186A VOL: 0
;PCODE: $0000186B VOL: 0
;PCODE: $0000186C VOL: 0
;PCODE: $0000186D VOL: 0
; 0000 0AE2             a[4] = 0x1C;    //ster3 ABS krazek scierny
;PCODE: $0000186E VOL: 0
;PCODE: $0000186F VOL: 0
;PCODE: $00001870 VOL: 0
;PCODE: $00001871 VOL: 0
; 0000 0AE3             a[5] = 0x199;   //delta okrag
;PCODE: $00001872 VOL: 0
;PCODE: $00001873 VOL: 0
;PCODE: $00001874 VOL: 0
;PCODE: $00001875 VOL: 0
; 0000 0AE4             a[7] = 0x12;    //ster3 INV krazek scierny
;PCODE: $00001876 VOL: 0
;PCODE: $00001877 VOL: 0
;PCODE: $00001878 VOL: 0
;PCODE: $00001879 VOL: 0
; 0000 0AE5             a[9] = 1;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $0000187A VOL: 0
;PCODE: $0000187B VOL: 0
;PCODE: $0000187C VOL: 0
;PCODE: $0000187D VOL: 0
; 0000 0AE6 
; 0000 0AE7             a[1] = a[0]+0x001;  //ster2
;PCODE: $0000187E VOL: 0
;PCODE: $0000187F VOL: 0
;PCODE: $00001880 VOL: 0
;PCODE: $00001881 VOL: 0
; 0000 0AE8             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $00001882 VOL: 0
;PCODE: $00001883 VOL: 0
;PCODE: $00001884 VOL: 0
;PCODE: $00001885 VOL: 0
; 0000 0AE9             a[6] = a[5]+0x001;  //okrag
;PCODE: $00001886 VOL: 0
;PCODE: $00001887 VOL: 0
;PCODE: $00001888 VOL: 0
;PCODE: $00001889 VOL: 0
;PCODE: $0000188A VOL: 0
; 0000 0AEA             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $0000188B VOL: 0
;PCODE: $0000188C VOL: 0
;PCODE: $0000188D VOL: 0
;PCODE: $0000188E VOL: 0
;PCODE: $0000188F VOL: 0
; 0000 0AEB 
; 0000 0AEC     break;
;PCODE: $00001890 VOL: 0
; 0000 0AED 
; 0000 0AEE 
; 0000 0AEF     case 64:
;PCODE: $00001891 VOL: 0
;PCODE: $00001892 VOL: 0
;PCODE: $00001893 VOL: 0
; 0000 0AF0 
; 0000 0AF1             a[0] = 0x0EC;   //ster1
;PCODE: $00001894 VOL: 0
;PCODE: $00001895 VOL: 0
; 0000 0AF2             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $00001896 VOL: 0
;PCODE: $00001897 VOL: 0
;PCODE: $00001898 VOL: 0
;PCODE: $00001899 VOL: 0
; 0000 0AF3             a[4] = 0x19;    //ster3 ABS krazek scierny
;PCODE: $0000189A VOL: 0
;PCODE: $0000189B VOL: 0
;PCODE: $0000189C VOL: 0
;PCODE: $0000189D VOL: 0
; 0000 0AF4             a[5] = 0x190;   //delta okrag
;PCODE: $0000189E VOL: 0
;PCODE: $0000189F VOL: 0
;PCODE: $000018A0 VOL: 0
;PCODE: $000018A1 VOL: 0
; 0000 0AF5             a[7] = 0x11;    //ster3 INV krazek scierny
;PCODE: $000018A2 VOL: 0
;PCODE: $000018A3 VOL: 0
;PCODE: $000018A4 VOL: 0
;PCODE: $000018A5 VOL: 0
; 0000 0AF6             a[9] = 1;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $000018A6 VOL: 0
;PCODE: $000018A7 VOL: 0
;PCODE: $000018A8 VOL: 0
;PCODE: $000018A9 VOL: 0
; 0000 0AF7 
; 0000 0AF8             a[1] = a[0]+0x001;  //ster2
;PCODE: $000018AA VOL: 0
;PCODE: $000018AB VOL: 0
;PCODE: $000018AC VOL: 0
;PCODE: $000018AD VOL: 0
; 0000 0AF9             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $000018AE VOL: 0
;PCODE: $000018AF VOL: 0
;PCODE: $000018B0 VOL: 0
;PCODE: $000018B1 VOL: 0
; 0000 0AFA             a[6] = a[5]+0x001;  //okrag
;PCODE: $000018B2 VOL: 0
;PCODE: $000018B3 VOL: 0
;PCODE: $000018B4 VOL: 0
;PCODE: $000018B5 VOL: 0
;PCODE: $000018B6 VOL: 0
; 0000 0AFB             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $000018B7 VOL: 0
;PCODE: $000018B8 VOL: 0
;PCODE: $000018B9 VOL: 0
;PCODE: $000018BA VOL: 0
;PCODE: $000018BB VOL: 0
; 0000 0AFC 
; 0000 0AFD     break;
;PCODE: $000018BC VOL: 0
; 0000 0AFE 
; 0000 0AFF 
; 0000 0B00     case 65:
;PCODE: $000018BD VOL: 0
;PCODE: $000018BE VOL: 0
;PCODE: $000018BF VOL: 0
; 0000 0B01 
; 0000 0B02             a[0] = 0x0CC;   //ster1
;PCODE: $000018C0 VOL: 0
;PCODE: $000018C1 VOL: 0
; 0000 0B03             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $000018C2 VOL: 0
;PCODE: $000018C3 VOL: 0
;PCODE: $000018C4 VOL: 0
;PCODE: $000018C5 VOL: 0
; 0000 0B04             a[4] = 0x16;    //ster3 ABS krazek scierny
;PCODE: $000018C6 VOL: 0
;PCODE: $000018C7 VOL: 0
;PCODE: $000018C8 VOL: 0
;PCODE: $000018C9 VOL: 0
; 0000 0B05             a[5] = 0x193;   //delta okrag
;PCODE: $000018CA VOL: 0
;PCODE: $000018CB VOL: 0
;PCODE: $000018CC VOL: 0
;PCODE: $000018CD VOL: 0
; 0000 0B06             a[7] = 0x12;    //ster3 INV krazek scierny
;PCODE: $000018CE VOL: 0
;PCODE: $000018CF VOL: 0
;PCODE: $000018D0 VOL: 0
;PCODE: $000018D1 VOL: 0
; 0000 0B07             a[9] = 0;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $000018D2 VOL: 0
;PCODE: $000018D3 VOL: 0
;PCODE: $000018D4 VOL: 0
;PCODE: $000018D5 VOL: 0
; 0000 0B08 
; 0000 0B09             a[1] = a[0]+0x001;  //ster2
;PCODE: $000018D6 VOL: 0
;PCODE: $000018D7 VOL: 0
;PCODE: $000018D8 VOL: 0
;PCODE: $000018D9 VOL: 0
; 0000 0B0A             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $000018DA VOL: 0
;PCODE: $000018DB VOL: 0
;PCODE: $000018DC VOL: 0
;PCODE: $000018DD VOL: 0
; 0000 0B0B             a[6] = a[5]+0x001;  //okrag
;PCODE: $000018DE VOL: 0
;PCODE: $000018DF VOL: 0
;PCODE: $000018E0 VOL: 0
;PCODE: $000018E1 VOL: 0
;PCODE: $000018E2 VOL: 0
; 0000 0B0C             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $000018E3 VOL: 0
;PCODE: $000018E4 VOL: 0
;PCODE: $000018E5 VOL: 0
;PCODE: $000018E6 VOL: 0
;PCODE: $000018E7 VOL: 0
; 0000 0B0D 
; 0000 0B0E     break;
;PCODE: $000018E8 VOL: 0
; 0000 0B0F 
; 0000 0B10 
; 0000 0B11     case 66:
;PCODE: $000018E9 VOL: 0
;PCODE: $000018EA VOL: 0
;PCODE: $000018EB VOL: 0
; 0000 0B12 
; 0000 0B13             a[0] = 0x0BC;   //ster1
;PCODE: $000018EC VOL: 0
;PCODE: $000018ED VOL: 0
; 0000 0B14             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $000018EE VOL: 0
;PCODE: $000018EF VOL: 0
;PCODE: $000018F0 VOL: 0
;PCODE: $000018F1 VOL: 0
; 0000 0B15             a[4] = 0x1C;    //ster3 ABS krazek scierny
;PCODE: $000018F2 VOL: 0
;PCODE: $000018F3 VOL: 0
;PCODE: $000018F4 VOL: 0
;PCODE: $000018F5 VOL: 0
; 0000 0B16             a[5] = 0x196;   //delta okrag
;PCODE: $000018F6 VOL: 0
;PCODE: $000018F7 VOL: 0
;PCODE: $000018F8 VOL: 0
;PCODE: $000018F9 VOL: 0
; 0000 0B17             a[7] = 0x11;    //ster3 INV krazek scierny
;PCODE: $000018FA VOL: 0
;PCODE: $000018FB VOL: 0
;PCODE: $000018FC VOL: 0
;PCODE: $000018FD VOL: 0
; 0000 0B18             a[9] = 1;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $000018FE VOL: 0
;PCODE: $000018FF VOL: 0
;PCODE: $00001900 VOL: 0
;PCODE: $00001901 VOL: 0
; 0000 0B19 
; 0000 0B1A             a[1] = a[0]+0x001;  //ster2
;PCODE: $00001902 VOL: 0
;PCODE: $00001903 VOL: 0
;PCODE: $00001904 VOL: 0
;PCODE: $00001905 VOL: 0
; 0000 0B1B             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $00001906 VOL: 0
;PCODE: $00001907 VOL: 0
;PCODE: $00001908 VOL: 0
;PCODE: $00001909 VOL: 0
; 0000 0B1C             a[6] = a[5]+0x001;  //okrag
;PCODE: $0000190A VOL: 0
;PCODE: $0000190B VOL: 0
;PCODE: $0000190C VOL: 0
;PCODE: $0000190D VOL: 0
;PCODE: $0000190E VOL: 0
; 0000 0B1D             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $0000190F VOL: 0
;PCODE: $00001910 VOL: 0
;PCODE: $00001911 VOL: 0
;PCODE: $00001912 VOL: 0
;PCODE: $00001913 VOL: 0
; 0000 0B1E 
; 0000 0B1F     break;
;PCODE: $00001914 VOL: 0
; 0000 0B20 
; 0000 0B21 
; 0000 0B22     case 67:
;PCODE: $00001915 VOL: 0
;PCODE: $00001916 VOL: 0
;PCODE: $00001917 VOL: 0
; 0000 0B23 
; 0000 0B24             a[0] = 0x09C;   //ster1
;PCODE: $00001918 VOL: 0
;PCODE: $00001919 VOL: 0
; 0000 0B25             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $0000191A VOL: 0
;PCODE: $0000191B VOL: 0
;PCODE: $0000191C VOL: 0
;PCODE: $0000191D VOL: 0
; 0000 0B26             a[4] = 0x1C;    //ster3 ABS krazek scierny
;PCODE: $0000191E VOL: 0
;PCODE: $0000191F VOL: 0
;PCODE: $00001920 VOL: 0
;PCODE: $00001921 VOL: 0
; 0000 0B27             a[5] = 0x196;   //delta okrag
;PCODE: $00001922 VOL: 0
;PCODE: $00001923 VOL: 0
;PCODE: $00001924 VOL: 0
;PCODE: $00001925 VOL: 0
; 0000 0B28             a[7] = 0x12;    //ster3 INV krazek scierny
;PCODE: $00001926 VOL: 0
;PCODE: $00001927 VOL: 0
;PCODE: $00001928 VOL: 0
;PCODE: $00001929 VOL: 0
; 0000 0B29             a[9] = 1;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $0000192A VOL: 0
;PCODE: $0000192B VOL: 0
;PCODE: $0000192C VOL: 0
;PCODE: $0000192D VOL: 0
; 0000 0B2A 
; 0000 0B2B             a[1] = a[0]+0x001;  //ster2
;PCODE: $0000192E VOL: 0
;PCODE: $0000192F VOL: 0
;PCODE: $00001930 VOL: 0
;PCODE: $00001931 VOL: 0
; 0000 0B2C             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $00001932 VOL: 0
;PCODE: $00001933 VOL: 0
;PCODE: $00001934 VOL: 0
;PCODE: $00001935 VOL: 0
; 0000 0B2D             a[6] = a[5]+0x001;  //okrag
;PCODE: $00001936 VOL: 0
;PCODE: $00001937 VOL: 0
;PCODE: $00001938 VOL: 0
;PCODE: $00001939 VOL: 0
;PCODE: $0000193A VOL: 0
; 0000 0B2E             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $0000193B VOL: 0
;PCODE: $0000193C VOL: 0
;PCODE: $0000193D VOL: 0
;PCODE: $0000193E VOL: 0
;PCODE: $0000193F VOL: 0
; 0000 0B2F 
; 0000 0B30     break;
;PCODE: $00001940 VOL: 0
; 0000 0B31 
; 0000 0B32 
; 0000 0B33     case 68:
;PCODE: $00001941 VOL: 0
;PCODE: $00001942 VOL: 0
;PCODE: $00001943 VOL: 0
; 0000 0B34 
; 0000 0B35             a[0] = 0x07C;   //ster1
;PCODE: $00001944 VOL: 0
;PCODE: $00001945 VOL: 0
; 0000 0B36             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $00001946 VOL: 0
;PCODE: $00001947 VOL: 0
;PCODE: $00001948 VOL: 0
;PCODE: $00001949 VOL: 0
; 0000 0B37             a[4] = 0x21;    //ster3 ABS krazek scierny
;PCODE: $0000194A VOL: 0
;PCODE: $0000194B VOL: 0
;PCODE: $0000194C VOL: 0
;PCODE: $0000194D VOL: 0
; 0000 0B38             a[5] = 0x199;   //delta okrag
;PCODE: $0000194E VOL: 0
;PCODE: $0000194F VOL: 0
;PCODE: $00001950 VOL: 0
;PCODE: $00001951 VOL: 0
; 0000 0B39             a[7] = 0x12;    //ster3 INV krazek scierny
;PCODE: $00001952 VOL: 0
;PCODE: $00001953 VOL: 0
;PCODE: $00001954 VOL: 0
;PCODE: $00001955 VOL: 0
; 0000 0B3A             a[9] = 1;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $00001956 VOL: 0
;PCODE: $00001957 VOL: 0
;PCODE: $00001958 VOL: 0
;PCODE: $00001959 VOL: 0
; 0000 0B3B 
; 0000 0B3C             a[1] = a[0]+0x001;  //ster2
;PCODE: $0000195A VOL: 0
;PCODE: $0000195B VOL: 0
;PCODE: $0000195C VOL: 0
;PCODE: $0000195D VOL: 0
; 0000 0B3D             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $0000195E VOL: 0
;PCODE: $0000195F VOL: 0
;PCODE: $00001960 VOL: 0
;PCODE: $00001961 VOL: 0
; 0000 0B3E             a[6] = a[5]+0x001;  //okrag
;PCODE: $00001962 VOL: 0
;PCODE: $00001963 VOL: 0
;PCODE: $00001964 VOL: 0
;PCODE: $00001965 VOL: 0
;PCODE: $00001966 VOL: 0
; 0000 0B3F             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $00001967 VOL: 0
;PCODE: $00001968 VOL: 0
;PCODE: $00001969 VOL: 0
;PCODE: $0000196A VOL: 0
;PCODE: $0000196B VOL: 0
; 0000 0B40 
; 0000 0B41     break;
;PCODE: $0000196C VOL: 0
; 0000 0B42 
; 0000 0B43 
; 0000 0B44     case 69:
;PCODE: $0000196D VOL: 0
;PCODE: $0000196E VOL: 0
;PCODE: $0000196F VOL: 0
; 0000 0B45 
; 0000 0B46             a[0] = 0x0D2;   //ster1
;PCODE: $00001970 VOL: 0
;PCODE: $00001971 VOL: 0
; 0000 0B47             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $00001972 VOL: 0
;PCODE: $00001973 VOL: 0
;PCODE: $00001974 VOL: 0
;PCODE: $00001975 VOL: 0
; 0000 0B48             a[4] = 0x16;    //ster3 ABS krazek scierny
;PCODE: $00001976 VOL: 0
;PCODE: $00001977 VOL: 0
;PCODE: $00001978 VOL: 0
;PCODE: $00001979 VOL: 0
; 0000 0B49             a[5] = 0x193;   //delta okrag
;PCODE: $0000197A VOL: 0
;PCODE: $0000197B VOL: 0
;PCODE: $0000197C VOL: 0
;PCODE: $0000197D VOL: 0
; 0000 0B4A             a[7] = 0x12;    //ster3 INV krazek scierny
;PCODE: $0000197E VOL: 0
;PCODE: $0000197F VOL: 0
;PCODE: $00001980 VOL: 0
;PCODE: $00001981 VOL: 0
; 0000 0B4B             a[9] = 1;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $00001982 VOL: 0
;PCODE: $00001983 VOL: 0
;PCODE: $00001984 VOL: 0
;PCODE: $00001985 VOL: 0
; 0000 0B4C 
; 0000 0B4D             a[1] = a[0]+0x001;  //ster2
;PCODE: $00001986 VOL: 0
;PCODE: $00001987 VOL: 0
;PCODE: $00001988 VOL: 0
;PCODE: $00001989 VOL: 0
; 0000 0B4E             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $0000198A VOL: 0
;PCODE: $0000198B VOL: 0
;PCODE: $0000198C VOL: 0
;PCODE: $0000198D VOL: 0
; 0000 0B4F             a[6] = a[5]+0x001;  //okrag
;PCODE: $0000198E VOL: 0
;PCODE: $0000198F VOL: 0
;PCODE: $00001990 VOL: 0
;PCODE: $00001991 VOL: 0
;PCODE: $00001992 VOL: 0
; 0000 0B50             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $00001993 VOL: 0
;PCODE: $00001994 VOL: 0
;PCODE: $00001995 VOL: 0
;PCODE: $00001996 VOL: 0
;PCODE: $00001997 VOL: 0
; 0000 0B51 
; 0000 0B52     break;
;PCODE: $00001998 VOL: 0
; 0000 0B53 
; 0000 0B54 
; 0000 0B55     case 70:
;PCODE: $00001999 VOL: 0
;PCODE: $0000199A VOL: 0
;PCODE: $0000199B VOL: 0
; 0000 0B56 
; 0000 0B57             a[0] = 0x0E6;   //ster1
;PCODE: $0000199C VOL: 0
;PCODE: $0000199D VOL: 0
; 0000 0B58             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $0000199E VOL: 0
;PCODE: $0000199F VOL: 0
;PCODE: $000019A0 VOL: 0
;PCODE: $000019A1 VOL: 0
; 0000 0B59             a[4] = 0x1C;    //ster3 ABS krazek scierny
;PCODE: $000019A2 VOL: 0
;PCODE: $000019A3 VOL: 0
;PCODE: $000019A4 VOL: 0
;PCODE: $000019A5 VOL: 0
; 0000 0B5A             a[5] = 0x196;   //delta okrag
;PCODE: $000019A6 VOL: 0
;PCODE: $000019A7 VOL: 0
;PCODE: $000019A8 VOL: 0
;PCODE: $000019A9 VOL: 0
; 0000 0B5B             a[7] = 0x11;    //ster3 INV krazek scierny
;PCODE: $000019AA VOL: 0
;PCODE: $000019AB VOL: 0
;PCODE: $000019AC VOL: 0
;PCODE: $000019AD VOL: 0
; 0000 0B5C             a[9] = 0;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $000019AE VOL: 0
;PCODE: $000019AF VOL: 0
;PCODE: $000019B0 VOL: 0
;PCODE: $000019B1 VOL: 0
; 0000 0B5D 
; 0000 0B5E             a[1] = a[0]+0x001;  //ster2
;PCODE: $000019B2 VOL: 0
;PCODE: $000019B3 VOL: 0
;PCODE: $000019B4 VOL: 0
;PCODE: $000019B5 VOL: 0
; 0000 0B5F             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $000019B6 VOL: 0
;PCODE: $000019B7 VOL: 0
;PCODE: $000019B8 VOL: 0
;PCODE: $000019B9 VOL: 0
; 0000 0B60             a[6] = a[5]+0x001;  //okrag
;PCODE: $000019BA VOL: 0
;PCODE: $000019BB VOL: 0
;PCODE: $000019BC VOL: 0
;PCODE: $000019BD VOL: 0
;PCODE: $000019BE VOL: 0
; 0000 0B61             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $000019BF VOL: 0
;PCODE: $000019C0 VOL: 0
;PCODE: $000019C1 VOL: 0
;PCODE: $000019C2 VOL: 0
;PCODE: $000019C3 VOL: 0
; 0000 0B62 
; 0000 0B63     break;
;PCODE: $000019C4 VOL: 0
; 0000 0B64 
; 0000 0B65 
; 0000 0B66     case 71:
;PCODE: $000019C5 VOL: 0
;PCODE: $000019C6 VOL: 0
;PCODE: $000019C7 VOL: 0
; 0000 0B67 
; 0000 0B68             a[0] = 0x0B4;   //ster1
;PCODE: $000019C8 VOL: 0
;PCODE: $000019C9 VOL: 0
; 0000 0B69             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $000019CA VOL: 0
;PCODE: $000019CB VOL: 0
;PCODE: $000019CC VOL: 0
;PCODE: $000019CD VOL: 0
; 0000 0B6A             a[4] = 0x1C;    //ster3 ABS krazek scierny
;PCODE: $000019CE VOL: 0
;PCODE: $000019CF VOL: 0
;PCODE: $000019D0 VOL: 0
;PCODE: $000019D1 VOL: 0
; 0000 0B6B             a[5] = 0x196;   //delta okrag
;PCODE: $000019D2 VOL: 0
;PCODE: $000019D3 VOL: 0
;PCODE: $000019D4 VOL: 0
;PCODE: $000019D5 VOL: 0
; 0000 0B6C             a[7] = 0x12;    //ster3 INV krazek scierny
;PCODE: $000019D6 VOL: 0
;PCODE: $000019D7 VOL: 0
;PCODE: $000019D8 VOL: 0
;PCODE: $000019D9 VOL: 0
; 0000 0B6D             a[9] = 0;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $000019DA VOL: 0
;PCODE: $000019DB VOL: 0
;PCODE: $000019DC VOL: 0
;PCODE: $000019DD VOL: 0
; 0000 0B6E 
; 0000 0B6F             a[1] = a[0]+0x001;  //ster2
;PCODE: $000019DE VOL: 0
;PCODE: $000019DF VOL: 0
;PCODE: $000019E0 VOL: 0
;PCODE: $000019E1 VOL: 0
; 0000 0B70             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $000019E2 VOL: 0
;PCODE: $000019E3 VOL: 0
;PCODE: $000019E4 VOL: 0
;PCODE: $000019E5 VOL: 0
; 0000 0B71             a[6] = a[5]+0x001;  //okrag
;PCODE: $000019E6 VOL: 0
;PCODE: $000019E7 VOL: 0
;PCODE: $000019E8 VOL: 0
;PCODE: $000019E9 VOL: 0
;PCODE: $000019EA VOL: 0
; 0000 0B72             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $000019EB VOL: 0
;PCODE: $000019EC VOL: 0
;PCODE: $000019ED VOL: 0
;PCODE: $000019EE VOL: 0
;PCODE: $000019EF VOL: 0
; 0000 0B73 
; 0000 0B74     break;
;PCODE: $000019F0 VOL: 0
; 0000 0B75 
; 0000 0B76 
; 0000 0B77     case 72:
;PCODE: $000019F1 VOL: 0
;PCODE: $000019F2 VOL: 0
;PCODE: $000019F3 VOL: 0
; 0000 0B78 
; 0000 0B79             a[0] = 0x0AC;   //ster1
;PCODE: $000019F4 VOL: 0
;PCODE: $000019F5 VOL: 0
; 0000 0B7A             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $000019F6 VOL: 0
;PCODE: $000019F7 VOL: 0
;PCODE: $000019F8 VOL: 0
;PCODE: $000019F9 VOL: 0
; 0000 0B7B             a[4] = 0x21;    //ster3 ABS krazek scierny
;PCODE: $000019FA VOL: 0
;PCODE: $000019FB VOL: 0
;PCODE: $000019FC VOL: 0
;PCODE: $000019FD VOL: 0
; 0000 0B7C             a[5] = 0x199;   //delta okrag
;PCODE: $000019FE VOL: 0
;PCODE: $000019FF VOL: 0
;PCODE: $00001A00 VOL: 0
;PCODE: $00001A01 VOL: 0
; 0000 0B7D             a[7] = 0x12;    //ster3 INV krazek scierny
;PCODE: $00001A02 VOL: 0
;PCODE: $00001A03 VOL: 0
;PCODE: $00001A04 VOL: 0
;PCODE: $00001A05 VOL: 0
; 0000 0B7E             a[9] = 0;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $00001A06 VOL: 0
;PCODE: $00001A07 VOL: 0
;PCODE: $00001A08 VOL: 0
;PCODE: $00001A09 VOL: 0
; 0000 0B7F 
; 0000 0B80             a[1] = a[0]+0x001;  //ster2
;PCODE: $00001A0A VOL: 0
;PCODE: $00001A0B VOL: 0
;PCODE: $00001A0C VOL: 0
;PCODE: $00001A0D VOL: 0
; 0000 0B81             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $00001A0E VOL: 0
;PCODE: $00001A0F VOL: 0
;PCODE: $00001A10 VOL: 0
;PCODE: $00001A11 VOL: 0
; 0000 0B82             a[6] = a[5]+0x001;  //okrag
;PCODE: $00001A12 VOL: 0
;PCODE: $00001A13 VOL: 0
;PCODE: $00001A14 VOL: 0
;PCODE: $00001A15 VOL: 0
;PCODE: $00001A16 VOL: 0
; 0000 0B83             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $00001A17 VOL: 0
;PCODE: $00001A18 VOL: 0
;PCODE: $00001A19 VOL: 0
;PCODE: $00001A1A VOL: 0
;PCODE: $00001A1B VOL: 0
; 0000 0B84 
; 0000 0B85     break;
;PCODE: $00001A1C VOL: 0
; 0000 0B86 
; 0000 0B87 
; 0000 0B88     case 73:
;PCODE: $00001A1D VOL: 0
;PCODE: $00001A1E VOL: 0
;PCODE: $00001A1F VOL: 0
; 0000 0B89 
; 0000 0B8A             a[0] = 0x012;   //ster1
;PCODE: $00001A20 VOL: 0
;PCODE: $00001A21 VOL: 0
; 0000 0B8B             a[3] = 0x10;    //ster4 INV druciak
;PCODE: $00001A22 VOL: 0
;PCODE: $00001A23 VOL: 0
;PCODE: $00001A24 VOL: 0
;PCODE: $00001A25 VOL: 0
; 0000 0B8C             a[4] = 0x1B;    //ster3 ABS krazek scierny
;PCODE: $00001A26 VOL: 0
;PCODE: $00001A27 VOL: 0
;PCODE: $00001A28 VOL: 0
;PCODE: $00001A29 VOL: 0
; 0000 0B8D             a[5] = 0x196;   //delta okrag
;PCODE: $00001A2A VOL: 0
;PCODE: $00001A2B VOL: 0
;PCODE: $00001A2C VOL: 0
;PCODE: $00001A2D VOL: 0
; 0000 0B8E             a[7] = 0x12;    //ster3 INV krazek scierny
;PCODE: $00001A2E VOL: 0
;PCODE: $00001A2F VOL: 0
;PCODE: $00001A30 VOL: 0
;PCODE: $00001A31 VOL: 0
; 0000 0B8F             a[9] = 0;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $00001A32 VOL: 0
;PCODE: $00001A33 VOL: 0
;PCODE: $00001A34 VOL: 0
;PCODE: $00001A35 VOL: 0
; 0000 0B90 
; 0000 0B91             a[1] = a[0]+0x001;  //ster2
;PCODE: $00001A36 VOL: 0
;PCODE: $00001A37 VOL: 0
;PCODE: $00001A38 VOL: 0
;PCODE: $00001A39 VOL: 0
; 0000 0B92             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $00001A3A VOL: 0
;PCODE: $00001A3B VOL: 0
;PCODE: $00001A3C VOL: 0
;PCODE: $00001A3D VOL: 0
; 0000 0B93             a[6] = a[5]+0x001;  //okrag
;PCODE: $00001A3E VOL: 0
;PCODE: $00001A3F VOL: 0
;PCODE: $00001A40 VOL: 0
;PCODE: $00001A41 VOL: 0
;PCODE: $00001A42 VOL: 0
; 0000 0B94             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $00001A43 VOL: 0
;PCODE: $00001A44 VOL: 0
;PCODE: $00001A45 VOL: 0
;PCODE: $00001A46 VOL: 0
;PCODE: $00001A47 VOL: 0
; 0000 0B95 
; 0000 0B96     break;
;PCODE: $00001A48 VOL: 0
; 0000 0B97 
; 0000 0B98 
; 0000 0B99     case 74:
;PCODE: $00001A49 VOL: 0
;PCODE: $00001A4A VOL: 0
;PCODE: $00001A4B VOL: 0
; 0000 0B9A 
; 0000 0B9B             a[0] = 0x0B2;   //ster1
;PCODE: $00001A4C VOL: 0
;PCODE: $00001A4D VOL: 0
; 0000 0B9C             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $00001A4E VOL: 0
;PCODE: $00001A4F VOL: 0
;PCODE: $00001A50 VOL: 0
;PCODE: $00001A51 VOL: 0
; 0000 0B9D             a[4] = 0x1F;    //ster3 ABS krazek scierny
;PCODE: $00001A52 VOL: 0
;PCODE: $00001A53 VOL: 0
;PCODE: $00001A54 VOL: 0
;PCODE: $00001A55 VOL: 0
; 0000 0B9E             a[5] = 0x196;   //delta okrag
;PCODE: $00001A56 VOL: 0
;PCODE: $00001A57 VOL: 0
;PCODE: $00001A58 VOL: 0
;PCODE: $00001A59 VOL: 0
; 0000 0B9F             a[7] = 0x12;    //ster3 INV krazek scierny
;PCODE: $00001A5A VOL: 0
;PCODE: $00001A5B VOL: 0
;PCODE: $00001A5C VOL: 0
;PCODE: $00001A5D VOL: 0
; 0000 0BA0             a[9] = 0;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $00001A5E VOL: 0
;PCODE: $00001A5F VOL: 0
;PCODE: $00001A60 VOL: 0
;PCODE: $00001A61 VOL: 0
; 0000 0BA1 
; 0000 0BA2             a[1] = a[0]+0x001;  //ster2
;PCODE: $00001A62 VOL: 0
;PCODE: $00001A63 VOL: 0
;PCODE: $00001A64 VOL: 0
;PCODE: $00001A65 VOL: 0
; 0000 0BA3             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $00001A66 VOL: 0
;PCODE: $00001A67 VOL: 0
;PCODE: $00001A68 VOL: 0
;PCODE: $00001A69 VOL: 0
; 0000 0BA4             a[6] = a[5]+0x001;  //okrag
;PCODE: $00001A6A VOL: 0
;PCODE: $00001A6B VOL: 0
;PCODE: $00001A6C VOL: 0
;PCODE: $00001A6D VOL: 0
;PCODE: $00001A6E VOL: 0
; 0000 0BA5             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $00001A6F VOL: 0
;PCODE: $00001A70 VOL: 0
;PCODE: $00001A71 VOL: 0
;PCODE: $00001A72 VOL: 0
;PCODE: $00001A73 VOL: 0
; 0000 0BA6 
; 0000 0BA7     break;
;PCODE: $00001A74 VOL: 0
; 0000 0BA8 
; 0000 0BA9 
; 0000 0BAA     case 75:
;PCODE: $00001A75 VOL: 0
;PCODE: $00001A76 VOL: 0
;PCODE: $00001A77 VOL: 0
; 0000 0BAB 
; 0000 0BAC             a[0] = 0x10C;   //ster1
;PCODE: $00001A78 VOL: 0
;PCODE: $00001A79 VOL: 0
; 0000 0BAD             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $00001A7A VOL: 0
;PCODE: $00001A7B VOL: 0
;PCODE: $00001A7C VOL: 0
;PCODE: $00001A7D VOL: 0
; 0000 0BAE             a[4] = 0x21;    //ster3 ABS krazek scierny
;PCODE: $00001A7E VOL: 0
;PCODE: $00001A7F VOL: 0
;PCODE: $00001A80 VOL: 0
;PCODE: $00001A81 VOL: 0
; 0000 0BAF             a[5] = 0x196;   //delta okrag
;PCODE: $00001A82 VOL: 0
;PCODE: $00001A83 VOL: 0
;PCODE: $00001A84 VOL: 0
;PCODE: $00001A85 VOL: 0
; 0000 0BB0             a[7] = 0x12;    //ster3 INV krazek scierny
;PCODE: $00001A86 VOL: 0
;PCODE: $00001A87 VOL: 0
;PCODE: $00001A88 VOL: 0
;PCODE: $00001A89 VOL: 0
; 0000 0BB1             a[9] = 0;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $00001A8A VOL: 0
;PCODE: $00001A8B VOL: 0
;PCODE: $00001A8C VOL: 0
;PCODE: $00001A8D VOL: 0
; 0000 0BB2 
; 0000 0BB3             a[1] = a[0]+0x001;  //ster2
;PCODE: $00001A8E VOL: 0
;PCODE: $00001A8F VOL: 0
;PCODE: $00001A90 VOL: 0
;PCODE: $00001A91 VOL: 0
; 0000 0BB4             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $00001A92 VOL: 0
;PCODE: $00001A93 VOL: 0
;PCODE: $00001A94 VOL: 0
;PCODE: $00001A95 VOL: 0
; 0000 0BB5             a[6] = a[5]+0x001;  //okrag
;PCODE: $00001A96 VOL: 0
;PCODE: $00001A97 VOL: 0
;PCODE: $00001A98 VOL: 0
;PCODE: $00001A99 VOL: 0
;PCODE: $00001A9A VOL: 0
; 0000 0BB6             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $00001A9B VOL: 0
;PCODE: $00001A9C VOL: 0
;PCODE: $00001A9D VOL: 0
;PCODE: $00001A9E VOL: 0
;PCODE: $00001A9F VOL: 0
; 0000 0BB7 
; 0000 0BB8     break;
;PCODE: $00001AA0 VOL: 0
; 0000 0BB9 
; 0000 0BBA 
; 0000 0BBB     case 76:
;PCODE: $00001AA1 VOL: 0
;PCODE: $00001AA2 VOL: 0
;PCODE: $00001AA3 VOL: 0
; 0000 0BBC 
; 0000 0BBD             a[0] = 0x;   //ster1
;PCODE: $00001AA4 VOL: 0
;PCODE: $00001AA5 VOL: 0
; 0000 0BBE             a[3] = 0x;    //ster4 INV druciak
;PCODE: $00001AA6 VOL: 0
;PCODE: $00001AA7 VOL: 0
;PCODE: $00001AA8 VOL: 0
;PCODE: $00001AA9 VOL: 0
; 0000 0BBF             a[4] = 0x;    //ster3 ABS krazek scierny
;PCODE: $00001AAA VOL: 0
;PCODE: $00001AAB VOL: 0
;PCODE: $00001AAC VOL: 0
;PCODE: $00001AAD VOL: 0
; 0000 0BC0             a[5] = 0x;   //delta okrag
;PCODE: $00001AAE VOL: 0
;PCODE: $00001AAF VOL: 0
;PCODE: $00001AB0 VOL: 0
;PCODE: $00001AB1 VOL: 0
; 0000 0BC1             a[7] = 0x;    //ster3 INV krazek scierny
;PCODE: $00001AB2 VOL: 0
;PCODE: $00001AB3 VOL: 0
;PCODE: $00001AB4 VOL: 0
;PCODE: $00001AB5 VOL: 0
; 0000 0BC2             a[9] = 0;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $00001AB6 VOL: 0
;PCODE: $00001AB7 VOL: 0
;PCODE: $00001AB8 VOL: 0
;PCODE: $00001AB9 VOL: 0
; 0000 0BC3 
; 0000 0BC4             a[1] = a[0]+0x001;  //ster2
;PCODE: $00001ABA VOL: 0
;PCODE: $00001ABB VOL: 0
;PCODE: $00001ABC VOL: 0
;PCODE: $00001ABD VOL: 0
; 0000 0BC5             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $00001ABE VOL: 0
;PCODE: $00001ABF VOL: 0
;PCODE: $00001AC0 VOL: 0
;PCODE: $00001AC1 VOL: 0
; 0000 0BC6             a[6] = a[5]+0x001;  //okrag
;PCODE: $00001AC2 VOL: 0
;PCODE: $00001AC3 VOL: 0
;PCODE: $00001AC4 VOL: 0
;PCODE: $00001AC5 VOL: 0
;PCODE: $00001AC6 VOL: 0
; 0000 0BC7             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $00001AC7 VOL: 0
;PCODE: $00001AC8 VOL: 0
;PCODE: $00001AC9 VOL: 0
;PCODE: $00001ACA VOL: 0
;PCODE: $00001ACB VOL: 0
; 0000 0BC8 
; 0000 0BC9     break;
;PCODE: $00001ACC VOL: 0
; 0000 0BCA 
; 0000 0BCB 
; 0000 0BCC     case 77:
;PCODE: $00001ACD VOL: 0
;PCODE: $00001ACE VOL: 0
;PCODE: $00001ACF VOL: 0
; 0000 0BCD 
; 0000 0BCE             a[0] = 0x026;   //ster1
;PCODE: $00001AD0 VOL: 0
;PCODE: $00001AD1 VOL: 0
; 0000 0BCF             a[3] = 0x10;    //ster4 INV druciak
;PCODE: $00001AD2 VOL: 0
;PCODE: $00001AD3 VOL: 0
;PCODE: $00001AD4 VOL: 0
;PCODE: $00001AD5 VOL: 0
; 0000 0BD0             a[4] = 0x1B;    //ster3 ABS krazek scierny
;PCODE: $00001AD6 VOL: 0
;PCODE: $00001AD7 VOL: 0
;PCODE: $00001AD8 VOL: 0
;PCODE: $00001AD9 VOL: 0
; 0000 0BD1             a[5] = 0x196;   //delta okrag
;PCODE: $00001ADA VOL: 0
;PCODE: $00001ADB VOL: 0
;PCODE: $00001ADC VOL: 0
;PCODE: $00001ADD VOL: 0
; 0000 0BD2             a[7] = 0x12;    //ster3 INV krazek scierny
;PCODE: $00001ADE VOL: 0
;PCODE: $00001ADF VOL: 0
;PCODE: $00001AE0 VOL: 0
;PCODE: $00001AE1 VOL: 0
; 0000 0BD3             a[9] = 1;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $00001AE2 VOL: 0
;PCODE: $00001AE3 VOL: 0
;PCODE: $00001AE4 VOL: 0
;PCODE: $00001AE5 VOL: 0
; 0000 0BD4 
; 0000 0BD5             a[1] = a[0]+0x001;  //ster2
;PCODE: $00001AE6 VOL: 0
;PCODE: $00001AE7 VOL: 0
;PCODE: $00001AE8 VOL: 0
;PCODE: $00001AE9 VOL: 0
; 0000 0BD6             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $00001AEA VOL: 0
;PCODE: $00001AEB VOL: 0
;PCODE: $00001AEC VOL: 0
;PCODE: $00001AED VOL: 0
; 0000 0BD7             a[6] = a[5]+0x001;  //okrag
;PCODE: $00001AEE VOL: 0
;PCODE: $00001AEF VOL: 0
;PCODE: $00001AF0 VOL: 0
;PCODE: $00001AF1 VOL: 0
;PCODE: $00001AF2 VOL: 0
; 0000 0BD8             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $00001AF3 VOL: 0
;PCODE: $00001AF4 VOL: 0
;PCODE: $00001AF5 VOL: 0
;PCODE: $00001AF6 VOL: 0
;PCODE: $00001AF7 VOL: 0
; 0000 0BD9 
; 0000 0BDA     break;
;PCODE: $00001AF8 VOL: 0
; 0000 0BDB 
; 0000 0BDC 
; 0000 0BDD     case 78:
;PCODE: $00001AF9 VOL: 0
;PCODE: $00001AFA VOL: 0
;PCODE: $00001AFB VOL: 0
; 0000 0BDE 
; 0000 0BDF             a[0] = 0x11C;   //ster1
;PCODE: $00001AFC VOL: 0
;PCODE: $00001AFD VOL: 0
; 0000 0BE0             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $00001AFE VOL: 0
;PCODE: $00001AFF VOL: 0
;PCODE: $00001B00 VOL: 0
;PCODE: $00001B01 VOL: 0
; 0000 0BE1             a[4] = 0x1E;    //ster3 ABS krazek scierny
;PCODE: $00001B02 VOL: 0
;PCODE: $00001B03 VOL: 0
;PCODE: $00001B04 VOL: 0
;PCODE: $00001B05 VOL: 0
; 0000 0BE2             a[5] = 0x196;   //delta okrag
;PCODE: $00001B06 VOL: 0
;PCODE: $00001B07 VOL: 0
;PCODE: $00001B08 VOL: 0
;PCODE: $00001B09 VOL: 0
; 0000 0BE3             a[7] = 0x12;    //ster3 INV krazek scierny
;PCODE: $00001B0A VOL: 0
;PCODE: $00001B0B VOL: 0
;PCODE: $00001B0C VOL: 0
;PCODE: $00001B0D VOL: 0
; 0000 0BE4             a[9] = 1;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $00001B0E VOL: 0
;PCODE: $00001B0F VOL: 0
;PCODE: $00001B10 VOL: 0
;PCODE: $00001B11 VOL: 0
; 0000 0BE5 
; 0000 0BE6             a[1] = a[0]+0x001;  //ster2
;PCODE: $00001B12 VOL: 0
;PCODE: $00001B13 VOL: 0
;PCODE: $00001B14 VOL: 0
;PCODE: $00001B15 VOL: 0
; 0000 0BE7             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $00001B16 VOL: 0
;PCODE: $00001B17 VOL: 0
;PCODE: $00001B18 VOL: 0
;PCODE: $00001B19 VOL: 0
; 0000 0BE8             a[6] = a[5]+0x001;  //okrag
;PCODE: $00001B1A VOL: 0
;PCODE: $00001B1B VOL: 0
;PCODE: $00001B1C VOL: 0
;PCODE: $00001B1D VOL: 0
;PCODE: $00001B1E VOL: 0
; 0000 0BE9             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $00001B1F VOL: 0
;PCODE: $00001B20 VOL: 0
;PCODE: $00001B21 VOL: 0
;PCODE: $00001B22 VOL: 0
;PCODE: $00001B23 VOL: 0
; 0000 0BEA 
; 0000 0BEB     break;
;PCODE: $00001B24 VOL: 0
; 0000 0BEC 
; 0000 0BED 
; 0000 0BEE     case 79:
;PCODE: $00001B25 VOL: 0
;PCODE: $00001B26 VOL: 0
;PCODE: $00001B27 VOL: 0
; 0000 0BEF 
; 0000 0BF0             a[0] = 0x112;   //ster1
;PCODE: $00001B28 VOL: 0
;PCODE: $00001B29 VOL: 0
; 0000 0BF1             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $00001B2A VOL: 0
;PCODE: $00001B2B VOL: 0
;PCODE: $00001B2C VOL: 0
;PCODE: $00001B2D VOL: 0
; 0000 0BF2             a[4] = 0x21;    //ster3 ABS krazek scierny
;PCODE: $00001B2E VOL: 0
;PCODE: $00001B2F VOL: 0
;PCODE: $00001B30 VOL: 0
;PCODE: $00001B31 VOL: 0
; 0000 0BF3             a[5] = 0x196;   //delta okrag
;PCODE: $00001B32 VOL: 0
;PCODE: $00001B33 VOL: 0
;PCODE: $00001B34 VOL: 0
;PCODE: $00001B35 VOL: 0
; 0000 0BF4             a[7] = 0x12;    //ster3 INV krazek scierny
;PCODE: $00001B36 VOL: 0
;PCODE: $00001B37 VOL: 0
;PCODE: $00001B38 VOL: 0
;PCODE: $00001B39 VOL: 0
; 0000 0BF5             a[9] = 1;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $00001B3A VOL: 0
;PCODE: $00001B3B VOL: 0
;PCODE: $00001B3C VOL: 0
;PCODE: $00001B3D VOL: 0
; 0000 0BF6 
; 0000 0BF7             a[1] = a[0]+0x001;  //ster2
;PCODE: $00001B3E VOL: 0
;PCODE: $00001B3F VOL: 0
;PCODE: $00001B40 VOL: 0
;PCODE: $00001B41 VOL: 0
; 0000 0BF8             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $00001B42 VOL: 0
;PCODE: $00001B43 VOL: 0
;PCODE: $00001B44 VOL: 0
;PCODE: $00001B45 VOL: 0
; 0000 0BF9             a[6] = a[5]+0x001;  //okrag
;PCODE: $00001B46 VOL: 0
;PCODE: $00001B47 VOL: 0
;PCODE: $00001B48 VOL: 0
;PCODE: $00001B49 VOL: 0
;PCODE: $00001B4A VOL: 0
; 0000 0BFA             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $00001B4B VOL: 0
;PCODE: $00001B4C VOL: 0
;PCODE: $00001B4D VOL: 0
;PCODE: $00001B4E VOL: 0
;PCODE: $00001B4F VOL: 0
; 0000 0BFB 
; 0000 0BFC     break;
;PCODE: $00001B50 VOL: 0
; 0000 0BFD 
; 0000 0BFE     case 80:
;PCODE: $00001B51 VOL: 0
;PCODE: $00001B52 VOL: 0
;PCODE: $00001B53 VOL: 0
; 0000 0BFF 
; 0000 0C00             a[0] = 0x;   //ster1
;PCODE: $00001B54 VOL: 0
;PCODE: $00001B55 VOL: 0
; 0000 0C01             a[3] = 0x;    //ster4 INV druciak
;PCODE: $00001B56 VOL: 0
;PCODE: $00001B57 VOL: 0
;PCODE: $00001B58 VOL: 0
;PCODE: $00001B59 VOL: 0
; 0000 0C02             a[4] = 0x;    //ster3 ABS krazek scierny
;PCODE: $00001B5A VOL: 0
;PCODE: $00001B5B VOL: 0
;PCODE: $00001B5C VOL: 0
;PCODE: $00001B5D VOL: 0
; 0000 0C03             a[5] = 0x;   //delta okrag
;PCODE: $00001B5E VOL: 0
;PCODE: $00001B5F VOL: 0
;PCODE: $00001B60 VOL: 0
;PCODE: $00001B61 VOL: 0
; 0000 0C04             a[7] = 0x;    //ster3 INV krazek scierny
;PCODE: $00001B62 VOL: 0
;PCODE: $00001B63 VOL: 0
;PCODE: $00001B64 VOL: 0
;PCODE: $00001B65 VOL: 0
; 0000 0C05             a[9] = 0;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $00001B66 VOL: 0
;PCODE: $00001B67 VOL: 0
;PCODE: $00001B68 VOL: 0
;PCODE: $00001B69 VOL: 0
; 0000 0C06 
; 0000 0C07             a[1] = a[0]+0x001;  //ster2
;PCODE: $00001B6A VOL: 0
;PCODE: $00001B6B VOL: 0
;PCODE: $00001B6C VOL: 0
;PCODE: $00001B6D VOL: 0
; 0000 0C08             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $00001B6E VOL: 0
;PCODE: $00001B6F VOL: 0
;PCODE: $00001B70 VOL: 0
;PCODE: $00001B71 VOL: 0
; 0000 0C09             a[6] = a[5]+0x001;  //okrag
;PCODE: $00001B72 VOL: 0
;PCODE: $00001B73 VOL: 0
;PCODE: $00001B74 VOL: 0
;PCODE: $00001B75 VOL: 0
;PCODE: $00001B76 VOL: 0
; 0000 0C0A             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $00001B77 VOL: 0
;PCODE: $00001B78 VOL: 0
;PCODE: $00001B79 VOL: 0
;PCODE: $00001B7A VOL: 0
;PCODE: $00001B7B VOL: 0
; 0000 0C0B 
; 0000 0C0C     break;
;PCODE: $00001B7C VOL: 0
; 0000 0C0D 
; 0000 0C0E     case 81:
;PCODE: $00001B7D VOL: 0
;PCODE: $00001B7E VOL: 0
;PCODE: $00001B7F VOL: 0
; 0000 0C0F 
; 0000 0C10             a[0] = 0x0EA;   //ster1
;PCODE: $00001B80 VOL: 0
;PCODE: $00001B81 VOL: 0
; 0000 0C11             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $00001B82 VOL: 0
;PCODE: $00001B83 VOL: 0
;PCODE: $00001B84 VOL: 0
;PCODE: $00001B85 VOL: 0
; 0000 0C12             a[4] = 0x19;    //ster3 ABS krazek scierny
;PCODE: $00001B86 VOL: 0
;PCODE: $00001B87 VOL: 0
;PCODE: $00001B88 VOL: 0
;PCODE: $00001B89 VOL: 0
; 0000 0C13             a[5] = 0x193;   //delta okrag
;PCODE: $00001B8A VOL: 0
;PCODE: $00001B8B VOL: 0
;PCODE: $00001B8C VOL: 0
;PCODE: $00001B8D VOL: 0
; 0000 0C14             a[7] = 0x12;    //ster3 INV krazek scierny
;PCODE: $00001B8E VOL: 0
;PCODE: $00001B8F VOL: 0
;PCODE: $00001B90 VOL: 0
;PCODE: $00001B91 VOL: 0
; 0000 0C15             a[9] = 0;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $00001B92 VOL: 0
;PCODE: $00001B93 VOL: 0
;PCODE: $00001B94 VOL: 0
;PCODE: $00001B95 VOL: 0
; 0000 0C16 
; 0000 0C17             a[1] = a[0]+0x001;  //ster2
;PCODE: $00001B96 VOL: 0
;PCODE: $00001B97 VOL: 0
;PCODE: $00001B98 VOL: 0
;PCODE: $00001B99 VOL: 0
; 0000 0C18             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $00001B9A VOL: 0
;PCODE: $00001B9B VOL: 0
;PCODE: $00001B9C VOL: 0
;PCODE: $00001B9D VOL: 0
; 0000 0C19             a[6] = a[5]+0x001;  //okrag
;PCODE: $00001B9E VOL: 0
;PCODE: $00001B9F VOL: 0
;PCODE: $00001BA0 VOL: 0
;PCODE: $00001BA1 VOL: 0
;PCODE: $00001BA2 VOL: 0
; 0000 0C1A             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $00001BA3 VOL: 0
;PCODE: $00001BA4 VOL: 0
;PCODE: $00001BA5 VOL: 0
;PCODE: $00001BA6 VOL: 0
;PCODE: $00001BA7 VOL: 0
; 0000 0C1B 
; 0000 0C1C     break;
;PCODE: $00001BA8 VOL: 0
; 0000 0C1D 
; 0000 0C1E 
; 0000 0C1F     case 82:
;PCODE: $00001BA9 VOL: 0
;PCODE: $00001BAA VOL: 0
;PCODE: $00001BAB VOL: 0
; 0000 0C20 
; 0000 0C21             a[0] = 0x0D8;   //ster1
;PCODE: $00001BAC VOL: 0
;PCODE: $00001BAD VOL: 0
; 0000 0C22             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $00001BAE VOL: 0
;PCODE: $00001BAF VOL: 0
;PCODE: $00001BB0 VOL: 0
;PCODE: $00001BB1 VOL: 0
; 0000 0C23             a[4] = 0x14;    //ster3 ABS krazek scierny
;PCODE: $00001BB2 VOL: 0
;PCODE: $00001BB3 VOL: 0
;PCODE: $00001BB4 VOL: 0
;PCODE: $00001BB5 VOL: 0
; 0000 0C24             a[5] = 0x190;   //delta okrag
;PCODE: $00001BB6 VOL: 0
;PCODE: $00001BB7 VOL: 0
;PCODE: $00001BB8 VOL: 0
;PCODE: $00001BB9 VOL: 0
; 0000 0C25             a[7] = 0x12;    //ster3 INV krazek scierny
;PCODE: $00001BBA VOL: 0
;PCODE: $00001BBB VOL: 0
;PCODE: $00001BBC VOL: 0
;PCODE: $00001BBD VOL: 0
; 0000 0C26             a[9] = 0;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $00001BBE VOL: 0
;PCODE: $00001BBF VOL: 0
;PCODE: $00001BC0 VOL: 0
;PCODE: $00001BC1 VOL: 0
; 0000 0C27 
; 0000 0C28             a[1] = a[0]+0x001;  //ster2
;PCODE: $00001BC2 VOL: 0
;PCODE: $00001BC3 VOL: 0
;PCODE: $00001BC4 VOL: 0
;PCODE: $00001BC5 VOL: 0
; 0000 0C29             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $00001BC6 VOL: 0
;PCODE: $00001BC7 VOL: 0
;PCODE: $00001BC8 VOL: 0
;PCODE: $00001BC9 VOL: 0
; 0000 0C2A             a[6] = a[5]+0x001;  //okrag
;PCODE: $00001BCA VOL: 0
;PCODE: $00001BCB VOL: 0
;PCODE: $00001BCC VOL: 0
;PCODE: $00001BCD VOL: 0
;PCODE: $00001BCE VOL: 0
; 0000 0C2B             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $00001BCF VOL: 0
;PCODE: $00001BD0 VOL: 0
;PCODE: $00001BD1 VOL: 0
;PCODE: $00001BD2 VOL: 0
;PCODE: $00001BD3 VOL: 0
; 0000 0C2C 
; 0000 0C2D     break;
;PCODE: $00001BD4 VOL: 0
; 0000 0C2E 
; 0000 0C2F 
; 0000 0C30     case 83:
;PCODE: $00001BD5 VOL: 0
;PCODE: $00001BD6 VOL: 0
;PCODE: $00001BD7 VOL: 0
; 0000 0C31 
; 0000 0C32             a[0] = 0x08C;   //ster1
;PCODE: $00001BD8 VOL: 0
;PCODE: $00001BD9 VOL: 0
; 0000 0C33             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $00001BDA VOL: 0
;PCODE: $00001BDB VOL: 0
;PCODE: $00001BDC VOL: 0
;PCODE: $00001BDD VOL: 0
; 0000 0C34             a[4] = 0x22;    //ster3 ABS krazek scierny
;PCODE: $00001BDE VOL: 0
;PCODE: $00001BDF VOL: 0
;PCODE: $00001BE0 VOL: 0
;PCODE: $00001BE1 VOL: 0
; 0000 0C35             a[5] = 0x199;   //delta okrag
;PCODE: $00001BE2 VOL: 0
;PCODE: $00001BE3 VOL: 0
;PCODE: $00001BE4 VOL: 0
;PCODE: $00001BE5 VOL: 0
; 0000 0C36             a[7] = 0x12;    //ster3 INV krazek scierny
;PCODE: $00001BE6 VOL: 0
;PCODE: $00001BE7 VOL: 0
;PCODE: $00001BE8 VOL: 0
;PCODE: $00001BE9 VOL: 0
; 0000 0C37             a[9] = 1;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $00001BEA VOL: 0
;PCODE: $00001BEB VOL: 0
;PCODE: $00001BEC VOL: 0
;PCODE: $00001BED VOL: 0
; 0000 0C38 
; 0000 0C39             a[1] = a[0]+0x001;  //ster2
;PCODE: $00001BEE VOL: 0
;PCODE: $00001BEF VOL: 0
;PCODE: $00001BF0 VOL: 0
;PCODE: $00001BF1 VOL: 0
; 0000 0C3A             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $00001BF2 VOL: 0
;PCODE: $00001BF3 VOL: 0
;PCODE: $00001BF4 VOL: 0
;PCODE: $00001BF5 VOL: 0
; 0000 0C3B             a[6] = a[5]+0x001;  //okrag
;PCODE: $00001BF6 VOL: 0
;PCODE: $00001BF7 VOL: 0
;PCODE: $00001BF8 VOL: 0
;PCODE: $00001BF9 VOL: 0
;PCODE: $00001BFA VOL: 0
; 0000 0C3C             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $00001BFB VOL: 0
;PCODE: $00001BFC VOL: 0
;PCODE: $00001BFD VOL: 0
;PCODE: $00001BFE VOL: 0
;PCODE: $00001BFF VOL: 0
; 0000 0C3D 
; 0000 0C3E     break;
;PCODE: $00001C00 VOL: 0
; 0000 0C3F 
; 0000 0C40 
; 0000 0C41     case 84:
;PCODE: $00001C01 VOL: 0
;PCODE: $00001C02 VOL: 0
;PCODE: $00001C03 VOL: 0
; 0000 0C42 
; 0000 0C43             a[0] = 0x0A0;   //ster1
;PCODE: $00001C04 VOL: 0
;PCODE: $00001C05 VOL: 0
; 0000 0C44             a[3] = 0x12;    //ster4 INV druciak
;PCODE: $00001C06 VOL: 0
;PCODE: $00001C07 VOL: 0
;PCODE: $00001C08 VOL: 0
;PCODE: $00001C09 VOL: 0
; 0000 0C45             a[4] = 0x24;    //ster3 ABS krazek scierny
;PCODE: $00001C0A VOL: 0
;PCODE: $00001C0B VOL: 0
;PCODE: $00001C0C VOL: 0
;PCODE: $00001C0D VOL: 0
; 0000 0C46             a[5] = 0x196;   //delta okrag
;PCODE: $00001C0E VOL: 0
;PCODE: $00001C0F VOL: 0
;PCODE: $00001C10 VOL: 0
;PCODE: $00001C11 VOL: 0
; 0000 0C47             a[7] = 0x10;    //ster3 INV krazek scierny
;PCODE: $00001C12 VOL: 0
;PCODE: $00001C13 VOL: 0
;PCODE: $00001C14 VOL: 0
;PCODE: $00001C15 VOL: 0
; 0000 0C48             a[9] = 1;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $00001C16 VOL: 0
;PCODE: $00001C17 VOL: 0
;PCODE: $00001C18 VOL: 0
;PCODE: $00001C19 VOL: 0
; 0000 0C49 
; 0000 0C4A             a[1] = a[0]+0x001;  //ster2
;PCODE: $00001C1A VOL: 0
;PCODE: $00001C1B VOL: 0
;PCODE: $00001C1C VOL: 0
;PCODE: $00001C1D VOL: 0
; 0000 0C4B             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $00001C1E VOL: 0
;PCODE: $00001C1F VOL: 0
;PCODE: $00001C20 VOL: 0
;PCODE: $00001C21 VOL: 0
; 0000 0C4C             a[6] = a[5]+0x001;  //okrag
;PCODE: $00001C22 VOL: 0
;PCODE: $00001C23 VOL: 0
;PCODE: $00001C24 VOL: 0
;PCODE: $00001C25 VOL: 0
;PCODE: $00001C26 VOL: 0
; 0000 0C4D             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $00001C27 VOL: 0
;PCODE: $00001C28 VOL: 0
;PCODE: $00001C29 VOL: 0
;PCODE: $00001C2A VOL: 0
;PCODE: $00001C2B VOL: 0
; 0000 0C4E 
; 0000 0C4F     break;
;PCODE: $00001C2C VOL: 0
; 0000 0C50 
; 0000 0C51 
; 0000 0C52    case 85:
;PCODE: $00001C2D VOL: 0
;PCODE: $00001C2E VOL: 0
;PCODE: $00001C2F VOL: 0
; 0000 0C53 
; 0000 0C54             a[0] = 0x0AE;   //ster1
;PCODE: $00001C30 VOL: 0
;PCODE: $00001C31 VOL: 0
; 0000 0C55             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $00001C32 VOL: 0
;PCODE: $00001C33 VOL: 0
;PCODE: $00001C34 VOL: 0
;PCODE: $00001C35 VOL: 0
; 0000 0C56             a[4] = 0x19;    //ster3 ABS krazek scierny
;PCODE: $00001C36 VOL: 0
;PCODE: $00001C37 VOL: 0
;PCODE: $00001C38 VOL: 0
;PCODE: $00001C39 VOL: 0
; 0000 0C57             a[5] = 0x193;   //delta okrag
;PCODE: $00001C3A VOL: 0
;PCODE: $00001C3B VOL: 0
;PCODE: $00001C3C VOL: 0
;PCODE: $00001C3D VOL: 0
; 0000 0C58             a[7] = 0x12;    //ster3 INV krazek scierny
;PCODE: $00001C3E VOL: 0
;PCODE: $00001C3F VOL: 0
;PCODE: $00001C40 VOL: 0
;PCODE: $00001C41 VOL: 0
; 0000 0C59             a[9] = 1;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $00001C42 VOL: 0
;PCODE: $00001C43 VOL: 0
;PCODE: $00001C44 VOL: 0
;PCODE: $00001C45 VOL: 0
; 0000 0C5A 
; 0000 0C5B             a[1] = a[0]+0x001;  //ster2
;PCODE: $00001C46 VOL: 0
;PCODE: $00001C47 VOL: 0
;PCODE: $00001C48 VOL: 0
;PCODE: $00001C49 VOL: 0
; 0000 0C5C             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $00001C4A VOL: 0
;PCODE: $00001C4B VOL: 0
;PCODE: $00001C4C VOL: 0
;PCODE: $00001C4D VOL: 0
; 0000 0C5D             a[6] = a[5]+0x001;  //okrag
;PCODE: $00001C4E VOL: 0
;PCODE: $00001C4F VOL: 0
;PCODE: $00001C50 VOL: 0
;PCODE: $00001C51 VOL: 0
;PCODE: $00001C52 VOL: 0
; 0000 0C5E             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $00001C53 VOL: 0
;PCODE: $00001C54 VOL: 0
;PCODE: $00001C55 VOL: 0
;PCODE: $00001C56 VOL: 0
;PCODE: $00001C57 VOL: 0
; 0000 0C5F 
; 0000 0C60     break;
;PCODE: $00001C58 VOL: 0
; 0000 0C61 
; 0000 0C62     case 86:
;PCODE: $00001C59 VOL: 0
;PCODE: $00001C5A VOL: 0
;PCODE: $00001C5B VOL: 0
; 0000 0C63 
; 0000 0C64             a[0] = 0x0F6;   //ster1
;PCODE: $00001C5C VOL: 0
;PCODE: $00001C5D VOL: 0
; 0000 0C65             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $00001C5E VOL: 0
;PCODE: $00001C5F VOL: 0
;PCODE: $00001C60 VOL: 0
;PCODE: $00001C61 VOL: 0
; 0000 0C66             a[4] = 0x14;    //ster3 ABS krazek scierny
;PCODE: $00001C62 VOL: 0
;PCODE: $00001C63 VOL: 0
;PCODE: $00001C64 VOL: 0
;PCODE: $00001C65 VOL: 0
; 0000 0C67             a[5] = 0x190;   //delta okrag
;PCODE: $00001C66 VOL: 0
;PCODE: $00001C67 VOL: 0
;PCODE: $00001C68 VOL: 0
;PCODE: $00001C69 VOL: 0
; 0000 0C68             a[7] = 0x12;    //ster3 INV krazek scierny
;PCODE: $00001C6A VOL: 0
;PCODE: $00001C6B VOL: 0
;PCODE: $00001C6C VOL: 0
;PCODE: $00001C6D VOL: 0
; 0000 0C69             a[9] = 1;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $00001C6E VOL: 0
;PCODE: $00001C6F VOL: 0
;PCODE: $00001C70 VOL: 0
;PCODE: $00001C71 VOL: 0
; 0000 0C6A 
; 0000 0C6B             a[1] = a[0]+0x001;  //ster2
;PCODE: $00001C72 VOL: 0
;PCODE: $00001C73 VOL: 0
;PCODE: $00001C74 VOL: 0
;PCODE: $00001C75 VOL: 0
; 0000 0C6C             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $00001C76 VOL: 0
;PCODE: $00001C77 VOL: 0
;PCODE: $00001C78 VOL: 0
;PCODE: $00001C79 VOL: 0
; 0000 0C6D             a[6] = a[5]+0x001;  //okrag
;PCODE: $00001C7A VOL: 0
;PCODE: $00001C7B VOL: 0
;PCODE: $00001C7C VOL: 0
;PCODE: $00001C7D VOL: 0
;PCODE: $00001C7E VOL: 0
; 0000 0C6E             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $00001C7F VOL: 0
;PCODE: $00001C80 VOL: 0
;PCODE: $00001C81 VOL: 0
;PCODE: $00001C82 VOL: 0
;PCODE: $00001C83 VOL: 0
; 0000 0C6F 
; 0000 0C70     break;
;PCODE: $00001C84 VOL: 0
; 0000 0C71 
; 0000 0C72 
; 0000 0C73     case 87:
;PCODE: $00001C85 VOL: 0
;PCODE: $00001C86 VOL: 0
;PCODE: $00001C87 VOL: 0
; 0000 0C74 
; 0000 0C75             a[0] = 0x0C4;   //ster1
;PCODE: $00001C88 VOL: 0
;PCODE: $00001C89 VOL: 0
; 0000 0C76             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $00001C8A VOL: 0
;PCODE: $00001C8B VOL: 0
;PCODE: $00001C8C VOL: 0
;PCODE: $00001C8D VOL: 0
; 0000 0C77             a[4] = 0x23;    //ster3 ABS krazek scierny
;PCODE: $00001C8E VOL: 0
;PCODE: $00001C8F VOL: 0
;PCODE: $00001C90 VOL: 0
;PCODE: $00001C91 VOL: 0
; 0000 0C78             a[5] = 0x199;   //delta okrag
;PCODE: $00001C92 VOL: 0
;PCODE: $00001C93 VOL: 0
;PCODE: $00001C94 VOL: 0
;PCODE: $00001C95 VOL: 0
; 0000 0C79             a[7] = 0x12;    //ster3 INV krazek scierny
;PCODE: $00001C96 VOL: 0
;PCODE: $00001C97 VOL: 0
;PCODE: $00001C98 VOL: 0
;PCODE: $00001C99 VOL: 0
; 0000 0C7A             a[9] = 0;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $00001C9A VOL: 0
;PCODE: $00001C9B VOL: 0
;PCODE: $00001C9C VOL: 0
;PCODE: $00001C9D VOL: 0
; 0000 0C7B 
; 0000 0C7C             a[1] = a[0]+0x001;  //ster2
;PCODE: $00001C9E VOL: 0
;PCODE: $00001C9F VOL: 0
;PCODE: $00001CA0 VOL: 0
;PCODE: $00001CA1 VOL: 0
; 0000 0C7D             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $00001CA2 VOL: 0
;PCODE: $00001CA3 VOL: 0
;PCODE: $00001CA4 VOL: 0
;PCODE: $00001CA5 VOL: 0
; 0000 0C7E             a[6] = a[5]+0x001;  //okrag
;PCODE: $00001CA6 VOL: 0
;PCODE: $00001CA7 VOL: 0
;PCODE: $00001CA8 VOL: 0
;PCODE: $00001CA9 VOL: 0
;PCODE: $00001CAA VOL: 0
; 0000 0C7F             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $00001CAB VOL: 0
;PCODE: $00001CAC VOL: 0
;PCODE: $00001CAD VOL: 0
;PCODE: $00001CAE VOL: 0
;PCODE: $00001CAF VOL: 0
; 0000 0C80 
; 0000 0C81     break;
;PCODE: $00001CB0 VOL: 0
; 0000 0C82 
; 0000 0C83 
; 0000 0C84     case 88:
;PCODE: $00001CB1 VOL: 0
;PCODE: $00001CB2 VOL: 0
;PCODE: $00001CB3 VOL: 0
; 0000 0C85 
; 0000 0C86             a[0] = 0x07E;   //ster1
;PCODE: $00001CB4 VOL: 0
;PCODE: $00001CB5 VOL: 0
; 0000 0C87             a[3] = 0x12;    //ster4 INV druciak
;PCODE: $00001CB6 VOL: 0
;PCODE: $00001CB7 VOL: 0
;PCODE: $00001CB8 VOL: 0
;PCODE: $00001CB9 VOL: 0
; 0000 0C88             a[4] = 0x24;    //ster3 ABS krazek scierny
;PCODE: $00001CBA VOL: 0
;PCODE: $00001CBB VOL: 0
;PCODE: $00001CBC VOL: 0
;PCODE: $00001CBD VOL: 0
; 0000 0C89             a[5] = 0x196;   //delta okrag
;PCODE: $00001CBE VOL: 0
;PCODE: $00001CBF VOL: 0
;PCODE: $00001CC0 VOL: 0
;PCODE: $00001CC1 VOL: 0
; 0000 0C8A             a[7] = 0x10;    //ster3 INV krazek scierny
;PCODE: $00001CC2 VOL: 0
;PCODE: $00001CC3 VOL: 0
;PCODE: $00001CC4 VOL: 0
;PCODE: $00001CC5 VOL: 0
; 0000 0C8B             a[9] = 0;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $00001CC6 VOL: 0
;PCODE: $00001CC7 VOL: 0
;PCODE: $00001CC8 VOL: 0
;PCODE: $00001CC9 VOL: 0
; 0000 0C8C 
; 0000 0C8D             a[1] = a[0]+0x001;  //ster2
;PCODE: $00001CCA VOL: 0
;PCODE: $00001CCB VOL: 0
;PCODE: $00001CCC VOL: 0
;PCODE: $00001CCD VOL: 0
; 0000 0C8E             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $00001CCE VOL: 0
;PCODE: $00001CCF VOL: 0
;PCODE: $00001CD0 VOL: 0
;PCODE: $00001CD1 VOL: 0
; 0000 0C8F             a[6] = a[5]+0x001;  //okrag
;PCODE: $00001CD2 VOL: 0
;PCODE: $00001CD3 VOL: 0
;PCODE: $00001CD4 VOL: 0
;PCODE: $00001CD5 VOL: 0
;PCODE: $00001CD6 VOL: 0
; 0000 0C90             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $00001CD7 VOL: 0
;PCODE: $00001CD8 VOL: 0
;PCODE: $00001CD9 VOL: 0
;PCODE: $00001CDA VOL: 0
;PCODE: $00001CDB VOL: 0
; 0000 0C91 
; 0000 0C92     break;
;PCODE: $00001CDC VOL: 0
; 0000 0C93 
; 0000 0C94 
; 0000 0C95     case 89:
;PCODE: $00001CDD VOL: 0
;PCODE: $00001CDE VOL: 0
;PCODE: $00001CDF VOL: 0
; 0000 0C96 
; 0000 0C97             a[0] = 0x02C;   //ster1
;PCODE: $00001CE0 VOL: 0
;PCODE: $00001CE1 VOL: 0
; 0000 0C98             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $00001CE2 VOL: 0
;PCODE: $00001CE3 VOL: 0
;PCODE: $00001CE4 VOL: 0
;PCODE: $00001CE5 VOL: 0
; 0000 0C99             a[4] = 0x1A;    //ster3 ABS krazek scierny
;PCODE: $00001CE6 VOL: 0
;PCODE: $00001CE7 VOL: 0
;PCODE: $00001CE8 VOL: 0
;PCODE: $00001CE9 VOL: 0
; 0000 0C9A             a[5] = 0x196;   //delta okrag
;PCODE: $00001CEA VOL: 0
;PCODE: $00001CEB VOL: 0
;PCODE: $00001CEC VOL: 0
;PCODE: $00001CED VOL: 0
; 0000 0C9B             a[7] = 0x12;    //ster3 INV krazek scierny
;PCODE: $00001CEE VOL: 0
;PCODE: $00001CEF VOL: 0
;PCODE: $00001CF0 VOL: 0
;PCODE: $00001CF1 VOL: 0
; 0000 0C9C             a[9] = 0;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $00001CF2 VOL: 0
;PCODE: $00001CF3 VOL: 0
;PCODE: $00001CF4 VOL: 0
;PCODE: $00001CF5 VOL: 0
; 0000 0C9D 
; 0000 0C9E             a[1] = a[0]+0x001;  //ster2
;PCODE: $00001CF6 VOL: 0
;PCODE: $00001CF7 VOL: 0
;PCODE: $00001CF8 VOL: 0
;PCODE: $00001CF9 VOL: 0
; 0000 0C9F             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $00001CFA VOL: 0
;PCODE: $00001CFB VOL: 0
;PCODE: $00001CFC VOL: 0
;PCODE: $00001CFD VOL: 0
; 0000 0CA0             a[6] = a[5]+0x001;  //okrag
;PCODE: $00001CFE VOL: 0
;PCODE: $00001CFF VOL: 0
;PCODE: $00001D00 VOL: 0
;PCODE: $00001D01 VOL: 0
;PCODE: $00001D02 VOL: 0
; 0000 0CA1             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $00001D03 VOL: 0
;PCODE: $00001D04 VOL: 0
;PCODE: $00001D05 VOL: 0
;PCODE: $00001D06 VOL: 0
;PCODE: $00001D07 VOL: 0
; 0000 0CA2 
; 0000 0CA3     break;
;PCODE: $00001D08 VOL: 0
; 0000 0CA4 
; 0000 0CA5 
; 0000 0CA6     case 90:
;PCODE: $00001D09 VOL: 0
;PCODE: $00001D0A VOL: 0
;PCODE: $00001D0B VOL: 0
; 0000 0CA7 
; 0000 0CA8             a[0] = 0x0F0;   //ster1
;PCODE: $00001D0C VOL: 0
;PCODE: $00001D0D VOL: 0
; 0000 0CA9             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $00001D0E VOL: 0
;PCODE: $00001D0F VOL: 0
;PCODE: $00001D10 VOL: 0
;PCODE: $00001D11 VOL: 0
; 0000 0CAA             a[4] = 0x1B;    //ster3 ABS krazek scierny
;PCODE: $00001D12 VOL: 0
;PCODE: $00001D13 VOL: 0
;PCODE: $00001D14 VOL: 0
;PCODE: $00001D15 VOL: 0
; 0000 0CAB             a[5] = 0x196;   //delta okrag
;PCODE: $00001D16 VOL: 0
;PCODE: $00001D17 VOL: 0
;PCODE: $00001D18 VOL: 0
;PCODE: $00001D19 VOL: 0
; 0000 0CAC             a[7] = 0x11;    //ster3 INV krazek scierny
;PCODE: $00001D1A VOL: 0
;PCODE: $00001D1B VOL: 0
;PCODE: $00001D1C VOL: 0
;PCODE: $00001D1D VOL: 0
; 0000 0CAD             a[9] = 1;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $00001D1E VOL: 0
;PCODE: $00001D1F VOL: 0
;PCODE: $00001D20 VOL: 0
;PCODE: $00001D21 VOL: 0
; 0000 0CAE 
; 0000 0CAF             a[1] = a[0]+0x001;  //ster2
;PCODE: $00001D22 VOL: 0
;PCODE: $00001D23 VOL: 0
;PCODE: $00001D24 VOL: 0
;PCODE: $00001D25 VOL: 0
; 0000 0CB0             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $00001D26 VOL: 0
;PCODE: $00001D27 VOL: 0
;PCODE: $00001D28 VOL: 0
;PCODE: $00001D29 VOL: 0
; 0000 0CB1             a[6] = a[5]+0x001;  //okrag
;PCODE: $00001D2A VOL: 0
;PCODE: $00001D2B VOL: 0
;PCODE: $00001D2C VOL: 0
;PCODE: $00001D2D VOL: 0
;PCODE: $00001D2E VOL: 0
; 0000 0CB2             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $00001D2F VOL: 0
;PCODE: $00001D30 VOL: 0
;PCODE: $00001D31 VOL: 0
;PCODE: $00001D32 VOL: 0
;PCODE: $00001D33 VOL: 0
; 0000 0CB3 
; 0000 0CB4     break;
;PCODE: $00001D34 VOL: 0
; 0000 0CB5 
; 0000 0CB6 
; 0000 0CB7     case 91:
;PCODE: $00001D35 VOL: 0
;PCODE: $00001D36 VOL: 0
;PCODE: $00001D37 VOL: 0
; 0000 0CB8 
; 0000 0CB9             a[0] = 0x0A8;   //ster1
;PCODE: $00001D38 VOL: 0
;PCODE: $00001D39 VOL: 0
; 0000 0CBA             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $00001D3A VOL: 0
;PCODE: $00001D3B VOL: 0
;PCODE: $00001D3C VOL: 0
;PCODE: $00001D3D VOL: 0
; 0000 0CBB             a[4] = 0x20;    //ster3 ABS krazek scierny
;PCODE: $00001D3E VOL: 0
;PCODE: $00001D3F VOL: 0
;PCODE: $00001D40 VOL: 0
;PCODE: $00001D41 VOL: 0
; 0000 0CBC             a[5] = 0x199;   //delta okrag
;PCODE: $00001D42 VOL: 0
;PCODE: $00001D43 VOL: 0
;PCODE: $00001D44 VOL: 0
;PCODE: $00001D45 VOL: 0
; 0000 0CBD             a[7] = 0x12;    //ster3 INV krazek scierny
;PCODE: $00001D46 VOL: 0
;PCODE: $00001D47 VOL: 0
;PCODE: $00001D48 VOL: 0
;PCODE: $00001D49 VOL: 0
; 0000 0CBE             a[9] = 1;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $00001D4A VOL: 0
;PCODE: $00001D4B VOL: 0
;PCODE: $00001D4C VOL: 0
;PCODE: $00001D4D VOL: 0
; 0000 0CBF 
; 0000 0CC0             a[1] = a[0]+0x001;  //ster2
;PCODE: $00001D4E VOL: 0
;PCODE: $00001D4F VOL: 0
;PCODE: $00001D50 VOL: 0
;PCODE: $00001D51 VOL: 0
; 0000 0CC1             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $00001D52 VOL: 0
;PCODE: $00001D53 VOL: 0
;PCODE: $00001D54 VOL: 0
;PCODE: $00001D55 VOL: 0
; 0000 0CC2             a[6] = a[5]+0x001;  //okrag
;PCODE: $00001D56 VOL: 0
;PCODE: $00001D57 VOL: 0
;PCODE: $00001D58 VOL: 0
;PCODE: $00001D59 VOL: 0
;PCODE: $00001D5A VOL: 0
; 0000 0CC3             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $00001D5B VOL: 0
;PCODE: $00001D5C VOL: 0
;PCODE: $00001D5D VOL: 0
;PCODE: $00001D5E VOL: 0
;PCODE: $00001D5F VOL: 0
; 0000 0CC4 
; 0000 0CC5     break;
;PCODE: $00001D60 VOL: 0
; 0000 0CC6 
; 0000 0CC7 
; 0000 0CC8     case 92:
;PCODE: $00001D61 VOL: 0
;PCODE: $00001D62 VOL: 0
;PCODE: $00001D63 VOL: 0
; 0000 0CC9 
; 0000 0CCA             a[0] = 0x;   //ster1
;PCODE: $00001D64 VOL: 0
;PCODE: $00001D65 VOL: 0
; 0000 0CCB             a[3] = 0x;    //ster4 INV druciak
;PCODE: $00001D66 VOL: 0
;PCODE: $00001D67 VOL: 0
;PCODE: $00001D68 VOL: 0
;PCODE: $00001D69 VOL: 0
; 0000 0CCC             a[4] = 0x;    //ster3 ABS krazek scierny
;PCODE: $00001D6A VOL: 0
;PCODE: $00001D6B VOL: 0
;PCODE: $00001D6C VOL: 0
;PCODE: $00001D6D VOL: 0
; 0000 0CCD             a[5] = 0x;   //delta okrag
;PCODE: $00001D6E VOL: 0
;PCODE: $00001D6F VOL: 0
;PCODE: $00001D70 VOL: 0
;PCODE: $00001D71 VOL: 0
; 0000 0CCE             a[7] = 0x;    //ster3 INV krazek scierny
;PCODE: $00001D72 VOL: 0
;PCODE: $00001D73 VOL: 0
;PCODE: $00001D74 VOL: 0
;PCODE: $00001D75 VOL: 0
; 0000 0CCF             a[9] = 0;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $00001D76 VOL: 0
;PCODE: $00001D77 VOL: 0
;PCODE: $00001D78 VOL: 0
;PCODE: $00001D79 VOL: 0
; 0000 0CD0 
; 0000 0CD1             a[1] = a[0]+0x001;  //ster2
;PCODE: $00001D7A VOL: 0
;PCODE: $00001D7B VOL: 0
;PCODE: $00001D7C VOL: 0
;PCODE: $00001D7D VOL: 0
; 0000 0CD2             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $00001D7E VOL: 0
;PCODE: $00001D7F VOL: 0
;PCODE: $00001D80 VOL: 0
;PCODE: $00001D81 VOL: 0
; 0000 0CD3             a[6] = a[5]+0x001;  //okrag
;PCODE: $00001D82 VOL: 0
;PCODE: $00001D83 VOL: 0
;PCODE: $00001D84 VOL: 0
;PCODE: $00001D85 VOL: 0
;PCODE: $00001D86 VOL: 0
; 0000 0CD4             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $00001D87 VOL: 0
;PCODE: $00001D88 VOL: 0
;PCODE: $00001D89 VOL: 0
;PCODE: $00001D8A VOL: 0
;PCODE: $00001D8B VOL: 0
; 0000 0CD5 
; 0000 0CD6     break;
;PCODE: $00001D8C VOL: 0
; 0000 0CD7 
; 0000 0CD8 
; 0000 0CD9     case 93:
;PCODE: $00001D8D VOL: 0
;PCODE: $00001D8E VOL: 0
;PCODE: $00001D8F VOL: 0
; 0000 0CDA 
; 0000 0CDB             a[0] = 0x030;   //ster1
;PCODE: $00001D90 VOL: 0
;PCODE: $00001D91 VOL: 0
; 0000 0CDC             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $00001D92 VOL: 0
;PCODE: $00001D93 VOL: 0
;PCODE: $00001D94 VOL: 0
;PCODE: $00001D95 VOL: 0
; 0000 0CDD             a[4] = 0x1A;    //ster3 ABS krazek scierny
;PCODE: $00001D96 VOL: 0
;PCODE: $00001D97 VOL: 0
;PCODE: $00001D98 VOL: 0
;PCODE: $00001D99 VOL: 0
; 0000 0CDE             a[5] = 0x196;   //delta okrag
;PCODE: $00001D9A VOL: 0
;PCODE: $00001D9B VOL: 0
;PCODE: $00001D9C VOL: 0
;PCODE: $00001D9D VOL: 0
; 0000 0CDF             a[7] = 0x12;    //ster3 INV krazek scierny
;PCODE: $00001D9E VOL: 0
;PCODE: $00001D9F VOL: 0
;PCODE: $00001DA0 VOL: 0
;PCODE: $00001DA1 VOL: 0
; 0000 0CE0             a[9] = 1;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $00001DA2 VOL: 0
;PCODE: $00001DA3 VOL: 0
;PCODE: $00001DA4 VOL: 0
;PCODE: $00001DA5 VOL: 0
; 0000 0CE1 
; 0000 0CE2             a[1] = a[0]+0x001;  //ster2
;PCODE: $00001DA6 VOL: 0
;PCODE: $00001DA7 VOL: 0
;PCODE: $00001DA8 VOL: 0
;PCODE: $00001DA9 VOL: 0
; 0000 0CE3             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $00001DAA VOL: 0
;PCODE: $00001DAB VOL: 0
;PCODE: $00001DAC VOL: 0
;PCODE: $00001DAD VOL: 0
; 0000 0CE4             a[6] = a[5]+0x001;  //okrag
;PCODE: $00001DAE VOL: 0
;PCODE: $00001DAF VOL: 0
;PCODE: $00001DB0 VOL: 0
;PCODE: $00001DB1 VOL: 0
;PCODE: $00001DB2 VOL: 0
; 0000 0CE5             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $00001DB3 VOL: 0
;PCODE: $00001DB4 VOL: 0
;PCODE: $00001DB5 VOL: 0
;PCODE: $00001DB6 VOL: 0
;PCODE: $00001DB7 VOL: 0
; 0000 0CE6 
; 0000 0CE7     break;
;PCODE: $00001DB8 VOL: 0
; 0000 0CE8 
; 0000 0CE9 
; 0000 0CEA     case 94:
;PCODE: $00001DB9 VOL: 0
;PCODE: $00001DBA VOL: 0
;PCODE: $00001DBB VOL: 0
; 0000 0CEB 
; 0000 0CEC             a[0] = 0x0F4;   //ster1
;PCODE: $00001DBC VOL: 0
;PCODE: $00001DBD VOL: 0
; 0000 0CED             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $00001DBE VOL: 0
;PCODE: $00001DBF VOL: 0
;PCODE: $00001DC0 VOL: 0
;PCODE: $00001DC1 VOL: 0
; 0000 0CEE             a[4] = 0x1B;    //ster3 ABS krazek scierny
;PCODE: $00001DC2 VOL: 0
;PCODE: $00001DC3 VOL: 0
;PCODE: $00001DC4 VOL: 0
;PCODE: $00001DC5 VOL: 0
; 0000 0CEF             a[5] = 0x196;   //delta okrag
;PCODE: $00001DC6 VOL: 0
;PCODE: $00001DC7 VOL: 0
;PCODE: $00001DC8 VOL: 0
;PCODE: $00001DC9 VOL: 0
; 0000 0CF0             a[7] = 0x11;    //ster3 INV krazek scierny
;PCODE: $00001DCA VOL: 0
;PCODE: $00001DCB VOL: 0
;PCODE: $00001DCC VOL: 0
;PCODE: $00001DCD VOL: 0
; 0000 0CF1             a[9] = 0;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $00001DCE VOL: 0
;PCODE: $00001DCF VOL: 0
;PCODE: $00001DD0 VOL: 0
;PCODE: $00001DD1 VOL: 0
; 0000 0CF2 
; 0000 0CF3             a[1] = a[0]+0x001;  //ster2
;PCODE: $00001DD2 VOL: 0
;PCODE: $00001DD3 VOL: 0
;PCODE: $00001DD4 VOL: 0
;PCODE: $00001DD5 VOL: 0
; 0000 0CF4             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $00001DD6 VOL: 0
;PCODE: $00001DD7 VOL: 0
;PCODE: $00001DD8 VOL: 0
;PCODE: $00001DD9 VOL: 0
; 0000 0CF5             a[6] = a[5]+0x001;  //okrag
;PCODE: $00001DDA VOL: 0
;PCODE: $00001DDB VOL: 0
;PCODE: $00001DDC VOL: 0
;PCODE: $00001DDD VOL: 0
;PCODE: $00001DDE VOL: 0
; 0000 0CF6             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $00001DDF VOL: 0
;PCODE: $00001DE0 VOL: 0
;PCODE: $00001DE1 VOL: 0
;PCODE: $00001DE2 VOL: 0
;PCODE: $00001DE3 VOL: 0
; 0000 0CF7 
; 0000 0CF8     break;
;PCODE: $00001DE4 VOL: 0
; 0000 0CF9 
; 0000 0CFA 
; 0000 0CFB     case 95:
;PCODE: $00001DE5 VOL: 0
;PCODE: $00001DE6 VOL: 0
;PCODE: $00001DE7 VOL: 0
; 0000 0CFC 
; 0000 0CFD             a[0] = 0x09E;   //ster1
;PCODE: $00001DE8 VOL: 0
;PCODE: $00001DE9 VOL: 0
; 0000 0CFE             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $00001DEA VOL: 0
;PCODE: $00001DEB VOL: 0
;PCODE: $00001DEC VOL: 0
;PCODE: $00001DED VOL: 0
; 0000 0CFF             a[4] = 0x20;    //ster3 ABS krazek scierny
;PCODE: $00001DEE VOL: 0
;PCODE: $00001DEF VOL: 0
;PCODE: $00001DF0 VOL: 0
;PCODE: $00001DF1 VOL: 0
; 0000 0D00             a[5] = 0x199;   //delta okrag
;PCODE: $00001DF2 VOL: 0
;PCODE: $00001DF3 VOL: 0
;PCODE: $00001DF4 VOL: 0
;PCODE: $00001DF5 VOL: 0
; 0000 0D01             a[7] = 0x12;    //ster3 INV krazek scierny
;PCODE: $00001DF6 VOL: 0
;PCODE: $00001DF7 VOL: 0
;PCODE: $00001DF8 VOL: 0
;PCODE: $00001DF9 VOL: 0
; 0000 0D02             a[9] = 0;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $00001DFA VOL: 0
;PCODE: $00001DFB VOL: 0
;PCODE: $00001DFC VOL: 0
;PCODE: $00001DFD VOL: 0
; 0000 0D03 
; 0000 0D04             a[1] = a[0]+0x001;  //ster2
;PCODE: $00001DFE VOL: 0
;PCODE: $00001DFF VOL: 0
;PCODE: $00001E00 VOL: 0
;PCODE: $00001E01 VOL: 0
; 0000 0D05             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $00001E02 VOL: 0
;PCODE: $00001E03 VOL: 0
;PCODE: $00001E04 VOL: 0
;PCODE: $00001E05 VOL: 0
; 0000 0D06             a[6] = a[5]+0x001;  //okrag
;PCODE: $00001E06 VOL: 0
;PCODE: $00001E07 VOL: 0
;PCODE: $00001E08 VOL: 0
;PCODE: $00001E09 VOL: 0
;PCODE: $00001E0A VOL: 0
; 0000 0D07             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $00001E0B VOL: 0
;PCODE: $00001E0C VOL: 0
;PCODE: $00001E0D VOL: 0
;PCODE: $00001E0E VOL: 0
;PCODE: $00001E0F VOL: 0
; 0000 0D08 
; 0000 0D09     break;
;PCODE: $00001E10 VOL: 0
; 0000 0D0A 
; 0000 0D0B     case 96:
;PCODE: $00001E11 VOL: 0
;PCODE: $00001E12 VOL: 0
;PCODE: $00001E13 VOL: 0
; 0000 0D0C 
; 0000 0D0D             a[0] = 0x;   //ster1
;PCODE: $00001E14 VOL: 0
;PCODE: $00001E15 VOL: 0
; 0000 0D0E             a[3] = 0x;    //ster4 INV druciak
;PCODE: $00001E16 VOL: 0
;PCODE: $00001E17 VOL: 0
;PCODE: $00001E18 VOL: 0
;PCODE: $00001E19 VOL: 0
; 0000 0D0F             a[4] = 0x;    //ster3 ABS krazek scierny
;PCODE: $00001E1A VOL: 0
;PCODE: $00001E1B VOL: 0
;PCODE: $00001E1C VOL: 0
;PCODE: $00001E1D VOL: 0
; 0000 0D10             a[5] = 0x;   //delta okrag
;PCODE: $00001E1E VOL: 0
;PCODE: $00001E1F VOL: 0
;PCODE: $00001E20 VOL: 0
;PCODE: $00001E21 VOL: 0
; 0000 0D11             a[7] = 0x;    //ster3 INV krazek scierny
;PCODE: $00001E22 VOL: 0
;PCODE: $00001E23 VOL: 0
;PCODE: $00001E24 VOL: 0
;PCODE: $00001E25 VOL: 0
; 0000 0D12             a[9] = 0;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $00001E26 VOL: 0
;PCODE: $00001E27 VOL: 0
;PCODE: $00001E28 VOL: 0
;PCODE: $00001E29 VOL: 0
; 0000 0D13 
; 0000 0D14             a[1] = a[0]+0x001;  //ster2
;PCODE: $00001E2A VOL: 0
;PCODE: $00001E2B VOL: 0
;PCODE: $00001E2C VOL: 0
;PCODE: $00001E2D VOL: 0
; 0000 0D15             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $00001E2E VOL: 0
;PCODE: $00001E2F VOL: 0
;PCODE: $00001E30 VOL: 0
;PCODE: $00001E31 VOL: 0
; 0000 0D16             a[6] = a[5]+0x001;  //okrag
;PCODE: $00001E32 VOL: 0
;PCODE: $00001E33 VOL: 0
;PCODE: $00001E34 VOL: 0
;PCODE: $00001E35 VOL: 0
;PCODE: $00001E36 VOL: 0
; 0000 0D17             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $00001E37 VOL: 0
;PCODE: $00001E38 VOL: 0
;PCODE: $00001E39 VOL: 0
;PCODE: $00001E3A VOL: 0
;PCODE: $00001E3B VOL: 0
; 0000 0D18 
; 0000 0D19     break;
;PCODE: $00001E3C VOL: 0
; 0000 0D1A 
; 0000 0D1B 
; 0000 0D1C     case 97:
;PCODE: $00001E3D VOL: 0
;PCODE: $00001E3E VOL: 0
;PCODE: $00001E3F VOL: 0
; 0000 0D1D 
; 0000 0D1E             a[0] = 0x06A;   //ster1
;PCODE: $00001E40 VOL: 0
;PCODE: $00001E41 VOL: 0
; 0000 0D1F             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $00001E42 VOL: 0
;PCODE: $00001E43 VOL: 0
;PCODE: $00001E44 VOL: 0
;PCODE: $00001E45 VOL: 0
; 0000 0D20             a[4] = 0x21;    //ster3 ABS krazek scierny
;PCODE: $00001E46 VOL: 0
;PCODE: $00001E47 VOL: 0
;PCODE: $00001E48 VOL: 0
;PCODE: $00001E49 VOL: 0
; 0000 0D21             a[5] = 0x199;   //delta okrag
;PCODE: $00001E4A VOL: 0
;PCODE: $00001E4B VOL: 0
;PCODE: $00001E4C VOL: 0
;PCODE: $00001E4D VOL: 0
; 0000 0D22             a[7] = 0x12;    //ster3 INV krazek scierny
;PCODE: $00001E4E VOL: 0
;PCODE: $00001E4F VOL: 0
;PCODE: $00001E50 VOL: 0
;PCODE: $00001E51 VOL: 0
; 0000 0D23             a[9] = 0;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $00001E52 VOL: 0
;PCODE: $00001E53 VOL: 0
;PCODE: $00001E54 VOL: 0
;PCODE: $00001E55 VOL: 0
; 0000 0D24 
; 0000 0D25             a[1] = a[0]+0x001;  //ster2
;PCODE: $00001E56 VOL: 0
;PCODE: $00001E57 VOL: 0
;PCODE: $00001E58 VOL: 0
;PCODE: $00001E59 VOL: 0
; 0000 0D26             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $00001E5A VOL: 0
;PCODE: $00001E5B VOL: 0
;PCODE: $00001E5C VOL: 0
;PCODE: $00001E5D VOL: 0
; 0000 0D27             a[6] = a[5]+0x001;  //okrag
;PCODE: $00001E5E VOL: 0
;PCODE: $00001E5F VOL: 0
;PCODE: $00001E60 VOL: 0
;PCODE: $00001E61 VOL: 0
;PCODE: $00001E62 VOL: 0
; 0000 0D28             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $00001E63 VOL: 0
;PCODE: $00001E64 VOL: 0
;PCODE: $00001E65 VOL: 0
;PCODE: $00001E66 VOL: 0
;PCODE: $00001E67 VOL: 0
; 0000 0D29 
; 0000 0D2A     break;
;PCODE: $00001E68 VOL: 0
; 0000 0D2B 
; 0000 0D2C 
; 0000 0D2D     case 98:
;PCODE: $00001E69 VOL: 0
;PCODE: $00001E6A VOL: 0
;PCODE: $00001E6B VOL: 0
; 0000 0D2E 
; 0000 0D2F             a[0] = 0x0BE;   //ster1
;PCODE: $00001E6C VOL: 0
;PCODE: $00001E6D VOL: 0
; 0000 0D30             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $00001E6E VOL: 0
;PCODE: $00001E6F VOL: 0
;PCODE: $00001E70 VOL: 0
;PCODE: $00001E71 VOL: 0
; 0000 0D31             a[4] = 0x18;    //ster3 ABS krazek scierny
;PCODE: $00001E72 VOL: 0
;PCODE: $00001E73 VOL: 0
;PCODE: $00001E74 VOL: 0
;PCODE: $00001E75 VOL: 0
; 0000 0D32             a[5] = 0x196;   //delta okrag
;PCODE: $00001E76 VOL: 0
;PCODE: $00001E77 VOL: 0
;PCODE: $00001E78 VOL: 0
;PCODE: $00001E79 VOL: 0
; 0000 0D33             a[7] = 0x0F;    //ster3 INV krazek scierny
;PCODE: $00001E7A VOL: 0
;PCODE: $00001E7B VOL: 0
;PCODE: $00001E7C VOL: 0
;PCODE: $00001E7D VOL: 0
; 0000 0D34             a[9] = 0;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $00001E7E VOL: 0
;PCODE: $00001E7F VOL: 0
;PCODE: $00001E80 VOL: 0
;PCODE: $00001E81 VOL: 0
; 0000 0D35 
; 0000 0D36             a[1] = a[0]+0x001;  //ster2
;PCODE: $00001E82 VOL: 0
;PCODE: $00001E83 VOL: 0
;PCODE: $00001E84 VOL: 0
;PCODE: $00001E85 VOL: 0
; 0000 0D37             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $00001E86 VOL: 0
;PCODE: $00001E87 VOL: 0
;PCODE: $00001E88 VOL: 0
;PCODE: $00001E89 VOL: 0
; 0000 0D38             a[6] = a[5]+0x001;  //okrag
;PCODE: $00001E8A VOL: 0
;PCODE: $00001E8B VOL: 0
;PCODE: $00001E8C VOL: 0
;PCODE: $00001E8D VOL: 0
;PCODE: $00001E8E VOL: 0
; 0000 0D39             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $00001E8F VOL: 0
;PCODE: $00001E90 VOL: 0
;PCODE: $00001E91 VOL: 0
;PCODE: $00001E92 VOL: 0
;PCODE: $00001E93 VOL: 0
; 0000 0D3A 
; 0000 0D3B     break;
;PCODE: $00001E94 VOL: 0
; 0000 0D3C 
; 0000 0D3D 
; 0000 0D3E     case 99:
;PCODE: $00001E95 VOL: 0
;PCODE: $00001E96 VOL: 0
;PCODE: $00001E97 VOL: 0
; 0000 0D3F 
; 0000 0D40             a[0] = 0x0BA;   //ster1
;PCODE: $00001E98 VOL: 0
;PCODE: $00001E99 VOL: 0
; 0000 0D41             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $00001E9A VOL: 0
;PCODE: $00001E9B VOL: 0
;PCODE: $00001E9C VOL: 0
;PCODE: $00001E9D VOL: 0
; 0000 0D42             a[4] = 0x1E;    //ster3 ABS krazek scierny
;PCODE: $00001E9E VOL: 0
;PCODE: $00001E9F VOL: 0
;PCODE: $00001EA0 VOL: 0
;PCODE: $00001EA1 VOL: 0
; 0000 0D43             a[5] = 0x199;   //delta okrag
;PCODE: $00001EA2 VOL: 0
;PCODE: $00001EA3 VOL: 0
;PCODE: $00001EA4 VOL: 0
;PCODE: $00001EA5 VOL: 0
; 0000 0D44             a[7] = 0x12;    //ster3 INV krazek scierny
;PCODE: $00001EA6 VOL: 0
;PCODE: $00001EA7 VOL: 0
;PCODE: $00001EA8 VOL: 0
;PCODE: $00001EA9 VOL: 0
; 0000 0D45             a[9] = 1;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $00001EAA VOL: 0
;PCODE: $00001EAB VOL: 0
;PCODE: $00001EAC VOL: 0
;PCODE: $00001EAD VOL: 0
; 0000 0D46 
; 0000 0D47             a[1] = a[0]+0x001;  //ster2
;PCODE: $00001EAE VOL: 0
;PCODE: $00001EAF VOL: 0
;PCODE: $00001EB0 VOL: 0
;PCODE: $00001EB1 VOL: 0
; 0000 0D48             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $00001EB2 VOL: 0
;PCODE: $00001EB3 VOL: 0
;PCODE: $00001EB4 VOL: 0
;PCODE: $00001EB5 VOL: 0
; 0000 0D49             a[6] = a[5]+0x001;  //okrag
;PCODE: $00001EB6 VOL: 0
;PCODE: $00001EB7 VOL: 0
;PCODE: $00001EB8 VOL: 0
;PCODE: $00001EB9 VOL: 0
;PCODE: $00001EBA VOL: 0
; 0000 0D4A             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $00001EBB VOL: 0
;PCODE: $00001EBC VOL: 0
;PCODE: $00001EBD VOL: 0
;PCODE: $00001EBE VOL: 0
;PCODE: $00001EBF VOL: 0
; 0000 0D4B 
; 0000 0D4C     break;
;PCODE: $00001EC0 VOL: 0
; 0000 0D4D 
; 0000 0D4E 
; 0000 0D4F     case 100:
;PCODE: $00001EC1 VOL: 0
;PCODE: $00001EC2 VOL: 0
;PCODE: $00001EC3 VOL: 0
; 0000 0D50 
; 0000 0D51             a[0] = 0x060;   //ster1
;PCODE: $00001EC4 VOL: 0
;PCODE: $00001EC5 VOL: 0
; 0000 0D52             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $00001EC6 VOL: 0
;PCODE: $00001EC7 VOL: 0
;PCODE: $00001EC8 VOL: 0
;PCODE: $00001EC9 VOL: 0
; 0000 0D53             a[4] = 0x1F;    //ster3 ABS krazek scierny
;PCODE: $00001ECA VOL: 0
;PCODE: $00001ECB VOL: 0
;PCODE: $00001ECC VOL: 0
;PCODE: $00001ECD VOL: 0
; 0000 0D54             a[5] = 0x196;   //delta okrag
;PCODE: $00001ECE VOL: 0
;PCODE: $00001ECF VOL: 0
;PCODE: $00001ED0 VOL: 0
;PCODE: $00001ED1 VOL: 0
; 0000 0D55             a[7] = 0x12;    //ster3 INV krazek scierny
;PCODE: $00001ED2 VOL: 0
;PCODE: $00001ED3 VOL: 0
;PCODE: $00001ED4 VOL: 0
;PCODE: $00001ED5 VOL: 0
; 0000 0D56             a[9] = 0;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $00001ED6 VOL: 0
;PCODE: $00001ED7 VOL: 0
;PCODE: $00001ED8 VOL: 0
;PCODE: $00001ED9 VOL: 0
; 0000 0D57 
; 0000 0D58             a[1] = a[0]+0x001;  //ster2
;PCODE: $00001EDA VOL: 0
;PCODE: $00001EDB VOL: 0
;PCODE: $00001EDC VOL: 0
;PCODE: $00001EDD VOL: 0
; 0000 0D59             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $00001EDE VOL: 0
;PCODE: $00001EDF VOL: 0
;PCODE: $00001EE0 VOL: 0
;PCODE: $00001EE1 VOL: 0
; 0000 0D5A             a[6] = a[5]+0x001;  //okrag
;PCODE: $00001EE2 VOL: 0
;PCODE: $00001EE3 VOL: 0
;PCODE: $00001EE4 VOL: 0
;PCODE: $00001EE5 VOL: 0
;PCODE: $00001EE6 VOL: 0
; 0000 0D5B             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $00001EE7 VOL: 0
;PCODE: $00001EE8 VOL: 0
;PCODE: $00001EE9 VOL: 0
;PCODE: $00001EEA VOL: 0
;PCODE: $00001EEB VOL: 0
; 0000 0D5C 
; 0000 0D5D     break;
;PCODE: $00001EEC VOL: 0
; 0000 0D5E 
; 0000 0D5F 
; 0000 0D60     case 101:
;PCODE: $00001EED VOL: 0
;PCODE: $00001EEE VOL: 0
;PCODE: $00001EEF VOL: 0
; 0000 0D61 
; 0000 0D62             a[0] = 0x070;   //ster1
;PCODE: $00001EF0 VOL: 0
;PCODE: $00001EF1 VOL: 0
; 0000 0D63             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $00001EF2 VOL: 0
;PCODE: $00001EF3 VOL: 0
;PCODE: $00001EF4 VOL: 0
;PCODE: $00001EF5 VOL: 0
; 0000 0D64             a[4] = 0x21;    //ster3 ABS krazek scierny
;PCODE: $00001EF6 VOL: 0
;PCODE: $00001EF7 VOL: 0
;PCODE: $00001EF8 VOL: 0
;PCODE: $00001EF9 VOL: 0
; 0000 0D65             a[5] = 0x199;   //delta okrag
;PCODE: $00001EFA VOL: 0
;PCODE: $00001EFB VOL: 0
;PCODE: $00001EFC VOL: 0
;PCODE: $00001EFD VOL: 0
; 0000 0D66             a[7] = 0x12;    //ster3 INV krazek scierny
;PCODE: $00001EFE VOL: 0
;PCODE: $00001EFF VOL: 0
;PCODE: $00001F00 VOL: 0
;PCODE: $00001F01 VOL: 0
; 0000 0D67             a[9] = 1;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $00001F02 VOL: 0
;PCODE: $00001F03 VOL: 0
;PCODE: $00001F04 VOL: 0
;PCODE: $00001F05 VOL: 0
; 0000 0D68 
; 0000 0D69             a[1] = a[0]+0x001;  //ster2
;PCODE: $00001F06 VOL: 0
;PCODE: $00001F07 VOL: 0
;PCODE: $00001F08 VOL: 0
;PCODE: $00001F09 VOL: 0
; 0000 0D6A             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $00001F0A VOL: 0
;PCODE: $00001F0B VOL: 0
;PCODE: $00001F0C VOL: 0
;PCODE: $00001F0D VOL: 0
; 0000 0D6B             a[6] = a[5]+0x001;  //okrag
;PCODE: $00001F0E VOL: 0
;PCODE: $00001F0F VOL: 0
;PCODE: $00001F10 VOL: 0
;PCODE: $00001F11 VOL: 0
;PCODE: $00001F12 VOL: 0
; 0000 0D6C             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $00001F13 VOL: 0
;PCODE: $00001F14 VOL: 0
;PCODE: $00001F15 VOL: 0
;PCODE: $00001F16 VOL: 0
;PCODE: $00001F17 VOL: 0
; 0000 0D6D 
; 0000 0D6E     break;
;PCODE: $00001F18 VOL: 0
; 0000 0D6F 
; 0000 0D70 
; 0000 0D71     case 102:
;PCODE: $00001F19 VOL: 0
;PCODE: $00001F1A VOL: 0
;PCODE: $00001F1B VOL: 0
; 0000 0D72 
; 0000 0D73             a[0] = 0x08A;   //ster1
;PCODE: $00001F1C VOL: 0
;PCODE: $00001F1D VOL: 0
; 0000 0D74             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $00001F1E VOL: 0
;PCODE: $00001F1F VOL: 0
;PCODE: $00001F20 VOL: 0
;PCODE: $00001F21 VOL: 0
; 0000 0D75             a[4] = 0x18;    //ster3 ABS krazek scierny
;PCODE: $00001F22 VOL: 0
;PCODE: $00001F23 VOL: 0
;PCODE: $00001F24 VOL: 0
;PCODE: $00001F25 VOL: 0
; 0000 0D76             a[5] = 0x196;   //delta okrag
;PCODE: $00001F26 VOL: 0
;PCODE: $00001F27 VOL: 0
;PCODE: $00001F28 VOL: 0
;PCODE: $00001F29 VOL: 0
; 0000 0D77             a[7] = 0x0F;    //ster3 INV krazek scierny
;PCODE: $00001F2A VOL: 0
;PCODE: $00001F2B VOL: 0
;PCODE: $00001F2C VOL: 0
;PCODE: $00001F2D VOL: 0
; 0000 0D78             a[9] = 1;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $00001F2E VOL: 0
;PCODE: $00001F2F VOL: 0
;PCODE: $00001F30 VOL: 0
;PCODE: $00001F31 VOL: 0
; 0000 0D79 
; 0000 0D7A             a[1] = a[0]+0x001;  //ster2
;PCODE: $00001F32 VOL: 0
;PCODE: $00001F33 VOL: 0
;PCODE: $00001F34 VOL: 0
;PCODE: $00001F35 VOL: 0
; 0000 0D7B             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $00001F36 VOL: 0
;PCODE: $00001F37 VOL: 0
;PCODE: $00001F38 VOL: 0
;PCODE: $00001F39 VOL: 0
; 0000 0D7C             a[6] = a[5]+0x001;  //okrag
;PCODE: $00001F3A VOL: 0
;PCODE: $00001F3B VOL: 0
;PCODE: $00001F3C VOL: 0
;PCODE: $00001F3D VOL: 0
;PCODE: $00001F3E VOL: 0
; 0000 0D7D             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $00001F3F VOL: 0
;PCODE: $00001F40 VOL: 0
;PCODE: $00001F41 VOL: 0
;PCODE: $00001F42 VOL: 0
;PCODE: $00001F43 VOL: 0
; 0000 0D7E 
; 0000 0D7F     break;
;PCODE: $00001F44 VOL: 0
; 0000 0D80 
; 0000 0D81 
; 0000 0D82     case 103:
;PCODE: $00001F45 VOL: 0
;PCODE: $00001F46 VOL: 0
;PCODE: $00001F47 VOL: 0
; 0000 0D83 
; 0000 0D84             a[0] = 0x080;   //ster1
;PCODE: $00001F48 VOL: 0
;PCODE: $00001F49 VOL: 0
; 0000 0D85             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $00001F4A VOL: 0
;PCODE: $00001F4B VOL: 0
;PCODE: $00001F4C VOL: 0
;PCODE: $00001F4D VOL: 0
; 0000 0D86             a[4] = 0x1E;    //ster3 ABS krazek scierny
;PCODE: $00001F4E VOL: 0
;PCODE: $00001F4F VOL: 0
;PCODE: $00001F50 VOL: 0
;PCODE: $00001F51 VOL: 0
; 0000 0D87             a[5] = 0x199;   //delta okrag
;PCODE: $00001F52 VOL: 0
;PCODE: $00001F53 VOL: 0
;PCODE: $00001F54 VOL: 0
;PCODE: $00001F55 VOL: 0
; 0000 0D88             a[7] = 0x12;    //ster3 INV krazek scierny
;PCODE: $00001F56 VOL: 0
;PCODE: $00001F57 VOL: 0
;PCODE: $00001F58 VOL: 0
;PCODE: $00001F59 VOL: 0
; 0000 0D89             a[9] = 0;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $00001F5A VOL: 0
;PCODE: $00001F5B VOL: 0
;PCODE: $00001F5C VOL: 0
;PCODE: $00001F5D VOL: 0
; 0000 0D8A 
; 0000 0D8B             a[1] = a[0]+0x001;  //ster2
;PCODE: $00001F5E VOL: 0
;PCODE: $00001F5F VOL: 0
;PCODE: $00001F60 VOL: 0
;PCODE: $00001F61 VOL: 0
; 0000 0D8C             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $00001F62 VOL: 0
;PCODE: $00001F63 VOL: 0
;PCODE: $00001F64 VOL: 0
;PCODE: $00001F65 VOL: 0
; 0000 0D8D             a[6] = a[5]+0x001;  //okrag
;PCODE: $00001F66 VOL: 0
;PCODE: $00001F67 VOL: 0
;PCODE: $00001F68 VOL: 0
;PCODE: $00001F69 VOL: 0
;PCODE: $00001F6A VOL: 0
; 0000 0D8E             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $00001F6B VOL: 0
;PCODE: $00001F6C VOL: 0
;PCODE: $00001F6D VOL: 0
;PCODE: $00001F6E VOL: 0
;PCODE: $00001F6F VOL: 0
; 0000 0D8F 
; 0000 0D90     break;
;PCODE: $00001F70 VOL: 0
; 0000 0D91 
; 0000 0D92 
; 0000 0D93     case 104:
;PCODE: $00001F71 VOL: 0
;PCODE: $00001F72 VOL: 0
;PCODE: $00001F73 VOL: 0
; 0000 0D94 
; 0000 0D95             a[0] = 0x0B6;   //ster1
;PCODE: $00001F74 VOL: 0
;PCODE: $00001F75 VOL: 0
; 0000 0D96             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $00001F76 VOL: 0
;PCODE: $00001F77 VOL: 0
;PCODE: $00001F78 VOL: 0
;PCODE: $00001F79 VOL: 0
; 0000 0D97             a[4] = 0x1F;    //ster3 ABS krazek scierny
;PCODE: $00001F7A VOL: 0
;PCODE: $00001F7B VOL: 0
;PCODE: $00001F7C VOL: 0
;PCODE: $00001F7D VOL: 0
; 0000 0D98             a[5] = 0x196;   //delta okrag
;PCODE: $00001F7E VOL: 0
;PCODE: $00001F7F VOL: 0
;PCODE: $00001F80 VOL: 0
;PCODE: $00001F81 VOL: 0
; 0000 0D99             a[7] = 0x12;    //ster3 INV krazek scierny
;PCODE: $00001F82 VOL: 0
;PCODE: $00001F83 VOL: 0
;PCODE: $00001F84 VOL: 0
;PCODE: $00001F85 VOL: 0
; 0000 0D9A             a[9] = 1;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $00001F86 VOL: 0
;PCODE: $00001F87 VOL: 0
;PCODE: $00001F88 VOL: 0
;PCODE: $00001F89 VOL: 0
; 0000 0D9B 
; 0000 0D9C             a[1] = a[0]+0x001;  //ster2
;PCODE: $00001F8A VOL: 0
;PCODE: $00001F8B VOL: 0
;PCODE: $00001F8C VOL: 0
;PCODE: $00001F8D VOL: 0
; 0000 0D9D             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $00001F8E VOL: 0
;PCODE: $00001F8F VOL: 0
;PCODE: $00001F90 VOL: 0
;PCODE: $00001F91 VOL: 0
; 0000 0D9E             a[6] = a[5]+0x001;  //okrag
;PCODE: $00001F92 VOL: 0
;PCODE: $00001F93 VOL: 0
;PCODE: $00001F94 VOL: 0
;PCODE: $00001F95 VOL: 0
;PCODE: $00001F96 VOL: 0
; 0000 0D9F             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $00001F97 VOL: 0
;PCODE: $00001F98 VOL: 0
;PCODE: $00001F99 VOL: 0
;PCODE: $00001F9A VOL: 0
;PCODE: $00001F9B VOL: 0
; 0000 0DA0 
; 0000 0DA1     break;
;PCODE: $00001F9C VOL: 0
; 0000 0DA2 
; 0000 0DA3 
; 0000 0DA4     case 105:
;PCODE: $00001F9D VOL: 0
;PCODE: $00001F9E VOL: 0
;PCODE: $00001F9F VOL: 0
; 0000 0DA5 
; 0000 0DA6             a[0] = 0x044;   //ster1
;PCODE: $00001FA0 VOL: 0
;PCODE: $00001FA1 VOL: 0
; 0000 0DA7             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $00001FA2 VOL: 0
;PCODE: $00001FA3 VOL: 0
;PCODE: $00001FA4 VOL: 0
;PCODE: $00001FA5 VOL: 0
; 0000 0DA8             a[4] = 0x1F;    //ster3 ABS krazek scierny
;PCODE: $00001FA6 VOL: 0
;PCODE: $00001FA7 VOL: 0
;PCODE: $00001FA8 VOL: 0
;PCODE: $00001FA9 VOL: 0
; 0000 0DA9             a[5] = 0x190;   //delta okrag
;PCODE: $00001FAA VOL: 0
;PCODE: $00001FAB VOL: 0
;PCODE: $00001FAC VOL: 0
;PCODE: $00001FAD VOL: 0
; 0000 0DAA             a[7] = 0x0F;    //ster3 INV krazek scierny
;PCODE: $00001FAE VOL: 0
;PCODE: $00001FAF VOL: 0
;PCODE: $00001FB0 VOL: 0
;PCODE: $00001FB1 VOL: 0
; 0000 0DAB             a[9] = 0;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $00001FB2 VOL: 0
;PCODE: $00001FB3 VOL: 0
;PCODE: $00001FB4 VOL: 0
;PCODE: $00001FB5 VOL: 0
; 0000 0DAC 
; 0000 0DAD             a[1] = a[0]+0x001;  //ster2
;PCODE: $00001FB6 VOL: 0
;PCODE: $00001FB7 VOL: 0
;PCODE: $00001FB8 VOL: 0
;PCODE: $00001FB9 VOL: 0
; 0000 0DAE             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $00001FBA VOL: 0
;PCODE: $00001FBB VOL: 0
;PCODE: $00001FBC VOL: 0
;PCODE: $00001FBD VOL: 0
; 0000 0DAF             a[6] = a[5]+0x001;  //okrag
;PCODE: $00001FBE VOL: 0
;PCODE: $00001FBF VOL: 0
;PCODE: $00001FC0 VOL: 0
;PCODE: $00001FC1 VOL: 0
;PCODE: $00001FC2 VOL: 0
; 0000 0DB0             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $00001FC3 VOL: 0
;PCODE: $00001FC4 VOL: 0
;PCODE: $00001FC5 VOL: 0
;PCODE: $00001FC6 VOL: 0
;PCODE: $00001FC7 VOL: 0
; 0000 0DB1 
; 0000 0DB2     break;
;PCODE: $00001FC8 VOL: 0
; 0000 0DB3 
; 0000 0DB4 
; 0000 0DB5     case 106:
;PCODE: $00001FC9 VOL: 0
;PCODE: $00001FCA VOL: 0
;PCODE: $00001FCB VOL: 0
; 0000 0DB6 
; 0000 0DB7             a[0] = 0x03A;   //ster1
;PCODE: $00001FCC VOL: 0
;PCODE: $00001FCD VOL: 0
; 0000 0DB8             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $00001FCE VOL: 0
;PCODE: $00001FCF VOL: 0
;PCODE: $00001FD0 VOL: 0
;PCODE: $00001FD1 VOL: 0
; 0000 0DB9             a[4] = 0x1E;    //ster3 ABS krazek scierny
;PCODE: $00001FD2 VOL: 0
;PCODE: $00001FD3 VOL: 0
;PCODE: $00001FD4 VOL: 0
;PCODE: $00001FD5 VOL: 0
; 0000 0DBA             a[5] = 0x190;   //delta okrag
;PCODE: $00001FD6 VOL: 0
;PCODE: $00001FD7 VOL: 0
;PCODE: $00001FD8 VOL: 0
;PCODE: $00001FD9 VOL: 0
; 0000 0DBB             a[7] = 0x0F;    //ster3 INV krazek scierny
;PCODE: $00001FDA VOL: 0
;PCODE: $00001FDB VOL: 0
;PCODE: $00001FDC VOL: 0
;PCODE: $00001FDD VOL: 0
; 0000 0DBC             a[9] = 1;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $00001FDE VOL: 0
;PCODE: $00001FDF VOL: 0
;PCODE: $00001FE0 VOL: 0
;PCODE: $00001FE1 VOL: 0
; 0000 0DBD 
; 0000 0DBE             a[1] = a[0]+0x001;  //ster2
;PCODE: $00001FE2 VOL: 0
;PCODE: $00001FE3 VOL: 0
;PCODE: $00001FE4 VOL: 0
;PCODE: $00001FE5 VOL: 0
; 0000 0DBF             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $00001FE6 VOL: 0
;PCODE: $00001FE7 VOL: 0
;PCODE: $00001FE8 VOL: 0
;PCODE: $00001FE9 VOL: 0
; 0000 0DC0             a[6] = a[5]+0x001;  //okrag
;PCODE: $00001FEA VOL: 0
;PCODE: $00001FEB VOL: 0
;PCODE: $00001FEC VOL: 0
;PCODE: $00001FED VOL: 0
;PCODE: $00001FEE VOL: 0
; 0000 0DC1             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $00001FEF VOL: 0
;PCODE: $00001FF0 VOL: 0
;PCODE: $00001FF1 VOL: 0
;PCODE: $00001FF2 VOL: 0
;PCODE: $00001FF3 VOL: 0
; 0000 0DC2 
; 0000 0DC3     break;
;PCODE: $00001FF4 VOL: 0
; 0000 0DC4 
; 0000 0DC5 
; 0000 0DC6     case 107:
;PCODE: $00001FF5 VOL: 0
;PCODE: $00001FF6 VOL: 0
;PCODE: $00001FF7 VOL: 0
; 0000 0DC7 
; 0000 0DC8             a[0] = 0x;   //ster1
;PCODE: $00001FF8 VOL: 0
;PCODE: $00001FF9 VOL: 0
; 0000 0DC9             a[3] = 0x;    //ster4 INV druciak
;PCODE: $00001FFA VOL: 0
;PCODE: $00001FFB VOL: 0
;PCODE: $00001FFC VOL: 0
;PCODE: $00001FFD VOL: 0
; 0000 0DCA             a[4] = 0x;    //ster3 ABS krazek scierny
;PCODE: $00001FFE VOL: 0
;PCODE: $00001FFF VOL: 0
;PCODE: $00002000 VOL: 0
;PCODE: $00002001 VOL: 0
; 0000 0DCB             a[5] = 0x;   //delta okrag
;PCODE: $00002002 VOL: 0
;PCODE: $00002003 VOL: 0
;PCODE: $00002004 VOL: 0
;PCODE: $00002005 VOL: 0
; 0000 0DCC             a[7] = 0x;    //ster3 INV krazek scierny
;PCODE: $00002006 VOL: 0
;PCODE: $00002007 VOL: 0
;PCODE: $00002008 VOL: 0
;PCODE: $00002009 VOL: 0
; 0000 0DCD             a[9] = 0;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $0000200A VOL: 0
;PCODE: $0000200B VOL: 0
;PCODE: $0000200C VOL: 0
;PCODE: $0000200D VOL: 0
; 0000 0DCE 
; 0000 0DCF             a[1] = a[0]+0x001;  //ster2
;PCODE: $0000200E VOL: 0
;PCODE: $0000200F VOL: 0
;PCODE: $00002010 VOL: 0
;PCODE: $00002011 VOL: 0
; 0000 0DD0             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $00002012 VOL: 0
;PCODE: $00002013 VOL: 0
;PCODE: $00002014 VOL: 0
;PCODE: $00002015 VOL: 0
; 0000 0DD1             a[6] = a[5]+0x001;  //okrag
;PCODE: $00002016 VOL: 0
;PCODE: $00002017 VOL: 0
;PCODE: $00002018 VOL: 0
;PCODE: $00002019 VOL: 0
;PCODE: $0000201A VOL: 0
; 0000 0DD2             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $0000201B VOL: 0
;PCODE: $0000201C VOL: 0
;PCODE: $0000201D VOL: 0
;PCODE: $0000201E VOL: 0
;PCODE: $0000201F VOL: 0
; 0000 0DD3 
; 0000 0DD4     break;
;PCODE: $00002020 VOL: 0
; 0000 0DD5 
; 0000 0DD6 
; 0000 0DD7     case 108:
;PCODE: $00002021 VOL: 0
;PCODE: $00002022 VOL: 0
;PCODE: $00002023 VOL: 0
; 0000 0DD8 
; 0000 0DD9             a[0] = 0x0C6;   //ster1
;PCODE: $00002024 VOL: 0
;PCODE: $00002025 VOL: 0
; 0000 0DDA             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $00002026 VOL: 0
;PCODE: $00002027 VOL: 0
;PCODE: $00002028 VOL: 0
;PCODE: $00002029 VOL: 0
; 0000 0DDB             a[4] = 0x1C;    //ster3 ABS krazek scierny
;PCODE: $0000202A VOL: 0
;PCODE: $0000202B VOL: 0
;PCODE: $0000202C VOL: 0
;PCODE: $0000202D VOL: 0
; 0000 0DDC             a[5] = 0x196;   //delta okrag
;PCODE: $0000202E VOL: 0
;PCODE: $0000202F VOL: 0
;PCODE: $00002030 VOL: 0
;PCODE: $00002031 VOL: 0
; 0000 0DDD             a[7] = 0x11;    //ster3 INV krazek scierny
;PCODE: $00002032 VOL: 0
;PCODE: $00002033 VOL: 0
;PCODE: $00002034 VOL: 0
;PCODE: $00002035 VOL: 0
; 0000 0DDE             a[9] = 0;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $00002036 VOL: 0
;PCODE: $00002037 VOL: 0
;PCODE: $00002038 VOL: 0
;PCODE: $00002039 VOL: 0
; 0000 0DDF 
; 0000 0DE0             a[1] = a[0]+0x001;  //ster2
;PCODE: $0000203A VOL: 0
;PCODE: $0000203B VOL: 0
;PCODE: $0000203C VOL: 0
;PCODE: $0000203D VOL: 0
; 0000 0DE1             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $0000203E VOL: 0
;PCODE: $0000203F VOL: 0
;PCODE: $00002040 VOL: 0
;PCODE: $00002041 VOL: 0
; 0000 0DE2             a[6] = a[5]+0x001;  //okrag
;PCODE: $00002042 VOL: 0
;PCODE: $00002043 VOL: 0
;PCODE: $00002044 VOL: 0
;PCODE: $00002045 VOL: 0
;PCODE: $00002046 VOL: 0
; 0000 0DE3             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $00002047 VOL: 0
;PCODE: $00002048 VOL: 0
;PCODE: $00002049 VOL: 0
;PCODE: $0000204A VOL: 0
;PCODE: $0000204B VOL: 0
; 0000 0DE4 
; 0000 0DE5     break;
;PCODE: $0000204C VOL: 0
; 0000 0DE6 
; 0000 0DE7 
; 0000 0DE8     case 109:
;PCODE: $0000204D VOL: 0
;PCODE: $0000204E VOL: 0
;PCODE: $0000204F VOL: 0
; 0000 0DE9 
; 0000 0DEA             a[0] = 0x00A;   //ster1
;PCODE: $00002050 VOL: 0
;PCODE: $00002051 VOL: 0
; 0000 0DEB             a[3] = 0x10;    //ster4 INV druciak
;PCODE: $00002052 VOL: 0
;PCODE: $00002053 VOL: 0
;PCODE: $00002054 VOL: 0
;PCODE: $00002055 VOL: 0
; 0000 0DEC             a[4] = 0x1C;    //ster3 ABS krazek scierny
;PCODE: $00002056 VOL: 0
;PCODE: $00002057 VOL: 0
;PCODE: $00002058 VOL: 0
;PCODE: $00002059 VOL: 0
; 0000 0DED             a[5] = 0x190;   //delta okrag
;PCODE: $0000205A VOL: 0
;PCODE: $0000205B VOL: 0
;PCODE: $0000205C VOL: 0
;PCODE: $0000205D VOL: 0
; 0000 0DEE             a[7] = 0x10;    //ster3 INV krazek scierny
;PCODE: $0000205E VOL: 0
;PCODE: $0000205F VOL: 0
;PCODE: $00002060 VOL: 0
;PCODE: $00002061 VOL: 0
; 0000 0DEF             a[9] = 1;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $00002062 VOL: 0
;PCODE: $00002063 VOL: 0
;PCODE: $00002064 VOL: 0
;PCODE: $00002065 VOL: 0
; 0000 0DF0 
; 0000 0DF1             a[1] = a[0]+0x001;  //ster2
;PCODE: $00002066 VOL: 0
;PCODE: $00002067 VOL: 0
;PCODE: $00002068 VOL: 0
;PCODE: $00002069 VOL: 0
; 0000 0DF2             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $0000206A VOL: 0
;PCODE: $0000206B VOL: 0
;PCODE: $0000206C VOL: 0
;PCODE: $0000206D VOL: 0
; 0000 0DF3             a[6] = a[5]+0x001;  //okrag
;PCODE: $0000206E VOL: 0
;PCODE: $0000206F VOL: 0
;PCODE: $00002070 VOL: 0
;PCODE: $00002071 VOL: 0
;PCODE: $00002072 VOL: 0
; 0000 0DF4             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $00002073 VOL: 0
;PCODE: $00002074 VOL: 0
;PCODE: $00002075 VOL: 0
;PCODE: $00002076 VOL: 0
;PCODE: $00002077 VOL: 0
; 0000 0DF5 
; 0000 0DF6     break;
;PCODE: $00002078 VOL: 0
; 0000 0DF7 
; 0000 0DF8 
; 0000 0DF9     case 110:
;PCODE: $00002079 VOL: 0
;PCODE: $0000207A VOL: 0
;PCODE: $0000207B VOL: 0
; 0000 0DFA 
; 0000 0DFB             a[0] = 0x032;   //ster1
;PCODE: $0000207C VOL: 0
;PCODE: $0000207D VOL: 0
; 0000 0DFC             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $0000207E VOL: 0
;PCODE: $0000207F VOL: 0
;PCODE: $00002080 VOL: 0
;PCODE: $00002081 VOL: 0
; 0000 0DFD             a[4] = 0x1E;    //ster3 ABS krazek scierny
;PCODE: $00002082 VOL: 0
;PCODE: $00002083 VOL: 0
;PCODE: $00002084 VOL: 0
;PCODE: $00002085 VOL: 0
; 0000 0DFE             a[5] = 0x190;   //delta okrag
;PCODE: $00002086 VOL: 0
;PCODE: $00002087 VOL: 0
;PCODE: $00002088 VOL: 0
;PCODE: $00002089 VOL: 0
; 0000 0DFF             a[7] = 0x0F;    //ster3 INV krazek scierny
;PCODE: $0000208A VOL: 0
;PCODE: $0000208B VOL: 0
;PCODE: $0000208C VOL: 0
;PCODE: $0000208D VOL: 0
; 0000 0E00             a[9] = 0;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $0000208E VOL: 0
;PCODE: $0000208F VOL: 0
;PCODE: $00002090 VOL: 0
;PCODE: $00002091 VOL: 0
; 0000 0E01 
; 0000 0E02             a[1] = a[0]+0x001;  //ster2
;PCODE: $00002092 VOL: 0
;PCODE: $00002093 VOL: 0
;PCODE: $00002094 VOL: 0
;PCODE: $00002095 VOL: 0
; 0000 0E03             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $00002096 VOL: 0
;PCODE: $00002097 VOL: 0
;PCODE: $00002098 VOL: 0
;PCODE: $00002099 VOL: 0
; 0000 0E04             a[6] = a[5]+0x001;  //okrag
;PCODE: $0000209A VOL: 0
;PCODE: $0000209B VOL: 0
;PCODE: $0000209C VOL: 0
;PCODE: $0000209D VOL: 0
;PCODE: $0000209E VOL: 0
; 0000 0E05             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $0000209F VOL: 0
;PCODE: $000020A0 VOL: 0
;PCODE: $000020A1 VOL: 0
;PCODE: $000020A2 VOL: 0
;PCODE: $000020A3 VOL: 0
; 0000 0E06 
; 0000 0E07     break;
;PCODE: $000020A4 VOL: 0
; 0000 0E08 
; 0000 0E09 
; 0000 0E0A     case 111:
;PCODE: $000020A5 VOL: 0
;PCODE: $000020A6 VOL: 0
;PCODE: $000020A7 VOL: 0
; 0000 0E0B 
; 0000 0E0C             a[0] = 0x;   //ster1
;PCODE: $000020A8 VOL: 0
;PCODE: $000020A9 VOL: 0
; 0000 0E0D             a[3] = 0x;    //ster4 INV druciak
;PCODE: $000020AA VOL: 0
;PCODE: $000020AB VOL: 0
;PCODE: $000020AC VOL: 0
;PCODE: $000020AD VOL: 0
; 0000 0E0E             a[4] = 0x;    //ster3 ABS krazek scierny
;PCODE: $000020AE VOL: 0
;PCODE: $000020AF VOL: 0
;PCODE: $000020B0 VOL: 0
;PCODE: $000020B1 VOL: 0
; 0000 0E0F             a[5] = 0x;   //delta okrag
;PCODE: $000020B2 VOL: 0
;PCODE: $000020B3 VOL: 0
;PCODE: $000020B4 VOL: 0
;PCODE: $000020B5 VOL: 0
; 0000 0E10             a[7] = 0x;    //ster3 INV krazek scierny
;PCODE: $000020B6 VOL: 0
;PCODE: $000020B7 VOL: 0
;PCODE: $000020B8 VOL: 0
;PCODE: $000020B9 VOL: 0
; 0000 0E11             a[9] = 0;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $000020BA VOL: 0
;PCODE: $000020BB VOL: 0
;PCODE: $000020BC VOL: 0
;PCODE: $000020BD VOL: 0
; 0000 0E12 
; 0000 0E13             a[1] = a[0]+0x001;  //ster2
;PCODE: $000020BE VOL: 0
;PCODE: $000020BF VOL: 0
;PCODE: $000020C0 VOL: 0
;PCODE: $000020C1 VOL: 0
; 0000 0E14             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $000020C2 VOL: 0
;PCODE: $000020C3 VOL: 0
;PCODE: $000020C4 VOL: 0
;PCODE: $000020C5 VOL: 0
; 0000 0E15             a[6] = a[5]+0x001;  //okrag
;PCODE: $000020C6 VOL: 0
;PCODE: $000020C7 VOL: 0
;PCODE: $000020C8 VOL: 0
;PCODE: $000020C9 VOL: 0
;PCODE: $000020CA VOL: 0
; 0000 0E16             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $000020CB VOL: 0
;PCODE: $000020CC VOL: 0
;PCODE: $000020CD VOL: 0
;PCODE: $000020CE VOL: 0
;PCODE: $000020CF VOL: 0
; 0000 0E17 
; 0000 0E18     break;
;PCODE: $000020D0 VOL: 0
; 0000 0E19 
; 0000 0E1A 
; 0000 0E1B     case 112:
;PCODE: $000020D1 VOL: 0
;PCODE: $000020D2 VOL: 0
;PCODE: $000020D3 VOL: 0
; 0000 0E1C 
; 0000 0E1D             a[0] = 0x0E2;   //ster1
;PCODE: $000020D4 VOL: 0
;PCODE: $000020D5 VOL: 0
; 0000 0E1E             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $000020D6 VOL: 0
;PCODE: $000020D7 VOL: 0
;PCODE: $000020D8 VOL: 0
;PCODE: $000020D9 VOL: 0
; 0000 0E1F             a[4] = 0x1C;    //ster3 ABS krazek scierny
;PCODE: $000020DA VOL: 0
;PCODE: $000020DB VOL: 0
;PCODE: $000020DC VOL: 0
;PCODE: $000020DD VOL: 0
; 0000 0E20             a[5] = 0x196;   //delta okrag
;PCODE: $000020DE VOL: 0
;PCODE: $000020DF VOL: 0
;PCODE: $000020E0 VOL: 0
;PCODE: $000020E1 VOL: 0
; 0000 0E21             a[7] = 0x11;    //ster3 INV krazek scierny
;PCODE: $000020E2 VOL: 0
;PCODE: $000020E3 VOL: 0
;PCODE: $000020E4 VOL: 0
;PCODE: $000020E5 VOL: 0
; 0000 0E22             a[9] = 1;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $000020E6 VOL: 0
;PCODE: $000020E7 VOL: 0
;PCODE: $000020E8 VOL: 0
;PCODE: $000020E9 VOL: 0
; 0000 0E23 
; 0000 0E24             a[1] = a[0]+0x001;  //ster2
;PCODE: $000020EA VOL: 0
;PCODE: $000020EB VOL: 0
;PCODE: $000020EC VOL: 0
;PCODE: $000020ED VOL: 0
; 0000 0E25             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $000020EE VOL: 0
;PCODE: $000020EF VOL: 0
;PCODE: $000020F0 VOL: 0
;PCODE: $000020F1 VOL: 0
; 0000 0E26             a[6] = a[5]+0x001;  //okrag
;PCODE: $000020F2 VOL: 0
;PCODE: $000020F3 VOL: 0
;PCODE: $000020F4 VOL: 0
;PCODE: $000020F5 VOL: 0
;PCODE: $000020F6 VOL: 0
; 0000 0E27             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $000020F7 VOL: 0
;PCODE: $000020F8 VOL: 0
;PCODE: $000020F9 VOL: 0
;PCODE: $000020FA VOL: 0
;PCODE: $000020FB VOL: 0
; 0000 0E28 
; 0000 0E29     break;
;PCODE: $000020FC VOL: 0
; 0000 0E2A 
; 0000 0E2B 
; 0000 0E2C     case 113:
;PCODE: $000020FD VOL: 0
;PCODE: $000020FE VOL: 0
;PCODE: $000020FF VOL: 0
; 0000 0E2D 
; 0000 0E2E             a[0] = 0x0D4;   //ster1
;PCODE: $00002100 VOL: 0
;PCODE: $00002101 VOL: 0
; 0000 0E2F             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $00002102 VOL: 0
;PCODE: $00002103 VOL: 0
;PCODE: $00002104 VOL: 0
;PCODE: $00002105 VOL: 0
; 0000 0E30             a[4] = 0x19;    //ster3 ABS krazek scierny
;PCODE: $00002106 VOL: 0
;PCODE: $00002107 VOL: 0
;PCODE: $00002108 VOL: 0
;PCODE: $00002109 VOL: 0
; 0000 0E31             a[5] = 0x196;   //delta okrag
;PCODE: $0000210A VOL: 0
;PCODE: $0000210B VOL: 0
;PCODE: $0000210C VOL: 0
;PCODE: $0000210D VOL: 0
; 0000 0E32             a[7] = 0x11;    //ster3 INV krazek scierny
;PCODE: $0000210E VOL: 0
;PCODE: $0000210F VOL: 0
;PCODE: $00002110 VOL: 0
;PCODE: $00002111 VOL: 0
; 0000 0E33             a[9] = 0;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $00002112 VOL: 0
;PCODE: $00002113 VOL: 0
;PCODE: $00002114 VOL: 0
;PCODE: $00002115 VOL: 0
; 0000 0E34 
; 0000 0E35             a[1] = a[0]+0x001;  //ster2
;PCODE: $00002116 VOL: 0
;PCODE: $00002117 VOL: 0
;PCODE: $00002118 VOL: 0
;PCODE: $00002119 VOL: 0
; 0000 0E36             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $0000211A VOL: 0
;PCODE: $0000211B VOL: 0
;PCODE: $0000211C VOL: 0
;PCODE: $0000211D VOL: 0
; 0000 0E37             a[6] = a[5]+0x001;  //okrag
;PCODE: $0000211E VOL: 0
;PCODE: $0000211F VOL: 0
;PCODE: $00002120 VOL: 0
;PCODE: $00002121 VOL: 0
;PCODE: $00002122 VOL: 0
; 0000 0E38             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $00002123 VOL: 0
;PCODE: $00002124 VOL: 0
;PCODE: $00002125 VOL: 0
;PCODE: $00002126 VOL: 0
;PCODE: $00002127 VOL: 0
; 0000 0E39 
; 0000 0E3A     break;
;PCODE: $00002128 VOL: 0
; 0000 0E3B 
; 0000 0E3C 
; 0000 0E3D     case 114:
;PCODE: $00002129 VOL: 0
;PCODE: $0000212A VOL: 0
;PCODE: $0000212B VOL: 0
; 0000 0E3E 
; 0000 0E3F             a[0] = 0x04A;   //ster1
;PCODE: $0000212C VOL: 0
;PCODE: $0000212D VOL: 0
; 0000 0E40             a[3] = 0x10;    //ster4 INV druciak
;PCODE: $0000212E VOL: 0
;PCODE: $0000212F VOL: 0
;PCODE: $00002130 VOL: 0
;PCODE: $00002131 VOL: 0
; 0000 0E41             a[4] = 0x1D;    //ster3 ABS krazek scierny
;PCODE: $00002132 VOL: 0
;PCODE: $00002133 VOL: 0
;PCODE: $00002134 VOL: 0
;PCODE: $00002135 VOL: 0
; 0000 0E42             a[5] = 0x196;   //delta okrag
;PCODE: $00002136 VOL: 0
;PCODE: $00002137 VOL: 0
;PCODE: $00002138 VOL: 0
;PCODE: $00002139 VOL: 0
; 0000 0E43             a[7] = 0x0F;    //ster3 INV krazek scierny
;PCODE: $0000213A VOL: 0
;PCODE: $0000213B VOL: 0
;PCODE: $0000213C VOL: 0
;PCODE: $0000213D VOL: 0
; 0000 0E44             a[9] = 0;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $0000213E VOL: 0
;PCODE: $0000213F VOL: 0
;PCODE: $00002140 VOL: 0
;PCODE: $00002141 VOL: 0
; 0000 0E45 
; 0000 0E46             a[1] = a[0]+0x001;  //ster2
;PCODE: $00002142 VOL: 0
;PCODE: $00002143 VOL: 0
;PCODE: $00002144 VOL: 0
;PCODE: $00002145 VOL: 0
; 0000 0E47             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $00002146 VOL: 0
;PCODE: $00002147 VOL: 0
;PCODE: $00002148 VOL: 0
;PCODE: $00002149 VOL: 0
; 0000 0E48             a[6] = a[5]+0x001;  //okrag
;PCODE: $0000214A VOL: 0
;PCODE: $0000214B VOL: 0
;PCODE: $0000214C VOL: 0
;PCODE: $0000214D VOL: 0
;PCODE: $0000214E VOL: 0
; 0000 0E49             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $0000214F VOL: 0
;PCODE: $00002150 VOL: 0
;PCODE: $00002151 VOL: 0
;PCODE: $00002152 VOL: 0
;PCODE: $00002153 VOL: 0
; 0000 0E4A 
; 0000 0E4B     break;
;PCODE: $00002154 VOL: 0
; 0000 0E4C 
; 0000 0E4D 
; 0000 0E4E     case 115:
;PCODE: $00002155 VOL: 0
;PCODE: $00002156 VOL: 0
;PCODE: $00002157 VOL: 0
; 0000 0E4F 
; 0000 0E50             a[0] = 0x076;   //ster1
;PCODE: $00002158 VOL: 0
;PCODE: $00002159 VOL: 0
; 0000 0E51             a[3] = 0x12;    //ster4 INV druciak
;PCODE: $0000215A VOL: 0
;PCODE: $0000215B VOL: 0
;PCODE: $0000215C VOL: 0
;PCODE: $0000215D VOL: 0
; 0000 0E52             a[4] = 0x1F;    //ster3 ABS krazek scierny
;PCODE: $0000215E VOL: 0
;PCODE: $0000215F VOL: 0
;PCODE: $00002160 VOL: 0
;PCODE: $00002161 VOL: 0
; 0000 0E53             a[5] = 0x19C;   //delta okrag
;PCODE: $00002162 VOL: 0
;PCODE: $00002163 VOL: 0
;PCODE: $00002164 VOL: 0
;PCODE: $00002165 VOL: 0
; 0000 0E54             a[7] = 0x11;    //ster3 INV krazek scierny
;PCODE: $00002166 VOL: 0
;PCODE: $00002167 VOL: 0
;PCODE: $00002168 VOL: 0
;PCODE: $00002169 VOL: 0
; 0000 0E55             a[9] = 0;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $0000216A VOL: 0
;PCODE: $0000216B VOL: 0
;PCODE: $0000216C VOL: 0
;PCODE: $0000216D VOL: 0
; 0000 0E56 
; 0000 0E57             a[1] = a[0]+0x001;  //ster2
;PCODE: $0000216E VOL: 0
;PCODE: $0000216F VOL: 0
;PCODE: $00002170 VOL: 0
;PCODE: $00002171 VOL: 0
; 0000 0E58             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $00002172 VOL: 0
;PCODE: $00002173 VOL: 0
;PCODE: $00002174 VOL: 0
;PCODE: $00002175 VOL: 0
; 0000 0E59             a[6] = a[5]+0x001;  //okrag
;PCODE: $00002176 VOL: 0
;PCODE: $00002177 VOL: 0
;PCODE: $00002178 VOL: 0
;PCODE: $00002179 VOL: 0
;PCODE: $0000217A VOL: 0
; 0000 0E5A             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $0000217B VOL: 0
;PCODE: $0000217C VOL: 0
;PCODE: $0000217D VOL: 0
;PCODE: $0000217E VOL: 0
;PCODE: $0000217F VOL: 0
; 0000 0E5B 
; 0000 0E5C     break;
;PCODE: $00002180 VOL: 0
; 0000 0E5D 
; 0000 0E5E 
; 0000 0E5F     case 116:
;PCODE: $00002181 VOL: 0
;PCODE: $00002182 VOL: 0
;PCODE: $00002183 VOL: 0
; 0000 0E60 
; 0000 0E61             a[0] = 0x092;   //ster1
;PCODE: $00002184 VOL: 0
;PCODE: $00002185 VOL: 0
; 0000 0E62             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $00002186 VOL: 0
;PCODE: $00002187 VOL: 0
;PCODE: $00002188 VOL: 0
;PCODE: $00002189 VOL: 0
; 0000 0E63             a[4] = 0x21;    //ster3 ABS krazek scierny
;PCODE: $0000218A VOL: 0
;PCODE: $0000218B VOL: 0
;PCODE: $0000218C VOL: 0
;PCODE: $0000218D VOL: 0
; 0000 0E64             a[5] = 0x196;   //delta okrag
;PCODE: $0000218E VOL: 0
;PCODE: $0000218F VOL: 0
;PCODE: $00002190 VOL: 0
;PCODE: $00002191 VOL: 0
; 0000 0E65             a[7] = 0x12;    //ster3 INV krazek scierny
;PCODE: $00002192 VOL: 0
;PCODE: $00002193 VOL: 0
;PCODE: $00002194 VOL: 0
;PCODE: $00002195 VOL: 0
; 0000 0E66             a[9] = 1;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $00002196 VOL: 0
;PCODE: $00002197 VOL: 0
;PCODE: $00002198 VOL: 0
;PCODE: $00002199 VOL: 0
; 0000 0E67 
; 0000 0E68             a[1] = a[0]+0x001;  //ster2
;PCODE: $0000219A VOL: 0
;PCODE: $0000219B VOL: 0
;PCODE: $0000219C VOL: 0
;PCODE: $0000219D VOL: 0
; 0000 0E69             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $0000219E VOL: 0
;PCODE: $0000219F VOL: 0
;PCODE: $000021A0 VOL: 0
;PCODE: $000021A1 VOL: 0
; 0000 0E6A             a[6] = a[5]+0x001;  //okrag
;PCODE: $000021A2 VOL: 0
;PCODE: $000021A3 VOL: 0
;PCODE: $000021A4 VOL: 0
;PCODE: $000021A5 VOL: 0
;PCODE: $000021A6 VOL: 0
; 0000 0E6B             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $000021A7 VOL: 0
;PCODE: $000021A8 VOL: 0
;PCODE: $000021A9 VOL: 0
;PCODE: $000021AA VOL: 0
;PCODE: $000021AB VOL: 0
; 0000 0E6C 
; 0000 0E6D     break;
;PCODE: $000021AC VOL: 0
; 0000 0E6E 
; 0000 0E6F 
; 0000 0E70 
; 0000 0E71     case 117:
;PCODE: $000021AD VOL: 0
;PCODE: $000021AE VOL: 0
;PCODE: $000021AF VOL: 0
; 0000 0E72 
; 0000 0E73             a[0] = 0x11A;   //ster1
;PCODE: $000021B0 VOL: 0
;PCODE: $000021B1 VOL: 0
; 0000 0E74             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $000021B2 VOL: 0
;PCODE: $000021B3 VOL: 0
;PCODE: $000021B4 VOL: 0
;PCODE: $000021B5 VOL: 0
; 0000 0E75             a[4] = 0x19;    //ster3 ABS krazek scierny
;PCODE: $000021B6 VOL: 0
;PCODE: $000021B7 VOL: 0
;PCODE: $000021B8 VOL: 0
;PCODE: $000021B9 VOL: 0
; 0000 0E76             a[5] = 0x196;   //delta okrag
;PCODE: $000021BA VOL: 0
;PCODE: $000021BB VOL: 0
;PCODE: $000021BC VOL: 0
;PCODE: $000021BD VOL: 0
; 0000 0E77             a[7] = 0x11;    //ster3 INV krazek scierny
;PCODE: $000021BE VOL: 0
;PCODE: $000021BF VOL: 0
;PCODE: $000021C0 VOL: 0
;PCODE: $000021C1 VOL: 0
; 0000 0E78             a[9] = 1;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $000021C2 VOL: 0
;PCODE: $000021C3 VOL: 0
;PCODE: $000021C4 VOL: 0
;PCODE: $000021C5 VOL: 0
; 0000 0E79 
; 0000 0E7A             a[1] = a[0]+0x001;  //ster2
;PCODE: $000021C6 VOL: 0
;PCODE: $000021C7 VOL: 0
;PCODE: $000021C8 VOL: 0
;PCODE: $000021C9 VOL: 0
; 0000 0E7B             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $000021CA VOL: 0
;PCODE: $000021CB VOL: 0
;PCODE: $000021CC VOL: 0
;PCODE: $000021CD VOL: 0
; 0000 0E7C             a[6] = a[5]+0x001;  //okrag
;PCODE: $000021CE VOL: 0
;PCODE: $000021CF VOL: 0
;PCODE: $000021D0 VOL: 0
;PCODE: $000021D1 VOL: 0
;PCODE: $000021D2 VOL: 0
; 0000 0E7D             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $000021D3 VOL: 0
;PCODE: $000021D4 VOL: 0
;PCODE: $000021D5 VOL: 0
;PCODE: $000021D6 VOL: 0
;PCODE: $000021D7 VOL: 0
; 0000 0E7E 
; 0000 0E7F     break;
;PCODE: $000021D8 VOL: 0
; 0000 0E80 
; 0000 0E81 
; 0000 0E82 
; 0000 0E83     case 118:
;PCODE: $000021D9 VOL: 0
;PCODE: $000021DA VOL: 0
;PCODE: $000021DB VOL: 0
; 0000 0E84 
; 0000 0E85             a[0] = 0x056;   //ster1
;PCODE: $000021DC VOL: 0
;PCODE: $000021DD VOL: 0
; 0000 0E86             a[3] = 0x10;    //ster4 INV druciak
;PCODE: $000021DE VOL: 0
;PCODE: $000021DF VOL: 0
;PCODE: $000021E0 VOL: 0
;PCODE: $000021E1 VOL: 0
; 0000 0E87             a[4] = 0x1D;    //ster3 ABS krazek scierny
;PCODE: $000021E2 VOL: 0
;PCODE: $000021E3 VOL: 0
;PCODE: $000021E4 VOL: 0
;PCODE: $000021E5 VOL: 0
; 0000 0E88             a[5] = 0x196;   //delta okrag
;PCODE: $000021E6 VOL: 0
;PCODE: $000021E7 VOL: 0
;PCODE: $000021E8 VOL: 0
;PCODE: $000021E9 VOL: 0
; 0000 0E89             a[7] = 0x11;    //ster3 INV krazek scierny
;PCODE: $000021EA VOL: 0
;PCODE: $000021EB VOL: 0
;PCODE: $000021EC VOL: 0
;PCODE: $000021ED VOL: 0
; 0000 0E8A             a[9] = 1;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $000021EE VOL: 0
;PCODE: $000021EF VOL: 0
;PCODE: $000021F0 VOL: 0
;PCODE: $000021F1 VOL: 0
; 0000 0E8B 
; 0000 0E8C             a[1] = a[0]+0x001;  //ster2
;PCODE: $000021F2 VOL: 0
;PCODE: $000021F3 VOL: 0
;PCODE: $000021F4 VOL: 0
;PCODE: $000021F5 VOL: 0
; 0000 0E8D             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $000021F6 VOL: 0
;PCODE: $000021F7 VOL: 0
;PCODE: $000021F8 VOL: 0
;PCODE: $000021F9 VOL: 0
; 0000 0E8E             a[6] = a[5]+0x001;  //okrag
;PCODE: $000021FA VOL: 0
;PCODE: $000021FB VOL: 0
;PCODE: $000021FC VOL: 0
;PCODE: $000021FD VOL: 0
;PCODE: $000021FE VOL: 0
; 0000 0E8F             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $000021FF VOL: 0
;PCODE: $00002200 VOL: 0
;PCODE: $00002201 VOL: 0
;PCODE: $00002202 VOL: 0
;PCODE: $00002203 VOL: 0
; 0000 0E90 
; 0000 0E91     break;
;PCODE: $00002204 VOL: 0
; 0000 0E92 
; 0000 0E93 
; 0000 0E94     case 119:
;PCODE: $00002205 VOL: 0
;PCODE: $00002206 VOL: 0
;PCODE: $00002207 VOL: 0
; 0000 0E95 
; 0000 0E96             a[0] = 0x072;   //ster1
;PCODE: $00002208 VOL: 0
;PCODE: $00002209 VOL: 0
; 0000 0E97             a[3] = 0x12;    //ster4 INV druciak
;PCODE: $0000220A VOL: 0
;PCODE: $0000220B VOL: 0
;PCODE: $0000220C VOL: 0
;PCODE: $0000220D VOL: 0
; 0000 0E98             a[4] = 0x1F;    //ster3 ABS krazek scierny
;PCODE: $0000220E VOL: 0
;PCODE: $0000220F VOL: 0
;PCODE: $00002210 VOL: 0
;PCODE: $00002211 VOL: 0
; 0000 0E99             a[5] = 0x19C;   //delta okrag
;PCODE: $00002212 VOL: 0
;PCODE: $00002213 VOL: 0
;PCODE: $00002214 VOL: 0
;PCODE: $00002215 VOL: 0
; 0000 0E9A             a[7] = 0x11;    //ster3 INV krazek scierny
;PCODE: $00002216 VOL: 0
;PCODE: $00002217 VOL: 0
;PCODE: $00002218 VOL: 0
;PCODE: $00002219 VOL: 0
; 0000 0E9B             a[9] = 1;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $0000221A VOL: 0
;PCODE: $0000221B VOL: 0
;PCODE: $0000221C VOL: 0
;PCODE: $0000221D VOL: 0
; 0000 0E9C 
; 0000 0E9D             a[1] = a[0]+0x001;  //ster2
;PCODE: $0000221E VOL: 0
;PCODE: $0000221F VOL: 0
;PCODE: $00002220 VOL: 0
;PCODE: $00002221 VOL: 0
; 0000 0E9E             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $00002222 VOL: 0
;PCODE: $00002223 VOL: 0
;PCODE: $00002224 VOL: 0
;PCODE: $00002225 VOL: 0
; 0000 0E9F             a[6] = a[5]+0x001;  //okrag
;PCODE: $00002226 VOL: 0
;PCODE: $00002227 VOL: 0
;PCODE: $00002228 VOL: 0
;PCODE: $00002229 VOL: 0
;PCODE: $0000222A VOL: 0
; 0000 0EA0             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $0000222B VOL: 0
;PCODE: $0000222C VOL: 0
;PCODE: $0000222D VOL: 0
;PCODE: $0000222E VOL: 0
;PCODE: $0000222F VOL: 0
; 0000 0EA1 
; 0000 0EA2     break;
;PCODE: $00002230 VOL: 0
; 0000 0EA3 
; 0000 0EA4 
; 0000 0EA5     case 120:
;PCODE: $00002231 VOL: 0
;PCODE: $00002232 VOL: 0
;PCODE: $00002233 VOL: 0
; 0000 0EA6 
; 0000 0EA7             a[0] = 0x0D0;   //ster1
;PCODE: $00002234 VOL: 0
;PCODE: $00002235 VOL: 0
; 0000 0EA8             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $00002236 VOL: 0
;PCODE: $00002237 VOL: 0
;PCODE: $00002238 VOL: 0
;PCODE: $00002239 VOL: 0
; 0000 0EA9             a[4] = 0x21;    //ster3 ABS krazek scierny
;PCODE: $0000223A VOL: 0
;PCODE: $0000223B VOL: 0
;PCODE: $0000223C VOL: 0
;PCODE: $0000223D VOL: 0
; 0000 0EAA             a[5] = 0x196;   //delta okrag
;PCODE: $0000223E VOL: 0
;PCODE: $0000223F VOL: 0
;PCODE: $00002240 VOL: 0
;PCODE: $00002241 VOL: 0
; 0000 0EAB             a[7] = 0x12;    //ster3 INV krazek scierny
;PCODE: $00002242 VOL: 0
;PCODE: $00002243 VOL: 0
;PCODE: $00002244 VOL: 0
;PCODE: $00002245 VOL: 0
; 0000 0EAC             a[9] = 0;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $00002246 VOL: 0
;PCODE: $00002247 VOL: 0
;PCODE: $00002248 VOL: 0
;PCODE: $00002249 VOL: 0
; 0000 0EAD 
; 0000 0EAE             a[1] = a[0]+0x001;  //ster2
;PCODE: $0000224A VOL: 0
;PCODE: $0000224B VOL: 0
;PCODE: $0000224C VOL: 0
;PCODE: $0000224D VOL: 0
; 0000 0EAF             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $0000224E VOL: 0
;PCODE: $0000224F VOL: 0
;PCODE: $00002250 VOL: 0
;PCODE: $00002251 VOL: 0
; 0000 0EB0             a[6] = a[5]+0x001;  //okrag
;PCODE: $00002252 VOL: 0
;PCODE: $00002253 VOL: 0
;PCODE: $00002254 VOL: 0
;PCODE: $00002255 VOL: 0
;PCODE: $00002256 VOL: 0
; 0000 0EB1             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $00002257 VOL: 0
;PCODE: $00002258 VOL: 0
;PCODE: $00002259 VOL: 0
;PCODE: $0000225A VOL: 0
;PCODE: $0000225B VOL: 0
; 0000 0EB2 
; 0000 0EB3     break;
;PCODE: $0000225C VOL: 0
; 0000 0EB4 
; 0000 0EB5 
; 0000 0EB6     case 121:
;PCODE: $0000225D VOL: 0
;PCODE: $0000225E VOL: 0
;PCODE: $0000225F VOL: 0
; 0000 0EB7 
; 0000 0EB8             a[0] = 0x048;   //ster1
;PCODE: $00002260 VOL: 0
;PCODE: $00002261 VOL: 0
; 0000 0EB9             a[3] = 0x10;    //ster4 INV druciak
;PCODE: $00002262 VOL: 0
;PCODE: $00002263 VOL: 0
;PCODE: $00002264 VOL: 0
;PCODE: $00002265 VOL: 0
; 0000 0EBA             a[4] = 0x1D;    //ster3 ABS krazek scierny
;PCODE: $00002266 VOL: 0
;PCODE: $00002267 VOL: 0
;PCODE: $00002268 VOL: 0
;PCODE: $00002269 VOL: 0
; 0000 0EBB             a[5] = 0x196;   //delta okrag
;PCODE: $0000226A VOL: 0
;PCODE: $0000226B VOL: 0
;PCODE: $0000226C VOL: 0
;PCODE: $0000226D VOL: 0
; 0000 0EBC             a[7] = 0x11;    //ster3 INV krazek scierny
;PCODE: $0000226E VOL: 0
;PCODE: $0000226F VOL: 0
;PCODE: $00002270 VOL: 0
;PCODE: $00002271 VOL: 0
; 0000 0EBD             a[9] = 0;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $00002272 VOL: 0
;PCODE: $00002273 VOL: 0
;PCODE: $00002274 VOL: 0
;PCODE: $00002275 VOL: 0
; 0000 0EBE 
; 0000 0EBF             a[1] = a[0]+0x001;  //ster2
;PCODE: $00002276 VOL: 0
;PCODE: $00002277 VOL: 0
;PCODE: $00002278 VOL: 0
;PCODE: $00002279 VOL: 0
; 0000 0EC0             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $0000227A VOL: 0
;PCODE: $0000227B VOL: 0
;PCODE: $0000227C VOL: 0
;PCODE: $0000227D VOL: 0
; 0000 0EC1             a[6] = a[5]+0x001;  //okrag
;PCODE: $0000227E VOL: 0
;PCODE: $0000227F VOL: 0
;PCODE: $00002280 VOL: 0
;PCODE: $00002281 VOL: 0
;PCODE: $00002282 VOL: 0
; 0000 0EC2             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $00002283 VOL: 0
;PCODE: $00002284 VOL: 0
;PCODE: $00002285 VOL: 0
;PCODE: $00002286 VOL: 0
;PCODE: $00002287 VOL: 0
; 0000 0EC3 
; 0000 0EC4     break;
;PCODE: $00002288 VOL: 0
; 0000 0EC5 
; 0000 0EC6 
; 0000 0EC7     case 122:
;PCODE: $00002289 VOL: 0
;PCODE: $0000228A VOL: 0
;PCODE: $0000228B VOL: 0
; 0000 0EC8 
; 0000 0EC9             a[0] = 0x09A;   //ster1
;PCODE: $0000228C VOL: 0
;PCODE: $0000228D VOL: 0
; 0000 0ECA             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $0000228E VOL: 0
;PCODE: $0000228F VOL: 0
;PCODE: $00002290 VOL: 0
;PCODE: $00002291 VOL: 0
; 0000 0ECB             a[4] = 0x1E;    //ster3 ABS krazek scierny
;PCODE: $00002292 VOL: 0
;PCODE: $00002293 VOL: 0
;PCODE: $00002294 VOL: 0
;PCODE: $00002295 VOL: 0
; 0000 0ECC             a[5] = 0x196;   //delta okrag
;PCODE: $00002296 VOL: 0
;PCODE: $00002297 VOL: 0
;PCODE: $00002298 VOL: 0
;PCODE: $00002299 VOL: 0
; 0000 0ECD             a[7] = 0x12;    //ster3 INV krazek scierny
;PCODE: $0000229A VOL: 0
;PCODE: $0000229B VOL: 0
;PCODE: $0000229C VOL: 0
;PCODE: $0000229D VOL: 0
; 0000 0ECE             a[9] = 0;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $0000229E VOL: 0
;PCODE: $0000229F VOL: 0
;PCODE: $000022A0 VOL: 0
;PCODE: $000022A1 VOL: 0
; 0000 0ECF 
; 0000 0ED0             a[1] = a[0]+0x001;  //ster2
;PCODE: $000022A2 VOL: 0
;PCODE: $000022A3 VOL: 0
;PCODE: $000022A4 VOL: 0
;PCODE: $000022A5 VOL: 0
; 0000 0ED1             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $000022A6 VOL: 0
;PCODE: $000022A7 VOL: 0
;PCODE: $000022A8 VOL: 0
;PCODE: $000022A9 VOL: 0
; 0000 0ED2             a[6] = a[5]+0x001;  //okrag
;PCODE: $000022AA VOL: 0
;PCODE: $000022AB VOL: 0
;PCODE: $000022AC VOL: 0
;PCODE: $000022AD VOL: 0
;PCODE: $000022AE VOL: 0
; 0000 0ED3             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $000022AF VOL: 0
;PCODE: $000022B0 VOL: 0
;PCODE: $000022B1 VOL: 0
;PCODE: $000022B2 VOL: 0
;PCODE: $000022B3 VOL: 0
; 0000 0ED4 
; 0000 0ED5     break;
;PCODE: $000022B4 VOL: 0
; 0000 0ED6 
; 0000 0ED7 
; 0000 0ED8     case 123:
;PCODE: $000022B5 VOL: 0
;PCODE: $000022B6 VOL: 0
;PCODE: $000022B7 VOL: 0
; 0000 0ED9 
; 0000 0EDA             a[0] = 0x046;   //ster1
;PCODE: $000022B8 VOL: 0
;PCODE: $000022B9 VOL: 0
; 0000 0EDB             a[3] = 0x10;    //ster4 INV druciak
;PCODE: $000022BA VOL: 0
;PCODE: $000022BB VOL: 0
;PCODE: $000022BC VOL: 0
;PCODE: $000022BD VOL: 0
; 0000 0EDC             a[4] = 0x17;    //ster3 ABS krazek scierny
;PCODE: $000022BE VOL: 0
;PCODE: $000022BF VOL: 0
;PCODE: $000022C0 VOL: 0
;PCODE: $000022C1 VOL: 0
; 0000 0EDD             a[5] = 0x193;   //delta okrag
;PCODE: $000022C2 VOL: 0
;PCODE: $000022C3 VOL: 0
;PCODE: $000022C4 VOL: 0
;PCODE: $000022C5 VOL: 0
; 0000 0EDE             a[7] = 0x13;    //ster3 INV krazek scierny
;PCODE: $000022C6 VOL: 0
;PCODE: $000022C7 VOL: 0
;PCODE: $000022C8 VOL: 0
;PCODE: $000022C9 VOL: 0
; 0000 0EDF             a[9] = 0;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $000022CA VOL: 0
;PCODE: $000022CB VOL: 0
;PCODE: $000022CC VOL: 0
;PCODE: $000022CD VOL: 0
; 0000 0EE0 
; 0000 0EE1             a[1] = a[0]+0x001;  //ster2
;PCODE: $000022CE VOL: 0
;PCODE: $000022CF VOL: 0
;PCODE: $000022D0 VOL: 0
;PCODE: $000022D1 VOL: 0
; 0000 0EE2             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $000022D2 VOL: 0
;PCODE: $000022D3 VOL: 0
;PCODE: $000022D4 VOL: 0
;PCODE: $000022D5 VOL: 0
; 0000 0EE3             a[6] = a[5]+0x001;  //okrag
;PCODE: $000022D6 VOL: 0
;PCODE: $000022D7 VOL: 0
;PCODE: $000022D8 VOL: 0
;PCODE: $000022D9 VOL: 0
;PCODE: $000022DA VOL: 0
; 0000 0EE4             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $000022DB VOL: 0
;PCODE: $000022DC VOL: 0
;PCODE: $000022DD VOL: 0
;PCODE: $000022DE VOL: 0
;PCODE: $000022DF VOL: 0
; 0000 0EE5 
; 0000 0EE6     break;
;PCODE: $000022E0 VOL: 0
; 0000 0EE7 
; 0000 0EE8 
; 0000 0EE9 
; 0000 0EEA     case 124:
;PCODE: $000022E1 VOL: 0
;PCODE: $000022E2 VOL: 0
;PCODE: $000022E3 VOL: 0
; 0000 0EEB 
; 0000 0EEC             a[0] = 0x0E0;   //ster1
;PCODE: $000022E4 VOL: 0
;PCODE: $000022E5 VOL: 0
; 0000 0EED             a[3] = 0x0F;    //ster4 INV druciak
;PCODE: $000022E6 VOL: 0
;PCODE: $000022E7 VOL: 0
;PCODE: $000022E8 VOL: 0
;PCODE: $000022E9 VOL: 0
; 0000 0EEE             a[4] = 0x15;    //ster3 ABS krazek scierny
;PCODE: $000022EA VOL: 0
;PCODE: $000022EB VOL: 0
;PCODE: $000022EC VOL: 0
;PCODE: $000022ED VOL: 0
; 0000 0EEF             a[5] = 0x196;   //delta okrag
;PCODE: $000022EE VOL: 0
;PCODE: $000022EF VOL: 0
;PCODE: $000022F0 VOL: 0
;PCODE: $000022F1 VOL: 0
; 0000 0EF0             a[7] = 0x13;    //ster3 INV krazek scierny
;PCODE: $000022F2 VOL: 0
;PCODE: $000022F3 VOL: 0
;PCODE: $000022F4 VOL: 0
;PCODE: $000022F5 VOL: 0
; 0000 0EF1             a[9] = 0;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $000022F6 VOL: 0
;PCODE: $000022F7 VOL: 0
;PCODE: $000022F8 VOL: 0
;PCODE: $000022F9 VOL: 0
; 0000 0EF2 
; 0000 0EF3             a[1] = a[0]+0x001;  //ster2
;PCODE: $000022FA VOL: 0
;PCODE: $000022FB VOL: 0
;PCODE: $000022FC VOL: 0
;PCODE: $000022FD VOL: 0
; 0000 0EF4             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $000022FE VOL: 0
;PCODE: $000022FF VOL: 0
;PCODE: $00002300 VOL: 0
;PCODE: $00002301 VOL: 0
; 0000 0EF5             a[6] = a[5]+0x001;  //okrag
;PCODE: $00002302 VOL: 0
;PCODE: $00002303 VOL: 0
;PCODE: $00002304 VOL: 0
;PCODE: $00002305 VOL: 0
;PCODE: $00002306 VOL: 0
; 0000 0EF6             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $00002307 VOL: 0
;PCODE: $00002308 VOL: 0
;PCODE: $00002309 VOL: 0
;PCODE: $0000230A VOL: 0
;PCODE: $0000230B VOL: 0
; 0000 0EF7 
; 0000 0EF8     break;
;PCODE: $0000230C VOL: 0
; 0000 0EF9 
; 0000 0EFA 
; 0000 0EFB     case 125:
;PCODE: $0000230D VOL: 0
;PCODE: $0000230E VOL: 0
;PCODE: $0000230F VOL: 0
; 0000 0EFC 
; 0000 0EFD             a[0] = 0x038;   //ster1
;PCODE: $00002310 VOL: 0
;PCODE: $00002311 VOL: 0
; 0000 0EFE             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $00002312 VOL: 0
;PCODE: $00002313 VOL: 0
;PCODE: $00002314 VOL: 0
;PCODE: $00002315 VOL: 0
; 0000 0EFF             a[4] = 0x1E;    //ster3 ABS krazek scierny
;PCODE: $00002316 VOL: 0
;PCODE: $00002317 VOL: 0
;PCODE: $00002318 VOL: 0
;PCODE: $00002319 VOL: 0
; 0000 0F00             a[5] = 0x196;   //delta okrag
;PCODE: $0000231A VOL: 0
;PCODE: $0000231B VOL: 0
;PCODE: $0000231C VOL: 0
;PCODE: $0000231D VOL: 0
; 0000 0F01             a[7] = 0x11;    //ster3 INV krazek scierny
;PCODE: $0000231E VOL: 0
;PCODE: $0000231F VOL: 0
;PCODE: $00002320 VOL: 0
;PCODE: $00002321 VOL: 0
; 0000 0F02             a[9] = 1;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $00002322 VOL: 0
;PCODE: $00002323 VOL: 0
;PCODE: $00002324 VOL: 0
;PCODE: $00002325 VOL: 0
; 0000 0F03 
; 0000 0F04             a[1] = a[0]+0x001;  //ster2
;PCODE: $00002326 VOL: 0
;PCODE: $00002327 VOL: 0
;PCODE: $00002328 VOL: 0
;PCODE: $00002329 VOL: 0
; 0000 0F05             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $0000232A VOL: 0
;PCODE: $0000232B VOL: 0
;PCODE: $0000232C VOL: 0
;PCODE: $0000232D VOL: 0
; 0000 0F06             a[6] = a[5]+0x001;  //okrag
;PCODE: $0000232E VOL: 0
;PCODE: $0000232F VOL: 0
;PCODE: $00002330 VOL: 0
;PCODE: $00002331 VOL: 0
;PCODE: $00002332 VOL: 0
; 0000 0F07             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $00002333 VOL: 0
;PCODE: $00002334 VOL: 0
;PCODE: $00002335 VOL: 0
;PCODE: $00002336 VOL: 0
;PCODE: $00002337 VOL: 0
; 0000 0F08 
; 0000 0F09     break;
;PCODE: $00002338 VOL: 0
; 0000 0F0A 
; 0000 0F0B 
; 0000 0F0C     case 126:
;PCODE: $00002339 VOL: 0
;PCODE: $0000233A VOL: 0
;PCODE: $0000233B VOL: 0
; 0000 0F0D 
; 0000 0F0E             a[0] = 0x0CA;   //ster1
;PCODE: $0000233C VOL: 0
;PCODE: $0000233D VOL: 0
; 0000 0F0F             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $0000233E VOL: 0
;PCODE: $0000233F VOL: 0
;PCODE: $00002340 VOL: 0
;PCODE: $00002341 VOL: 0
; 0000 0F10             a[4] = 0x1E;    //ster3 ABS krazek scierny
;PCODE: $00002342 VOL: 0
;PCODE: $00002343 VOL: 0
;PCODE: $00002344 VOL: 0
;PCODE: $00002345 VOL: 0
; 0000 0F11             a[5] = 0x196;   //delta okrag
;PCODE: $00002346 VOL: 0
;PCODE: $00002347 VOL: 0
;PCODE: $00002348 VOL: 0
;PCODE: $00002349 VOL: 0
; 0000 0F12             a[7] = 0x12;    //ster3 INV krazek scierny
;PCODE: $0000234A VOL: 0
;PCODE: $0000234B VOL: 0
;PCODE: $0000234C VOL: 0
;PCODE: $0000234D VOL: 0
; 0000 0F13             a[9] = 1;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $0000234E VOL: 0
;PCODE: $0000234F VOL: 0
;PCODE: $00002350 VOL: 0
;PCODE: $00002351 VOL: 0
; 0000 0F14 
; 0000 0F15             a[1] = a[0]+0x001;  //ster2
;PCODE: $00002352 VOL: 0
;PCODE: $00002353 VOL: 0
;PCODE: $00002354 VOL: 0
;PCODE: $00002355 VOL: 0
; 0000 0F16             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $00002356 VOL: 0
;PCODE: $00002357 VOL: 0
;PCODE: $00002358 VOL: 0
;PCODE: $00002359 VOL: 0
; 0000 0F17             a[6] = a[5]+0x001;  //okrag
;PCODE: $0000235A VOL: 0
;PCODE: $0000235B VOL: 0
;PCODE: $0000235C VOL: 0
;PCODE: $0000235D VOL: 0
;PCODE: $0000235E VOL: 0
; 0000 0F18             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $0000235F VOL: 0
;PCODE: $00002360 VOL: 0
;PCODE: $00002361 VOL: 0
;PCODE: $00002362 VOL: 0
;PCODE: $00002363 VOL: 0
; 0000 0F19 
; 0000 0F1A     break;
;PCODE: $00002364 VOL: 0
; 0000 0F1B 
; 0000 0F1C 
; 0000 0F1D     case 127:
;PCODE: $00002365 VOL: 0
;PCODE: $00002366 VOL: 0
;PCODE: $00002367 VOL: 0
; 0000 0F1E 
; 0000 0F1F             a[0] = 0x0DE;   //ster1
;PCODE: $00002368 VOL: 0
;PCODE: $00002369 VOL: 0
; 0000 0F20             a[3] = 0x10;    //ster4 INV druciak
;PCODE: $0000236A VOL: 0
;PCODE: $0000236B VOL: 0
;PCODE: $0000236C VOL: 0
;PCODE: $0000236D VOL: 0
; 0000 0F21             a[4] = 0x17;    //ster3 ABS krazek scierny
;PCODE: $0000236E VOL: 0
;PCODE: $0000236F VOL: 0
;PCODE: $00002370 VOL: 0
;PCODE: $00002371 VOL: 0
; 0000 0F22             a[5] = 0x193;   //delta okrag
;PCODE: $00002372 VOL: 0
;PCODE: $00002373 VOL: 0
;PCODE: $00002374 VOL: 0
;PCODE: $00002375 VOL: 0
; 0000 0F23             a[7] = 0x13;    //ster3 INV krazek scierny
;PCODE: $00002376 VOL: 0
;PCODE: $00002377 VOL: 0
;PCODE: $00002378 VOL: 0
;PCODE: $00002379 VOL: 0
; 0000 0F24             a[9] = 1;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $0000237A VOL: 0
;PCODE: $0000237B VOL: 0
;PCODE: $0000237C VOL: 0
;PCODE: $0000237D VOL: 0
; 0000 0F25 
; 0000 0F26             a[1] = a[0]+0x001;  //ster2
;PCODE: $0000237E VOL: 0
;PCODE: $0000237F VOL: 0
;PCODE: $00002380 VOL: 0
;PCODE: $00002381 VOL: 0
; 0000 0F27             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $00002382 VOL: 0
;PCODE: $00002383 VOL: 0
;PCODE: $00002384 VOL: 0
;PCODE: $00002385 VOL: 0
; 0000 0F28             a[6] = a[5]+0x001;  //okrag
;PCODE: $00002386 VOL: 0
;PCODE: $00002387 VOL: 0
;PCODE: $00002388 VOL: 0
;PCODE: $00002389 VOL: 0
;PCODE: $0000238A VOL: 0
; 0000 0F29             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $0000238B VOL: 0
;PCODE: $0000238C VOL: 0
;PCODE: $0000238D VOL: 0
;PCODE: $0000238E VOL: 0
;PCODE: $0000238F VOL: 0
; 0000 0F2A 
; 0000 0F2B     break;
;PCODE: $00002390 VOL: 0
; 0000 0F2C 
; 0000 0F2D 
; 0000 0F2E     case 128:
;PCODE: $00002391 VOL: 0
;PCODE: $00002392 VOL: 0
;PCODE: $00002393 VOL: 0
; 0000 0F2F 
; 0000 0F30             a[0] = 0x116;   //ster1
;PCODE: $00002394 VOL: 0
;PCODE: $00002395 VOL: 0
; 0000 0F31             a[3] = 0x10;    //ster4 INV druciak
;PCODE: $00002396 VOL: 0
;PCODE: $00002397 VOL: 0
;PCODE: $00002398 VOL: 0
;PCODE: $00002399 VOL: 0
; 0000 0F32             a[4] = 0x18;    //ster3 ABS krazek scierny
;PCODE: $0000239A VOL: 0
;PCODE: $0000239B VOL: 0
;PCODE: $0000239C VOL: 0
;PCODE: $0000239D VOL: 0
; 0000 0F33             a[5] = 0x196;   //delta okrag
;PCODE: $0000239E VOL: 0
;PCODE: $0000239F VOL: 0
;PCODE: $000023A0 VOL: 0
;PCODE: $000023A1 VOL: 0
; 0000 0F34             a[7] = 0x13;    //ster3 INV krazek scierny
;PCODE: $000023A2 VOL: 0
;PCODE: $000023A3 VOL: 0
;PCODE: $000023A4 VOL: 0
;PCODE: $000023A5 VOL: 0
; 0000 0F35             a[9] = 1;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $000023A6 VOL: 0
;PCODE: $000023A7 VOL: 0
;PCODE: $000023A8 VOL: 0
;PCODE: $000023A9 VOL: 0
; 0000 0F36 
; 0000 0F37             a[1] = a[0]+0x001;  //ster2
;PCODE: $000023AA VOL: 0
;PCODE: $000023AB VOL: 0
;PCODE: $000023AC VOL: 0
;PCODE: $000023AD VOL: 0
; 0000 0F38             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $000023AE VOL: 0
;PCODE: $000023AF VOL: 0
;PCODE: $000023B0 VOL: 0
;PCODE: $000023B1 VOL: 0
; 0000 0F39             a[6] = a[5]+0x001;  //okrag
;PCODE: $000023B2 VOL: 0
;PCODE: $000023B3 VOL: 0
;PCODE: $000023B4 VOL: 0
;PCODE: $000023B5 VOL: 0
;PCODE: $000023B6 VOL: 0
; 0000 0F3A             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $000023B7 VOL: 0
;PCODE: $000023B8 VOL: 0
;PCODE: $000023B9 VOL: 0
;PCODE: $000023BA VOL: 0
;PCODE: $000023BB VOL: 0
; 0000 0F3B 
; 0000 0F3C     break;
;PCODE: $000023BC VOL: 0
; 0000 0F3D 
; 0000 0F3E 
; 0000 0F3F     case 129:
;PCODE: $000023BD VOL: 0
;PCODE: $000023BE VOL: 0
;PCODE: $000023BF VOL: 0
; 0000 0F40 
; 0000 0F41             a[0] = 0x0E8;   //ster1
;PCODE: $000023C0 VOL: 0
;PCODE: $000023C1 VOL: 0
; 0000 0F42             a[3] = 0x0F;    //ster4 INV druciak
;PCODE: $000023C2 VOL: 0
;PCODE: $000023C3 VOL: 0
;PCODE: $000023C4 VOL: 0
;PCODE: $000023C5 VOL: 0
; 0000 0F43             a[4] = 0x18;    //ster3 ABS krazek scierny
;PCODE: $000023C6 VOL: 0
;PCODE: $000023C7 VOL: 0
;PCODE: $000023C8 VOL: 0
;PCODE: $000023C9 VOL: 0
; 0000 0F44             a[5] = 0x199;   //delta okrag
;PCODE: $000023CA VOL: 0
;PCODE: $000023CB VOL: 0
;PCODE: $000023CC VOL: 0
;PCODE: $000023CD VOL: 0
; 0000 0F45             a[7] = 0x13;    //ster3 INV krazek scierny
;PCODE: $000023CE VOL: 0
;PCODE: $000023CF VOL: 0
;PCODE: $000023D0 VOL: 0
;PCODE: $000023D1 VOL: 0
; 0000 0F46             a[9] = 0;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $000023D2 VOL: 0
;PCODE: $000023D3 VOL: 0
;PCODE: $000023D4 VOL: 0
;PCODE: $000023D5 VOL: 0
; 0000 0F47 
; 0000 0F48             a[1] = a[0]+0x001;  //ster2
;PCODE: $000023D6 VOL: 0
;PCODE: $000023D7 VOL: 0
;PCODE: $000023D8 VOL: 0
;PCODE: $000023D9 VOL: 0
; 0000 0F49             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $000023DA VOL: 0
;PCODE: $000023DB VOL: 0
;PCODE: $000023DC VOL: 0
;PCODE: $000023DD VOL: 0
; 0000 0F4A             a[6] = a[5]+0x001;  //okrag
;PCODE: $000023DE VOL: 0
;PCODE: $000023DF VOL: 0
;PCODE: $000023E0 VOL: 0
;PCODE: $000023E1 VOL: 0
;PCODE: $000023E2 VOL: 0
; 0000 0F4B             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $000023E3 VOL: 0
;PCODE: $000023E4 VOL: 0
;PCODE: $000023E5 VOL: 0
;PCODE: $000023E6 VOL: 0
;PCODE: $000023E7 VOL: 0
; 0000 0F4C 
; 0000 0F4D     break;
;PCODE: $000023E8 VOL: 0
; 0000 0F4E 
; 0000 0F4F 
; 0000 0F50     case 130:
;PCODE: $000023E9 VOL: 0
;PCODE: $000023EA VOL: 0
;PCODE: $000023EB VOL: 0
; 0000 0F51 
; 0000 0F52             a[0] = 0x0F2;   //ster1
;PCODE: $000023EC VOL: 0
;PCODE: $000023ED VOL: 0
; 0000 0F53             a[3] = 0x12;    //ster4 INV druciak
;PCODE: $000023EE VOL: 0
;PCODE: $000023EF VOL: 0
;PCODE: $000023F0 VOL: 0
;PCODE: $000023F1 VOL: 0
; 0000 0F54             a[4] = 0x23;    //ster3 ABS krazek scierny
;PCODE: $000023F2 VOL: 0
;PCODE: $000023F3 VOL: 0
;PCODE: $000023F4 VOL: 0
;PCODE: $000023F5 VOL: 0
; 0000 0F55             a[5] = 0x196;   //delta okrag
;PCODE: $000023F6 VOL: 0
;PCODE: $000023F7 VOL: 0
;PCODE: $000023F8 VOL: 0
;PCODE: $000023F9 VOL: 0
; 0000 0F56             a[7] = 0x10;    //ster3 INV krazek scierny
;PCODE: $000023FA VOL: 0
;PCODE: $000023FB VOL: 0
;PCODE: $000023FC VOL: 0
;PCODE: $000023FD VOL: 0
; 0000 0F57             a[9] = 0;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $000023FE VOL: 0
;PCODE: $000023FF VOL: 0
;PCODE: $00002400 VOL: 0
;PCODE: $00002401 VOL: 0
; 0000 0F58 
; 0000 0F59             a[1] = a[0]+0x001;  //ster2
;PCODE: $00002402 VOL: 0
;PCODE: $00002403 VOL: 0
;PCODE: $00002404 VOL: 0
;PCODE: $00002405 VOL: 0
; 0000 0F5A             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $00002406 VOL: 0
;PCODE: $00002407 VOL: 0
;PCODE: $00002408 VOL: 0
;PCODE: $00002409 VOL: 0
; 0000 0F5B             a[6] = a[5]+0x001;  //okrag
;PCODE: $0000240A VOL: 0
;PCODE: $0000240B VOL: 0
;PCODE: $0000240C VOL: 0
;PCODE: $0000240D VOL: 0
;PCODE: $0000240E VOL: 0
; 0000 0F5C             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $0000240F VOL: 0
;PCODE: $00002410 VOL: 0
;PCODE: $00002411 VOL: 0
;PCODE: $00002412 VOL: 0
;PCODE: $00002413 VOL: 0
; 0000 0F5D 
; 0000 0F5E     break;
;PCODE: $00002414 VOL: 0
; 0000 0F5F 
; 0000 0F60 
; 0000 0F61     case 131:
;PCODE: $00002415 VOL: 0
;PCODE: $00002416 VOL: 0
;PCODE: $00002417 VOL: 0
; 0000 0F62 
; 0000 0F63             a[0] = 0x108;   //ster1
;PCODE: $00002418 VOL: 0
;PCODE: $00002419 VOL: 0
; 0000 0F64             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $0000241A VOL: 0
;PCODE: $0000241B VOL: 0
;PCODE: $0000241C VOL: 0
;PCODE: $0000241D VOL: 0
; 0000 0F65             a[4] = 0x1F;    //ster3 ABS krazek scierny
;PCODE: $0000241E VOL: 0
;PCODE: $0000241F VOL: 0
;PCODE: $00002420 VOL: 0
;PCODE: $00002421 VOL: 0
; 0000 0F66             a[5] = 0x19C;   //delta okrag
;PCODE: $00002422 VOL: 0
;PCODE: $00002423 VOL: 0
;PCODE: $00002424 VOL: 0
;PCODE: $00002425 VOL: 0
; 0000 0F67             a[7] = 0x12;    //ster3 INV krazek scierny
;PCODE: $00002426 VOL: 0
;PCODE: $00002427 VOL: 0
;PCODE: $00002428 VOL: 0
;PCODE: $00002429 VOL: 0
; 0000 0F68             a[9] = 1;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $0000242A VOL: 0
;PCODE: $0000242B VOL: 0
;PCODE: $0000242C VOL: 0
;PCODE: $0000242D VOL: 0
; 0000 0F69 
; 0000 0F6A             a[1] = a[0]+0x001;  //ster2
;PCODE: $0000242E VOL: 0
;PCODE: $0000242F VOL: 0
;PCODE: $00002430 VOL: 0
;PCODE: $00002431 VOL: 0
; 0000 0F6B             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $00002432 VOL: 0
;PCODE: $00002433 VOL: 0
;PCODE: $00002434 VOL: 0
;PCODE: $00002435 VOL: 0
; 0000 0F6C             a[6] = a[5]+0x001;  //okrag
;PCODE: $00002436 VOL: 0
;PCODE: $00002437 VOL: 0
;PCODE: $00002438 VOL: 0
;PCODE: $00002439 VOL: 0
;PCODE: $0000243A VOL: 0
; 0000 0F6D             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $0000243B VOL: 0
;PCODE: $0000243C VOL: 0
;PCODE: $0000243D VOL: 0
;PCODE: $0000243E VOL: 0
;PCODE: $0000243F VOL: 0
; 0000 0F6E 
; 0000 0F6F     break;
;PCODE: $00002440 VOL: 0
; 0000 0F70 
; 0000 0F71 
; 0000 0F72 
; 0000 0F73     case 132:
;PCODE: $00002441 VOL: 0
;PCODE: $00002442 VOL: 0
;PCODE: $00002443 VOL: 0
; 0000 0F74 
; 0000 0F75             a[0] = 0x064;   //ster1
;PCODE: $00002444 VOL: 0
;PCODE: $00002445 VOL: 0
; 0000 0F76             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $00002446 VOL: 0
;PCODE: $00002447 VOL: 0
;PCODE: $00002448 VOL: 0
;PCODE: $00002449 VOL: 0
; 0000 0F77             a[4] = 0x1C;    //ster3 ABS krazek scierny
;PCODE: $0000244A VOL: 0
;PCODE: $0000244B VOL: 0
;PCODE: $0000244C VOL: 0
;PCODE: $0000244D VOL: 0
; 0000 0F78             a[5] = 0x19C;   //delta okrag
;PCODE: $0000244E VOL: 0
;PCODE: $0000244F VOL: 0
;PCODE: $00002450 VOL: 0
;PCODE: $00002451 VOL: 0
; 0000 0F79             a[7] = 0x12;    //ster3 INV krazek scierny
;PCODE: $00002452 VOL: 0
;PCODE: $00002453 VOL: 0
;PCODE: $00002454 VOL: 0
;PCODE: $00002455 VOL: 0
; 0000 0F7A             a[9] = 0;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $00002456 VOL: 0
;PCODE: $00002457 VOL: 0
;PCODE: $00002458 VOL: 0
;PCODE: $00002459 VOL: 0
; 0000 0F7B 
; 0000 0F7C             a[1] = a[0]+0x001;  //ster2
;PCODE: $0000245A VOL: 0
;PCODE: $0000245B VOL: 0
;PCODE: $0000245C VOL: 0
;PCODE: $0000245D VOL: 0
; 0000 0F7D             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $0000245E VOL: 0
;PCODE: $0000245F VOL: 0
;PCODE: $00002460 VOL: 0
;PCODE: $00002461 VOL: 0
; 0000 0F7E             a[6] = a[5]+0x001;  //okrag
;PCODE: $00002462 VOL: 0
;PCODE: $00002463 VOL: 0
;PCODE: $00002464 VOL: 0
;PCODE: $00002465 VOL: 0
;PCODE: $00002466 VOL: 0
; 0000 0F7F             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $00002467 VOL: 0
;PCODE: $00002468 VOL: 0
;PCODE: $00002469 VOL: 0
;PCODE: $0000246A VOL: 0
;PCODE: $0000246B VOL: 0
; 0000 0F80 
; 0000 0F81     break;
;PCODE: $0000246C VOL: 0
; 0000 0F82 
; 0000 0F83 
; 0000 0F84     case 133:
;PCODE: $0000246D VOL: 0
;PCODE: $0000246E VOL: 0
;PCODE: $0000246F VOL: 0
; 0000 0F85 
; 0000 0F86             a[0] = 0x088;   //ster1
;PCODE: $00002470 VOL: 0
;PCODE: $00002471 VOL: 0
; 0000 0F87             a[3] = 0x0F;    //ster4 INV druciak
;PCODE: $00002472 VOL: 0
;PCODE: $00002473 VOL: 0
;PCODE: $00002474 VOL: 0
;PCODE: $00002475 VOL: 0
; 0000 0F88             a[4] = 0x18;    //ster3 ABS krazek scierny
;PCODE: $00002476 VOL: 0
;PCODE: $00002477 VOL: 0
;PCODE: $00002478 VOL: 0
;PCODE: $00002479 VOL: 0
; 0000 0F89             a[5] = 0x199;   //delta okrag
;PCODE: $0000247A VOL: 0
;PCODE: $0000247B VOL: 0
;PCODE: $0000247C VOL: 0
;PCODE: $0000247D VOL: 0
; 0000 0F8A             a[7] = 0x13;    //ster3 INV krazek scierny
;PCODE: $0000247E VOL: 0
;PCODE: $0000247F VOL: 0
;PCODE: $00002480 VOL: 0
;PCODE: $00002481 VOL: 0
; 0000 0F8B             a[9] = 1;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $00002482 VOL: 0
;PCODE: $00002483 VOL: 0
;PCODE: $00002484 VOL: 0
;PCODE: $00002485 VOL: 0
; 0000 0F8C 
; 0000 0F8D             a[1] = a[0]+0x001;  //ster2
;PCODE: $00002486 VOL: 0
;PCODE: $00002487 VOL: 0
;PCODE: $00002488 VOL: 0
;PCODE: $00002489 VOL: 0
; 0000 0F8E             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $0000248A VOL: 0
;PCODE: $0000248B VOL: 0
;PCODE: $0000248C VOL: 0
;PCODE: $0000248D VOL: 0
; 0000 0F8F             a[6] = a[5]+0x001;  //okrag
;PCODE: $0000248E VOL: 0
;PCODE: $0000248F VOL: 0
;PCODE: $00002490 VOL: 0
;PCODE: $00002491 VOL: 0
;PCODE: $00002492 VOL: 0
; 0000 0F90             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $00002493 VOL: 0
;PCODE: $00002494 VOL: 0
;PCODE: $00002495 VOL: 0
;PCODE: $00002496 VOL: 0
;PCODE: $00002497 VOL: 0
; 0000 0F91 
; 0000 0F92     break;
;PCODE: $00002498 VOL: 0
; 0000 0F93 
; 0000 0F94 
; 0000 0F95 
; 0000 0F96     case 134:
;PCODE: $00002499 VOL: 0
;PCODE: $0000249A VOL: 0
;PCODE: $0000249B VOL: 0
; 0000 0F97 
; 0000 0F98             a[0] = 0x10E;   //ster1
;PCODE: $0000249C VOL: 0
;PCODE: $0000249D VOL: 0
; 0000 0F99             a[3] = 0x12;    //ster4 INV druciak
;PCODE: $0000249E VOL: 0
;PCODE: $0000249F VOL: 0
;PCODE: $000024A0 VOL: 0
;PCODE: $000024A1 VOL: 0
; 0000 0F9A             a[4] = 0x23;    //ster3 ABS krazek scierny
;PCODE: $000024A2 VOL: 0
;PCODE: $000024A3 VOL: 0
;PCODE: $000024A4 VOL: 0
;PCODE: $000024A5 VOL: 0
; 0000 0F9B             a[5] = 0x196;   //delta okrag
;PCODE: $000024A6 VOL: 0
;PCODE: $000024A7 VOL: 0
;PCODE: $000024A8 VOL: 0
;PCODE: $000024A9 VOL: 0
; 0000 0F9C             a[7] = 0x10;    //ster3 INV krazek scierny
;PCODE: $000024AA VOL: 0
;PCODE: $000024AB VOL: 0
;PCODE: $000024AC VOL: 0
;PCODE: $000024AD VOL: 0
; 0000 0F9D             a[9] = 1;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $000024AE VOL: 0
;PCODE: $000024AF VOL: 0
;PCODE: $000024B0 VOL: 0
;PCODE: $000024B1 VOL: 0
; 0000 0F9E 
; 0000 0F9F             a[1] = a[0]+0x001;  //ster2
;PCODE: $000024B2 VOL: 0
;PCODE: $000024B3 VOL: 0
;PCODE: $000024B4 VOL: 0
;PCODE: $000024B5 VOL: 0
; 0000 0FA0             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $000024B6 VOL: 0
;PCODE: $000024B7 VOL: 0
;PCODE: $000024B8 VOL: 0
;PCODE: $000024B9 VOL: 0
; 0000 0FA1             a[6] = a[5]+0x001;  //okrag
;PCODE: $000024BA VOL: 0
;PCODE: $000024BB VOL: 0
;PCODE: $000024BC VOL: 0
;PCODE: $000024BD VOL: 0
;PCODE: $000024BE VOL: 0
; 0000 0FA2             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $000024BF VOL: 0
;PCODE: $000024C0 VOL: 0
;PCODE: $000024C1 VOL: 0
;PCODE: $000024C2 VOL: 0
;PCODE: $000024C3 VOL: 0
; 0000 0FA3 
; 0000 0FA4     break;
;PCODE: $000024C4 VOL: 0
; 0000 0FA5 
; 0000 0FA6                ////////////////////////////////////////////////////////////////////////////////////////////////////////
; 0000 0FA7      case 135:
;PCODE: $000024C5 VOL: 0
;PCODE: $000024C6 VOL: 0
;PCODE: $000024C7 VOL: 0
; 0000 0FA8 
; 0000 0FA9             a[0] = 0x054;   //ster1
;PCODE: $000024C8 VOL: 0
;PCODE: $000024C9 VOL: 0
; 0000 0FAA             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $000024CA VOL: 0
;PCODE: $000024CB VOL: 0
;PCODE: $000024CC VOL: 0
;PCODE: $000024CD VOL: 0
; 0000 0FAB             a[4] = 0x1F;    //ster3 ABS krazek scierny
;PCODE: $000024CE VOL: 0
;PCODE: $000024CF VOL: 0
;PCODE: $000024D0 VOL: 0
;PCODE: $000024D1 VOL: 0
; 0000 0FAC             a[5] = 0x19C;   //delta okrag
;PCODE: $000024D2 VOL: 0
;PCODE: $000024D3 VOL: 0
;PCODE: $000024D4 VOL: 0
;PCODE: $000024D5 VOL: 0
; 0000 0FAD             a[7] = 0x12;    //ster3 INV krazek scierny
;PCODE: $000024D6 VOL: 0
;PCODE: $000024D7 VOL: 0
;PCODE: $000024D8 VOL: 0
;PCODE: $000024D9 VOL: 0
; 0000 0FAE             a[9] = 0;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $000024DA VOL: 0
;PCODE: $000024DB VOL: 0
;PCODE: $000024DC VOL: 0
;PCODE: $000024DD VOL: 0
; 0000 0FAF 
; 0000 0FB0             a[1] = a[0]+0x001;  //ster2
;PCODE: $000024DE VOL: 0
;PCODE: $000024DF VOL: 0
;PCODE: $000024E0 VOL: 0
;PCODE: $000024E1 VOL: 0
; 0000 0FB1             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $000024E2 VOL: 0
;PCODE: $000024E3 VOL: 0
;PCODE: $000024E4 VOL: 0
;PCODE: $000024E5 VOL: 0
; 0000 0FB2             a[6] = a[5]+0x001;  //okrag
;PCODE: $000024E6 VOL: 0
;PCODE: $000024E7 VOL: 0
;PCODE: $000024E8 VOL: 0
;PCODE: $000024E9 VOL: 0
;PCODE: $000024EA VOL: 0
; 0000 0FB3             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $000024EB VOL: 0
;PCODE: $000024EC VOL: 0
;PCODE: $000024ED VOL: 0
;PCODE: $000024EE VOL: 0
;PCODE: $000024EF VOL: 0
; 0000 0FB4 
; 0000 0FB5     break;
;PCODE: $000024F0 VOL: 0
; 0000 0FB6 
; 0000 0FB7 
; 0000 0FB8      case 136:
;PCODE: $000024F1 VOL: 0
;PCODE: $000024F2 VOL: 0
;PCODE: $000024F3 VOL: 0
; 0000 0FB9 
; 0000 0FBA             a[0] = 0x03E;   //ster1
;PCODE: $000024F4 VOL: 0
;PCODE: $000024F5 VOL: 0
; 0000 0FBB             a[3] = 0x10;    //ster4 INV druciak
;PCODE: $000024F6 VOL: 0
;PCODE: $000024F7 VOL: 0
;PCODE: $000024F8 VOL: 0
;PCODE: $000024F9 VOL: 0
; 0000 0FBC             a[4] = 0x18;    //ster3 ABS krazek scierny
;PCODE: $000024FA VOL: 0
;PCODE: $000024FB VOL: 0
;PCODE: $000024FC VOL: 0
;PCODE: $000024FD VOL: 0
; 0000 0FBD             a[5] = 0x190;   //delta okrag
;PCODE: $000024FE VOL: 0
;PCODE: $000024FF VOL: 0
;PCODE: $00002500 VOL: 0
;PCODE: $00002501 VOL: 0
; 0000 0FBE             a[7] = 0x10;    //ster3 INV krazek scierny
;PCODE: $00002502 VOL: 0
;PCODE: $00002503 VOL: 0
;PCODE: $00002504 VOL: 0
;PCODE: $00002505 VOL: 0
; 0000 0FBF             a[9] = 1;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $00002506 VOL: 0
;PCODE: $00002507 VOL: 0
;PCODE: $00002508 VOL: 0
;PCODE: $00002509 VOL: 0
; 0000 0FC0 
; 0000 0FC1             a[1] = a[0]+0x001;  //ster2
;PCODE: $0000250A VOL: 0
;PCODE: $0000250B VOL: 0
;PCODE: $0000250C VOL: 0
;PCODE: $0000250D VOL: 0
; 0000 0FC2             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $0000250E VOL: 0
;PCODE: $0000250F VOL: 0
;PCODE: $00002510 VOL: 0
;PCODE: $00002511 VOL: 0
; 0000 0FC3             a[6] = a[5]+0x001;  //okrag
;PCODE: $00002512 VOL: 0
;PCODE: $00002513 VOL: 0
;PCODE: $00002514 VOL: 0
;PCODE: $00002515 VOL: 0
;PCODE: $00002516 VOL: 0
; 0000 0FC4             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $00002517 VOL: 0
;PCODE: $00002518 VOL: 0
;PCODE: $00002519 VOL: 0
;PCODE: $0000251A VOL: 0
;PCODE: $0000251B VOL: 0
; 0000 0FC5 
; 0000 0FC6     break;
;PCODE: $0000251C VOL: 0
; 0000 0FC7 
; 0000 0FC8      case 137:
;PCODE: $0000251D VOL: 0
;PCODE: $0000251E VOL: 0
;PCODE: $0000251F VOL: 0
; 0000 0FC9 
; 0000 0FCA             a[0] = 0x00C;   //ster1
;PCODE: $00002520 VOL: 0
;PCODE: $00002521 VOL: 0
; 0000 0FCB             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $00002522 VOL: 0
;PCODE: $00002523 VOL: 0
;PCODE: $00002524 VOL: 0
;PCODE: $00002525 VOL: 0
; 0000 0FCC             a[4] = 0x1E;    //ster3 ABS krazek scierny
;PCODE: $00002526 VOL: 0
;PCODE: $00002527 VOL: 0
;PCODE: $00002528 VOL: 0
;PCODE: $00002529 VOL: 0
; 0000 0FCD             a[5] = 0x190;   //delta okrag
;PCODE: $0000252A VOL: 0
;PCODE: $0000252B VOL: 0
;PCODE: $0000252C VOL: 0
;PCODE: $0000252D VOL: 0
; 0000 0FCE             a[7] = 0x0F;    //ster3 INV krazek scierny
;PCODE: $0000252E VOL: 0
;PCODE: $0000252F VOL: 0
;PCODE: $00002530 VOL: 0
;PCODE: $00002531 VOL: 0
; 0000 0FCF             a[9] = 0;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $00002532 VOL: 0
;PCODE: $00002533 VOL: 0
;PCODE: $00002534 VOL: 0
;PCODE: $00002535 VOL: 0
; 0000 0FD0 
; 0000 0FD1             a[1] = a[0]+0x001;  //ster2
;PCODE: $00002536 VOL: 0
;PCODE: $00002537 VOL: 0
;PCODE: $00002538 VOL: 0
;PCODE: $00002539 VOL: 0
; 0000 0FD2             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $0000253A VOL: 0
;PCODE: $0000253B VOL: 0
;PCODE: $0000253C VOL: 0
;PCODE: $0000253D VOL: 0
; 0000 0FD3             a[6] = a[5]+0x001;  //okrag
;PCODE: $0000253E VOL: 0
;PCODE: $0000253F VOL: 0
;PCODE: $00002540 VOL: 0
;PCODE: $00002541 VOL: 0
;PCODE: $00002542 VOL: 0
; 0000 0FD4             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $00002543 VOL: 0
;PCODE: $00002544 VOL: 0
;PCODE: $00002545 VOL: 0
;PCODE: $00002546 VOL: 0
;PCODE: $00002547 VOL: 0
; 0000 0FD5 
; 0000 0FD6     break;
;PCODE: $00002548 VOL: 0
; 0000 0FD7 
; 0000 0FD8 
; 0000 0FD9      case 138:
;PCODE: $00002549 VOL: 0
;PCODE: $0000254A VOL: 0
;PCODE: $0000254B VOL: 0
; 0000 0FDA 
; 0000 0FDB             a[0] = 0x0DC;   //ster1
;PCODE: $0000254C VOL: 0
;PCODE: $0000254D VOL: 0
; 0000 0FDC             a[3] = 0x10;    //ster4 INV druciak
;PCODE: $0000254E VOL: 0
;PCODE: $0000254F VOL: 0
;PCODE: $00002550 VOL: 0
;PCODE: $00002551 VOL: 0
; 0000 0FDD             a[4] = 0x1B;    //ster3 ABS krazek scierny
;PCODE: $00002552 VOL: 0
;PCODE: $00002553 VOL: 0
;PCODE: $00002554 VOL: 0
;PCODE: $00002555 VOL: 0
; 0000 0FDE             a[5] = 0x196;   //delta okrag
;PCODE: $00002556 VOL: 0
;PCODE: $00002557 VOL: 0
;PCODE: $00002558 VOL: 0
;PCODE: $00002559 VOL: 0
; 0000 0FDF             a[7] = 0x11;    //ster3 INV krazek scierny
;PCODE: $0000255A VOL: 0
;PCODE: $0000255B VOL: 0
;PCODE: $0000255C VOL: 0
;PCODE: $0000255D VOL: 0
; 0000 0FE0             a[9] = 1;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $0000255E VOL: 0
;PCODE: $0000255F VOL: 0
;PCODE: $00002560 VOL: 0
;PCODE: $00002561 VOL: 0
; 0000 0FE1 
; 0000 0FE2             a[1] = a[0]+0x001;  //ster2
;PCODE: $00002562 VOL: 0
;PCODE: $00002563 VOL: 0
;PCODE: $00002564 VOL: 0
;PCODE: $00002565 VOL: 0
; 0000 0FE3             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $00002566 VOL: 0
;PCODE: $00002567 VOL: 0
;PCODE: $00002568 VOL: 0
;PCODE: $00002569 VOL: 0
; 0000 0FE4             a[6] = a[5]+0x001;  //okrag
;PCODE: $0000256A VOL: 0
;PCODE: $0000256B VOL: 0
;PCODE: $0000256C VOL: 0
;PCODE: $0000256D VOL: 0
;PCODE: $0000256E VOL: 0
; 0000 0FE5             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $0000256F VOL: 0
;PCODE: $00002570 VOL: 0
;PCODE: $00002571 VOL: 0
;PCODE: $00002572 VOL: 0
;PCODE: $00002573 VOL: 0
; 0000 0FE6 
; 0000 0FE7     break;
;PCODE: $00002574 VOL: 0
; 0000 0FE8 
; 0000 0FE9 
; 0000 0FEA      case 139:
;PCODE: $00002575 VOL: 0
;PCODE: $00002576 VOL: 0
;PCODE: $00002577 VOL: 0
; 0000 0FEB 
; 0000 0FEC             a[0] = 0x058;   //ster1
;PCODE: $00002578 VOL: 0
;PCODE: $00002579 VOL: 0
; 0000 0FED             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $0000257A VOL: 0
;PCODE: $0000257B VOL: 0
;PCODE: $0000257C VOL: 0
;PCODE: $0000257D VOL: 0
; 0000 0FEE             a[4] = 0x19;    //ster3 ABS krazek scierny
;PCODE: $0000257E VOL: 0
;PCODE: $0000257F VOL: 0
;PCODE: $00002580 VOL: 0
;PCODE: $00002581 VOL: 0
; 0000 0FEF             a[5] = 0x196;   //delta okrag
;PCODE: $00002582 VOL: 0
;PCODE: $00002583 VOL: 0
;PCODE: $00002584 VOL: 0
;PCODE: $00002585 VOL: 0
; 0000 0FF0             a[7] = 0x12;    //ster3 INV krazek scierny
;PCODE: $00002586 VOL: 0
;PCODE: $00002587 VOL: 0
;PCODE: $00002588 VOL: 0
;PCODE: $00002589 VOL: 0
; 0000 0FF1             a[9] = 1;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $0000258A VOL: 0
;PCODE: $0000258B VOL: 0
;PCODE: $0000258C VOL: 0
;PCODE: $0000258D VOL: 0
; 0000 0FF2 
; 0000 0FF3             a[1] = a[0]+0x001;  //ster2
;PCODE: $0000258E VOL: 0
;PCODE: $0000258F VOL: 0
;PCODE: $00002590 VOL: 0
;PCODE: $00002591 VOL: 0
; 0000 0FF4             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $00002592 VOL: 0
;PCODE: $00002593 VOL: 0
;PCODE: $00002594 VOL: 0
;PCODE: $00002595 VOL: 0
; 0000 0FF5             a[6] = a[5]+0x001;  //okrag
;PCODE: $00002596 VOL: 0
;PCODE: $00002597 VOL: 0
;PCODE: $00002598 VOL: 0
;PCODE: $00002599 VOL: 0
;PCODE: $0000259A VOL: 0
; 0000 0FF6             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $0000259B VOL: 0
;PCODE: $0000259C VOL: 0
;PCODE: $0000259D VOL: 0
;PCODE: $0000259E VOL: 0
;PCODE: $0000259F VOL: 0
; 0000 0FF7 
; 0000 0FF8     break;
;PCODE: $000025A0 VOL: 0
; 0000 0FF9 
; 0000 0FFA 
; 0000 0FFB      case 140:
;PCODE: $000025A1 VOL: 0
;PCODE: $000025A2 VOL: 0
;PCODE: $000025A3 VOL: 0
; 0000 0FFC 
; 0000 0FFD             a[0] = 0x03C;   //ster1
;PCODE: $000025A4 VOL: 0
;PCODE: $000025A5 VOL: 0
; 0000 0FFE             a[3] = 0x10;    //ster4 INV druciak
;PCODE: $000025A6 VOL: 0
;PCODE: $000025A7 VOL: 0
;PCODE: $000025A8 VOL: 0
;PCODE: $000025A9 VOL: 0
; 0000 0FFF             a[4] = 0x17;    //ster3 ABS krazek scierny
;PCODE: $000025AA VOL: 0
;PCODE: $000025AB VOL: 0
;PCODE: $000025AC VOL: 0
;PCODE: $000025AD VOL: 0
; 0000 1000             a[5] = 0x190;   //delta okrag
;PCODE: $000025AE VOL: 0
;PCODE: $000025AF VOL: 0
;PCODE: $000025B0 VOL: 0
;PCODE: $000025B1 VOL: 0
; 0000 1001             a[7] = 0x10;    //ster3 INV krazek scierny
;PCODE: $000025B2 VOL: 0
;PCODE: $000025B3 VOL: 0
;PCODE: $000025B4 VOL: 0
;PCODE: $000025B5 VOL: 0
; 0000 1002             a[9] = 0;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $000025B6 VOL: 0
;PCODE: $000025B7 VOL: 0
;PCODE: $000025B8 VOL: 0
;PCODE: $000025B9 VOL: 0
; 0000 1003 
; 0000 1004             a[1] = a[0]+0x001;  //ster2
;PCODE: $000025BA VOL: 0
;PCODE: $000025BB VOL: 0
;PCODE: $000025BC VOL: 0
;PCODE: $000025BD VOL: 0
; 0000 1005             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $000025BE VOL: 0
;PCODE: $000025BF VOL: 0
;PCODE: $000025C0 VOL: 0
;PCODE: $000025C1 VOL: 0
; 0000 1006             a[6] = a[5]+0x001;  //okrag
;PCODE: $000025C2 VOL: 0
;PCODE: $000025C3 VOL: 0
;PCODE: $000025C4 VOL: 0
;PCODE: $000025C5 VOL: 0
;PCODE: $000025C6 VOL: 0
; 0000 1007             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $000025C7 VOL: 0
;PCODE: $000025C8 VOL: 0
;PCODE: $000025C9 VOL: 0
;PCODE: $000025CA VOL: 0
;PCODE: $000025CB VOL: 0
; 0000 1008 
; 0000 1009 
; 0000 100A 
; 0000 100B     break;
;PCODE: $000025CC VOL: 0
; 0000 100C 
; 0000 100D 
; 0000 100E      case 141:
;PCODE: $000025CD VOL: 0
;PCODE: $000025CE VOL: 0
;PCODE: $000025CF VOL: 0
; 0000 100F 
; 0000 1010             a[0] = 0x00E;   //ster1
;PCODE: $000025D0 VOL: 0
;PCODE: $000025D1 VOL: 0
; 0000 1011             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $000025D2 VOL: 0
;PCODE: $000025D3 VOL: 0
;PCODE: $000025D4 VOL: 0
;PCODE: $000025D5 VOL: 0
; 0000 1012             a[4] = 0x1E;    //ster3 ABS krazek scierny
;PCODE: $000025D6 VOL: 0
;PCODE: $000025D7 VOL: 0
;PCODE: $000025D8 VOL: 0
;PCODE: $000025D9 VOL: 0
; 0000 1013             a[5] = 0x190;   //delta okrag
;PCODE: $000025DA VOL: 0
;PCODE: $000025DB VOL: 0
;PCODE: $000025DC VOL: 0
;PCODE: $000025DD VOL: 0
; 0000 1014             a[7] = 0x0F;    //ster3 INV krazek scierny
;PCODE: $000025DE VOL: 0
;PCODE: $000025DF VOL: 0
;PCODE: $000025E0 VOL: 0
;PCODE: $000025E1 VOL: 0
; 0000 1015             a[9] = 1;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $000025E2 VOL: 0
;PCODE: $000025E3 VOL: 0
;PCODE: $000025E4 VOL: 0
;PCODE: $000025E5 VOL: 0
; 0000 1016 
; 0000 1017             a[1] = a[0]+0x001;  //ster2
;PCODE: $000025E6 VOL: 0
;PCODE: $000025E7 VOL: 0
;PCODE: $000025E8 VOL: 0
;PCODE: $000025E9 VOL: 0
; 0000 1018             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $000025EA VOL: 0
;PCODE: $000025EB VOL: 0
;PCODE: $000025EC VOL: 0
;PCODE: $000025ED VOL: 0
; 0000 1019             a[6] = a[5]+0x001;  //okrag
;PCODE: $000025EE VOL: 0
;PCODE: $000025EF VOL: 0
;PCODE: $000025F0 VOL: 0
;PCODE: $000025F1 VOL: 0
;PCODE: $000025F2 VOL: 0
; 0000 101A             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $000025F3 VOL: 0
;PCODE: $000025F4 VOL: 0
;PCODE: $000025F5 VOL: 0
;PCODE: $000025F6 VOL: 0
;PCODE: $000025F7 VOL: 0
; 0000 101B 
; 0000 101C     break;
;PCODE: $000025F8 VOL: 0
; 0000 101D 
; 0000 101E 
; 0000 101F      case 142:
;PCODE: $000025F9 VOL: 0
;PCODE: $000025FA VOL: 0
;PCODE: $000025FB VOL: 0
; 0000 1020 
; 0000 1021             a[0] = 0x10A;   //ster1
;PCODE: $000025FC VOL: 0
;PCODE: $000025FD VOL: 0
; 0000 1022             a[3] = 0x10;    //ster4 INV druciak
;PCODE: $000025FE VOL: 0
;PCODE: $000025FF VOL: 0
;PCODE: $00002600 VOL: 0
;PCODE: $00002601 VOL: 0
; 0000 1023             a[4] = 0x1B;    //ster3 ABS krazek scierny
;PCODE: $00002602 VOL: 0
;PCODE: $00002603 VOL: 0
;PCODE: $00002604 VOL: 0
;PCODE: $00002605 VOL: 0
; 0000 1024             a[5] = 0x196;   //delta okrag
;PCODE: $00002606 VOL: 0
;PCODE: $00002607 VOL: 0
;PCODE: $00002608 VOL: 0
;PCODE: $00002609 VOL: 0
; 0000 1025             a[7] = 0x11;    //ster3 INV krazek scierny
;PCODE: $0000260A VOL: 0
;PCODE: $0000260B VOL: 0
;PCODE: $0000260C VOL: 0
;PCODE: $0000260D VOL: 0
; 0000 1026             a[9] = 0;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $0000260E VOL: 0
;PCODE: $0000260F VOL: 0
;PCODE: $00002610 VOL: 0
;PCODE: $00002611 VOL: 0
; 0000 1027 
; 0000 1028             a[1] = a[0]+0x001;  //ster2
;PCODE: $00002612 VOL: 0
;PCODE: $00002613 VOL: 0
;PCODE: $00002614 VOL: 0
;PCODE: $00002615 VOL: 0
; 0000 1029             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $00002616 VOL: 0
;PCODE: $00002617 VOL: 0
;PCODE: $00002618 VOL: 0
;PCODE: $00002619 VOL: 0
; 0000 102A             a[6] = a[5]+0x001;  //okrag
;PCODE: $0000261A VOL: 0
;PCODE: $0000261B VOL: 0
;PCODE: $0000261C VOL: 0
;PCODE: $0000261D VOL: 0
;PCODE: $0000261E VOL: 0
; 0000 102B             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $0000261F VOL: 0
;PCODE: $00002620 VOL: 0
;PCODE: $00002621 VOL: 0
;PCODE: $00002622 VOL: 0
;PCODE: $00002623 VOL: 0
; 0000 102C 
; 0000 102D     break;
;PCODE: $00002624 VOL: 0
; 0000 102E 
; 0000 102F 
; 0000 1030 
; 0000 1031      case 143:
;PCODE: $00002625 VOL: 0
;PCODE: $00002626 VOL: 0
;PCODE: $00002627 VOL: 0
; 0000 1032 
; 0000 1033             a[0] = 0x022;   //ster1
;PCODE: $00002628 VOL: 0
;PCODE: $00002629 VOL: 0
; 0000 1034             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $0000262A VOL: 0
;PCODE: $0000262B VOL: 0
;PCODE: $0000262C VOL: 0
;PCODE: $0000262D VOL: 0
; 0000 1035             a[4] = 0x19;    //ster3 ABS krazek scierny
;PCODE: $0000262E VOL: 0
;PCODE: $0000262F VOL: 0
;PCODE: $00002630 VOL: 0
;PCODE: $00002631 VOL: 0
; 0000 1036             a[5] = 0x196;   //delta okrag
;PCODE: $00002632 VOL: 0
;PCODE: $00002633 VOL: 0
;PCODE: $00002634 VOL: 0
;PCODE: $00002635 VOL: 0
; 0000 1037             a[7] = 0x12;    //ster3 INV krazek scierny
;PCODE: $00002636 VOL: 0
;PCODE: $00002637 VOL: 0
;PCODE: $00002638 VOL: 0
;PCODE: $00002639 VOL: 0
; 0000 1038             a[9] = 0;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $0000263A VOL: 0
;PCODE: $0000263B VOL: 0
;PCODE: $0000263C VOL: 0
;PCODE: $0000263D VOL: 0
; 0000 1039 
; 0000 103A             a[1] = a[0]+0x001;  //ster2
;PCODE: $0000263E VOL: 0
;PCODE: $0000263F VOL: 0
;PCODE: $00002640 VOL: 0
;PCODE: $00002641 VOL: 0
; 0000 103B             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $00002642 VOL: 0
;PCODE: $00002643 VOL: 0
;PCODE: $00002644 VOL: 0
;PCODE: $00002645 VOL: 0
; 0000 103C             a[6] = a[5]+0x001;  //okrag
;PCODE: $00002646 VOL: 0
;PCODE: $00002647 VOL: 0
;PCODE: $00002648 VOL: 0
;PCODE: $00002649 VOL: 0
;PCODE: $0000264A VOL: 0
; 0000 103D             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $0000264B VOL: 0
;PCODE: $0000264C VOL: 0
;PCODE: $0000264D VOL: 0
;PCODE: $0000264E VOL: 0
;PCODE: $0000264F VOL: 0
; 0000 103E 
; 0000 103F     break;
;PCODE: $00002650 VOL: 0
; 0000 1040 
; 0000 1041 
; 0000 1042      case 144:
;PCODE: $00002651 VOL: 0
;PCODE: $00002652 VOL: 0
;PCODE: $00002653 VOL: 0
; 0000 1043 
; 0000 1044             a[0] = 0x066;   //ster1
;PCODE: $00002654 VOL: 0
;PCODE: $00002655 VOL: 0
; 0000 1045             a[3] = 0x11;    //ster4 INV druciak
;PCODE: $00002656 VOL: 0
;PCODE: $00002657 VOL: 0
;PCODE: $00002658 VOL: 0
;PCODE: $00002659 VOL: 0
; 0000 1046             a[4] = 0x1C;    //ster3 ABS krazek scierny
;PCODE: $0000265A VOL: 0
;PCODE: $0000265B VOL: 0
;PCODE: $0000265C VOL: 0
;PCODE: $0000265D VOL: 0
; 0000 1047             a[5] = 0x19C;   //delta okrag
;PCODE: $0000265E VOL: 0
;PCODE: $0000265F VOL: 0
;PCODE: $00002660 VOL: 0
;PCODE: $00002661 VOL: 0
; 0000 1048             a[7] = 0x12;    //ster3 INV krazek scierny
;PCODE: $00002662 VOL: 0
;PCODE: $00002663 VOL: 0
;PCODE: $00002664 VOL: 0
;PCODE: $00002665 VOL: 0
; 0000 1049             a[9] = 1;     //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
;PCODE: $00002666 VOL: 0
;PCODE: $00002667 VOL: 0
;PCODE: $00002668 VOL: 0
;PCODE: $00002669 VOL: 0
; 0000 104A 
; 0000 104B             a[1] = a[0]+0x001;  //ster2
;PCODE: $0000266A VOL: 0
;PCODE: $0000266B VOL: 0
;PCODE: $0000266C VOL: 0
;PCODE: $0000266D VOL: 0
; 0000 104C             a[2] = a[4];        //ster4 ABS druciak
;PCODE: $0000266E VOL: 0
;PCODE: $0000266F VOL: 0
;PCODE: $00002670 VOL: 0
;PCODE: $00002671 VOL: 0
; 0000 104D             a[6] = a[5]+0x001;  //okrag
;PCODE: $00002672 VOL: 0
;PCODE: $00002673 VOL: 0
;PCODE: $00002674 VOL: 0
;PCODE: $00002675 VOL: 0
;PCODE: $00002676 VOL: 0
; 0000 104E             a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $00002677 VOL: 0
;PCODE: $00002678 VOL: 0
;PCODE: $00002679 VOL: 0
;PCODE: $0000267A VOL: 0
;PCODE: $0000267B VOL: 0
; 0000 104F 
; 0000 1050     break;
;PCODE: $0000267C VOL: 0
; 0000 1051 
; 0000 1052 
; 0000 1053 }
;PCODE: $0000267D VOL: 0
; 0000 1054 
; 0000 1055 if(predkosc_pion_szczotka == 50)   //zwolnienie predkosci pion
;PCODE: $0000267E VOL: 0
;PCODE: $0000267F VOL: 0
;PCODE: $00002680 VOL: 0
; 0000 1056        {
; 0000 1057        a[3] = a[3] - 0x05;
;PCODE: $00002681 VOL: 0
;PCODE: $00002682 VOL: 0
;PCODE: $00002683 VOL: 0
;PCODE: $00002684 VOL: 0
;PCODE: $00002685 VOL: 0
; 0000 1058        }
; 0000 1059 if(predkosc_pion_krazek == 50)   //zwolnienie predkosci pion
;PCODE: $00002686 VOL: 0
;PCODE: $00002687 VOL: 0
;PCODE: $00002688 VOL: 0
;PCODE: $00002689 VOL: 0
; 0000 105A        {
; 0000 105B        a[7] = a[7] - 0x05;
;PCODE: $0000268A VOL: 0
;PCODE: $0000268B VOL: 0
;PCODE: $0000268C VOL: 0
;PCODE: $0000268D VOL: 0
;PCODE: $0000268E VOL: 0
; 0000 105C        }
; 0000 105D 
; 0000 105E 
; 0000 105F //if(wejscie_krazka_sciernego_w_pow_boczna_cylindra == 1 & predkosc_ruchow_po_okregu_krazek_scierny == 50)
; 0000 1060     //{
; 0000 1061     //nic
; 0000 1062     //}
; 0000 1063 
; 0000 1064 
; 0000 1065 if(wejscie_krazka_sciernego_w_pow_boczna_cylindra == 2 & predkosc_ruchow_po_okregu_krazek_scierny == 50)
;PCODE: $0000268F VOL: 0
;PCODE: $00002690 VOL: 0
;PCODE: $00002691 VOL: 0
;PCODE: $00002692 VOL: 0
;PCODE: $00002693 VOL: 0
;PCODE: $00002694 VOL: 0
;PCODE: $00002695 VOL: 0
;PCODE: $00002696 VOL: 0
;PCODE: $00002697 VOL: 0
;PCODE: $00002698 VOL: 0
; 0000 1066     {
; 0000 1067     a[5] = a[5] + 0x10;   //plus 16 dzesietnie
;PCODE: $00002699 VOL: 0
;PCODE: $0000269A VOL: 0
;PCODE: $0000269B VOL: 0
;PCODE: $0000269C VOL: 0
;PCODE: $0000269D VOL: 0
; 0000 1068     a[6] = a[5]+0x001;  //okrag
;PCODE: $0000269E VOL: 0
;PCODE: $0000269F VOL: 0
;PCODE: $000026A0 VOL: 0
;PCODE: $000026A1 VOL: 0
;PCODE: $000026A2 VOL: 0
; 0000 1069     a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $000026A3 VOL: 0
;PCODE: $000026A4 VOL: 0
;PCODE: $000026A5 VOL: 0
;PCODE: $000026A6 VOL: 0
;PCODE: $000026A7 VOL: 0
; 0000 106A     }
; 0000 106B 
; 0000 106C if(wejscie_krazka_sciernego_w_pow_boczna_cylindra == 1 & predkosc_ruchow_po_okregu_krazek_scierny == 10)
;PCODE: $000026A8 VOL: 0
;PCODE: $000026A9 VOL: 0
;PCODE: $000026AA VOL: 0
;PCODE: $000026AB VOL: 0
;PCODE: $000026AC VOL: 0
;PCODE: $000026AD VOL: 0
;PCODE: $000026AE VOL: 0
;PCODE: $000026AF VOL: 0
;PCODE: $000026B0 VOL: 0
;PCODE: $000026B1 VOL: 0
; 0000 106D     {
; 0000 106E     a[5] = a[5] + 0x20;   //plus 32 dzesietnie
;PCODE: $000026B2 VOL: 0
;PCODE: $000026B3 VOL: 0
;PCODE: $000026B4 VOL: 0
;PCODE: $000026B5 VOL: 0
;PCODE: $000026B6 VOL: 0
; 0000 106F     a[6] = a[5]+0x001;  //okrag
;PCODE: $000026B7 VOL: 0
;PCODE: $000026B8 VOL: 0
;PCODE: $000026B9 VOL: 0
;PCODE: $000026BA VOL: 0
;PCODE: $000026BB VOL: 0
; 0000 1070     a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $000026BC VOL: 0
;PCODE: $000026BD VOL: 0
;PCODE: $000026BE VOL: 0
;PCODE: $000026BF VOL: 0
;PCODE: $000026C0 VOL: 0
; 0000 1071     }
; 0000 1072 
; 0000 1073 
; 0000 1074 if(wejscie_krazka_sciernego_w_pow_boczna_cylindra == 2 & predkosc_ruchow_po_okregu_krazek_scierny == 10)
;PCODE: $000026C1 VOL: 0
;PCODE: $000026C2 VOL: 0
;PCODE: $000026C3 VOL: 0
;PCODE: $000026C4 VOL: 0
;PCODE: $000026C5 VOL: 0
;PCODE: $000026C6 VOL: 0
;PCODE: $000026C7 VOL: 0
;PCODE: $000026C8 VOL: 0
;PCODE: $000026C9 VOL: 0
;PCODE: $000026CA VOL: 0
; 0000 1075     {
; 0000 1076     a[5] = a[5] + 0x30;   //plus 48 dzesietnie
;PCODE: $000026CB VOL: 0
;PCODE: $000026CC VOL: 0
;PCODE: $000026CD VOL: 0
;PCODE: $000026CE VOL: 0
;PCODE: $000026CF VOL: 0
; 0000 1077     a[6] = a[5]+0x001;  //okrag
;PCODE: $000026D0 VOL: 0
;PCODE: $000026D1 VOL: 0
;PCODE: $000026D2 VOL: 0
;PCODE: $000026D3 VOL: 0
;PCODE: $000026D4 VOL: 0
; 0000 1078     a[8] = a[6]+0x001;  //-delta okrag
;PCODE: $000026D5 VOL: 0
;PCODE: $000026D6 VOL: 0
;PCODE: $000026D7 VOL: 0
;PCODE: $000026D8 VOL: 0
;PCODE: $000026D9 VOL: 0
; 0000 1079     }
; 0000 107A 
; 0000 107B 
; 0000 107C 
; 0000 107D 
; 0000 107E 
; 0000 107F 
; 0000 1080 
; 0000 1081 
; 0000 1082      /*
; 0000 1083         a[0] = 0x05A;   //ster1
; 0000 1084             a[3] = 0x11;    //ster4 INV druciak
; 0000 1085             a[4] = 0x21;    //ster3 ABS krazek scierny
; 0000 1086             a[5] = 0x196;   //delta okrag
; 0000 1087             a[7] = 0x12;    //ster3 INV krazek scierny
; 0000 1088             a[9] = 0;       //na minus czy na plus wzgledem uklad liniowy szczotki drucianej   0 - na minus, 1 - na plus rzad 1
; 0000 1089 
; 0000 108A             a[1] = a[0]+0x001;  //ster2
; 0000 108B             a[2] = a[4];        //ster4 ABS druciak
; 0000 108C             a[6] = a[5]+0x001;  //okrag
; 0000 108D             a[8] = a[6]+0x001;  //-delta okrag
; 0000 108E         */
; 0000 108F }
;PCODE: $000026DA VOL: 0
;PCODE: $000026DB VOL: 0
;PCODE: $000026DC VOL: 0
;PCODE: $000026DD VOL: 0
;
;
;void wartosci_wstepne_panelu()
; 0000 1093 {
;PCODE: $000026DE VOL: 0
;PCODE: $000026DF VOL: 0
; 0000 1094                                                       //3040
; 0000 1095 wartosc_parametru_panelu(szczotka_druciana_ilosc_cykli,48,64);  //wykonano zaciskow rzad1
;PCODE: $000026E0 VOL: 0
;PCODE: $000026E1 VOL: 0
;PCODE: $000026E2 VOL: 0
;PCODE: $000026E3 VOL: 0
;PCODE: $000026E4 VOL: 0
;PCODE: $000026E5 VOL: 0
;PCODE: $000026E6 VOL: 0
;PCODE: $000026E7 VOL: 0
; 0000 1096                                                 //2090
; 0000 1097 wartosc_parametru_panelu(krazek_scierny_ilosc_cykli,32,144);  //wykonano zaciskow rzad1
;PCODE: $000026E8 VOL: 0
;PCODE: $000026E9 VOL: 0
;PCODE: $000026EA VOL: 0
;PCODE: $000026EB VOL: 0
;PCODE: $000026EC VOL: 0
;PCODE: $000026ED VOL: 0
;PCODE: $000026EE VOL: 0
;PCODE: $000026EF VOL: 0
; 0000 1098                                                         //3000
; 0000 1099 wartosc_parametru_panelu(krazek_scierny_cykl_po_okregu_ilosc,48,0);  //wykonano zaciskow rzad1
;PCODE: $000026F0 VOL: 0
;PCODE: $000026F1 VOL: 0
;PCODE: $000026F2 VOL: 0
;PCODE: $000026F3 VOL: 0
;PCODE: $000026F4 VOL: 0
;PCODE: $000026F5 VOL: 0
;PCODE: $000026F6 VOL: 0
;PCODE: $000026F7 VOL: 0
; 0000 109A                                                 //2050
; 0000 109B wartosc_parametru_panelu(predkosc_pion_szczotka,32,80);
;PCODE: $000026F8 VOL: 0
;PCODE: $000026F9 VOL: 0
;PCODE: $000026FA VOL: 0
;PCODE: $000026FB VOL: 0
;PCODE: $000026FC VOL: 0
;PCODE: $000026FD VOL: 0
;PCODE: $000026FE VOL: 0
; 0000 109C                                                 //2060
; 0000 109D wartosc_parametru_panelu(predkosc_pion_krazek,32,96);
;PCODE: $000026FF VOL: 0
;PCODE: $00002700 VOL: 0
;PCODE: $00002701 VOL: 0
;PCODE: $00002702 VOL: 0
;PCODE: $00002703 VOL: 0
;PCODE: $00002704 VOL: 0
;PCODE: $00002705 VOL: 0
; 0000 109E                                                                        //3010
; 0000 109F wartosc_parametru_panelu(wejscie_krazka_sciernego_w_pow_boczna_cylindra,48,16);
;PCODE: $00002706 VOL: 0
;PCODE: $00002707 VOL: 0
;PCODE: $00002708 VOL: 0
;PCODE: $00002709 VOL: 0
;PCODE: $0000270A VOL: 0
;PCODE: $0000270B VOL: 0
;PCODE: $0000270C VOL: 0
; 0000 10A0                                                                      //2070
; 0000 10A1 wartosc_parametru_panelu(predkosc_ruchow_po_okregu_krazek_scierny,32,112);
;PCODE: $0000270D VOL: 0
;PCODE: $0000270E VOL: 0
;PCODE: $0000270F VOL: 0
;PCODE: $00002710 VOL: 0
;PCODE: $00002711 VOL: 0
;PCODE: $00002712 VOL: 0
;PCODE: $00002713 VOL: 0
; 0000 10A2 
; 0000 10A3 wartosc_parametru_panelu(czas_pracy_szczotki_drucianej_stala,16,112);
;PCODE: $00002714 VOL: 0
;PCODE: $00002715 VOL: 0
;PCODE: $00002716 VOL: 0
;PCODE: $00002717 VOL: 0
;PCODE: $00002718 VOL: 0
;PCODE: $00002719 VOL: 0
;PCODE: $0000271A VOL: 0
;PCODE: $0000271B VOL: 0
; 0000 10A4 
; 0000 10A5 wartosc_parametru_panelu(czas_pracy_krazka_sciernego_stala,32,16);
;PCODE: $0000271C VOL: 0
;PCODE: $0000271D VOL: 0
;PCODE: $0000271E VOL: 0
;PCODE: $0000271F VOL: 0
;PCODE: $00002720 VOL: 0
;PCODE: $00002721 VOL: 0
;PCODE: $00002722 VOL: 0
;PCODE: $00002723 VOL: 0
; 0000 10A6 
; 0000 10A7 wartosc_parametru_panelu(czas_pracy_szczotki_drucianej_h,0,144);
;PCODE: $00002724 VOL: 0
;PCODE: $00002725 VOL: 0
;PCODE: $00002726 VOL: 0
;PCODE: $00002727 VOL: 0
;PCODE: $00002728 VOL: 0
;PCODE: $00002729 VOL: 0
;PCODE: $0000272A VOL: 0
;PCODE: $0000272B VOL: 0
; 0000 10A8 
; 0000 10A9 wartosc_parametru_panelu(czas_pracy_krazka_sciernego_h,16,48);
;PCODE: $0000272C VOL: 0
;PCODE: $0000272D VOL: 0
;PCODE: $0000272E VOL: 0
;PCODE: $0000272F VOL: 0
;PCODE: $00002730 VOL: 0
;PCODE: $00002731 VOL: 0
;PCODE: $00002732 VOL: 0
;PCODE: $00002733 VOL: 0
; 0000 10AA 
; 0000 10AB }
;PCODE: $00002734 VOL: 0
;PCODE: $00002735 VOL: 0
;
;void wypozycjonuj_napedy_minimalistyczna()
; 0000 10AE {
;PCODE: $00002736 VOL: 0
;PCODE: $00002737 VOL: 0
; 0000 10AF 
; 0000 10B0 while(start == 0)
;PCODE: $00002738 VOL: 0
;PCODE: $00002739 VOL: 0
;PCODE: $0000273A VOL: 0
; 0000 10B1     {
; 0000 10B2     komunikat_na_panel("                                                ",adr1,adr2);
;PCODE: $0000273B VOL: 0
;PCODE: $0000273C VOL: 0
;PCODE: $0000273D VOL: 0
;PCODE: $0000273E VOL: 0
;PCODE: $0000273F VOL: 0
;PCODE: $00002740 VOL: 0
;PCODE: $00002741 VOL: 0
;PCODE: $00002742 VOL: 0
; 0000 10B3     komunikat_na_panel("Nacisnij START aby wypozycjonowac napedy",adr1,adr2);
;PCODE: $00002743 VOL: 0
;PCODE: $00002744 VOL: 0
;PCODE: $00002745 VOL: 0
;PCODE: $00002746 VOL: 0
;PCODE: $00002747 VOL: 0
;PCODE: $00002748 VOL: 0
;PCODE: $00002749 VOL: 0
;PCODE: $0000274A VOL: 0
; 0000 10B4     komunikat_na_panel("                                                ",adr3,adr4);
;PCODE: $0000274B VOL: 0
;PCODE: $0000274C VOL: 0
;PCODE: $0000274D VOL: 0
;PCODE: $0000274E VOL: 0
;PCODE: $0000274F VOL: 0
;PCODE: $00002750 VOL: 0
;PCODE: $00002751 VOL: 0
;PCODE: $00002752 VOL: 0
; 0000 10B5     komunikat_na_panel("Nacisnij START aby wypozycjonowac napedy",adr3,adr4);
;PCODE: $00002753 VOL: 0
;PCODE: $00002754 VOL: 0
;PCODE: $00002755 VOL: 0
;PCODE: $00002756 VOL: 0
;PCODE: $00002757 VOL: 0
;PCODE: $00002758 VOL: 0
;PCODE: $00002759 VOL: 0
;PCODE: $0000275A VOL: 0
; 0000 10B6     delay_ms(1000);
;PCODE: $0000275B VOL: 0
;PCODE: $0000275C VOL: 0
;PCODE: $0000275D VOL: 0
; 0000 10B7     start = odczytaj_parametr(0,64);
;PCODE: $0000275E VOL: 0
;PCODE: $0000275F VOL: 0
;PCODE: $00002760 VOL: 0
;PCODE: $00002761 VOL: 0
;PCODE: $00002762 VOL: 0
;PCODE: $00002763 VOL: 0
; 0000 10B8     }
;PCODE: $00002764 VOL: 0
;PCODE: $00002765 VOL: 0
; 0000 10B9 
; 0000 10BA 
; 0000 10BB while(sprawdz_pin0(PORTMM,0x77) == 1 | sprawdz_pin1(PORTMM,0x77) == 1)
;PCODE: $00002766 VOL: 0
;PCODE: $00002767 VOL: 0
;PCODE: $00002768 VOL: 0
;PCODE: $00002769 VOL: 0
;PCODE: $0000276A VOL: 0
;PCODE: $0000276B VOL: 0
;PCODE: $0000276C VOL: 0
;PCODE: $0000276D VOL: 0
;PCODE: $0000276E VOL: 0
;PCODE: $0000276F VOL: 0
;PCODE: $00002770 VOL: 0
;PCODE: $00002771 VOL: 0
;PCODE: $00002772 VOL: 0
;PCODE: $00002773 VOL: 0
;PCODE: $00002774 VOL: 0
;PCODE: $00002775 VOL: 0
;PCODE: $00002776 VOL: 0
;PCODE: $00002777 VOL: 0
;PCODE: $00002778 VOL: 0
; 0000 10BC     {
; 0000 10BD     //krancowki
; 0000 10BE     }
;PCODE: $00002779 VOL: 0
;PCODE: $0000277A VOL: 0
; 0000 10BF 
; 0000 10C0 
; 0000 10C1 PORTD.2 = 1;   //setup wspolny
;PCODE: $0000277B VOL: 0
;PCODE: $0000277C VOL: 0
; 0000 10C2 delay_ms(1000);
;PCODE: $0000277D VOL: 0
;PCODE: $0000277E VOL: 0
;PCODE: $0000277F VOL: 0
; 0000 10C3 
; 0000 10C4 
; 0000 10C5 
; 0000 10C6 
; 0000 10C7 while(sprawdz_pin3(PORTJJ,0x79) == 1 | sprawdz_pin3(PORTLL,0x71) == 1 |
;PCODE: $00002780 VOL: 0
; 0000 10C8       sprawdz_pin3(PORTKK,0x75) == 1 | sprawdz_pin7(PORTKK,0x75) == 1)
;PCODE: $00002781 VOL: 0
;PCODE: $00002782 VOL: 0
;PCODE: $00002783 VOL: 0
;PCODE: $00002784 VOL: 0
;PCODE: $00002785 VOL: 0
;PCODE: $00002786 VOL: 0
;PCODE: $00002787 VOL: 0
;PCODE: $00002788 VOL: 0
;PCODE: $00002789 VOL: 0
;PCODE: $0000278A VOL: 0
;PCODE: $0000278B VOL: 0
;PCODE: $0000278C VOL: 0
;PCODE: $0000278D VOL: 0
;PCODE: $0000278E VOL: 0
;PCODE: $0000278F VOL: 0
;PCODE: $00002790 VOL: 0
;PCODE: $00002791 VOL: 0
;PCODE: $00002792 VOL: 0
;PCODE: $00002793 VOL: 0
;PCODE: $00002794 VOL: 0
;PCODE: $00002795 VOL: 0
;PCODE: $00002796 VOL: 0
;PCODE: $00002797 VOL: 0
;PCODE: $00002798 VOL: 0
;PCODE: $00002799 VOL: 0
;PCODE: $0000279A VOL: 0
;PCODE: $0000279B VOL: 0
;PCODE: $0000279C VOL: 0
;PCODE: $0000279D VOL: 0
;PCODE: $0000279E VOL: 0
;PCODE: $0000279F VOL: 0
;PCODE: $000027A0 VOL: 0
;PCODE: $000027A1 VOL: 0
;PCODE: $000027A2 VOL: 0
;PCODE: $000027A3 VOL: 0
;PCODE: $000027A4 VOL: 0
;PCODE: $000027A5 VOL: 0
;PCODE: $000027A6 VOL: 0
; 0000 10C9       {
; 0000 10CA 
; 0000 10CB       if(sprawdz_pin0(PORTMM,0x77) == 1 | sprawdz_pin1(PORTMM,0x77) == 1)
;PCODE: $000027A7 VOL: 0
;PCODE: $000027A8 VOL: 0
;PCODE: $000027A9 VOL: 0
;PCODE: $000027AA VOL: 0
;PCODE: $000027AB VOL: 0
;PCODE: $000027AC VOL: 0
;PCODE: $000027AD VOL: 0
;PCODE: $000027AE VOL: 0
;PCODE: $000027AF VOL: 0
;PCODE: $000027B0 VOL: 0
;PCODE: $000027B1 VOL: 0
;PCODE: $000027B2 VOL: 0
;PCODE: $000027B3 VOL: 0
;PCODE: $000027B4 VOL: 0
;PCODE: $000027B5 VOL: 0
;PCODE: $000027B6 VOL: 0
;PCODE: $000027B7 VOL: 0
;PCODE: $000027B8 VOL: 0
; 0000 10CC         while(1)
;PCODE: $000027B9 VOL: 0
; 0000 10CD             {
; 0000 10CE             PORTD.7 = 1;
;PCODE: $000027BA VOL: 0
;PCODE: $000027BB VOL: 0
; 0000 10CF             }
;PCODE: $000027BC VOL: 0
;PCODE: $000027BD VOL: 0
; 0000 10D0 
; 0000 10D1 
; 0000 10D2       komunikat_na_panel("                                                ",adr1,adr2);
;PCODE: $000027BE VOL: 0
;PCODE: $000027BF VOL: 0
;PCODE: $000027C0 VOL: 0
;PCODE: $000027C1 VOL: 0
;PCODE: $000027C2 VOL: 0
;PCODE: $000027C3 VOL: 0
;PCODE: $000027C4 VOL: 0
;PCODE: $000027C5 VOL: 0
;PCODE: $000027C6 VOL: 0
; 0000 10D3       komunikat_na_panel("Pozycjonuje uklady liniowe XYZ",adr1,adr2);
;PCODE: $000027C7 VOL: 0
;PCODE: $000027C8 VOL: 0
;PCODE: $000027C9 VOL: 0
;PCODE: $000027CA VOL: 0
;PCODE: $000027CB VOL: 0
;PCODE: $000027CC VOL: 0
;PCODE: $000027CD VOL: 0
;PCODE: $000027CE VOL: 0
; 0000 10D4       komunikat_na_panel("                                                ",adr3,adr4);
;PCODE: $000027CF VOL: 0
;PCODE: $000027D0 VOL: 0
;PCODE: $000027D1 VOL: 0
;PCODE: $000027D2 VOL: 0
;PCODE: $000027D3 VOL: 0
;PCODE: $000027D4 VOL: 0
;PCODE: $000027D5 VOL: 0
;PCODE: $000027D6 VOL: 0
; 0000 10D5       komunikat_na_panel("Pozycjonuje uklady liniowe XYZ",adr3,adr4);
;PCODE: $000027D7 VOL: 0
;PCODE: $000027D8 VOL: 0
;PCODE: $000027D9 VOL: 0
;PCODE: $000027DA VOL: 0
;PCODE: $000027DB VOL: 0
;PCODE: $000027DC VOL: 0
;PCODE: $000027DD VOL: 0
;PCODE: $000027DE VOL: 0
; 0000 10D6       delay_ms(1000);
;PCODE: $000027DF VOL: 0
;PCODE: $000027E0 VOL: 0
;PCODE: $000027E1 VOL: 0
; 0000 10D7 
; 0000 10D8       if(sprawdz_pin3(PORTJJ,0x79) == 0)
;PCODE: $000027E2 VOL: 0
;PCODE: $000027E3 VOL: 0
;PCODE: $000027E4 VOL: 0
;PCODE: $000027E5 VOL: 0
;PCODE: $000027E6 VOL: 0
;PCODE: $000027E7 VOL: 0
;PCODE: $000027E8 VOL: 0
; 0000 10D9             {
; 0000 10DA             komunikat_na_panel("                                                ",adr1,adr2);
;PCODE: $000027E9 VOL: 0
;PCODE: $000027EA VOL: 0
;PCODE: $000027EB VOL: 0
;PCODE: $000027EC VOL: 0
;PCODE: $000027ED VOL: 0
;PCODE: $000027EE VOL: 0
;PCODE: $000027EF VOL: 0
;PCODE: $000027F0 VOL: 0
; 0000 10DB             komunikat_na_panel("Sterownik 1 - wypozycjonowalem",adr1,adr2);
;PCODE: $000027F1 VOL: 0
;PCODE: $000027F2 VOL: 0
;PCODE: $000027F3 VOL: 0
;PCODE: $000027F4 VOL: 0
;PCODE: $000027F5 VOL: 0
;PCODE: $000027F6 VOL: 0
;PCODE: $000027F7 VOL: 0
;PCODE: $000027F8 VOL: 0
; 0000 10DC             delay_ms(1000);
;PCODE: $000027F9 VOL: 0
;PCODE: $000027FA VOL: 0
;PCODE: $000027FB VOL: 0
; 0000 10DD             }
; 0000 10DE       if(sprawdz_pin3(PORTLL,0x71) == 0)
;PCODE: $000027FC VOL: 0
;PCODE: $000027FD VOL: 0
;PCODE: $000027FE VOL: 0
;PCODE: $000027FF VOL: 0
;PCODE: $00002800 VOL: 0
;PCODE: $00002801 VOL: 0
;PCODE: $00002802 VOL: 0
;PCODE: $00002803 VOL: 0
; 0000 10DF             {
; 0000 10E0             komunikat_na_panel("                                                ",adr3,adr4);
;PCODE: $00002804 VOL: 0
;PCODE: $00002805 VOL: 0
;PCODE: $00002806 VOL: 0
;PCODE: $00002807 VOL: 0
;PCODE: $00002808 VOL: 0
;PCODE: $00002809 VOL: 0
;PCODE: $0000280A VOL: 0
;PCODE: $0000280B VOL: 0
; 0000 10E1             komunikat_na_panel("Sterownik 2 - wypozycjonowalem",adr3,adr4);
;PCODE: $0000280C VOL: 0
;PCODE: $0000280D VOL: 0
;PCODE: $0000280E VOL: 0
;PCODE: $0000280F VOL: 0
;PCODE: $00002810 VOL: 0
;PCODE: $00002811 VOL: 0
;PCODE: $00002812 VOL: 0
;PCODE: $00002813 VOL: 0
; 0000 10E2             delay_ms(1000);
;PCODE: $00002814 VOL: 0
;PCODE: $00002815 VOL: 0
;PCODE: $00002816 VOL: 0
; 0000 10E3             }
; 0000 10E4       if(sprawdz_pin3(PORTKK,0x75) == 0)
;PCODE: $00002817 VOL: 0
;PCODE: $00002818 VOL: 0
;PCODE: $00002819 VOL: 0
;PCODE: $0000281A VOL: 0
;PCODE: $0000281B VOL: 0
;PCODE: $0000281C VOL: 0
;PCODE: $0000281D VOL: 0
;PCODE: $0000281E VOL: 0
; 0000 10E5             {
; 0000 10E6             komunikat_na_panel("                                                ",adr1,adr2);
;PCODE: $0000281F VOL: 0
;PCODE: $00002820 VOL: 0
;PCODE: $00002821 VOL: 0
;PCODE: $00002822 VOL: 0
;PCODE: $00002823 VOL: 0
;PCODE: $00002824 VOL: 0
;PCODE: $00002825 VOL: 0
;PCODE: $00002826 VOL: 0
; 0000 10E7             komunikat_na_panel("Sterownik 3 - wypozycjonowalem",adr1,adr2);
;PCODE: $00002827 VOL: 0
;PCODE: $00002828 VOL: 0
;PCODE: $00002829 VOL: 0
;PCODE: $0000282A VOL: 0
;PCODE: $0000282B VOL: 0
;PCODE: $0000282C VOL: 0
;PCODE: $0000282D VOL: 0
;PCODE: $0000282E VOL: 0
; 0000 10E8             delay_ms(1000);
;PCODE: $0000282F VOL: 0
;PCODE: $00002830 VOL: 0
;PCODE: $00002831 VOL: 0
; 0000 10E9             }
; 0000 10EA       if(sprawdz_pin7(PORTKK,0x75) == 0)
;PCODE: $00002832 VOL: 0
;PCODE: $00002833 VOL: 0
;PCODE: $00002834 VOL: 0
;PCODE: $00002835 VOL: 0
;PCODE: $00002836 VOL: 0
;PCODE: $00002837 VOL: 0
;PCODE: $00002838 VOL: 0
;PCODE: $00002839 VOL: 0
; 0000 10EB             {
; 0000 10EC             komunikat_na_panel("                                                ",adr3,adr4);
;PCODE: $0000283A VOL: 0
;PCODE: $0000283B VOL: 0
;PCODE: $0000283C VOL: 0
;PCODE: $0000283D VOL: 0
;PCODE: $0000283E VOL: 0
;PCODE: $0000283F VOL: 0
;PCODE: $00002840 VOL: 0
;PCODE: $00002841 VOL: 0
; 0000 10ED             komunikat_na_panel("Sterownik 4 - wypozycjonowalem",adr1,adr2);
;PCODE: $00002842 VOL: 0
;PCODE: $00002843 VOL: 0
;PCODE: $00002844 VOL: 0
;PCODE: $00002845 VOL: 0
;PCODE: $00002846 VOL: 0
;PCODE: $00002847 VOL: 0
;PCODE: $00002848 VOL: 0
;PCODE: $00002849 VOL: 0
; 0000 10EE             delay_ms(1000);
;PCODE: $0000284A VOL: 0
;PCODE: $0000284B VOL: 0
;PCODE: $0000284C VOL: 0
; 0000 10EF             }
; 0000 10F0 
; 0000 10F1 
; 0000 10F2 
; 0000 10F3        if(sprawdz_pin7(PORTMM,0x77) == 1)
;PCODE: $0000284D VOL: 0
;PCODE: $0000284E VOL: 0
;PCODE: $0000284F VOL: 0
;PCODE: $00002850 VOL: 0
;PCODE: $00002851 VOL: 0
;PCODE: $00002852 VOL: 0
;PCODE: $00002853 VOL: 0
;PCODE: $00002854 VOL: 0
; 0000 10F4             PORTD.7 = 1;
;PCODE: $00002855 VOL: 0
;PCODE: $00002856 VOL: 0
; 0000 10F5 
; 0000 10F6       if(sprawdz_pin6(PORTMM,0x77) == 1 |
;PCODE: $00002857 VOL: 0
; 0000 10F7          sprawdz_pin7(PORTMM,0x77) == 1 |
; 0000 10F8          sprawdz_pin5(PORTJJ,0x79) == 1 |
; 0000 10F9          sprawdz_pin5(PORTLL,0x71) == 1)
;PCODE: $00002858 VOL: 0
;PCODE: $00002859 VOL: 0
;PCODE: $0000285A VOL: 0
;PCODE: $0000285B VOL: 0
;PCODE: $0000285C VOL: 0
;PCODE: $0000285D VOL: 0
;PCODE: $0000285E VOL: 0
;PCODE: $0000285F VOL: 0
;PCODE: $00002860 VOL: 0
;PCODE: $00002861 VOL: 0
;PCODE: $00002862 VOL: 0
;PCODE: $00002863 VOL: 0
;PCODE: $00002864 VOL: 0
;PCODE: $00002865 VOL: 0
;PCODE: $00002866 VOL: 0
;PCODE: $00002867 VOL: 0
;PCODE: $00002868 VOL: 0
;PCODE: $00002869 VOL: 0
;PCODE: $0000286A VOL: 0
;PCODE: $0000286B VOL: 0
;PCODE: $0000286C VOL: 0
;PCODE: $0000286D VOL: 0
;PCODE: $0000286E VOL: 0
;PCODE: $0000286F VOL: 0
;PCODE: $00002870 VOL: 0
;PCODE: $00002871 VOL: 0
;PCODE: $00002872 VOL: 0
;PCODE: $00002873 VOL: 0
;PCODE: $00002874 VOL: 0
;PCODE: $00002875 VOL: 0
;PCODE: $00002876 VOL: 0
;PCODE: $00002877 VOL: 0
;PCODE: $00002878 VOL: 0
;PCODE: $00002879 VOL: 0
;PCODE: $0000287A VOL: 0
;PCODE: $0000287B VOL: 0
;PCODE: $0000287C VOL: 0
;PCODE: $0000287D VOL: 0
; 0000 10FA             {
; 0000 10FB             PORTD.7 = 1;
;PCODE: $0000287E VOL: 0
;PCODE: $0000287F VOL: 0
; 0000 10FC             if(sprawdz_pin6(PORTMM,0x77) == 1)
;PCODE: $00002880 VOL: 0
;PCODE: $00002881 VOL: 0
;PCODE: $00002882 VOL: 0
;PCODE: $00002883 VOL: 0
;PCODE: $00002884 VOL: 0
;PCODE: $00002885 VOL: 0
;PCODE: $00002886 VOL: 0
; 0000 10FD                 {
; 0000 10FE                 komunikat_na_panel("                                                ",adr1,adr2);
;PCODE: $00002887 VOL: 0
;PCODE: $00002888 VOL: 0
;PCODE: $00002889 VOL: 0
;PCODE: $0000288A VOL: 0
;PCODE: $0000288B VOL: 0
;PCODE: $0000288C VOL: 0
;PCODE: $0000288D VOL: 0
;PCODE: $0000288E VOL: 0
; 0000 10FF                 komunikat_na_panel("Alarm Sterownik 4",adr1,adr2);
;PCODE: $0000288F VOL: 0
;PCODE: $00002890 VOL: 0
;PCODE: $00002891 VOL: 0
;PCODE: $00002892 VOL: 0
;PCODE: $00002893 VOL: 0
;PCODE: $00002894 VOL: 0
;PCODE: $00002895 VOL: 0
;PCODE: $00002896 VOL: 0
; 0000 1100                 delay_ms(1000);
;PCODE: $00002897 VOL: 0
;PCODE: $00002898 VOL: 0
;PCODE: $00002899 VOL: 0
; 0000 1101                 }
; 0000 1102             if(sprawdz_pin7(PORTMM,0x77) == 1)
;PCODE: $0000289A VOL: 0
;PCODE: $0000289B VOL: 0
;PCODE: $0000289C VOL: 0
;PCODE: $0000289D VOL: 0
;PCODE: $0000289E VOL: 0
;PCODE: $0000289F VOL: 0
;PCODE: $000028A0 VOL: 0
;PCODE: $000028A1 VOL: 0
; 0000 1103                 {
; 0000 1104                 komunikat_na_panel("                                                ",adr1,adr2);
;PCODE: $000028A2 VOL: 0
;PCODE: $000028A3 VOL: 0
;PCODE: $000028A4 VOL: 0
;PCODE: $000028A5 VOL: 0
;PCODE: $000028A6 VOL: 0
;PCODE: $000028A7 VOL: 0
;PCODE: $000028A8 VOL: 0
;PCODE: $000028A9 VOL: 0
; 0000 1105                 komunikat_na_panel("Alarm Sterownik 3",adr1,adr2);
;PCODE: $000028AA VOL: 0
;PCODE: $000028AB VOL: 0
;PCODE: $000028AC VOL: 0
;PCODE: $000028AD VOL: 0
;PCODE: $000028AE VOL: 0
;PCODE: $000028AF VOL: 0
;PCODE: $000028B0 VOL: 0
;PCODE: $000028B1 VOL: 0
; 0000 1106                 delay_ms(1000);
;PCODE: $000028B2 VOL: 0
;PCODE: $000028B3 VOL: 0
;PCODE: $000028B4 VOL: 0
; 0000 1107                 }
; 0000 1108             if(sprawdz_pin5(PORTJJ,0x79) == 1)
;PCODE: $000028B5 VOL: 0
;PCODE: $000028B6 VOL: 0
;PCODE: $000028B7 VOL: 0
;PCODE: $000028B8 VOL: 0
;PCODE: $000028B9 VOL: 0
;PCODE: $000028BA VOL: 0
;PCODE: $000028BB VOL: 0
;PCODE: $000028BC VOL: 0
; 0000 1109                 {
; 0000 110A                 komunikat_na_panel("                                                ",adr1,adr2);
;PCODE: $000028BD VOL: 0
;PCODE: $000028BE VOL: 0
;PCODE: $000028BF VOL: 0
;PCODE: $000028C0 VOL: 0
;PCODE: $000028C1 VOL: 0
;PCODE: $000028C2 VOL: 0
;PCODE: $000028C3 VOL: 0
;PCODE: $000028C4 VOL: 0
; 0000 110B                 komunikat_na_panel("Alarm Sterownik 1",adr1,adr2);
;PCODE: $000028C5 VOL: 0
;PCODE: $000028C6 VOL: 0
;PCODE: $000028C7 VOL: 0
;PCODE: $000028C8 VOL: 0
;PCODE: $000028C9 VOL: 0
;PCODE: $000028CA VOL: 0
;PCODE: $000028CB VOL: 0
;PCODE: $000028CC VOL: 0
; 0000 110C                 delay_ms(1000);
;PCODE: $000028CD VOL: 0
;PCODE: $000028CE VOL: 0
;PCODE: $000028CF VOL: 0
; 0000 110D                 }
; 0000 110E             if(sprawdz_pin5(PORTLL,0x71) == 1)
;PCODE: $000028D0 VOL: 0
;PCODE: $000028D1 VOL: 0
;PCODE: $000028D2 VOL: 0
;PCODE: $000028D3 VOL: 0
;PCODE: $000028D4 VOL: 0
;PCODE: $000028D5 VOL: 0
;PCODE: $000028D6 VOL: 0
;PCODE: $000028D7 VOL: 0
; 0000 110F                 {
; 0000 1110                 komunikat_na_panel("                                                ",adr1,adr2);
;PCODE: $000028D8 VOL: 0
;PCODE: $000028D9 VOL: 0
;PCODE: $000028DA VOL: 0
;PCODE: $000028DB VOL: 0
;PCODE: $000028DC VOL: 0
;PCODE: $000028DD VOL: 0
;PCODE: $000028DE VOL: 0
;PCODE: $000028DF VOL: 0
; 0000 1111                 komunikat_na_panel("Alarm Sterownik 2",adr1,adr2);
;PCODE: $000028E0 VOL: 0
;PCODE: $000028E1 VOL: 0
;PCODE: $000028E2 VOL: 0
;PCODE: $000028E3 VOL: 0
;PCODE: $000028E4 VOL: 0
;PCODE: $000028E5 VOL: 0
;PCODE: $000028E6 VOL: 0
;PCODE: $000028E7 VOL: 0
; 0000 1112                 delay_ms(1000);
;PCODE: $000028E8 VOL: 0
;PCODE: $000028E9 VOL: 0
;PCODE: $000028EA VOL: 0
; 0000 1113                 }
; 0000 1114 
; 0000 1115             }
;PCODE: $000028EB VOL: 0
; 0000 1116 
; 0000 1117       //sprawdz_pin6(PORTMM,0x77) ALARM STEROWNIK4
; 0000 1118 //sprawdz_pin7(PORTMM,0x77) ALARM STEROWNIK3
; 0000 1119       //sprawdz_pin5(PORTJJ,0x79)  ALARM  STEROWNIK1
; 0000 111A        //sprawdz_pin5(PORTLL,0x71)  ALARM  STEROWNIK2
; 0000 111B 
; 0000 111C 
; 0000 111D 
; 0000 111E       }
;PCODE: $000028EC VOL: 0
;PCODE: $000028ED VOL: 0
;PCODE: $000028EE VOL: 0
; 0000 111F 
; 0000 1120 komunikat_na_panel("                                                ",adr1,adr2);
;PCODE: $000028EF VOL: 0
;PCODE: $000028F0 VOL: 0
;PCODE: $000028F1 VOL: 0
;PCODE: $000028F2 VOL: 0
;PCODE: $000028F3 VOL: 0
;PCODE: $000028F4 VOL: 0
;PCODE: $000028F5 VOL: 0
;PCODE: $000028F6 VOL: 0
; 0000 1121 komunikat_na_panel("Wypozycjonowano uklady liniowe XYZ",adr1,adr2);
;PCODE: $000028F7 VOL: 0
;PCODE: $000028F8 VOL: 0
;PCODE: $000028F9 VOL: 0
;PCODE: $000028FA VOL: 0
;PCODE: $000028FB VOL: 0
;PCODE: $000028FC VOL: 0
;PCODE: $000028FD VOL: 0
;PCODE: $000028FE VOL: 0
; 0000 1122 komunikat_na_panel("                                                ",adr3,adr4);
;PCODE: $000028FF VOL: 0
;PCODE: $00002900 VOL: 0
;PCODE: $00002901 VOL: 0
;PCODE: $00002902 VOL: 0
;PCODE: $00002903 VOL: 0
;PCODE: $00002904 VOL: 0
;PCODE: $00002905 VOL: 0
;PCODE: $00002906 VOL: 0
; 0000 1123 komunikat_na_panel("Wypozycjonowano uklady liniowe XYZ",adr3,adr4);
;PCODE: $00002907 VOL: 0
;PCODE: $00002908 VOL: 0
;PCODE: $00002909 VOL: 0
;PCODE: $0000290A VOL: 0
;PCODE: $0000290B VOL: 0
;PCODE: $0000290C VOL: 0
;PCODE: $0000290D VOL: 0
;PCODE: $0000290E VOL: 0
; 0000 1124 
; 0000 1125 PORTD.2 = 0;   //setup wspolny
;PCODE: $0000290F VOL: 0
;PCODE: $00002910 VOL: 0
; 0000 1126 delay_ms(1000);
;PCODE: $00002911 VOL: 0
;PCODE: $00002912 VOL: 0
;PCODE: $00002913 VOL: 0
; 0000 1127 wartosc_parametru_panelu(0,0,64);  //start na 0;
;PCODE: $00002914 VOL: 0
;PCODE: $00002915 VOL: 0
;PCODE: $00002916 VOL: 0
;PCODE: $00002917 VOL: 0
;PCODE: $00002918 VOL: 0
;PCODE: $00002919 VOL: 0
;PCODE: $0000291A VOL: 0
; 0000 1128 start = 0;
;PCODE: $0000291B VOL: 0
; 0000 1129 
; 0000 112A }
;PCODE: $0000291C VOL: 0
;PCODE: $0000291D VOL: 0
;
;int wypozycjonuj_LEFS32_300_1(int step)
; 0000 112D {
;PCODE: $0000291E VOL: 0
;PCODE: $0000291F VOL: 0
; 0000 112E //PORTF.0   IN0  STEROWNIK3
; 0000 112F //PORTF.1   IN1  STEROWNIK3
; 0000 1130 //PORTF.2   IN2  STEROWNIK3
; 0000 1131 //PORTF.3   IN3  STEROWNIK3
; 0000 1132 
; 0000 1133 //PORTF.4   SETUP  STEROWNIK3
; 0000 1134 //PORTF.5   DRIVE  STEROWNIK3
; 0000 1135 
; 0000 1136 //sprawdz_pin0(PORTKK,0x75)  B7 BUSY    LECCP STEROWNIK3
; 0000 1137 //sprawdz_pin3(PORTKK,0x75)  B10 INP    LECP6 STEROWNIK3
; 0000 1138 
; 0000 1139 
; 0000 113A if(step == 0)
;	step -> Y+0
;PCODE: $00002920 VOL: 0
;PCODE: $00002921 VOL: 0
;PCODE: $00002922 VOL: 0
; 0000 113B {
; 0000 113C switch(pozycjonowanie_LEFS32_300_1)
;PCODE: $00002923 VOL: 0
; 0000 113D     {
; 0000 113E     case 0:
;PCODE: $00002924 VOL: 0
;PCODE: $00002925 VOL: 0
; 0000 113F             PORT_F.bits.b4 = 1;      // ////A9  SETUP
;PCODE: $00002926 VOL: 0
;PCODE: $00002927 VOL: 0
;PCODE: $00002928 VOL: 0
; 0000 1140             PORTF = PORT_F.byte;
;PCODE: $00002929 VOL: 0
;PCODE: $0000292A VOL: 0
; 0000 1141 
; 0000 1142             if(sprawdz_pin0(PORTKK,0x75) == 1)  //BUSY
;PCODE: $0000292B VOL: 0
;PCODE: $0000292C VOL: 0
;PCODE: $0000292D VOL: 0
;PCODE: $0000292E VOL: 0
;PCODE: $0000292F VOL: 0
;PCODE: $00002930 VOL: 0
;PCODE: $00002931 VOL: 0
; 0000 1143                 {
; 0000 1144                 }
; 0000 1145             else
;PCODE: $00002932 VOL: 0
;PCODE: $00002933 VOL: 0
; 0000 1146                 {
; 0000 1147                 pozycjonowanie_LEFS32_300_1 = 1;
;PCODE: $00002934 VOL: 0
;PCODE: $00002935 VOL: 0
; 0000 1148                 }
;PCODE: $00002936 VOL: 0
; 0000 1149 
; 0000 114A     break;
;PCODE: $00002937 VOL: 0
; 0000 114B 
; 0000 114C     case 1:
;PCODE: $00002938 VOL: 0
;PCODE: $00002939 VOL: 0
;PCODE: $0000293A VOL: 0
; 0000 114D             if(sprawdz_pin0(PORTKK,0x75) == 0)
;PCODE: $0000293B VOL: 0
;PCODE: $0000293C VOL: 0
;PCODE: $0000293D VOL: 0
;PCODE: $0000293E VOL: 0
;PCODE: $0000293F VOL: 0
;PCODE: $00002940 VOL: 0
;PCODE: $00002941 VOL: 0
; 0000 114E                 {
; 0000 114F                 }
; 0000 1150             else
;PCODE: $00002942 VOL: 0
;PCODE: $00002943 VOL: 0
; 0000 1151                 {
; 0000 1152                 pozycjonowanie_LEFS32_300_1 = 2;
;PCODE: $00002944 VOL: 0
;PCODE: $00002945 VOL: 0
; 0000 1153                 }
;PCODE: $00002946 VOL: 0
; 0000 1154             if(sprawdz_pin7(PORTMM,0x77) == 1)     //alarm
;PCODE: $00002947 VOL: 0
;PCODE: $00002948 VOL: 0
;PCODE: $00002949 VOL: 0
;PCODE: $0000294A VOL: 0
;PCODE: $0000294B VOL: 0
;PCODE: $0000294C VOL: 0
;PCODE: $0000294D VOL: 0
; 0000 1155                    {
; 0000 1156                    komunikat_na_panel("                                                ",adr1,adr2);
;PCODE: $0000294E VOL: 0
;PCODE: $0000294F VOL: 0
;PCODE: $00002950 VOL: 0
;PCODE: $00002951 VOL: 0
;PCODE: $00002952 VOL: 0
;PCODE: $00002953 VOL: 0
;PCODE: $00002954 VOL: 0
;PCODE: $00002955 VOL: 0
; 0000 1157                    komunikat_na_panel("Przeciazenia LEFS32_1",adr1,adr2);
;PCODE: $00002956 VOL: 0
;PCODE: $00002957 VOL: 0
;PCODE: $00002958 VOL: 0
;PCODE: $00002959 VOL: 0
;PCODE: $0000295A VOL: 0
;PCODE: $0000295B VOL: 0
;PCODE: $0000295C VOL: 0
;PCODE: $0000295D VOL: 0
; 0000 1158                    }
; 0000 1159 
; 0000 115A     break;
;PCODE: $0000295E VOL: 0
;PCODE: $0000295F VOL: 0
; 0000 115B 
; 0000 115C     case 2:
;PCODE: $00002960 VOL: 0
;PCODE: $00002961 VOL: 0
;PCODE: $00002962 VOL: 0
; 0000 115D 
; 0000 115E             if(sprawdz_pin3(PORTKK,0x75) == 1)
;PCODE: $00002963 VOL: 0
;PCODE: $00002964 VOL: 0
;PCODE: $00002965 VOL: 0
;PCODE: $00002966 VOL: 0
;PCODE: $00002967 VOL: 0
;PCODE: $00002968 VOL: 0
;PCODE: $00002969 VOL: 0
; 0000 115F                 {
; 0000 1160                 }
; 0000 1161             else
;PCODE: $0000296A VOL: 0
;PCODE: $0000296B VOL: 0
; 0000 1162                 {
; 0000 1163                 pozycjonowanie_LEFS32_300_1 = 3;
;PCODE: $0000296C VOL: 0
;PCODE: $0000296D VOL: 0
; 0000 1164                 }
;PCODE: $0000296E VOL: 0
; 0000 1165              if(sprawdz_pin7(PORTMM,0x77) == 1)     //alarm
;PCODE: $0000296F VOL: 0
;PCODE: $00002970 VOL: 0
;PCODE: $00002971 VOL: 0
;PCODE: $00002972 VOL: 0
;PCODE: $00002973 VOL: 0
;PCODE: $00002974 VOL: 0
;PCODE: $00002975 VOL: 0
; 0000 1166                    {
; 0000 1167                    komunikat_na_panel("                                                ",adr1,adr2);
;PCODE: $00002976 VOL: 0
;PCODE: $00002977 VOL: 0
;PCODE: $00002978 VOL: 0
;PCODE: $00002979 VOL: 0
;PCODE: $0000297A VOL: 0
;PCODE: $0000297B VOL: 0
;PCODE: $0000297C VOL: 0
;PCODE: $0000297D VOL: 0
; 0000 1168                    komunikat_na_panel("Przeciazenia LEFS32_1",adr1,adr2);
;PCODE: $0000297E VOL: 0
;PCODE: $0000297F VOL: 0
;PCODE: $00002980 VOL: 0
;PCODE: $00002981 VOL: 0
;PCODE: $00002982 VOL: 0
;PCODE: $00002983 VOL: 0
;PCODE: $00002984 VOL: 0
;PCODE: $00002985 VOL: 0
; 0000 1169                    }
; 0000 116A 
; 0000 116B     break;
;PCODE: $00002986 VOL: 0
;PCODE: $00002987 VOL: 0
; 0000 116C 
; 0000 116D     case 3:
;PCODE: $00002988 VOL: 0
;PCODE: $00002989 VOL: 0
;PCODE: $0000298A VOL: 0
; 0000 116E 
; 0000 116F             if(sprawdz_pin3(PORTKK,0x75) == 0)
;PCODE: $0000298B VOL: 0
;PCODE: $0000298C VOL: 0
;PCODE: $0000298D VOL: 0
;PCODE: $0000298E VOL: 0
;PCODE: $0000298F VOL: 0
;PCODE: $00002990 VOL: 0
;PCODE: $00002991 VOL: 0
; 0000 1170                 {
; 0000 1171                 PORT_F.bits.b4 = 0;      // ////A9  SETUP
;PCODE: $00002992 VOL: 0
;PCODE: $00002993 VOL: 0
;PCODE: $00002994 VOL: 0
;PCODE: $00002995 VOL: 0
; 0000 1172                 PORTF = PORT_F.byte;
;PCODE: $00002996 VOL: 0
;PCODE: $00002997 VOL: 0
; 0000 1173                 pozycjonowanie_LEFS32_300_1 = 4;
;PCODE: $00002998 VOL: 0
;PCODE: $00002999 VOL: 0
; 0000 1174 
; 0000 1175                 }
; 0000 1176 
; 0000 1177     break;
;PCODE: $0000299A VOL: 0
;PCODE: $0000299B VOL: 0
; 0000 1178 
; 0000 1179     }
;PCODE: $0000299C VOL: 0
; 0000 117A }
; 0000 117B 
; 0000 117C 
; 0000 117D 
; 0000 117E if(step == 1)
;PCODE: $0000299D VOL: 0
;PCODE: $0000299E VOL: 0
;PCODE: $0000299F VOL: 0
;PCODE: $000029A0 VOL: 0
; 0000 117F {
; 0000 1180 while(cykl < 5)
;PCODE: $000029A1 VOL: 0
;PCODE: $000029A2 VOL: 0
;PCODE: $000029A3 VOL: 0
;PCODE: $000029A4 VOL: 0
; 0000 1181 {
; 0000 1182     switch(cykl)
;PCODE: $000029A5 VOL: 0
; 0000 1183         {
; 0000 1184         case 0:
;PCODE: $000029A6 VOL: 0
;PCODE: $000029A7 VOL: 0
; 0000 1185 
; 0000 1186             sek2 = 0;
;PCODE: $000029A8 VOL: 0
;PCODE: $000029A9 VOL: 0
; 0000 1187             PORT_F.bits.b0 = 1;
;PCODE: $000029AA VOL: 0
;PCODE: $000029AB VOL: 0
;PCODE: $000029AC VOL: 0
; 0000 1188             PORT_F.bits.b1 = 1;         //STEP 0
;PCODE: $000029AD VOL: 0
;PCODE: $000029AE VOL: 0
;PCODE: $000029AF VOL: 0
; 0000 1189             PORT_F.bits.b2 = 1;
;PCODE: $000029B0 VOL: 0
;PCODE: $000029B1 VOL: 0
;PCODE: $000029B2 VOL: 0
; 0000 118A             PORT_F.bits.b3 = 1;
;PCODE: $000029B3 VOL: 0
;PCODE: $000029B4 VOL: 0
;PCODE: $000029B5 VOL: 0
; 0000 118B             PORTF = PORT_F.byte;
;PCODE: $000029B6 VOL: 0
;PCODE: $000029B7 VOL: 0
; 0000 118C             cykl = 1;
;PCODE: $000029B8 VOL: 0
;PCODE: $000029B9 VOL: 0
; 0000 118D 
; 0000 118E 
; 0000 118F         break;
;PCODE: $000029BA VOL: 0
; 0000 1190 
; 0000 1191         case 1:
;PCODE: $000029BB VOL: 0
;PCODE: $000029BC VOL: 0
;PCODE: $000029BD VOL: 0
; 0000 1192 
; 0000 1193             if(sek2 > 1)
;PCODE: $000029BE VOL: 0
;PCODE: $000029BF VOL: 0
;PCODE: $000029C0 VOL: 0
; 0000 1194                 {
; 0000 1195                 PORT_F.bits.b5 = 1;
;PCODE: $000029C1 VOL: 0
;PCODE: $000029C2 VOL: 0
;PCODE: $000029C3 VOL: 0
; 0000 1196                 PORTF = PORT_F.byte;
;PCODE: $000029C4 VOL: 0
;PCODE: $000029C5 VOL: 0
; 0000 1197                 cykl = 2;
;PCODE: $000029C6 VOL: 0
;PCODE: $000029C7 VOL: 0
; 0000 1198                 delay_ms(1000);
;PCODE: $000029C8 VOL: 0
;PCODE: $000029C9 VOL: 0
;PCODE: $000029CA VOL: 0
; 0000 1199                 }
; 0000 119A         break;
;PCODE: $000029CB VOL: 0
;PCODE: $000029CC VOL: 0
; 0000 119B 
; 0000 119C 
; 0000 119D         case 2:
;PCODE: $000029CD VOL: 0
;PCODE: $000029CE VOL: 0
;PCODE: $000029CF VOL: 0
; 0000 119E 
; 0000 119F                if(sprawdz_pin0(PORTKK,0x75) == 0)
;PCODE: $000029D0 VOL: 0
;PCODE: $000029D1 VOL: 0
;PCODE: $000029D2 VOL: 0
;PCODE: $000029D3 VOL: 0
;PCODE: $000029D4 VOL: 0
;PCODE: $000029D5 VOL: 0
;PCODE: $000029D6 VOL: 0
; 0000 11A0                   {
; 0000 11A1                   PORT_F.bits.b5 = 0;
;PCODE: $000029D7 VOL: 0
;PCODE: $000029D8 VOL: 0
;PCODE: $000029D9 VOL: 0
;PCODE: $000029DA VOL: 0
; 0000 11A2                   PORTF = PORT_F.byte;       //DRIVE koniec
;PCODE: $000029DB VOL: 0
;PCODE: $000029DC VOL: 0
; 0000 11A3 
; 0000 11A4                   PORT_F.bits.b0 = 0;
;PCODE: $000029DD VOL: 0
;PCODE: $000029DE VOL: 0
;PCODE: $000029DF VOL: 0
;PCODE: $000029E0 VOL: 0
; 0000 11A5                   PORT_F.bits.b1 = 0;         //STEP 1 koniec
;PCODE: $000029E1 VOL: 0
;PCODE: $000029E2 VOL: 0
;PCODE: $000029E3 VOL: 0
;PCODE: $000029E4 VOL: 0
; 0000 11A6                   PORT_F.bits.b2 = 0;
;PCODE: $000029E5 VOL: 0
;PCODE: $000029E6 VOL: 0
;PCODE: $000029E7 VOL: 0
;PCODE: $000029E8 VOL: 0
; 0000 11A7                   PORT_F.bits.b3 = 0;
;PCODE: $000029E9 VOL: 0
;PCODE: $000029EA VOL: 0
;PCODE: $000029EB VOL: 0
;PCODE: $000029EC VOL: 0
; 0000 11A8                   PORTF = PORT_F.byte;
;PCODE: $000029ED VOL: 0
;PCODE: $000029EE VOL: 0
; 0000 11A9 
; 0000 11AA                   delay_ms(1000);
;PCODE: $000029EF VOL: 0
;PCODE: $000029F0 VOL: 0
;PCODE: $000029F1 VOL: 0
; 0000 11AB                   cykl = 3;
;PCODE: $000029F2 VOL: 0
;PCODE: $000029F3 VOL: 0
; 0000 11AC                   }
; 0000 11AD 
; 0000 11AE         break;
;PCODE: $000029F4 VOL: 0
;PCODE: $000029F5 VOL: 0
; 0000 11AF 
; 0000 11B0         case 3:
;PCODE: $000029F6 VOL: 0
;PCODE: $000029F7 VOL: 0
;PCODE: $000029F8 VOL: 0
; 0000 11B1 
; 0000 11B2                if(sprawdz_pin3(PORTKK,0x75) == 0)
;PCODE: $000029F9 VOL: 0
;PCODE: $000029FA VOL: 0
;PCODE: $000029FB VOL: 0
;PCODE: $000029FC VOL: 0
;PCODE: $000029FD VOL: 0
;PCODE: $000029FE VOL: 0
;PCODE: $000029FF VOL: 0
; 0000 11B3                   {
; 0000 11B4                   sek2 = 0;
;PCODE: $00002A00 VOL: 0
;PCODE: $00002A01 VOL: 0
; 0000 11B5                   cykl = 4;
;PCODE: $00002A02 VOL: 0
;PCODE: $00002A03 VOL: 0
; 0000 11B6                   }
; 0000 11B7               if(sprawdz_pin7(PORTMM,0x77) == 1)     //alarm
;PCODE: $00002A04 VOL: 0
;PCODE: $00002A05 VOL: 0
;PCODE: $00002A06 VOL: 0
;PCODE: $00002A07 VOL: 0
;PCODE: $00002A08 VOL: 0
;PCODE: $00002A09 VOL: 0
;PCODE: $00002A0A VOL: 0
;PCODE: $00002A0B VOL: 0
; 0000 11B8                    {
; 0000 11B9                    komunikat_na_panel("                                                ",adr1,adr2);
;PCODE: $00002A0C VOL: 0
;PCODE: $00002A0D VOL: 0
;PCODE: $00002A0E VOL: 0
;PCODE: $00002A0F VOL: 0
;PCODE: $00002A10 VOL: 0
;PCODE: $00002A11 VOL: 0
;PCODE: $00002A12 VOL: 0
;PCODE: $00002A13 VOL: 0
; 0000 11BA                    komunikat_na_panel("Przeciazenia LEFS32_1",adr1,adr2);
;PCODE: $00002A14 VOL: 0
;PCODE: $00002A15 VOL: 0
;PCODE: $00002A16 VOL: 0
;PCODE: $00002A17 VOL: 0
;PCODE: $00002A18 VOL: 0
;PCODE: $00002A19 VOL: 0
;PCODE: $00002A1A VOL: 0
;PCODE: $00002A1B VOL: 0
; 0000 11BB                    }
; 0000 11BC 
; 0000 11BD         break;
;PCODE: $00002A1C VOL: 0
;PCODE: $00002A1D VOL: 0
; 0000 11BE 
; 0000 11BF 
; 0000 11C0         case 4:
;PCODE: $00002A1E VOL: 0
;PCODE: $00002A1F VOL: 0
;PCODE: $00002A20 VOL: 0
; 0000 11C1 
; 0000 11C2             if(sek2 > 50)
;PCODE: $00002A21 VOL: 0
;PCODE: $00002A22 VOL: 0
;PCODE: $00002A23 VOL: 0
; 0000 11C3                 {
; 0000 11C4                 cykl = 5;
;PCODE: $00002A24 VOL: 0
;PCODE: $00002A25 VOL: 0
; 0000 11C5                 }
; 0000 11C6         break;
;PCODE: $00002A26 VOL: 0
;PCODE: $00002A27 VOL: 0
; 0000 11C7 
; 0000 11C8         }
;PCODE: $00002A28 VOL: 0
; 0000 11C9 }
;PCODE: $00002A29 VOL: 0
;PCODE: $00002A2A VOL: 0
; 0000 11CA 
; 0000 11CB cykl = 0;
;PCODE: $00002A2B VOL: 0
;PCODE: $00002A2C VOL: 0
; 0000 11CC }
; 0000 11CD 
; 0000 11CE 
; 0000 11CF 
; 0000 11D0 
; 0000 11D1 
; 0000 11D2 if(step == 0 & pozycjonowanie_LEFS32_300_1 == 4)
;PCODE: $00002A2D VOL: 0
;PCODE: $00002A2E VOL: 0
;PCODE: $00002A2F VOL: 0
;PCODE: $00002A30 VOL: 0
;PCODE: $00002A31 VOL: 0
;PCODE: $00002A32 VOL: 0
;PCODE: $00002A33 VOL: 0
;PCODE: $00002A34 VOL: 0
;PCODE: $00002A35 VOL: 0
;PCODE: $00002A36 VOL: 0
; 0000 11D3     {
; 0000 11D4     pozycjonowanie_LEFS32_300_1 = 0;
;PCODE: $00002A37 VOL: 0
;PCODE: $00002A38 VOL: 0
; 0000 11D5     cykl = 0;
;PCODE: $00002A39 VOL: 0
;PCODE: $00002A3A VOL: 0
; 0000 11D6     return 1;
;PCODE: $00002A3B VOL: 0
;PCODE: $00002A3C VOL: 0
;PCODE: $00002A3D VOL: 0
; 0000 11D7     }
; 0000 11D8 if(step == 1)
;PCODE: $00002A3E VOL: 0
;PCODE: $00002A3F VOL: 0
;PCODE: $00002A40 VOL: 0
;PCODE: $00002A41 VOL: 0
; 0000 11D9     return 2;
;PCODE: $00002A42 VOL: 0
;PCODE: $00002A43 VOL: 0
;PCODE: $00002A44 VOL: 0
; 0000 11DA 
; 0000 11DB 
; 0000 11DC 
; 0000 11DD }
;PCODE: $00002A45 VOL: 0
;PCODE: $00002A46 VOL: 0
;PCODE: $00002A47 VOL: 0
;PCODE: $00002A48 VOL: 0
;
;
;int wypozycjonuj_LEFS32_300_2(int step)
; 0000 11E1 {
;PCODE: $00002A49 VOL: 0
;PCODE: $00002A4A VOL: 0
; 0000 11E2 //PORTB.0   IN0  STEROWNIK4
; 0000 11E3 //PORTB.1   IN1  STEROWNIK4
; 0000 11E4 //PORTB.2   IN2  STEROWNIK4
; 0000 11E5 //PORTB.3   IN3  STEROWNIK4
; 0000 11E6 
; 0000 11E7 //PORTB.4   SETUP  STEROWNIK4
; 0000 11E8 //PORTB.5   DRIVE  STEROWNIK4
; 0000 11E9 
; 0000 11EA //sprawdz_pin4(PORTKK,0x75)  B7 BUSY    LECCP STEROWNIK4
; 0000 11EB //sprawdz_pin7(PORTKK,0x75)  B10 INP    LECP6 STEROWNIK4
; 0000 11EC 
; 0000 11ED 
; 0000 11EE if(step == 0)
;	step -> Y+0
;PCODE: $00002A4B VOL: 0
;PCODE: $00002A4C VOL: 0
;PCODE: $00002A4D VOL: 0
; 0000 11EF {
; 0000 11F0 switch(pozycjonowanie_LEFS32_300_2)
;PCODE: $00002A4E VOL: 0
; 0000 11F1     {
; 0000 11F2     case 0:
;PCODE: $00002A4F VOL: 0
;PCODE: $00002A50 VOL: 0
; 0000 11F3             PORTB.4 = 1;      // ////A9  SETUP
;PCODE: $00002A51 VOL: 0
;PCODE: $00002A52 VOL: 0
; 0000 11F4 
; 0000 11F5             if(sprawdz_pin4(PORTKK,0x75) == 1)  //BUSY
;PCODE: $00002A53 VOL: 0
;PCODE: $00002A54 VOL: 0
;PCODE: $00002A55 VOL: 0
;PCODE: $00002A56 VOL: 0
;PCODE: $00002A57 VOL: 0
;PCODE: $00002A58 VOL: 0
;PCODE: $00002A59 VOL: 0
; 0000 11F6                 {
; 0000 11F7                 }
; 0000 11F8             else
;PCODE: $00002A5A VOL: 0
;PCODE: $00002A5B VOL: 0
; 0000 11F9                 pozycjonowanie_LEFS32_300_2 = 1;
;PCODE: $00002A5C VOL: 0
;PCODE: $00002A5D VOL: 0
; 0000 11FA 
; 0000 11FB     break;
;PCODE: $00002A5E VOL: 0
;PCODE: $00002A5F VOL: 0
; 0000 11FC 
; 0000 11FD     case 1:
;PCODE: $00002A60 VOL: 0
;PCODE: $00002A61 VOL: 0
;PCODE: $00002A62 VOL: 0
; 0000 11FE             if(sprawdz_pin4(PORTKK,0x75) == 0)
;PCODE: $00002A63 VOL: 0
;PCODE: $00002A64 VOL: 0
;PCODE: $00002A65 VOL: 0
;PCODE: $00002A66 VOL: 0
;PCODE: $00002A67 VOL: 0
;PCODE: $00002A68 VOL: 0
;PCODE: $00002A69 VOL: 0
; 0000 11FF                 {
; 0000 1200                 }
; 0000 1201             else
;PCODE: $00002A6A VOL: 0
;PCODE: $00002A6B VOL: 0
; 0000 1202                 pozycjonowanie_LEFS32_300_2 = 2;
;PCODE: $00002A6C VOL: 0
;PCODE: $00002A6D VOL: 0
; 0000 1203 
; 0000 1204              if(sprawdz_pin6(PORTMM,0x77) == 1)     //alarm
;PCODE: $00002A6E VOL: 0
;PCODE: $00002A6F VOL: 0
;PCODE: $00002A70 VOL: 0
;PCODE: $00002A71 VOL: 0
;PCODE: $00002A72 VOL: 0
;PCODE: $00002A73 VOL: 0
;PCODE: $00002A74 VOL: 0
;PCODE: $00002A75 VOL: 0
; 0000 1205                    {
; 0000 1206                    komunikat_na_panel("                                                ",adr1,adr2);
;PCODE: $00002A76 VOL: 0
;PCODE: $00002A77 VOL: 0
;PCODE: $00002A78 VOL: 0
;PCODE: $00002A79 VOL: 0
;PCODE: $00002A7A VOL: 0
;PCODE: $00002A7B VOL: 0
;PCODE: $00002A7C VOL: 0
;PCODE: $00002A7D VOL: 0
; 0000 1207                    komunikat_na_panel("Przeciazenia LEFS32_2",adr3,adr4);
;PCODE: $00002A7E VOL: 0
;PCODE: $00002A7F VOL: 0
;PCODE: $00002A80 VOL: 0
;PCODE: $00002A81 VOL: 0
;PCODE: $00002A82 VOL: 0
;PCODE: $00002A83 VOL: 0
;PCODE: $00002A84 VOL: 0
;PCODE: $00002A85 VOL: 0
; 0000 1208                    }
; 0000 1209 
; 0000 120A     break;
;PCODE: $00002A86 VOL: 0
;PCODE: $00002A87 VOL: 0
; 0000 120B 
; 0000 120C     case 2:
;PCODE: $00002A88 VOL: 0
;PCODE: $00002A89 VOL: 0
;PCODE: $00002A8A VOL: 0
; 0000 120D 
; 0000 120E             if(sprawdz_pin7(PORTKK,0x75) == 1)
;PCODE: $00002A8B VOL: 0
;PCODE: $00002A8C VOL: 0
;PCODE: $00002A8D VOL: 0
;PCODE: $00002A8E VOL: 0
;PCODE: $00002A8F VOL: 0
;PCODE: $00002A90 VOL: 0
;PCODE: $00002A91 VOL: 0
; 0000 120F                 {
; 0000 1210                 }
; 0000 1211             else
;PCODE: $00002A92 VOL: 0
;PCODE: $00002A93 VOL: 0
; 0000 1212                 pozycjonowanie_LEFS32_300_2 = 3;
;PCODE: $00002A94 VOL: 0
;PCODE: $00002A95 VOL: 0
; 0000 1213 
; 0000 1214             if(sprawdz_pin6(PORTMM,0x77) == 1)     //alarm
;PCODE: $00002A96 VOL: 0
;PCODE: $00002A97 VOL: 0
;PCODE: $00002A98 VOL: 0
;PCODE: $00002A99 VOL: 0
;PCODE: $00002A9A VOL: 0
;PCODE: $00002A9B VOL: 0
;PCODE: $00002A9C VOL: 0
;PCODE: $00002A9D VOL: 0
; 0000 1215                    {
; 0000 1216                    komunikat_na_panel("                                                ",adr1,adr2);
;PCODE: $00002A9E VOL: 0
;PCODE: $00002A9F VOL: 0
;PCODE: $00002AA0 VOL: 0
;PCODE: $00002AA1 VOL: 0
;PCODE: $00002AA2 VOL: 0
;PCODE: $00002AA3 VOL: 0
;PCODE: $00002AA4 VOL: 0
;PCODE: $00002AA5 VOL: 0
; 0000 1217                    komunikat_na_panel("Przeciazenia LEFS32_2",adr3,adr4);
;PCODE: $00002AA6 VOL: 0
;PCODE: $00002AA7 VOL: 0
;PCODE: $00002AA8 VOL: 0
;PCODE: $00002AA9 VOL: 0
;PCODE: $00002AAA VOL: 0
;PCODE: $00002AAB VOL: 0
;PCODE: $00002AAC VOL: 0
;PCODE: $00002AAD VOL: 0
; 0000 1218                    }
; 0000 1219 
; 0000 121A     break;
;PCODE: $00002AAE VOL: 0
;PCODE: $00002AAF VOL: 0
; 0000 121B 
; 0000 121C     case 3:
;PCODE: $00002AB0 VOL: 0
;PCODE: $00002AB1 VOL: 0
;PCODE: $00002AB2 VOL: 0
; 0000 121D 
; 0000 121E             if(sprawdz_pin7(PORTKK,0x75) == 0)
;PCODE: $00002AB3 VOL: 0
;PCODE: $00002AB4 VOL: 0
;PCODE: $00002AB5 VOL: 0
;PCODE: $00002AB6 VOL: 0
;PCODE: $00002AB7 VOL: 0
;PCODE: $00002AB8 VOL: 0
;PCODE: $00002AB9 VOL: 0
; 0000 121F                 {
; 0000 1220                 PORTB.4 = 0;      // ////A9  SETUP
;PCODE: $00002ABA VOL: 0
;PCODE: $00002ABB VOL: 0
; 0000 1221 
; 0000 1222                 pozycjonowanie_LEFS32_300_2 = 4;
;PCODE: $00002ABC VOL: 0
;PCODE: $00002ABD VOL: 0
; 0000 1223                 }
; 0000 1224 
; 0000 1225     break;
;PCODE: $00002ABE VOL: 0
;PCODE: $00002ABF VOL: 0
; 0000 1226 
; 0000 1227     }
;PCODE: $00002AC0 VOL: 0
; 0000 1228 }
; 0000 1229 
; 0000 122A if(step == 1)
;PCODE: $00002AC1 VOL: 0
;PCODE: $00002AC2 VOL: 0
;PCODE: $00002AC3 VOL: 0
;PCODE: $00002AC4 VOL: 0
; 0000 122B {
; 0000 122C while(cykl < 5)
;PCODE: $00002AC5 VOL: 0
;PCODE: $00002AC6 VOL: 0
;PCODE: $00002AC7 VOL: 0
;PCODE: $00002AC8 VOL: 0
; 0000 122D {
; 0000 122E     switch(cykl)
;PCODE: $00002AC9 VOL: 0
; 0000 122F         {
; 0000 1230         case 0:
;PCODE: $00002ACA VOL: 0
;PCODE: $00002ACB VOL: 0
; 0000 1231 
; 0000 1232             sek4 = 0;
;PCODE: $00002ACC VOL: 0
;PCODE: $00002ACD VOL: 0
; 0000 1233             PORTB.0 = 1;    //STEP 0
;PCODE: $00002ACE VOL: 0
;PCODE: $00002ACF VOL: 0
; 0000 1234             PORTB.1 = 1;
;PCODE: $00002AD0 VOL: 0
;PCODE: $00002AD1 VOL: 0
; 0000 1235             PORTB.2 = 1;
;PCODE: $00002AD2 VOL: 0
;PCODE: $00002AD3 VOL: 0
; 0000 1236             PORTB.3 = 1;
;PCODE: $00002AD4 VOL: 0
;PCODE: $00002AD5 VOL: 0
; 0000 1237 
; 0000 1238             cykl = 1;
;PCODE: $00002AD6 VOL: 0
;PCODE: $00002AD7 VOL: 0
; 0000 1239 
; 0000 123A 
; 0000 123B         break;
;PCODE: $00002AD8 VOL: 0
; 0000 123C 
; 0000 123D         case 1:
;PCODE: $00002AD9 VOL: 0
;PCODE: $00002ADA VOL: 0
;PCODE: $00002ADB VOL: 0
; 0000 123E 
; 0000 123F             if(sek4 > 1)
;PCODE: $00002ADC VOL: 0
;PCODE: $00002ADD VOL: 0
;PCODE: $00002ADE VOL: 0
; 0000 1240                 {
; 0000 1241                 PORTB.5 = 1;
;PCODE: $00002ADF VOL: 0
;PCODE: $00002AE0 VOL: 0
; 0000 1242                 cykl = 2;
;PCODE: $00002AE1 VOL: 0
;PCODE: $00002AE2 VOL: 0
; 0000 1243                 delay_ms(1000);
;PCODE: $00002AE3 VOL: 0
;PCODE: $00002AE4 VOL: 0
;PCODE: $00002AE5 VOL: 0
; 0000 1244                 }
; 0000 1245         break;
;PCODE: $00002AE6 VOL: 0
;PCODE: $00002AE7 VOL: 0
; 0000 1246 
; 0000 1247 
; 0000 1248         case 2:
;PCODE: $00002AE8 VOL: 0
;PCODE: $00002AE9 VOL: 0
;PCODE: $00002AEA VOL: 0
; 0000 1249 
; 0000 124A                if(sprawdz_pin4(PORTKK,0x75) == 0)
;PCODE: $00002AEB VOL: 0
;PCODE: $00002AEC VOL: 0
;PCODE: $00002AED VOL: 0
;PCODE: $00002AEE VOL: 0
;PCODE: $00002AEF VOL: 0
;PCODE: $00002AF0 VOL: 0
;PCODE: $00002AF1 VOL: 0
; 0000 124B                   {
; 0000 124C                   PORTB.5 = 0;
;PCODE: $00002AF2 VOL: 0
;PCODE: $00002AF3 VOL: 0
; 0000 124D                       //DRIVE koniec
; 0000 124E 
; 0000 124F                   PORTB.0 = 0;    //STEP 0
;PCODE: $00002AF4 VOL: 0
;PCODE: $00002AF5 VOL: 0
; 0000 1250                   PORTB.1 = 0;
;PCODE: $00002AF6 VOL: 0
;PCODE: $00002AF7 VOL: 0
; 0000 1251                   PORTB.2 = 0;
;PCODE: $00002AF8 VOL: 0
;PCODE: $00002AF9 VOL: 0
; 0000 1252                   PORTB.3 = 0;
;PCODE: $00002AFA VOL: 0
;PCODE: $00002AFB VOL: 0
; 0000 1253 
; 0000 1254 
; 0000 1255                   delay_ms(1000);
;PCODE: $00002AFC VOL: 0
;PCODE: $00002AFD VOL: 0
;PCODE: $00002AFE VOL: 0
; 0000 1256                   cykl = 3;
;PCODE: $00002AFF VOL: 0
;PCODE: $00002B00 VOL: 0
; 0000 1257                   }
; 0000 1258 
; 0000 1259         break;
;PCODE: $00002B01 VOL: 0
;PCODE: $00002B02 VOL: 0
; 0000 125A 
; 0000 125B         case 3:
;PCODE: $00002B03 VOL: 0
;PCODE: $00002B04 VOL: 0
;PCODE: $00002B05 VOL: 0
; 0000 125C 
; 0000 125D                if(sprawdz_pin7(PORTKK,0x75) == 0)
;PCODE: $00002B06 VOL: 0
;PCODE: $00002B07 VOL: 0
;PCODE: $00002B08 VOL: 0
;PCODE: $00002B09 VOL: 0
;PCODE: $00002B0A VOL: 0
;PCODE: $00002B0B VOL: 0
;PCODE: $00002B0C VOL: 0
; 0000 125E                   {
; 0000 125F                   sek4 = 0;
;PCODE: $00002B0D VOL: 0
;PCODE: $00002B0E VOL: 0
; 0000 1260                   cykl = 4;
;PCODE: $00002B0F VOL: 0
;PCODE: $00002B10 VOL: 0
; 0000 1261                   }
; 0000 1262                if(sprawdz_pin6(PORTMM,0x77) == 1)     //alarm
;PCODE: $00002B11 VOL: 0
;PCODE: $00002B12 VOL: 0
;PCODE: $00002B13 VOL: 0
;PCODE: $00002B14 VOL: 0
;PCODE: $00002B15 VOL: 0
;PCODE: $00002B16 VOL: 0
;PCODE: $00002B17 VOL: 0
;PCODE: $00002B18 VOL: 0
; 0000 1263                    {
; 0000 1264                    komunikat_na_panel("                                                ",adr1,adr2);
;PCODE: $00002B19 VOL: 0
;PCODE: $00002B1A VOL: 0
;PCODE: $00002B1B VOL: 0
;PCODE: $00002B1C VOL: 0
;PCODE: $00002B1D VOL: 0
;PCODE: $00002B1E VOL: 0
;PCODE: $00002B1F VOL: 0
;PCODE: $00002B20 VOL: 0
; 0000 1265                    komunikat_na_panel("Przeciazenia LEFS32_2",adr3,adr4);
;PCODE: $00002B21 VOL: 0
;PCODE: $00002B22 VOL: 0
;PCODE: $00002B23 VOL: 0
;PCODE: $00002B24 VOL: 0
;PCODE: $00002B25 VOL: 0
;PCODE: $00002B26 VOL: 0
;PCODE: $00002B27 VOL: 0
;PCODE: $00002B28 VOL: 0
; 0000 1266                    }
; 0000 1267 
; 0000 1268 
; 0000 1269         break;
;PCODE: $00002B29 VOL: 0
;PCODE: $00002B2A VOL: 0
; 0000 126A 
; 0000 126B 
; 0000 126C         case 4:
;PCODE: $00002B2B VOL: 0
;PCODE: $00002B2C VOL: 0
;PCODE: $00002B2D VOL: 0
; 0000 126D 
; 0000 126E             if(sek4 > 50)
;PCODE: $00002B2E VOL: 0
;PCODE: $00002B2F VOL: 0
;PCODE: $00002B30 VOL: 0
; 0000 126F                 cykl = 5;
;PCODE: $00002B31 VOL: 0
;PCODE: $00002B32 VOL: 0
; 0000 1270         break;
;PCODE: $00002B33 VOL: 0
;PCODE: $00002B34 VOL: 0
; 0000 1271 
; 0000 1272         }
;PCODE: $00002B35 VOL: 0
; 0000 1273 }
;PCODE: $00002B36 VOL: 0
;PCODE: $00002B37 VOL: 0
; 0000 1274 
; 0000 1275 cykl = 0;
;PCODE: $00002B38 VOL: 0
;PCODE: $00002B39 VOL: 0
; 0000 1276 }
; 0000 1277 
; 0000 1278 if(step == 0 & pozycjonowanie_LEFS32_300_2 == 4)
;PCODE: $00002B3A VOL: 0
;PCODE: $00002B3B VOL: 0
;PCODE: $00002B3C VOL: 0
;PCODE: $00002B3D VOL: 0
;PCODE: $00002B3E VOL: 0
;PCODE: $00002B3F VOL: 0
;PCODE: $00002B40 VOL: 0
;PCODE: $00002B41 VOL: 0
;PCODE: $00002B42 VOL: 0
;PCODE: $00002B43 VOL: 0
; 0000 1279     {
; 0000 127A     pozycjonowanie_LEFS32_300_2 = 0;
;PCODE: $00002B44 VOL: 0
;PCODE: $00002B45 VOL: 0
; 0000 127B     cykl = 0;
;PCODE: $00002B46 VOL: 0
;PCODE: $00002B47 VOL: 0
; 0000 127C     return 1;
;PCODE: $00002B48 VOL: 0
;PCODE: $00002B49 VOL: 0
;PCODE: $00002B4A VOL: 0
; 0000 127D     }
; 0000 127E if(step == 1)
;PCODE: $00002B4B VOL: 0
;PCODE: $00002B4C VOL: 0
;PCODE: $00002B4D VOL: 0
;PCODE: $00002B4E VOL: 0
; 0000 127F     return 2;
;PCODE: $00002B4F VOL: 0
;PCODE: $00002B50 VOL: 0
;PCODE: $00002B51 VOL: 0
; 0000 1280 
; 0000 1281 }
;PCODE: $00002B52 VOL: 0
;PCODE: $00002B53 VOL: 0
;PCODE: $00002B54 VOL: 0
;PCODE: $00002B55 VOL: 0
;
;
;
;
;
;
;int wypozycjonuj_LEFS40_1200_2_i_300_2()
; 0000 1289 {
;PCODE: $00002B56 VOL: 0
;PCODE: $00002B57 VOL: 0
; 0000 128A //PORTC.0   IN0  STEROWNIK2
; 0000 128B //PORTC.1   IN1  STEROWNIK2
; 0000 128C //PORTC.2   IN2  STEROWNIK2
; 0000 128D //PORTC.3   IN3  STEROWNIK2
; 0000 128E //PORTC.4   IN4  STEROWNIK2
; 0000 128F //PORTC.5   IN5  STEROWNIK2
; 0000 1290 //PORTC.6   IN6  STEROWNIK2
; 0000 1291 //PORTC.7   IN7  STEROWNIK2
; 0000 1292 
; 0000 1293 //PORTD.5  SETUP   STEROWNIK2
; 0000 1294 //PORTD.6  DRIVE   STEROWNIK2
; 0000 1295 
; 0000 1296 //sprawdz_pin0(PORTLL,0x71)  BUSY   STEROWNIK2
; 0000 1297 //sprawdz_pin3(PORTLL,0x71)  INP    STEROWNIK2
; 0000 1298 
; 0000 1299 PORTD.5 = 1;    //SETUP
;PCODE: $00002B58 VOL: 0
;PCODE: $00002B59 VOL: 0
; 0000 129A 
; 0000 129B delay_ms(50);
;PCODE: $00002B5A VOL: 0
;PCODE: $00002B5B VOL: 0
;PCODE: $00002B5C VOL: 0
; 0000 129C 
; 0000 129D while(sprawdz_pin0(PORTLL,0x71) == 1)  //kraze tu poki nie wywali busy
;PCODE: $00002B5D VOL: 0
;PCODE: $00002B5E VOL: 0
;PCODE: $00002B5F VOL: 0
;PCODE: $00002B60 VOL: 0
;PCODE: $00002B61 VOL: 0
;PCODE: $00002B62 VOL: 0
;PCODE: $00002B63 VOL: 0
;PCODE: $00002B64 VOL: 0
; 0000 129E         {
; 0000 129F 
; 0000 12A0                    if(sprawdz_pin5(PORTLL,0x71) == 1)     //alarm
;PCODE: $00002B65 VOL: 0
;PCODE: $00002B66 VOL: 0
;PCODE: $00002B67 VOL: 0
;PCODE: $00002B68 VOL: 0
;PCODE: $00002B69 VOL: 0
;PCODE: $00002B6A VOL: 0
;PCODE: $00002B6B VOL: 0
; 0000 12A1                    {
; 0000 12A2                    komunikat_na_panel("                                                ",adr1,adr2);
;PCODE: $00002B6C VOL: 0
;PCODE: $00002B6D VOL: 0
;PCODE: $00002B6E VOL: 0
;PCODE: $00002B6F VOL: 0
;PCODE: $00002B70 VOL: 0
;PCODE: $00002B71 VOL: 0
;PCODE: $00002B72 VOL: 0
;PCODE: $00002B73 VOL: 0
; 0000 12A3                    komunikat_na_panel("Przeciazenia LEFS_XY_2",adr3,adr4);
;PCODE: $00002B74 VOL: 0
;PCODE: $00002B75 VOL: 0
;PCODE: $00002B76 VOL: 0
;PCODE: $00002B77 VOL: 0
;PCODE: $00002B78 VOL: 0
;PCODE: $00002B79 VOL: 0
;PCODE: $00002B7A VOL: 0
;PCODE: $00002B7B VOL: 0
; 0000 12A4                    }
; 0000 12A5 
; 0000 12A6         }
;PCODE: $00002B7C VOL: 0
;PCODE: $00002B7D VOL: 0
;PCODE: $00002B7E VOL: 0
; 0000 12A7 
; 0000 12A8 delay_ms(50);
;PCODE: $00002B7F VOL: 0
;PCODE: $00002B80 VOL: 0
;PCODE: $00002B81 VOL: 0
; 0000 12A9 
; 0000 12AA while(sprawdz_pin0(PORTLL,0x71) == 0)  //wywala busy
;PCODE: $00002B82 VOL: 0
;PCODE: $00002B83 VOL: 0
;PCODE: $00002B84 VOL: 0
;PCODE: $00002B85 VOL: 0
;PCODE: $00002B86 VOL: 0
;PCODE: $00002B87 VOL: 0
;PCODE: $00002B88 VOL: 0
;PCODE: $00002B89 VOL: 0
; 0000 12AB         {
; 0000 12AC 
; 0000 12AD                    if(sprawdz_pin5(PORTLL,0x71) == 1)     //alarm
;PCODE: $00002B8A VOL: 0
;PCODE: $00002B8B VOL: 0
;PCODE: $00002B8C VOL: 0
;PCODE: $00002B8D VOL: 0
;PCODE: $00002B8E VOL: 0
;PCODE: $00002B8F VOL: 0
;PCODE: $00002B90 VOL: 0
; 0000 12AE                    {
; 0000 12AF                    komunikat_na_panel("                                                ",adr1,adr2);
;PCODE: $00002B91 VOL: 0
;PCODE: $00002B92 VOL: 0
;PCODE: $00002B93 VOL: 0
;PCODE: $00002B94 VOL: 0
;PCODE: $00002B95 VOL: 0
;PCODE: $00002B96 VOL: 0
;PCODE: $00002B97 VOL: 0
;PCODE: $00002B98 VOL: 0
; 0000 12B0                    komunikat_na_panel("Przeciazenia LEFS_XY_2",adr3,adr4);
;PCODE: $00002B99 VOL: 0
;PCODE: $00002B9A VOL: 0
;PCODE: $00002B9B VOL: 0
;PCODE: $00002B9C VOL: 0
;PCODE: $00002B9D VOL: 0
;PCODE: $00002B9E VOL: 0
;PCODE: $00002B9F VOL: 0
;PCODE: $00002BA0 VOL: 0
; 0000 12B1                    }
; 0000 12B2         }
;PCODE: $00002BA1 VOL: 0
;PCODE: $00002BA2 VOL: 0
;PCODE: $00002BA3 VOL: 0
; 0000 12B3 
; 0000 12B4 delay_ms(50);
;PCODE: $00002BA4 VOL: 0
;PCODE: $00002BA5 VOL: 0
;PCODE: $00002BA6 VOL: 0
; 0000 12B5 
; 0000 12B6 while(sprawdz_pin3(PORTLL,0x71) == 1)  //kraze tu dopoki nie wywali INP
;PCODE: $00002BA7 VOL: 0
;PCODE: $00002BA8 VOL: 0
;PCODE: $00002BA9 VOL: 0
;PCODE: $00002BAA VOL: 0
;PCODE: $00002BAB VOL: 0
;PCODE: $00002BAC VOL: 0
;PCODE: $00002BAD VOL: 0
;PCODE: $00002BAE VOL: 0
; 0000 12B7         {
; 0000 12B8         }
;PCODE: $00002BAF VOL: 0
;PCODE: $00002BB0 VOL: 0
; 0000 12B9 
; 0000 12BA delay_ms(50);
;PCODE: $00002BB1 VOL: 0
;PCODE: $00002BB2 VOL: 0
;PCODE: $00002BB3 VOL: 0
; 0000 12BB 
; 0000 12BC if(sprawdz_pin3(PORTLL,0x71) == 0)  //wywala INP
;PCODE: $00002BB4 VOL: 0
;PCODE: $00002BB5 VOL: 0
;PCODE: $00002BB6 VOL: 0
;PCODE: $00002BB7 VOL: 0
;PCODE: $00002BB8 VOL: 0
;PCODE: $00002BB9 VOL: 0
;PCODE: $00002BBA VOL: 0
; 0000 12BD         {
; 0000 12BE         PORTD.5 = 0;
;PCODE: $00002BBB VOL: 0
;PCODE: $00002BBC VOL: 0
; 0000 12BF         putchar(90);  //5A
;PCODE: $00002BBD VOL: 0
;PCODE: $00002BBE VOL: 0
;PCODE: $00002BBF VOL: 0
; 0000 12C0         putchar(165); //A5
;PCODE: $00002BC0 VOL: 0
;PCODE: $00002BC1 VOL: 0
;PCODE: $00002BC2 VOL: 0
; 0000 12C1         putchar(3);//03  //znak dzwiekowy ze jestem
;PCODE: $00002BC3 VOL: 0
;PCODE: $00002BC4 VOL: 0
;PCODE: $00002BC5 VOL: 0
; 0000 12C2         putchar(128);  //80
;PCODE: $00002BC6 VOL: 0
;PCODE: $00002BC7 VOL: 0
;PCODE: $00002BC8 VOL: 0
; 0000 12C3         putchar(2);    //02
;PCODE: $00002BC9 VOL: 0
;PCODE: $00002BCA VOL: 0
;PCODE: $00002BCB VOL: 0
; 0000 12C4         putchar(16);   //10
;PCODE: $00002BCC VOL: 0
;PCODE: $00002BCD VOL: 0
;PCODE: $00002BCE VOL: 0
; 0000 12C5         }
; 0000 12C6 else
;PCODE: $00002BCF VOL: 0
;PCODE: $00002BD0 VOL: 0
; 0000 12C7     {
; 0000 12C8         putchar(90);  //5A
;PCODE: $00002BD1 VOL: 0
;PCODE: $00002BD2 VOL: 0
;PCODE: $00002BD3 VOL: 0
; 0000 12C9         putchar(165); //A5
;PCODE: $00002BD4 VOL: 0
;PCODE: $00002BD5 VOL: 0
;PCODE: $00002BD6 VOL: 0
; 0000 12CA         putchar(3);//03  //znak dzwiekowy ze jestem
;PCODE: $00002BD7 VOL: 0
;PCODE: $00002BD8 VOL: 0
;PCODE: $00002BD9 VOL: 0
; 0000 12CB         putchar(128);  //80
;PCODE: $00002BDA VOL: 0
;PCODE: $00002BDB VOL: 0
;PCODE: $00002BDC VOL: 0
; 0000 12CC         putchar(2);    //02
;PCODE: $00002BDD VOL: 0
;PCODE: $00002BDE VOL: 0
;PCODE: $00002BDF VOL: 0
; 0000 12CD         putchar(16);   //10
;PCODE: $00002BE0 VOL: 0
;PCODE: $00002BE1 VOL: 0
;PCODE: $00002BE2 VOL: 0
; 0000 12CE 
; 0000 12CF         delay_ms(1000);     //wywalenie bledu
;PCODE: $00002BE3 VOL: 0
;PCODE: $00002BE4 VOL: 0
;PCODE: $00002BE5 VOL: 0
; 0000 12D0         delay_ms(1000);
;PCODE: $00002BE6 VOL: 0
;PCODE: $00002BE7 VOL: 0
;PCODE: $00002BE8 VOL: 0
; 0000 12D1 
; 0000 12D2         putchar(90);  //5A
;PCODE: $00002BE9 VOL: 0
;PCODE: $00002BEA VOL: 0
;PCODE: $00002BEB VOL: 0
; 0000 12D3         putchar(165); //A5
;PCODE: $00002BEC VOL: 0
;PCODE: $00002BED VOL: 0
;PCODE: $00002BEE VOL: 0
; 0000 12D4         putchar(3);//03  //znak dzwiekowy ze jestem
;PCODE: $00002BEF VOL: 0
;PCODE: $00002BF0 VOL: 0
;PCODE: $00002BF1 VOL: 0
; 0000 12D5         putchar(128);  //80
;PCODE: $00002BF2 VOL: 0
;PCODE: $00002BF3 VOL: 0
;PCODE: $00002BF4 VOL: 0
; 0000 12D6         putchar(2);    //02
;PCODE: $00002BF5 VOL: 0
;PCODE: $00002BF6 VOL: 0
;PCODE: $00002BF7 VOL: 0
; 0000 12D7         putchar(16);   //10
;PCODE: $00002BF8 VOL: 0
;PCODE: $00002BF9 VOL: 0
;PCODE: $00002BFA VOL: 0
; 0000 12D8 
; 0000 12D9     }
;PCODE: $00002BFB VOL: 0
; 0000 12DA 
; 0000 12DB delay_ms(1000);
;PCODE: $00002BFC VOL: 0
;PCODE: $00002BFD VOL: 0
;PCODE: $00002BFE VOL: 0
; 0000 12DC 
; 0000 12DD while(cykl < 5)
;PCODE: $00002BFF VOL: 0
;PCODE: $00002C00 VOL: 0
;PCODE: $00002C01 VOL: 0
;PCODE: $00002C02 VOL: 0
; 0000 12DE {
; 0000 12DF     switch(cykl)
;PCODE: $00002C03 VOL: 0
; 0000 12E0         {
; 0000 12E1         case 0:
;PCODE: $00002C04 VOL: 0
;PCODE: $00002C05 VOL: 0
; 0000 12E2 
; 0000 12E3             PORTC = 0xFF;   //STEP 0
;PCODE: $00002C06 VOL: 0
;PCODE: $00002C07 VOL: 0
; 0000 12E4             cykl = 1;
;PCODE: $00002C08 VOL: 0
;PCODE: $00002C09 VOL: 0
; 0000 12E5 
; 0000 12E6         break;
;PCODE: $00002C0A VOL: 0
; 0000 12E7 
; 0000 12E8         case 1:
;PCODE: $00002C0B VOL: 0
;PCODE: $00002C0C VOL: 0
;PCODE: $00002C0D VOL: 0
; 0000 12E9 
; 0000 12EA             if(sek3 > 1)
;PCODE: $00002C0E VOL: 0
;PCODE: $00002C0F VOL: 0
;PCODE: $00002C10 VOL: 0
; 0000 12EB                 {
; 0000 12EC                 PORTD.6 = 1;  //DRIVE
;PCODE: $00002C11 VOL: 0
;PCODE: $00002C12 VOL: 0
; 0000 12ED                 cykl = 2;
;PCODE: $00002C13 VOL: 0
;PCODE: $00002C14 VOL: 0
; 0000 12EE                 }
; 0000 12EF         break;
;PCODE: $00002C15 VOL: 0
;PCODE: $00002C16 VOL: 0
; 0000 12F0 
; 0000 12F1 
; 0000 12F2         case 2:
;PCODE: $00002C17 VOL: 0
;PCODE: $00002C18 VOL: 0
;PCODE: $00002C19 VOL: 0
; 0000 12F3 
; 0000 12F4                if(sprawdz_pin0(PORTLL,0x71) == 0)
;PCODE: $00002C1A VOL: 0
;PCODE: $00002C1B VOL: 0
;PCODE: $00002C1C VOL: 0
;PCODE: $00002C1D VOL: 0
;PCODE: $00002C1E VOL: 0
;PCODE: $00002C1F VOL: 0
;PCODE: $00002C20 VOL: 0
; 0000 12F5                   {
; 0000 12F6                   PORTD.6 = 0;
;PCODE: $00002C21 VOL: 0
;PCODE: $00002C22 VOL: 0
; 0000 12F7                   PORTC = 0x00;        //STEP 1 koniec
;PCODE: $00002C23 VOL: 0
;PCODE: $00002C24 VOL: 0
; 0000 12F8                   cykl = 3;
;PCODE: $00002C25 VOL: 0
;PCODE: $00002C26 VOL: 0
; 0000 12F9                   }
; 0000 12FA 
; 0000 12FB         break;
;PCODE: $00002C27 VOL: 0
;PCODE: $00002C28 VOL: 0
; 0000 12FC 
; 0000 12FD         case 3:
;PCODE: $00002C29 VOL: 0
;PCODE: $00002C2A VOL: 0
;PCODE: $00002C2B VOL: 0
; 0000 12FE 
; 0000 12FF                if(sprawdz_pin3(PORTLL,0x71) == 0)
;PCODE: $00002C2C VOL: 0
;PCODE: $00002C2D VOL: 0
;PCODE: $00002C2E VOL: 0
;PCODE: $00002C2F VOL: 0
;PCODE: $00002C30 VOL: 0
;PCODE: $00002C31 VOL: 0
;PCODE: $00002C32 VOL: 0
; 0000 1300                   {
; 0000 1301                   sek3 = 0;
;PCODE: $00002C33 VOL: 0
;PCODE: $00002C34 VOL: 0
; 0000 1302                   cykl = 4;
;PCODE: $00002C35 VOL: 0
;PCODE: $00002C36 VOL: 0
; 0000 1303                   }
; 0000 1304 
; 0000 1305                    if(sprawdz_pin5(PORTLL,0x71) == 1)     //alarm
;PCODE: $00002C37 VOL: 0
;PCODE: $00002C38 VOL: 0
;PCODE: $00002C39 VOL: 0
;PCODE: $00002C3A VOL: 0
;PCODE: $00002C3B VOL: 0
;PCODE: $00002C3C VOL: 0
;PCODE: $00002C3D VOL: 0
;PCODE: $00002C3E VOL: 0
; 0000 1306                    {
; 0000 1307                    komunikat_na_panel("                                                ",adr1,adr2);
;PCODE: $00002C3F VOL: 0
;PCODE: $00002C40 VOL: 0
;PCODE: $00002C41 VOL: 0
;PCODE: $00002C42 VOL: 0
;PCODE: $00002C43 VOL: 0
;PCODE: $00002C44 VOL: 0
;PCODE: $00002C45 VOL: 0
;PCODE: $00002C46 VOL: 0
; 0000 1308                    komunikat_na_panel("Przeciazenia LEFS_XY_2",adr3,adr4);
;PCODE: $00002C47 VOL: 0
;PCODE: $00002C48 VOL: 0
;PCODE: $00002C49 VOL: 0
;PCODE: $00002C4A VOL: 0
;PCODE: $00002C4B VOL: 0
;PCODE: $00002C4C VOL: 0
;PCODE: $00002C4D VOL: 0
;PCODE: $00002C4E VOL: 0
; 0000 1309                    }
; 0000 130A 
; 0000 130B 
; 0000 130C         break;
;PCODE: $00002C4F VOL: 0
;PCODE: $00002C50 VOL: 0
; 0000 130D 
; 0000 130E 
; 0000 130F         case 4:
;PCODE: $00002C51 VOL: 0
;PCODE: $00002C52 VOL: 0
;PCODE: $00002C53 VOL: 0
; 0000 1310 
; 0000 1311             if(sek3 > 50)
;PCODE: $00002C54 VOL: 0
;PCODE: $00002C55 VOL: 0
;PCODE: $00002C56 VOL: 0
; 0000 1312                 cykl = 5;
;PCODE: $00002C57 VOL: 0
;PCODE: $00002C58 VOL: 0
; 0000 1313         break;
;PCODE: $00002C59 VOL: 0
;PCODE: $00002C5A VOL: 0
; 0000 1314 
; 0000 1315         }
;PCODE: $00002C5B VOL: 0
; 0000 1316 }
;PCODE: $00002C5C VOL: 0
;PCODE: $00002C5D VOL: 0
; 0000 1317 
; 0000 1318 cykl = 0;
;PCODE: $00002C5E VOL: 0
;PCODE: $00002C5F VOL: 0
; 0000 1319 return 1;
;PCODE: $00002C60 VOL: 0
;PCODE: $00002C61 VOL: 0
; 0000 131A }
;PCODE: $00002C62 VOL: 0
;
;
;
;
;int wypozycjonuj_LEFS40_1200_1_i_300_1()
; 0000 1320 {
;PCODE: $00002C63 VOL: 0
;PCODE: $00002C64 VOL: 0
; 0000 1321 //chyba nie wpiete A7
; 0000 1322 
; 0000 1323 //PORTA.0   IN0  STEROWNIK1
; 0000 1324 //PORTA.1   IN1  STEROWNIK1
; 0000 1325 //PORTA.2   IN2  STEROWNIK1
; 0000 1326 //PORTA.3   IN3  STEROWNIK1
; 0000 1327 //PORTA.4   IN4  STEROWNIK1
; 0000 1328 //PORTA.5   IN5  STEROWNIK1
; 0000 1329 //PORTA.6   IN6  STEROWNIK1
; 0000 132A //PORTA.7   IN7  STEROWNIK1
; 0000 132B 
; 0000 132C //PORTD.2  SETUP   STEROWNIK1
; 0000 132D //PORTD.3  DRIVE   STEROWNIK1
; 0000 132E 
; 0000 132F //sprawdz_pin0(PORTJJ,0x79)  BUSY   STEROWNIK1
; 0000 1330 //sprawdz_pin3(PORTJJ,0x79)  INP    STEROWNIK1
; 0000 1331 
; 0000 1332 PORTD.2 = 1;    //SETUP
;PCODE: $00002C65 VOL: 0
;PCODE: $00002C66 VOL: 0
; 0000 1333 
; 0000 1334 delay_ms(50);
;PCODE: $00002C67 VOL: 0
;PCODE: $00002C68 VOL: 0
;PCODE: $00002C69 VOL: 0
; 0000 1335 
; 0000 1336 while(sprawdz_pin0(PORTJJ,0x79) == 1)  //kraze tu poki nie wywali busy
;PCODE: $00002C6A VOL: 0
;PCODE: $00002C6B VOL: 0
;PCODE: $00002C6C VOL: 0
;PCODE: $00002C6D VOL: 0
;PCODE: $00002C6E VOL: 0
;PCODE: $00002C6F VOL: 0
;PCODE: $00002C70 VOL: 0
;PCODE: $00002C71 VOL: 0
; 0000 1337         {
; 0000 1338             if(sprawdz_pin5(PORTJJ,0x79) == 1)     //alarm
;PCODE: $00002C72 VOL: 0
;PCODE: $00002C73 VOL: 0
;PCODE: $00002C74 VOL: 0
;PCODE: $00002C75 VOL: 0
;PCODE: $00002C76 VOL: 0
;PCODE: $00002C77 VOL: 0
;PCODE: $00002C78 VOL: 0
; 0000 1339                    {
; 0000 133A                    komunikat_na_panel("                                                ",adr1,adr2);
;PCODE: $00002C79 VOL: 0
;PCODE: $00002C7A VOL: 0
;PCODE: $00002C7B VOL: 0
;PCODE: $00002C7C VOL: 0
;PCODE: $00002C7D VOL: 0
;PCODE: $00002C7E VOL: 0
;PCODE: $00002C7F VOL: 0
;PCODE: $00002C80 VOL: 0
; 0000 133B                    komunikat_na_panel("Przeciazenia LEFS_XY_1",adr1,adr2);
;PCODE: $00002C81 VOL: 0
;PCODE: $00002C82 VOL: 0
;PCODE: $00002C83 VOL: 0
;PCODE: $00002C84 VOL: 0
;PCODE: $00002C85 VOL: 0
;PCODE: $00002C86 VOL: 0
;PCODE: $00002C87 VOL: 0
;PCODE: $00002C88 VOL: 0
; 0000 133C                    }
; 0000 133D         }
;PCODE: $00002C89 VOL: 0
;PCODE: $00002C8A VOL: 0
;PCODE: $00002C8B VOL: 0
; 0000 133E 
; 0000 133F delay_ms(50);
;PCODE: $00002C8C VOL: 0
;PCODE: $00002C8D VOL: 0
;PCODE: $00002C8E VOL: 0
; 0000 1340 
; 0000 1341 while(sprawdz_pin0(PORTJJ,0x79) == 0)  //wywala busy
;PCODE: $00002C8F VOL: 0
;PCODE: $00002C90 VOL: 0
;PCODE: $00002C91 VOL: 0
;PCODE: $00002C92 VOL: 0
;PCODE: $00002C93 VOL: 0
;PCODE: $00002C94 VOL: 0
;PCODE: $00002C95 VOL: 0
;PCODE: $00002C96 VOL: 0
; 0000 1342         {
; 0000 1343             if(sprawdz_pin5(PORTJJ,0x79) == 1)     //alarm
;PCODE: $00002C97 VOL: 0
;PCODE: $00002C98 VOL: 0
;PCODE: $00002C99 VOL: 0
;PCODE: $00002C9A VOL: 0
;PCODE: $00002C9B VOL: 0
;PCODE: $00002C9C VOL: 0
;PCODE: $00002C9D VOL: 0
; 0000 1344                    {
; 0000 1345                    komunikat_na_panel("                                                ",adr1,adr2);
;PCODE: $00002C9E VOL: 0
;PCODE: $00002C9F VOL: 0
;PCODE: $00002CA0 VOL: 0
;PCODE: $00002CA1 VOL: 0
;PCODE: $00002CA2 VOL: 0
;PCODE: $00002CA3 VOL: 0
;PCODE: $00002CA4 VOL: 0
;PCODE: $00002CA5 VOL: 0
; 0000 1346                    komunikat_na_panel("Przeciazenia LEFS_XY_1",adr1,adr2);
;PCODE: $00002CA6 VOL: 0
;PCODE: $00002CA7 VOL: 0
;PCODE: $00002CA8 VOL: 0
;PCODE: $00002CA9 VOL: 0
;PCODE: $00002CAA VOL: 0
;PCODE: $00002CAB VOL: 0
;PCODE: $00002CAC VOL: 0
;PCODE: $00002CAD VOL: 0
; 0000 1347                    }
; 0000 1348 
; 0000 1349         }
;PCODE: $00002CAE VOL: 0
;PCODE: $00002CAF VOL: 0
;PCODE: $00002CB0 VOL: 0
; 0000 134A 
; 0000 134B delay_ms(50);
;PCODE: $00002CB1 VOL: 0
;PCODE: $00002CB2 VOL: 0
;PCODE: $00002CB3 VOL: 0
; 0000 134C 
; 0000 134D while(sprawdz_pin3(PORTJJ,0x79) == 1)  //kraze tu dopoki nie wywali INP
;PCODE: $00002CB4 VOL: 0
;PCODE: $00002CB5 VOL: 0
;PCODE: $00002CB6 VOL: 0
;PCODE: $00002CB7 VOL: 0
;PCODE: $00002CB8 VOL: 0
;PCODE: $00002CB9 VOL: 0
;PCODE: $00002CBA VOL: 0
;PCODE: $00002CBB VOL: 0
; 0000 134E         {
; 0000 134F         }
;PCODE: $00002CBC VOL: 0
;PCODE: $00002CBD VOL: 0
; 0000 1350 
; 0000 1351 delay_ms(50);
;PCODE: $00002CBE VOL: 0
;PCODE: $00002CBF VOL: 0
;PCODE: $00002CC0 VOL: 0
; 0000 1352 
; 0000 1353 if(sprawdz_pin3(PORTJJ,0x79) == 0)  //wywala INP
;PCODE: $00002CC1 VOL: 0
;PCODE: $00002CC2 VOL: 0
;PCODE: $00002CC3 VOL: 0
;PCODE: $00002CC4 VOL: 0
;PCODE: $00002CC5 VOL: 0
;PCODE: $00002CC6 VOL: 0
;PCODE: $00002CC7 VOL: 0
; 0000 1354         {
; 0000 1355         PORTD.2 = 0;
;PCODE: $00002CC8 VOL: 0
;PCODE: $00002CC9 VOL: 0
; 0000 1356         putchar(90);  //5A
;PCODE: $00002CCA VOL: 0
;PCODE: $00002CCB VOL: 0
;PCODE: $00002CCC VOL: 0
; 0000 1357         putchar(165); //A5
;PCODE: $00002CCD VOL: 0
;PCODE: $00002CCE VOL: 0
;PCODE: $00002CCF VOL: 0
; 0000 1358         putchar(3);//03  //znak dzwiekowy ze jestem
;PCODE: $00002CD0 VOL: 0
;PCODE: $00002CD1 VOL: 0
;PCODE: $00002CD2 VOL: 0
; 0000 1359         putchar(128);  //80
;PCODE: $00002CD3 VOL: 0
;PCODE: $00002CD4 VOL: 0
;PCODE: $00002CD5 VOL: 0
; 0000 135A         putchar(2);    //02
;PCODE: $00002CD6 VOL: 0
;PCODE: $00002CD7 VOL: 0
;PCODE: $00002CD8 VOL: 0
; 0000 135B         putchar(16);   //10
;PCODE: $00002CD9 VOL: 0
;PCODE: $00002CDA VOL: 0
;PCODE: $00002CDB VOL: 0
; 0000 135C         }
; 0000 135D else
;PCODE: $00002CDC VOL: 0
;PCODE: $00002CDD VOL: 0
; 0000 135E     {
; 0000 135F         putchar(90);  //5A
;PCODE: $00002CDE VOL: 0
;PCODE: $00002CDF VOL: 0
;PCODE: $00002CE0 VOL: 0
; 0000 1360         putchar(165); //A5
;PCODE: $00002CE1 VOL: 0
;PCODE: $00002CE2 VOL: 0
;PCODE: $00002CE3 VOL: 0
; 0000 1361         putchar(3);//03  //znak dzwiekowy ze jestem
;PCODE: $00002CE4 VOL: 0
;PCODE: $00002CE5 VOL: 0
;PCODE: $00002CE6 VOL: 0
; 0000 1362         putchar(128);  //80
;PCODE: $00002CE7 VOL: 0
;PCODE: $00002CE8 VOL: 0
;PCODE: $00002CE9 VOL: 0
; 0000 1363         putchar(2);    //02
;PCODE: $00002CEA VOL: 0
;PCODE: $00002CEB VOL: 0
;PCODE: $00002CEC VOL: 0
; 0000 1364         putchar(16);   //10
;PCODE: $00002CED VOL: 0
;PCODE: $00002CEE VOL: 0
;PCODE: $00002CEF VOL: 0
; 0000 1365 
; 0000 1366         delay_ms(1000);     //wywalenie bledu
;PCODE: $00002CF0 VOL: 0
;PCODE: $00002CF1 VOL: 0
;PCODE: $00002CF2 VOL: 0
; 0000 1367         delay_ms(1000);
;PCODE: $00002CF3 VOL: 0
;PCODE: $00002CF4 VOL: 0
;PCODE: $00002CF5 VOL: 0
; 0000 1368 
; 0000 1369         putchar(90);  //5A
;PCODE: $00002CF6 VOL: 0
;PCODE: $00002CF7 VOL: 0
;PCODE: $00002CF8 VOL: 0
; 0000 136A         putchar(165); //A5
;PCODE: $00002CF9 VOL: 0
;PCODE: $00002CFA VOL: 0
;PCODE: $00002CFB VOL: 0
; 0000 136B         putchar(3);//03  //znak dzwiekowy ze jestem
;PCODE: $00002CFC VOL: 0
;PCODE: $00002CFD VOL: 0
;PCODE: $00002CFE VOL: 0
; 0000 136C         putchar(128);  //80
;PCODE: $00002CFF VOL: 0
;PCODE: $00002D00 VOL: 0
;PCODE: $00002D01 VOL: 0
; 0000 136D         putchar(2);    //02
;PCODE: $00002D02 VOL: 0
;PCODE: $00002D03 VOL: 0
;PCODE: $00002D04 VOL: 0
; 0000 136E         putchar(16);   //10
;PCODE: $00002D05 VOL: 0
;PCODE: $00002D06 VOL: 0
;PCODE: $00002D07 VOL: 0
; 0000 136F 
; 0000 1370     }
;PCODE: $00002D08 VOL: 0
; 0000 1371 
; 0000 1372 delay_ms(1000);
;PCODE: $00002D09 VOL: 0
;PCODE: $00002D0A VOL: 0
;PCODE: $00002D0B VOL: 0
; 0000 1373 
; 0000 1374 while(cykl < 5)
;PCODE: $00002D0C VOL: 0
;PCODE: $00002D0D VOL: 0
;PCODE: $00002D0E VOL: 0
;PCODE: $00002D0F VOL: 0
; 0000 1375 {
; 0000 1376     switch(cykl)
;PCODE: $00002D10 VOL: 0
; 0000 1377         {
; 0000 1378         case 0:
;PCODE: $00002D11 VOL: 0
;PCODE: $00002D12 VOL: 0
; 0000 1379 
; 0000 137A             PORTA = 0xFF;   //STEP 0
;PCODE: $00002D13 VOL: 0
;PCODE: $00002D14 VOL: 0
; 0000 137B             cykl = 1;
;PCODE: $00002D15 VOL: 0
;PCODE: $00002D16 VOL: 0
; 0000 137C 
; 0000 137D         break;
;PCODE: $00002D17 VOL: 0
; 0000 137E 
; 0000 137F         case 1:
;PCODE: $00002D18 VOL: 0
;PCODE: $00002D19 VOL: 0
;PCODE: $00002D1A VOL: 0
; 0000 1380 
; 0000 1381             if(sek1 > 1)
;PCODE: $00002D1B VOL: 0
;PCODE: $00002D1C VOL: 0
;PCODE: $00002D1D VOL: 0
; 0000 1382                 {
; 0000 1383                 PORTD.3 = 1;  //DRIVE
;PCODE: $00002D1E VOL: 0
;PCODE: $00002D1F VOL: 0
; 0000 1384                 cykl = 2;
;PCODE: $00002D20 VOL: 0
;PCODE: $00002D21 VOL: 0
; 0000 1385                 }
; 0000 1386         break;
;PCODE: $00002D22 VOL: 0
;PCODE: $00002D23 VOL: 0
; 0000 1387 
; 0000 1388 
; 0000 1389         case 2:
;PCODE: $00002D24 VOL: 0
;PCODE: $00002D25 VOL: 0
;PCODE: $00002D26 VOL: 0
; 0000 138A 
; 0000 138B                if(sprawdz_pin0(PORTJJ,0x79) == 0)
;PCODE: $00002D27 VOL: 0
;PCODE: $00002D28 VOL: 0
;PCODE: $00002D29 VOL: 0
;PCODE: $00002D2A VOL: 0
;PCODE: $00002D2B VOL: 0
;PCODE: $00002D2C VOL: 0
;PCODE: $00002D2D VOL: 0
; 0000 138C                   {
; 0000 138D                   PORTD.3 = 0;
;PCODE: $00002D2E VOL: 0
;PCODE: $00002D2F VOL: 0
; 0000 138E                   PORTA = 0x00;        //STEP 1 koniec
;PCODE: $00002D30 VOL: 0
;PCODE: $00002D31 VOL: 0
; 0000 138F                   cykl = 3;
;PCODE: $00002D32 VOL: 0
;PCODE: $00002D33 VOL: 0
; 0000 1390                   }
; 0000 1391 
; 0000 1392         break;
;PCODE: $00002D34 VOL: 0
;PCODE: $00002D35 VOL: 0
; 0000 1393 
; 0000 1394         case 3:
;PCODE: $00002D36 VOL: 0
;PCODE: $00002D37 VOL: 0
;PCODE: $00002D38 VOL: 0
; 0000 1395 
; 0000 1396                if(sprawdz_pin3(PORTJJ,0x79) == 0)
;PCODE: $00002D39 VOL: 0
;PCODE: $00002D3A VOL: 0
;PCODE: $00002D3B VOL: 0
;PCODE: $00002D3C VOL: 0
;PCODE: $00002D3D VOL: 0
;PCODE: $00002D3E VOL: 0
;PCODE: $00002D3F VOL: 0
; 0000 1397                   {
; 0000 1398                   sek1 = 0;
;PCODE: $00002D40 VOL: 0
;PCODE: $00002D41 VOL: 0
; 0000 1399                   cykl = 4;
;PCODE: $00002D42 VOL: 0
;PCODE: $00002D43 VOL: 0
; 0000 139A                   }
; 0000 139B 
; 0000 139C                if(sprawdz_pin5(PORTJJ,0x79) == 1)     //alarm
;PCODE: $00002D44 VOL: 0
;PCODE: $00002D45 VOL: 0
;PCODE: $00002D46 VOL: 0
;PCODE: $00002D47 VOL: 0
;PCODE: $00002D48 VOL: 0
;PCODE: $00002D49 VOL: 0
;PCODE: $00002D4A VOL: 0
;PCODE: $00002D4B VOL: 0
; 0000 139D                    {
; 0000 139E                    komunikat_na_panel("                                                ",adr1,adr2);
;PCODE: $00002D4C VOL: 0
;PCODE: $00002D4D VOL: 0
;PCODE: $00002D4E VOL: 0
;PCODE: $00002D4F VOL: 0
;PCODE: $00002D50 VOL: 0
;PCODE: $00002D51 VOL: 0
;PCODE: $00002D52 VOL: 0
;PCODE: $00002D53 VOL: 0
; 0000 139F                    komunikat_na_panel("Przeciazenia LEFS_XY_1",adr1,adr2);
;PCODE: $00002D54 VOL: 0
;PCODE: $00002D55 VOL: 0
;PCODE: $00002D56 VOL: 0
;PCODE: $00002D57 VOL: 0
;PCODE: $00002D58 VOL: 0
;PCODE: $00002D59 VOL: 0
;PCODE: $00002D5A VOL: 0
;PCODE: $00002D5B VOL: 0
; 0000 13A0                    }
; 0000 13A1 
; 0000 13A2 
; 0000 13A3         break;
;PCODE: $00002D5C VOL: 0
;PCODE: $00002D5D VOL: 0
; 0000 13A4 
; 0000 13A5 
; 0000 13A6         case 4:
;PCODE: $00002D5E VOL: 0
;PCODE: $00002D5F VOL: 0
;PCODE: $00002D60 VOL: 0
; 0000 13A7 
; 0000 13A8             if(sek1 > 50)
;PCODE: $00002D61 VOL: 0
;PCODE: $00002D62 VOL: 0
;PCODE: $00002D63 VOL: 0
; 0000 13A9                 cykl = 5;
;PCODE: $00002D64 VOL: 0
;PCODE: $00002D65 VOL: 0
; 0000 13AA         break;
;PCODE: $00002D66 VOL: 0
;PCODE: $00002D67 VOL: 0
; 0000 13AB 
; 0000 13AC         }
;PCODE: $00002D68 VOL: 0
; 0000 13AD }
;PCODE: $00002D69 VOL: 0
;PCODE: $00002D6A VOL: 0
; 0000 13AE 
; 0000 13AF cykl = 0;
;PCODE: $00002D6B VOL: 0
;PCODE: $00002D6C VOL: 0
; 0000 13B0 return 1;
;PCODE: $00002D6D VOL: 0
;PCODE: $00002D6E VOL: 0
; 0000 13B1 }
;PCODE: $00002D6F VOL: 0
;
;
;
;
;
;
;
;
;
;void wypozycjonuj_napedy()
; 0000 13BC {
;PCODE: $00002D70 VOL: 0
;PCODE: $00002D71 VOL: 0
; 0000 13BD //if(aaa == 0)
; 0000 13BE //        {
; 0000 13BF //        aaa = wypozycjonuj_LEFS40_1200_1_i_300_1();
; 0000 13C0 //        }
; 0000 13C1 if(bbb == 0)
;PCODE: $00002D72 VOL: 0
;PCODE: $00002D73 VOL: 0
;PCODE: $00002D74 VOL: 0
; 0000 13C2         {
; 0000 13C3         bbb = wypozycjonuj_LEFS32_300_1(0);
;PCODE: $00002D75 VOL: 0
;PCODE: $00002D76 VOL: 0
;PCODE: $00002D77 VOL: 0
;PCODE: $00002D78 VOL: 0
; 0000 13C4         }
; 0000 13C5 if(bbb == 1)
;PCODE: $00002D79 VOL: 0
;PCODE: $00002D7A VOL: 0
;PCODE: $00002D7B VOL: 0
;PCODE: $00002D7C VOL: 0
; 0000 13C6         {
; 0000 13C7         bbb = wypozycjonuj_LEFS32_300_1(1);
;PCODE: $00002D7D VOL: 0
;PCODE: $00002D7E VOL: 0
;PCODE: $00002D7F VOL: 0
;PCODE: $00002D80 VOL: 0
; 0000 13C8        }
; 0000 13C9 
; 0000 13CA 
; 0000 13CB //if(ccc == 0)
; 0000 13CC //        {
; 0000 13CD //        ccc = wypozycjonuj_LEFS40_1200_2_i_300_2();
; 0000 13CE //        }
; 0000 13CF //if(ddd == 0)
; 0000 13D0 //        {
; 0000 13D1 //        ddd = wypozycjonuj_LEFS32_300_2(0);
; 0000 13D2 //       }
; 0000 13D3 //if(ddd == 1)
; 0000 13D4 //        {
; 0000 13D5 //        ddd = wypozycjonuj_LEFS32_300_2(1);
; 0000 13D6 //        }
; 0000 13D7 
; 0000 13D8 
; 0000 13D9 
; 0000 13DA 
; 0000 13DB 
; 0000 13DC 
; 0000 13DD    /*
; 0000 13DE 
; 0000 13DF     if(ccc == 1 & bbb == 1)
; 0000 13E0         ccc = wypozycjonuj_NL3_upgrade(1);
; 0000 13E1 
; 0000 13E2     if(bbb == 1 & ccc == 2)
; 0000 13E3         bbb = wypozycjonuj_NL2_upgrade(1);
; 0000 13E4 
; 0000 13E5 
; 0000 13E6     if(aaa == 1 & bbb == 2 & ccc == 2)
; 0000 13E7         {
; 0000 13E8         start = 1;
; 0000 13E9         }
; 0000 13EA 
; 0000 13EB     */
; 0000 13EC 
; 0000 13ED //    if(aaa == 1 & bbb == 2 & ccc == 2 & ddd == 2)
; 0000 13EE //        start = 1;
; 0000 13EF 
; 0000 13F0 
; 0000 13F1 }
;PCODE: $00002D81 VOL: 0
;PCODE: $00002D82 VOL: 0
;PCODE: $00002D83 VOL: 0
;
;
;
;
;void przerzucanie_dociskow()
; 0000 13F7 {
;PCODE: $00002D84 VOL: 0
;PCODE: $00002D85 VOL: 0
; 0000 13F8    if(sprawdz_pin6(PORTLL,0x71) == 0 & sprawdz_pin7(PORTLL,0x71) == 0 & czekaj_az_puszcze == 0)
;PCODE: $00002D86 VOL: 0
;PCODE: $00002D87 VOL: 0
;PCODE: $00002D88 VOL: 0
;PCODE: $00002D89 VOL: 0
;PCODE: $00002D8A VOL: 0
;PCODE: $00002D8B VOL: 0
;PCODE: $00002D8C VOL: 0
;PCODE: $00002D8D VOL: 0
;PCODE: $00002D8E VOL: 0
;PCODE: $00002D8F VOL: 0
;PCODE: $00002D90 VOL: 0
;PCODE: $00002D91 VOL: 0
;PCODE: $00002D92 VOL: 0
;PCODE: $00002D93 VOL: 0
;PCODE: $00002D94 VOL: 0
;PCODE: $00002D95 VOL: 0
;PCODE: $00002D96 VOL: 0
;PCODE: $00002D97 VOL: 0
;PCODE: $00002D98 VOL: 0
;PCODE: $00002D99 VOL: 0
;PCODE: $00002D9A VOL: 0
;PCODE: $00002D9B VOL: 0
;PCODE: $00002D9C VOL: 0
; 0000 13F9            {
; 0000 13FA            czekaj_az_puszcze = 1;
;PCODE: $00002D9D VOL: 0
;PCODE: $00002D9E VOL: 0
; 0000 13FB            //PORTB.6 = 1;
; 0000 13FC            }
; 0000 13FD        if(sprawdz_pin6(PORTLL,0x71) == 1 & sprawdz_pin7(PORTLL,0x71) == 1 & czekaj_az_puszcze == 1)
;PCODE: $00002D9F VOL: 0
;PCODE: $00002DA0 VOL: 0
;PCODE: $00002DA1 VOL: 0
;PCODE: $00002DA2 VOL: 0
;PCODE: $00002DA3 VOL: 0
;PCODE: $00002DA4 VOL: 0
;PCODE: $00002DA5 VOL: 0
;PCODE: $00002DA6 VOL: 0
;PCODE: $00002DA7 VOL: 0
;PCODE: $00002DA8 VOL: 0
;PCODE: $00002DA9 VOL: 0
;PCODE: $00002DAA VOL: 0
;PCODE: $00002DAB VOL: 0
;PCODE: $00002DAC VOL: 0
;PCODE: $00002DAD VOL: 0
;PCODE: $00002DAE VOL: 0
;PCODE: $00002DAF VOL: 0
;PCODE: $00002DB0 VOL: 0
;PCODE: $00002DB1 VOL: 0
;PCODE: $00002DB2 VOL: 0
;PCODE: $00002DB3 VOL: 0
;PCODE: $00002DB4 VOL: 0
;PCODE: $00002DB5 VOL: 0
;PCODE: $00002DB6 VOL: 0
; 0000 13FE            {
; 0000 13FF            czekaj_az_puszcze = 2;
;PCODE: $00002DB7 VOL: 0
;PCODE: $00002DB8 VOL: 0
; 0000 1400            //PORTB.6 = 0;
; 0000 1401            }
; 0000 1402 
; 0000 1403        if(czekaj_az_puszcze == 2 & PORTE.6 == 1)
;PCODE: $00002DB9 VOL: 0
;PCODE: $00002DBA VOL: 0
;PCODE: $00002DBB VOL: 0
;PCODE: $00002DBC VOL: 0
;PCODE: $00002DBD VOL: 0
;PCODE: $00002DBE VOL: 0
;PCODE: $00002DBF VOL: 0
;PCODE: $00002DC0 VOL: 0
;PCODE: $00002DC1 VOL: 0
;PCODE: $00002DC2 VOL: 0
;PCODE: $00002DC3 VOL: 0
; 0000 1404             {
; 0000 1405             PORTE.6 = 0;
;PCODE: $00002DC4 VOL: 0
;PCODE: $00002DC5 VOL: 0
; 0000 1406             czekaj_az_puszcze = 0;
;PCODE: $00002DC6 VOL: 0
;PCODE: $00002DC7 VOL: 0
; 0000 1407             delay_ms(100);
;PCODE: $00002DC8 VOL: 0
;PCODE: $00002DC9 VOL: 0
;PCODE: $00002DCA VOL: 0
; 0000 1408             }
; 0000 1409 
; 0000 140A        if(czekaj_az_puszcze == 2 & PORTE.6 == 0)
;PCODE: $00002DCB VOL: 0
;PCODE: $00002DCC VOL: 0
;PCODE: $00002DCD VOL: 0
;PCODE: $00002DCE VOL: 0
;PCODE: $00002DCF VOL: 0
;PCODE: $00002DD0 VOL: 0
;PCODE: $00002DD1 VOL: 0
;PCODE: $00002DD2 VOL: 0
;PCODE: $00002DD3 VOL: 0
;PCODE: $00002DD4 VOL: 0
;PCODE: $00002DD5 VOL: 0
; 0000 140B            {
; 0000 140C             PORTE.6 = 1;
;PCODE: $00002DD6 VOL: 0
;PCODE: $00002DD7 VOL: 0
; 0000 140D             czekaj_az_puszcze = 0;
;PCODE: $00002DD8 VOL: 0
;PCODE: $00002DD9 VOL: 0
; 0000 140E             delay_ms(100);
;PCODE: $00002DDA VOL: 0
;PCODE: $00002DDB VOL: 0
;PCODE: $00002DDC VOL: 0
; 0000 140F            }
; 0000 1410 
; 0000 1411 }
;PCODE: $00002DDD VOL: 0
;PCODE: $00002DDE VOL: 0
;PCODE: $00002DDF VOL: 0
;
;void ostateczny_wybor_zacisku()
; 0000 1414 {
;PCODE: $00002DE0 VOL: 0
;PCODE: $00002DE1 VOL: 0
; 0000 1415 int rzad;
; 0000 1416 
; 0000 1417   if(sek11 > 60) //co 1s sekunde sprawdzam   //jak co 40 to sie wywala
;PCODE: $00002DE2 VOL: 0
;PCODE: $00002DE3 VOL: 0
;	rzad -> R16,R17
;PCODE: $00002DE4 VOL: 0
;PCODE: $00002DE5 VOL: 0
;PCODE: $00002DE6 VOL: 0
; 0000 1418         {
; 0000 1419        sek11 = 0;
;PCODE: $00002DE7 VOL: 0
;PCODE: $00002DE8 VOL: 0
; 0000 141A        if(odczytalem_zacisk < il_prob_odczytu &
; 0000 141B                                            (sprawdz_pin0(PORTHH,0x73) == 1 |
; 0000 141C                                             sprawdz_pin1(PORTHH,0x73) == 1 |
; 0000 141D                                             sprawdz_pin2(PORTHH,0x73) == 1 |
; 0000 141E                                             sprawdz_pin3(PORTHH,0x73) == 1 |
; 0000 141F                                             sprawdz_pin4(PORTHH,0x73) == 1 |
; 0000 1420                                             sprawdz_pin5(PORTHH,0x73) == 1 |
; 0000 1421                                             sprawdz_pin6(PORTHH,0x73) == 1 |
; 0000 1422                                             sprawdz_pin7(PORTHH,0x73) == 1))
;PCODE: $00002DE9 VOL: 0
;PCODE: $00002DEA VOL: 0
;PCODE: $00002DEB VOL: 0
;PCODE: $00002DEC VOL: 0
;PCODE: $00002DED VOL: 0
;PCODE: $00002DEE VOL: 0
;PCODE: $00002DEF VOL: 0
;PCODE: $00002DF0 VOL: 0
;PCODE: $00002DF1 VOL: 0
;PCODE: $00002DF2 VOL: 0
;PCODE: $00002DF3 VOL: 0
;PCODE: $00002DF4 VOL: 0
;PCODE: $00002DF5 VOL: 0
;PCODE: $00002DF6 VOL: 0
;PCODE: $00002DF7 VOL: 0
;PCODE: $00002DF8 VOL: 0
;PCODE: $00002DF9 VOL: 0
;PCODE: $00002DFA VOL: 0
;PCODE: $00002DFB VOL: 0
;PCODE: $00002DFC VOL: 0
;PCODE: $00002DFD VOL: 0
;PCODE: $00002DFE VOL: 0
;PCODE: $00002DFF VOL: 0
;PCODE: $00002E00 VOL: 0
;PCODE: $00002E01 VOL: 0
;PCODE: $00002E02 VOL: 0
;PCODE: $00002E03 VOL: 0
;PCODE: $00002E04 VOL: 0
;PCODE: $00002E05 VOL: 0
;PCODE: $00002E06 VOL: 0
;PCODE: $00002E07 VOL: 0
;PCODE: $00002E08 VOL: 0
;PCODE: $00002E09 VOL: 0
;PCODE: $00002E0A VOL: 0
;PCODE: $00002E0B VOL: 0
;PCODE: $00002E0C VOL: 0
;PCODE: $00002E0D VOL: 0
;PCODE: $00002E0E VOL: 0
;PCODE: $00002E0F VOL: 0
;PCODE: $00002E10 VOL: 0
;PCODE: $00002E11 VOL: 0
;PCODE: $00002E12 VOL: 0
;PCODE: $00002E13 VOL: 0
;PCODE: $00002E14 VOL: 0
;PCODE: $00002E15 VOL: 0
;PCODE: $00002E16 VOL: 0
;PCODE: $00002E17 VOL: 0
;PCODE: $00002E18 VOL: 0
;PCODE: $00002E19 VOL: 0
;PCODE: $00002E1A VOL: 0
;PCODE: $00002E1B VOL: 0
;PCODE: $00002E1C VOL: 0
;PCODE: $00002E1D VOL: 0
;PCODE: $00002E1E VOL: 0
;PCODE: $00002E1F VOL: 0
;PCODE: $00002E20 VOL: 0
;PCODE: $00002E21 VOL: 0
;PCODE: $00002E22 VOL: 0
;PCODE: $00002E23 VOL: 0
;PCODE: $00002E24 VOL: 0
;PCODE: $00002E25 VOL: 0
;PCODE: $00002E26 VOL: 0
;PCODE: $00002E27 VOL: 0
;PCODE: $00002E28 VOL: 0
;PCODE: $00002E29 VOL: 0
;PCODE: $00002E2A VOL: 0
;PCODE: $00002E2B VOL: 0
;PCODE: $00002E2C VOL: 0
;PCODE: $00002E2D VOL: 0
;PCODE: $00002E2E VOL: 0
;PCODE: $00002E2F VOL: 0
;PCODE: $00002E30 VOL: 0
;PCODE: $00002E31 VOL: 0
;PCODE: $00002E32 VOL: 0
;PCODE: $00002E33 VOL: 0
;PCODE: $00002E34 VOL: 0
;PCODE: $00002E35 VOL: 0
;PCODE: $00002E36 VOL: 0
;PCODE: $00002E37 VOL: 0
;PCODE: $00002E38 VOL: 0
;PCODE: $00002E39 VOL: 0
;PCODE: $00002E3A VOL: 0
;PCODE: $00002E3B VOL: 0
;PCODE: $00002E3C VOL: 0
; 0000 1423         {
; 0000 1424         odczytalem_zacisk++;
;PCODE: $00002E3D VOL: 0
;PCODE: $00002E3E VOL: 0
;PCODE: $00002E3F VOL: 0
; 0000 1425         }
; 0000 1426         }
;PCODE: $00002E40 VOL: 0
; 0000 1427 
; 0000 1428 if(odczytalem_zacisk == il_prob_odczytu)
;PCODE: $00002E41 VOL: 0
;PCODE: $00002E42 VOL: 0
;PCODE: $00002E43 VOL: 0
;PCODE: $00002E44 VOL: 0
; 0000 1429         {
; 0000 142A         //PORTB = 0xFF;
; 0000 142B         rzad = odczyt_wybranego_zacisku();
;PCODE: $00002E45 VOL: 0
;PCODE: $00002E46 VOL: 0
; 0000 142C         //sek10 = 0;
; 0000 142D         sek11 = 0;    //nowe
;PCODE: $00002E47 VOL: 0
;PCODE: $00002E48 VOL: 0
; 0000 142E         odczytalem_zacisk++;
;PCODE: $00002E49 VOL: 0
;PCODE: $00002E4A VOL: 0
;PCODE: $00002E4B VOL: 0
; 0000 142F         if(rzad == 1)
;PCODE: $00002E4C VOL: 0
;PCODE: $00002E4D VOL: 0
;PCODE: $00002E4E VOL: 0
; 0000 1430             wartosc_parametru_panelu(2,32,128);
;PCODE: $00002E4F VOL: 0
;PCODE: $00002E50 VOL: 0
;PCODE: $00002E51 VOL: 0
;PCODE: $00002E52 VOL: 0
;PCODE: $00002E53 VOL: 0
;PCODE: $00002E54 VOL: 0
;PCODE: $00002E55 VOL: 0
; 0000 1431         if(rzad == 2)
;PCODE: $00002E56 VOL: 0
;PCODE: $00002E57 VOL: 0
;PCODE: $00002E58 VOL: 0
;PCODE: $00002E59 VOL: 0
; 0000 1432             wartosc_parametru_panelu(1,32,128);
;PCODE: $00002E5A VOL: 0
;PCODE: $00002E5B VOL: 0
;PCODE: $00002E5C VOL: 0
;PCODE: $00002E5D VOL: 0
;PCODE: $00002E5E VOL: 0
;PCODE: $00002E5F VOL: 0
;PCODE: $00002E60 VOL: 0
; 0000 1433 
; 0000 1434         }                                     //& sek10 > 1                //3s po odczytaniu dopiero sprawdzam port
;PCODE: $00002E61 VOL: 0
; 0000 1435 if((odczytalem_zacisk == il_prob_odczytu + 1))        //183
;PCODE: $00002E62 VOL: 0
;PCODE: $00002E63 VOL: 0
;PCODE: $00002E64 VOL: 0
;PCODE: $00002E65 VOL: 0
;PCODE: $00002E66 VOL: 0
; 0000 1436         {
; 0000 1437         odczytalem_zacisk = 0;
;PCODE: $00002E67 VOL: 0
; 0000 1438         }
; 0000 1439 }
;PCODE: $00002E68 VOL: 0
;PCODE: $00002E69 VOL: 0
;PCODE: $00002E6A VOL: 0
;PCODE: $00002E6B VOL: 0
;
;
;
;int sterownik_1_praca(int PORT)
; 0000 143E {
;PCODE: $00002E6C VOL: 0
;PCODE: $00002E6D VOL: 0
; 0000 143F //PORTA.0   IN0  STEROWNIK1
; 0000 1440 //PORTA.1   IN1  STEROWNIK1
; 0000 1441 //PORTA.2   IN2  STEROWNIK1
; 0000 1442 //PORTA.3   IN3  STEROWNIK1
; 0000 1443 //PORTA.4   IN4  STEROWNIK1
; 0000 1444 //PORTA.5   IN5  STEROWNIK1
; 0000 1445 //PORTA.6   IN6  STEROWNIK1
; 0000 1446 //PORTA.7   IN7  STEROWNIK1
; 0000 1447 //PORTD.4   IN8 STEROWNIK1
; 0000 1448 
; 0000 1449 //PORTD.2  SETUP   STEROWNIK1
; 0000 144A //PORTD.3  DRIVE   STEROWNIK1
; 0000 144B 
; 0000 144C //sprawdz_pin0(PORTJJ,0x79)  BUSY   STEROWNIK1
; 0000 144D //sprawdz_pin3(PORTJJ,0x79)  INP    STEROWNIK1
; 0000 144E 
; 0000 144F if(sprawdz_pin5(PORTJJ,0x79) == 1)
;	PORT -> Y+0
;PCODE: $00002E6E VOL: 0
;PCODE: $00002E6F VOL: 0
;PCODE: $00002E70 VOL: 0
;PCODE: $00002E71 VOL: 0
;PCODE: $00002E72 VOL: 0
;PCODE: $00002E73 VOL: 0
;PCODE: $00002E74 VOL: 0
; 0000 1450     {
; 0000 1451     PORTD.7 = 1;
;PCODE: $00002E75 VOL: 0
;PCODE: $00002E76 VOL: 0
; 0000 1452     PORTE.2 = 0;
;PCODE: $00002E77 VOL: 0
;PCODE: $00002E78 VOL: 0
; 0000 1453     PORTE.3 = 0;  //szlifierki stop
;PCODE: $00002E79 VOL: 0
;PCODE: $00002E7A VOL: 0
; 0000 1454     }
; 0000 1455 
; 0000 1456 switch(cykl_sterownik_1)
;PCODE: $00002E7B VOL: 0
;PCODE: $00002E7C VOL: 0
; 0000 1457         {
; 0000 1458         case 0:
;PCODE: $00002E7D VOL: 0
;PCODE: $00002E7E VOL: 0
; 0000 1459 
; 0000 145A             sek1 = 0;
;PCODE: $00002E7F VOL: 0
;PCODE: $00002E80 VOL: 0
; 0000 145B             PORT_STER1.byte = PORT;
;PCODE: $00002E81 VOL: 0
;PCODE: $00002E82 VOL: 0
; 0000 145C             PORTA.0 = PORT_STER1.bits.b0;
;PCODE: $00002E83 VOL: 0
;PCODE: $00002E84 VOL: 0
;PCODE: $00002E85 VOL: 0
;PCODE: $00002E86 VOL: 0
;PCODE: $00002E87 VOL: 0
;PCODE: $00002E88 VOL: 0
;PCODE: $00002E89 VOL: 0
;PCODE: $00002E8A VOL: 0
;PCODE: $00002E8B VOL: 0
;PCODE: $00002E8C VOL: 0
; 0000 145D             PORTA.1 = PORT_STER1.bits.b1;
;PCODE: $00002E8D VOL: 0
;PCODE: $00002E8E VOL: 0
;PCODE: $00002E8F VOL: 0
;PCODE: $00002E90 VOL: 0
;PCODE: $00002E91 VOL: 0
;PCODE: $00002E92 VOL: 0
;PCODE: $00002E93 VOL: 0
;PCODE: $00002E94 VOL: 0
;PCODE: $00002E95 VOL: 0
;PCODE: $00002E96 VOL: 0
; 0000 145E             PORTA.2 = PORT_STER1.bits.b2;
;PCODE: $00002E97 VOL: 0
;PCODE: $00002E98 VOL: 0
;PCODE: $00002E99 VOL: 0
;PCODE: $00002E9A VOL: 0
;PCODE: $00002E9B VOL: 0
;PCODE: $00002E9C VOL: 0
;PCODE: $00002E9D VOL: 0
;PCODE: $00002E9E VOL: 0
;PCODE: $00002E9F VOL: 0
;PCODE: $00002EA0 VOL: 0
; 0000 145F             PORTA.3 = PORT_STER1.bits.b3;
;PCODE: $00002EA1 VOL: 0
;PCODE: $00002EA2 VOL: 0
;PCODE: $00002EA3 VOL: 0
;PCODE: $00002EA4 VOL: 0
;PCODE: $00002EA5 VOL: 0
;PCODE: $00002EA6 VOL: 0
;PCODE: $00002EA7 VOL: 0
;PCODE: $00002EA8 VOL: 0
;PCODE: $00002EA9 VOL: 0
;PCODE: $00002EAA VOL: 0
; 0000 1460             PORTA.4 = PORT_STER1.bits.b4;
;PCODE: $00002EAB VOL: 0
;PCODE: $00002EAC VOL: 0
;PCODE: $00002EAD VOL: 0
;PCODE: $00002EAE VOL: 0
;PCODE: $00002EAF VOL: 0
;PCODE: $00002EB0 VOL: 0
;PCODE: $00002EB1 VOL: 0
;PCODE: $00002EB2 VOL: 0
;PCODE: $00002EB3 VOL: 0
;PCODE: $00002EB4 VOL: 0
; 0000 1461             PORTA.5 = PORT_STER1.bits.b5;
;PCODE: $00002EB5 VOL: 0
;PCODE: $00002EB6 VOL: 0
;PCODE: $00002EB7 VOL: 0
;PCODE: $00002EB8 VOL: 0
;PCODE: $00002EB9 VOL: 0
;PCODE: $00002EBA VOL: 0
;PCODE: $00002EBB VOL: 0
;PCODE: $00002EBC VOL: 0
;PCODE: $00002EBD VOL: 0
;PCODE: $00002EBE VOL: 0
; 0000 1462             PORTA.6 = PORT_STER1.bits.b6;
;PCODE: $00002EBF VOL: 0
;PCODE: $00002EC0 VOL: 0
;PCODE: $00002EC1 VOL: 0
;PCODE: $00002EC2 VOL: 0
;PCODE: $00002EC3 VOL: 0
;PCODE: $00002EC4 VOL: 0
;PCODE: $00002EC5 VOL: 0
;PCODE: $00002EC6 VOL: 0
;PCODE: $00002EC7 VOL: 0
;PCODE: $00002EC8 VOL: 0
; 0000 1463             PORTA.7 = PORT_STER1.bits.b7;
;PCODE: $00002EC9 VOL: 0
;PCODE: $00002ECA VOL: 0
;PCODE: $00002ECB VOL: 0
;PCODE: $00002ECC VOL: 0
;PCODE: $00002ECD VOL: 0
;PCODE: $00002ECE VOL: 0
;PCODE: $00002ECF VOL: 0
;PCODE: $00002ED0 VOL: 0
;PCODE: $00002ED1 VOL: 0
;PCODE: $00002ED2 VOL: 0
; 0000 1464 
; 0000 1465             if(PORT > 0x0FF)
;PCODE: $00002ED3 VOL: 0
;PCODE: $00002ED4 VOL: 0
;PCODE: $00002ED5 VOL: 0
; 0000 1466                 PORTD.4 = 1;
;PCODE: $00002ED6 VOL: 0
;PCODE: $00002ED7 VOL: 0
; 0000 1467 
; 0000 1468 
; 0000 1469 
; 0000 146A             cykl_sterownik_1 = 1;
;PCODE: $00002ED8 VOL: 0
;PCODE: $00002ED9 VOL: 0
;PCODE: $00002EDA VOL: 0
; 0000 146B 
; 0000 146C         break;
;PCODE: $00002EDB VOL: 0
; 0000 146D 
; 0000 146E         case 1:
;PCODE: $00002EDC VOL: 0
;PCODE: $00002EDD VOL: 0
;PCODE: $00002EDE VOL: 0
; 0000 146F 
; 0000 1470             if(sek1 > 1)
;PCODE: $00002EDF VOL: 0
;PCODE: $00002EE0 VOL: 0
;PCODE: $00002EE1 VOL: 0
; 0000 1471                 {
; 0000 1472 
; 0000 1473                 PORTD.3 = 1;
;PCODE: $00002EE2 VOL: 0
;PCODE: $00002EE3 VOL: 0
; 0000 1474                 cykl_sterownik_1 = 2;
;PCODE: $00002EE4 VOL: 0
;PCODE: $00002EE5 VOL: 0
; 0000 1475                 }
; 0000 1476         break;
;PCODE: $00002EE6 VOL: 0
;PCODE: $00002EE7 VOL: 0
; 0000 1477 
; 0000 1478 
; 0000 1479         case 2:
;PCODE: $00002EE8 VOL: 0
;PCODE: $00002EE9 VOL: 0
;PCODE: $00002EEA VOL: 0
; 0000 147A 
; 0000 147B                if(sprawdz_pin0(PORTJJ,0x79) == 0)     //busy
;PCODE: $00002EEB VOL: 0
;PCODE: $00002EEC VOL: 0
;PCODE: $00002EED VOL: 0
;PCODE: $00002EEE VOL: 0
;PCODE: $00002EEF VOL: 0
;PCODE: $00002EF0 VOL: 0
;PCODE: $00002EF1 VOL: 0
; 0000 147C                   {
; 0000 147D 
; 0000 147E                   PORTD.3 = 0;
;PCODE: $00002EF2 VOL: 0
;PCODE: $00002EF3 VOL: 0
; 0000 147F                   PORTA = 0x00;
;PCODE: $00002EF4 VOL: 0
;PCODE: $00002EF5 VOL: 0
; 0000 1480                   PORTD.4 = 0;
;PCODE: $00002EF6 VOL: 0
;PCODE: $00002EF7 VOL: 0
; 0000 1481                   sek1 = 0;
;PCODE: $00002EF8 VOL: 0
;PCODE: $00002EF9 VOL: 0
; 0000 1482                   cykl_sterownik_1 = 3;
;PCODE: $00002EFA VOL: 0
;PCODE: $00002EFB VOL: 0
; 0000 1483                   }
; 0000 1484 
; 0000 1485         break;
;PCODE: $00002EFC VOL: 0
;PCODE: $00002EFD VOL: 0
; 0000 1486 
; 0000 1487         case 3:
;PCODE: $00002EFE VOL: 0
;PCODE: $00002EFF VOL: 0
;PCODE: $00002F00 VOL: 0
; 0000 1488 
; 0000 1489                if(sprawdz_pin3(PORTJJ,0x79) == 0)
;PCODE: $00002F01 VOL: 0
;PCODE: $00002F02 VOL: 0
;PCODE: $00002F03 VOL: 0
;PCODE: $00002F04 VOL: 0
;PCODE: $00002F05 VOL: 0
;PCODE: $00002F06 VOL: 0
;PCODE: $00002F07 VOL: 0
; 0000 148A                   {
; 0000 148B 
; 0000 148C                   sek1 = 0;
;PCODE: $00002F08 VOL: 0
;PCODE: $00002F09 VOL: 0
; 0000 148D                   cykl_sterownik_1 = 4;
;PCODE: $00002F0A VOL: 0
;PCODE: $00002F0B VOL: 0
; 0000 148E                   }
; 0000 148F 
; 0000 1490 
; 0000 1491         break;
;PCODE: $00002F0C VOL: 0
;PCODE: $00002F0D VOL: 0
; 0000 1492 
; 0000 1493 
; 0000 1494         case 4:
;PCODE: $00002F0E VOL: 0
;PCODE: $00002F0F VOL: 0
;PCODE: $00002F10 VOL: 0
; 0000 1495 
; 0000 1496             if(sprawdz_pin0(PORTJJ,0x79) == 1)
;PCODE: $00002F11 VOL: 0
;PCODE: $00002F12 VOL: 0
;PCODE: $00002F13 VOL: 0
;PCODE: $00002F14 VOL: 0
;PCODE: $00002F15 VOL: 0
;PCODE: $00002F16 VOL: 0
;PCODE: $00002F17 VOL: 0
; 0000 1497                 {
; 0000 1498 
; 0000 1499                 cykl_sterownik_1 = 5;
;PCODE: $00002F18 VOL: 0
;PCODE: $00002F19 VOL: 0
; 0000 149A                 }
; 0000 149B         break;
;PCODE: $00002F1A VOL: 0
;PCODE: $00002F1B VOL: 0
; 0000 149C 
; 0000 149D         }
;PCODE: $00002F1C VOL: 0
; 0000 149E 
; 0000 149F return cykl_sterownik_1;
;PCODE: $00002F1D VOL: 0
;PCODE: $00002F1E VOL: 0
;PCODE: $00002F1F VOL: 0
; 0000 14A0 }
;PCODE: $00002F20 VOL: 0
;
;
;int sterownik_2_praca(int PORT)
; 0000 14A4 {
;PCODE: $00002F21 VOL: 0
;PCODE: $00002F22 VOL: 0
; 0000 14A5 //PORTC.0   IN0  STEROWNIK2
; 0000 14A6 //PORTC.1   IN1  STEROWNIK2
; 0000 14A7 //PORTC.2   IN2  STEROWNIK2
; 0000 14A8 //PORTC.3   IN3  STEROWNIK2
; 0000 14A9 //PORTC.4   IN4  STEROWNIK2
; 0000 14AA //PORTC.5   IN5  STEROWNIK2
; 0000 14AB //PORTC.6   IN6  STEROWNIK2
; 0000 14AC //PORTC.7   IN7  STEROWNIK2
; 0000 14AD //PORTD.5   IN8 STEROWNIK2
; 0000 14AE 
; 0000 14AF 
; 0000 14B0 //PORTD.5  SETUP   STEROWNIK2
; 0000 14B1 //PORTD.6  DRIVE   STEROWNIK2
; 0000 14B2 
; 0000 14B3 //sprawdz_pin0(PORTLL,0x71)  BUSY   STEROWNIK2
; 0000 14B4 //sprawdz_pin3(PORTLL,0x71)  INP    STEROWNIK2
; 0000 14B5 
; 0000 14B6  if(sprawdz_pin5(PORTLL,0x71) == 1)
;	PORT -> Y+0
;PCODE: $00002F23 VOL: 0
;PCODE: $00002F24 VOL: 0
;PCODE: $00002F25 VOL: 0
;PCODE: $00002F26 VOL: 0
;PCODE: $00002F27 VOL: 0
;PCODE: $00002F28 VOL: 0
;PCODE: $00002F29 VOL: 0
; 0000 14B7     {
; 0000 14B8     PORTD.7 = 1;
;PCODE: $00002F2A VOL: 0
;PCODE: $00002F2B VOL: 0
; 0000 14B9     PORTE.2 = 0;
;PCODE: $00002F2C VOL: 0
;PCODE: $00002F2D VOL: 0
; 0000 14BA     PORTE.3 = 0;  //szlifierki stop
;PCODE: $00002F2E VOL: 0
;PCODE: $00002F2F VOL: 0
; 0000 14BB     }
; 0000 14BC 
; 0000 14BD switch(cykl_sterownik_2)
;PCODE: $00002F30 VOL: 0
;PCODE: $00002F31 VOL: 0
; 0000 14BE         {
; 0000 14BF         case 0:
;PCODE: $00002F32 VOL: 0
;PCODE: $00002F33 VOL: 0
; 0000 14C0 
; 0000 14C1             sek3 = 0;
;PCODE: $00002F34 VOL: 0
;PCODE: $00002F35 VOL: 0
; 0000 14C2             PORT_STER2.byte = PORT;
;PCODE: $00002F36 VOL: 0
;PCODE: $00002F37 VOL: 0
; 0000 14C3             PORTC.0 = PORT_STER2.bits.b0;
;PCODE: $00002F38 VOL: 0
;PCODE: $00002F39 VOL: 0
;PCODE: $00002F3A VOL: 0
;PCODE: $00002F3B VOL: 0
;PCODE: $00002F3C VOL: 0
;PCODE: $00002F3D VOL: 0
;PCODE: $00002F3E VOL: 0
;PCODE: $00002F3F VOL: 0
;PCODE: $00002F40 VOL: 0
;PCODE: $00002F41 VOL: 0
; 0000 14C4             PORTC.1 = PORT_STER2.bits.b1;
;PCODE: $00002F42 VOL: 0
;PCODE: $00002F43 VOL: 0
;PCODE: $00002F44 VOL: 0
;PCODE: $00002F45 VOL: 0
;PCODE: $00002F46 VOL: 0
;PCODE: $00002F47 VOL: 0
;PCODE: $00002F48 VOL: 0
;PCODE: $00002F49 VOL: 0
;PCODE: $00002F4A VOL: 0
;PCODE: $00002F4B VOL: 0
; 0000 14C5             PORTC.2 = PORT_STER2.bits.b2;
;PCODE: $00002F4C VOL: 0
;PCODE: $00002F4D VOL: 0
;PCODE: $00002F4E VOL: 0
;PCODE: $00002F4F VOL: 0
;PCODE: $00002F50 VOL: 0
;PCODE: $00002F51 VOL: 0
;PCODE: $00002F52 VOL: 0
;PCODE: $00002F53 VOL: 0
;PCODE: $00002F54 VOL: 0
;PCODE: $00002F55 VOL: 0
; 0000 14C6             PORTC.3 = PORT_STER2.bits.b3;
;PCODE: $00002F56 VOL: 0
;PCODE: $00002F57 VOL: 0
;PCODE: $00002F58 VOL: 0
;PCODE: $00002F59 VOL: 0
;PCODE: $00002F5A VOL: 0
;PCODE: $00002F5B VOL: 0
;PCODE: $00002F5C VOL: 0
;PCODE: $00002F5D VOL: 0
;PCODE: $00002F5E VOL: 0
;PCODE: $00002F5F VOL: 0
; 0000 14C7             PORTC.4 = PORT_STER2.bits.b4;
;PCODE: $00002F60 VOL: 0
;PCODE: $00002F61 VOL: 0
;PCODE: $00002F62 VOL: 0
;PCODE: $00002F63 VOL: 0
;PCODE: $00002F64 VOL: 0
;PCODE: $00002F65 VOL: 0
;PCODE: $00002F66 VOL: 0
;PCODE: $00002F67 VOL: 0
;PCODE: $00002F68 VOL: 0
;PCODE: $00002F69 VOL: 0
; 0000 14C8             PORTC.5 = PORT_STER2.bits.b5;
;PCODE: $00002F6A VOL: 0
;PCODE: $00002F6B VOL: 0
;PCODE: $00002F6C VOL: 0
;PCODE: $00002F6D VOL: 0
;PCODE: $00002F6E VOL: 0
;PCODE: $00002F6F VOL: 0
;PCODE: $00002F70 VOL: 0
;PCODE: $00002F71 VOL: 0
;PCODE: $00002F72 VOL: 0
;PCODE: $00002F73 VOL: 0
; 0000 14C9             PORTC.6 = PORT_STER2.bits.b6;
;PCODE: $00002F74 VOL: 0
;PCODE: $00002F75 VOL: 0
;PCODE: $00002F76 VOL: 0
;PCODE: $00002F77 VOL: 0
;PCODE: $00002F78 VOL: 0
;PCODE: $00002F79 VOL: 0
;PCODE: $00002F7A VOL: 0
;PCODE: $00002F7B VOL: 0
;PCODE: $00002F7C VOL: 0
;PCODE: $00002F7D VOL: 0
; 0000 14CA             PORTC.7 = PORT_STER2.bits.b7;
;PCODE: $00002F7E VOL: 0
;PCODE: $00002F7F VOL: 0
;PCODE: $00002F80 VOL: 0
;PCODE: $00002F81 VOL: 0
;PCODE: $00002F82 VOL: 0
;PCODE: $00002F83 VOL: 0
;PCODE: $00002F84 VOL: 0
;PCODE: $00002F85 VOL: 0
;PCODE: $00002F86 VOL: 0
;PCODE: $00002F87 VOL: 0
; 0000 14CB             if(PORT > 0x0FF)
;PCODE: $00002F88 VOL: 0
;PCODE: $00002F89 VOL: 0
;PCODE: $00002F8A VOL: 0
; 0000 14CC                 PORTD.5 = 1;
;PCODE: $00002F8B VOL: 0
;PCODE: $00002F8C VOL: 0
; 0000 14CD 
; 0000 14CE 
; 0000 14CF             cykl_sterownik_2 = 1;
;PCODE: $00002F8D VOL: 0
;PCODE: $00002F8E VOL: 0
;PCODE: $00002F8F VOL: 0
; 0000 14D0 
; 0000 14D1 
; 0000 14D2         break;
;PCODE: $00002F90 VOL: 0
; 0000 14D3 
; 0000 14D4         case 1:
;PCODE: $00002F91 VOL: 0
;PCODE: $00002F92 VOL: 0
;PCODE: $00002F93 VOL: 0
; 0000 14D5 
; 0000 14D6             if(sek3 > 1)
;PCODE: $00002F94 VOL: 0
;PCODE: $00002F95 VOL: 0
;PCODE: $00002F96 VOL: 0
; 0000 14D7                 {
; 0000 14D8                 PORTD.6 = 1;
;PCODE: $00002F97 VOL: 0
;PCODE: $00002F98 VOL: 0
; 0000 14D9                 cykl_sterownik_2 = 2;
;PCODE: $00002F99 VOL: 0
;PCODE: $00002F9A VOL: 0
; 0000 14DA                 }
; 0000 14DB         break;
;PCODE: $00002F9B VOL: 0
;PCODE: $00002F9C VOL: 0
; 0000 14DC 
; 0000 14DD 
; 0000 14DE         case 2:
;PCODE: $00002F9D VOL: 0
;PCODE: $00002F9E VOL: 0
;PCODE: $00002F9F VOL: 0
; 0000 14DF 
; 0000 14E0                if(sprawdz_pin0(PORTLL,0x71) == 0)     //busy
;PCODE: $00002FA0 VOL: 0
;PCODE: $00002FA1 VOL: 0
;PCODE: $00002FA2 VOL: 0
;PCODE: $00002FA3 VOL: 0
;PCODE: $00002FA4 VOL: 0
;PCODE: $00002FA5 VOL: 0
;PCODE: $00002FA6 VOL: 0
; 0000 14E1                   {
; 0000 14E2                   PORTD.6 = 0;
;PCODE: $00002FA7 VOL: 0
;PCODE: $00002FA8 VOL: 0
; 0000 14E3                   PORTC = 0x00;
;PCODE: $00002FA9 VOL: 0
;PCODE: $00002FAA VOL: 0
; 0000 14E4                   PORTD.5 = 0;
;PCODE: $00002FAB VOL: 0
;PCODE: $00002FAC VOL: 0
; 0000 14E5                   sek3 = 0;
;PCODE: $00002FAD VOL: 0
;PCODE: $00002FAE VOL: 0
; 0000 14E6                   cykl_sterownik_2 = 3;
;PCODE: $00002FAF VOL: 0
;PCODE: $00002FB0 VOL: 0
; 0000 14E7                   }
; 0000 14E8 
; 0000 14E9         break;
;PCODE: $00002FB1 VOL: 0
;PCODE: $00002FB2 VOL: 0
; 0000 14EA 
; 0000 14EB         case 3:
;PCODE: $00002FB3 VOL: 0
;PCODE: $00002FB4 VOL: 0
;PCODE: $00002FB5 VOL: 0
; 0000 14EC 
; 0000 14ED                if(sprawdz_pin3(PORTLL,0x71) == 0)
;PCODE: $00002FB6 VOL: 0
;PCODE: $00002FB7 VOL: 0
;PCODE: $00002FB8 VOL: 0
;PCODE: $00002FB9 VOL: 0
;PCODE: $00002FBA VOL: 0
;PCODE: $00002FBB VOL: 0
;PCODE: $00002FBC VOL: 0
; 0000 14EE                   {
; 0000 14EF                   sek3 = 0;
;PCODE: $00002FBD VOL: 0
;PCODE: $00002FBE VOL: 0
; 0000 14F0                   cykl_sterownik_2 = 4;
;PCODE: $00002FBF VOL: 0
;PCODE: $00002FC0 VOL: 0
; 0000 14F1                   }
; 0000 14F2 
; 0000 14F3 
; 0000 14F4         break;
;PCODE: $00002FC1 VOL: 0
;PCODE: $00002FC2 VOL: 0
; 0000 14F5 
; 0000 14F6 
; 0000 14F7         case 4:
;PCODE: $00002FC3 VOL: 0
;PCODE: $00002FC4 VOL: 0
;PCODE: $00002FC5 VOL: 0
; 0000 14F8 
; 0000 14F9             if(sprawdz_pin0(PORTLL,0x71) == 1)
;PCODE: $00002FC6 VOL: 0
;PCODE: $00002FC7 VOL: 0
;PCODE: $00002FC8 VOL: 0
;PCODE: $00002FC9 VOL: 0
;PCODE: $00002FCA VOL: 0
;PCODE: $00002FCB VOL: 0
;PCODE: $00002FCC VOL: 0
; 0000 14FA                 {
; 0000 14FB                 cykl_sterownik_2 = 5;
;PCODE: $00002FCD VOL: 0
;PCODE: $00002FCE VOL: 0
; 0000 14FC                 }
; 0000 14FD         break;
;PCODE: $00002FCF VOL: 0
;PCODE: $00002FD0 VOL: 0
; 0000 14FE 
; 0000 14FF         }
;PCODE: $00002FD1 VOL: 0
; 0000 1500 
; 0000 1501 return cykl_sterownik_2;
;PCODE: $00002FD2 VOL: 0
;PCODE: $00002FD3 VOL: 0
;PCODE: $00002FD4 VOL: 0
; 0000 1502 }
;PCODE: $00002FD5 VOL: 0
;
;
;
;
;
;
;int sterownik_3_praca(int PORT)
; 0000 150A {
;PCODE: $00002FD6 VOL: 0
;PCODE: $00002FD7 VOL: 0
; 0000 150B //PORTF.0   IN0  STEROWNIK3
; 0000 150C //PORTF.1   IN1  STEROWNIK3
; 0000 150D //PORTF.2   IN2  STEROWNIK3
; 0000 150E //PORTF.3   IN3  STEROWNIK3
; 0000 150F //PORTF.7   IN4 STEROWNIK 3
; 0000 1510 //PORTB.7   IN5 STEROWNIK 3
; 0000 1511 
; 0000 1512 
; 0000 1513 
; 0000 1514 //PORTF.5   DRIVE  STEROWNIK3
; 0000 1515 
; 0000 1516 //sprawdz_pin0(PORTKK,0x75)  B7 BUSY    LECCP STEROWNIK3
; 0000 1517 //sprawdz_pin3(PORTKK,0x75)  B10 INP    LECP6 STEROWNIK3
; 0000 1518 
; 0000 1519 if(sprawdz_pin7(PORTMM,0x77) == 1)
;	PORT -> Y+0
;PCODE: $00002FD8 VOL: 0
;PCODE: $00002FD9 VOL: 0
;PCODE: $00002FDA VOL: 0
;PCODE: $00002FDB VOL: 0
;PCODE: $00002FDC VOL: 0
;PCODE: $00002FDD VOL: 0
;PCODE: $00002FDE VOL: 0
; 0000 151A      {
; 0000 151B      PORTD.7 = 1;
;PCODE: $00002FDF VOL: 0
;PCODE: $00002FE0 VOL: 0
; 0000 151C      PORTE.2 = 0;
;PCODE: $00002FE1 VOL: 0
;PCODE: $00002FE2 VOL: 0
; 0000 151D      PORTE.3 = 0;  //szlifierki stop
;PCODE: $00002FE3 VOL: 0
;PCODE: $00002FE4 VOL: 0
; 0000 151E      }
; 0000 151F switch(cykl_sterownik_3)
;PCODE: $00002FE5 VOL: 0
;PCODE: $00002FE6 VOL: 0
; 0000 1520         {
; 0000 1521         case 0:
;PCODE: $00002FE7 VOL: 0
;PCODE: $00002FE8 VOL: 0
; 0000 1522 
; 0000 1523             PORT_STER3.byte = PORT;
;PCODE: $00002FE9 VOL: 0
;PCODE: $00002FEA VOL: 0
; 0000 1524             PORT_F.bits.b0 = PORT_STER3.bits.b0;
;PCODE: $00002FEB VOL: 0
;PCODE: $00002FEC VOL: 0
;PCODE: $00002FED VOL: 0
;PCODE: $00002FEE VOL: 0
;PCODE: $00002FEF VOL: 0
;PCODE: $00002FF0 VOL: 0
;PCODE: $00002FF1 VOL: 0
;PCODE: $00002FF2 VOL: 0
; 0000 1525             PORT_F.bits.b1 = PORT_STER3.bits.b1;
;PCODE: $00002FF3 VOL: 0
;PCODE: $00002FF4 VOL: 0
;PCODE: $00002FF5 VOL: 0
;PCODE: $00002FF6 VOL: 0
;PCODE: $00002FF7 VOL: 0
;PCODE: $00002FF8 VOL: 0
;PCODE: $00002FF9 VOL: 0
;PCODE: $00002FFA VOL: 0
;PCODE: $00002FFB VOL: 0
;PCODE: $00002FFC VOL: 0
; 0000 1526             PORT_F.bits.b2 = PORT_STER3.bits.b2;
;PCODE: $00002FFD VOL: 0
;PCODE: $00002FFE VOL: 0
;PCODE: $00002FFF VOL: 0
;PCODE: $00003000 VOL: 0
;PCODE: $00003001 VOL: 0
;PCODE: $00003002 VOL: 0
;PCODE: $00003003 VOL: 0
;PCODE: $00003004 VOL: 0
;PCODE: $00003005 VOL: 0
;PCODE: $00003006 VOL: 0
; 0000 1527             PORT_F.bits.b3 = PORT_STER3.bits.b3;
;PCODE: $00003007 VOL: 0
;PCODE: $00003008 VOL: 0
;PCODE: $00003009 VOL: 0
;PCODE: $0000300A VOL: 0
;PCODE: $0000300B VOL: 0
;PCODE: $0000300C VOL: 0
;PCODE: $0000300D VOL: 0
;PCODE: $0000300E VOL: 0
;PCODE: $0000300F VOL: 0
;PCODE: $00003010 VOL: 0
; 0000 1528             PORT_F.bits.b7 = PORT_STER3.bits.b4;
;PCODE: $00003011 VOL: 0
;PCODE: $00003012 VOL: 0
;PCODE: $00003013 VOL: 0
;PCODE: $00003014 VOL: 0
;PCODE: $00003015 VOL: 0
;PCODE: $00003016 VOL: 0
;PCODE: $00003017 VOL: 0
;PCODE: $00003018 VOL: 0
;PCODE: $00003019 VOL: 0
;PCODE: $0000301A VOL: 0
; 0000 1529             PORTF = PORT_F.byte;
;PCODE: $0000301B VOL: 0
;PCODE: $0000301C VOL: 0
; 0000 152A             PORTB.7 = PORT_STER3.bits.b5;
;PCODE: $0000301D VOL: 0
;PCODE: $0000301E VOL: 0
;PCODE: $0000301F VOL: 0
;PCODE: $00003020 VOL: 0
;PCODE: $00003021 VOL: 0
;PCODE: $00003022 VOL: 0
;PCODE: $00003023 VOL: 0
;PCODE: $00003024 VOL: 0
;PCODE: $00003025 VOL: 0
;PCODE: $00003026 VOL: 0
; 0000 152B 
; 0000 152C 
; 0000 152D 
; 0000 152E             sek2 = 0;
;PCODE: $00003027 VOL: 0
;PCODE: $00003028 VOL: 0
; 0000 152F             cykl_sterownik_3 = 1;
;PCODE: $00003029 VOL: 0
;PCODE: $0000302A VOL: 0
; 0000 1530 
; 0000 1531 
; 0000 1532 
; 0000 1533         break;
;PCODE: $0000302B VOL: 0
; 0000 1534 
; 0000 1535         case 1:
;PCODE: $0000302C VOL: 0
;PCODE: $0000302D VOL: 0
;PCODE: $0000302E VOL: 0
; 0000 1536 
; 0000 1537 
; 0000 1538             if(sek2 > 1)
;PCODE: $0000302F VOL: 0
;PCODE: $00003030 VOL: 0
;PCODE: $00003031 VOL: 0
; 0000 1539                 {
; 0000 153A 
; 0000 153B                 PORT_F.bits.b5 = 1;
;PCODE: $00003032 VOL: 0
;PCODE: $00003033 VOL: 0
;PCODE: $00003034 VOL: 0
; 0000 153C                 PORTF = PORT_F.byte;
;PCODE: $00003035 VOL: 0
;PCODE: $00003036 VOL: 0
; 0000 153D                 cykl_sterownik_3 = 2;    //drive
;PCODE: $00003037 VOL: 0
;PCODE: $00003038 VOL: 0
; 0000 153E                 }
; 0000 153F         break;
;PCODE: $00003039 VOL: 0
;PCODE: $0000303A VOL: 0
; 0000 1540 
; 0000 1541 
; 0000 1542         case 2:
;PCODE: $0000303B VOL: 0
;PCODE: $0000303C VOL: 0
;PCODE: $0000303D VOL: 0
; 0000 1543 
; 0000 1544 
; 0000 1545                if(sprawdz_pin0(PORTKK,0x75) == 0)
;PCODE: $0000303E VOL: 0
;PCODE: $0000303F VOL: 0
;PCODE: $00003040 VOL: 0
;PCODE: $00003041 VOL: 0
;PCODE: $00003042 VOL: 0
;PCODE: $00003043 VOL: 0
;PCODE: $00003044 VOL: 0
; 0000 1546                   {
; 0000 1547                   PORT_F.bits.b5 = 0;
;PCODE: $00003045 VOL: 0
;PCODE: $00003046 VOL: 0
;PCODE: $00003047 VOL: 0
;PCODE: $00003048 VOL: 0
; 0000 1548                   PORTF = PORT_F.byte;
;PCODE: $00003049 VOL: 0
;PCODE: $0000304A VOL: 0
; 0000 1549 
; 0000 154A                   PORT_F.bits.b0 = 0;
;PCODE: $0000304B VOL: 0
;PCODE: $0000304C VOL: 0
;PCODE: $0000304D VOL: 0
;PCODE: $0000304E VOL: 0
; 0000 154B                   PORT_F.bits.b1 = 0;
;PCODE: $0000304F VOL: 0
;PCODE: $00003050 VOL: 0
;PCODE: $00003051 VOL: 0
;PCODE: $00003052 VOL: 0
; 0000 154C                   PORT_F.bits.b2 = 0;
;PCODE: $00003053 VOL: 0
;PCODE: $00003054 VOL: 0
;PCODE: $00003055 VOL: 0
;PCODE: $00003056 VOL: 0
; 0000 154D                   PORT_F.bits.b3 = 0;
;PCODE: $00003057 VOL: 0
;PCODE: $00003058 VOL: 0
;PCODE: $00003059 VOL: 0
;PCODE: $0000305A VOL: 0
; 0000 154E                   PORT_F.bits.b7 = 0;
;PCODE: $0000305B VOL: 0
;PCODE: $0000305C VOL: 0
;PCODE: $0000305D VOL: 0
;PCODE: $0000305E VOL: 0
; 0000 154F                   PORTF = PORT_F.byte;
;PCODE: $0000305F VOL: 0
;PCODE: $00003060 VOL: 0
; 0000 1550                   PORTB.7 = 0;
;PCODE: $00003061 VOL: 0
;PCODE: $00003062 VOL: 0
; 0000 1551 
; 0000 1552                   sek2 = 0;
;PCODE: $00003063 VOL: 0
;PCODE: $00003064 VOL: 0
; 0000 1553                   cykl_sterownik_3 = 3;
;PCODE: $00003065 VOL: 0
;PCODE: $00003066 VOL: 0
; 0000 1554                   }
; 0000 1555 
; 0000 1556         break;
;PCODE: $00003067 VOL: 0
;PCODE: $00003068 VOL: 0
; 0000 1557 
; 0000 1558         case 3:
;PCODE: $00003069 VOL: 0
;PCODE: $0000306A VOL: 0
;PCODE: $0000306B VOL: 0
; 0000 1559 
; 0000 155A 
; 0000 155B                if(sprawdz_pin3(PORTKK,0x75) == 0)  //czy INP
;PCODE: $0000306C VOL: 0
;PCODE: $0000306D VOL: 0
;PCODE: $0000306E VOL: 0
;PCODE: $0000306F VOL: 0
;PCODE: $00003070 VOL: 0
;PCODE: $00003071 VOL: 0
;PCODE: $00003072 VOL: 0
; 0000 155C                   {
; 0000 155D                   sek2 = 0;
;PCODE: $00003073 VOL: 0
;PCODE: $00003074 VOL: 0
; 0000 155E                   cykl_sterownik_3 = 4;
;PCODE: $00003075 VOL: 0
;PCODE: $00003076 VOL: 0
; 0000 155F                   }
; 0000 1560 
; 0000 1561 
; 0000 1562         break;
;PCODE: $00003077 VOL: 0
;PCODE: $00003078 VOL: 0
; 0000 1563 
; 0000 1564 
; 0000 1565         case 4:
;PCODE: $00003079 VOL: 0
;PCODE: $0000307A VOL: 0
;PCODE: $0000307B VOL: 0
; 0000 1566 
; 0000 1567               if(sprawdz_pin0(PORTKK,0x75) == 1)  //czy BUSY
;PCODE: $0000307C VOL: 0
;PCODE: $0000307D VOL: 0
;PCODE: $0000307E VOL: 0
;PCODE: $0000307F VOL: 0
;PCODE: $00003080 VOL: 0
;PCODE: $00003081 VOL: 0
;PCODE: $00003082 VOL: 0
; 0000 1568                 {
; 0000 1569                 cykl_sterownik_3 = 5;
;PCODE: $00003083 VOL: 0
;PCODE: $00003084 VOL: 0
; 0000 156A 
; 0000 156B 
; 0000 156C                 switch(cykl_sterownik_3_wykonalem)
;PCODE: $00003085 VOL: 0
; 0000 156D                     {
; 0000 156E                     case 0:
;PCODE: $00003086 VOL: 0
;PCODE: $00003087 VOL: 0
; 0000 156F                             cykl_sterownik_3_wykonalem = 1;
;PCODE: $00003088 VOL: 0
;PCODE: $00003089 VOL: 0
; 0000 1570                     break;
;PCODE: $0000308A VOL: 0
; 0000 1571 
; 0000 1572                     case 1:
;PCODE: $0000308B VOL: 0
;PCODE: $0000308C VOL: 0
;PCODE: $0000308D VOL: 0
; 0000 1573                             cykl_sterownik_3_wykonalem = 0;
;PCODE: $0000308E VOL: 0
;PCODE: $0000308F VOL: 0
; 0000 1574                     break;
;PCODE: $00003090 VOL: 0
; 0000 1575 
; 0000 1576                     }
;PCODE: $00003091 VOL: 0
; 0000 1577 
; 0000 1578 
; 0000 1579                 }
; 0000 157A         break;
;PCODE: $00003092 VOL: 0
;PCODE: $00003093 VOL: 0
; 0000 157B 
; 0000 157C         }
;PCODE: $00003094 VOL: 0
; 0000 157D 
; 0000 157E return cykl_sterownik_3;
;PCODE: $00003095 VOL: 0
;PCODE: $00003096 VOL: 0
;PCODE: $00003097 VOL: 0
; 0000 157F }
;PCODE: $00003098 VOL: 0
;
;//
;//int sterownik_4_praca(char f,char e,char d, char c, char b, char a)
;int sterownik_4_praca(int PORT,int p)
; 0000 1584 {
;PCODE: $00003099 VOL: 0
;PCODE: $0000309A VOL: 0
; 0000 1585 
; 0000 1586 
; 0000 1587 //PORTB.0   IN0  STEROWNIK4
; 0000 1588 //PORTB.1   IN1  STEROWNIK4
; 0000 1589 //PORTB.2   IN2  STEROWNIK4
; 0000 158A //PORTB.3   IN3  STEROWNIK4
; 0000 158B //PORTE.4  IN4  STEROWNIK4
; 0000 158C //PORTE.5  IN5  STEROWNIK4
; 0000 158D 
; 0000 158E 
; 0000 158F //PORTB.4   SETUP  STEROWNIK4
; 0000 1590 //PORTB.5   DRIVE  STEROWNIK4
; 0000 1591 
; 0000 1592 //sprawdz_pin4(PORTKK,0x75)  B7 BUSY    LECCP STEROWNIK4
; 0000 1593 //sprawdz_pin7(PORTKK,0x75)  B10 INP    LECP6 STEROWNIK4
; 0000 1594 
; 0000 1595 if(sprawdz_pin6(PORTMM,0x77) == 1)
;	PORT -> Y+2
;	p -> Y+0
;PCODE: $0000309B VOL: 0
;PCODE: $0000309C VOL: 0
;PCODE: $0000309D VOL: 0
;PCODE: $0000309E VOL: 0
;PCODE: $0000309F VOL: 0
;PCODE: $000030A0 VOL: 0
;PCODE: $000030A1 VOL: 0
; 0000 1596     {
; 0000 1597     PORTD.7 = 1;
;PCODE: $000030A2 VOL: 0
;PCODE: $000030A3 VOL: 0
; 0000 1598     PORTE.2 = 0;
;PCODE: $000030A4 VOL: 0
;PCODE: $000030A5 VOL: 0
; 0000 1599     PORTE.3 = 0;
;PCODE: $000030A6 VOL: 0
;PCODE: $000030A7 VOL: 0
; 0000 159A     }
; 0000 159B switch(cykl_sterownik_4)
;PCODE: $000030A8 VOL: 0
;PCODE: $000030A9 VOL: 0
; 0000 159C         {
; 0000 159D         case 0:
;PCODE: $000030AA VOL: 0
;PCODE: $000030AB VOL: 0
; 0000 159E 
; 0000 159F             PORT_STER4.byte = PORT;
;PCODE: $000030AC VOL: 0
;PCODE: $000030AD VOL: 0
; 0000 15A0             PORTB.0 = PORT_STER4.bits.b0;
;PCODE: $000030AE VOL: 0
;PCODE: $000030AF VOL: 0
;PCODE: $000030B0 VOL: 0
;PCODE: $000030B1 VOL: 0
;PCODE: $000030B2 VOL: 0
;PCODE: $000030B3 VOL: 0
;PCODE: $000030B4 VOL: 0
;PCODE: $000030B5 VOL: 0
;PCODE: $000030B6 VOL: 0
;PCODE: $000030B7 VOL: 0
; 0000 15A1             PORTB.1 = PORT_STER4.bits.b1;
;PCODE: $000030B8 VOL: 0
;PCODE: $000030B9 VOL: 0
;PCODE: $000030BA VOL: 0
;PCODE: $000030BB VOL: 0
;PCODE: $000030BC VOL: 0
;PCODE: $000030BD VOL: 0
;PCODE: $000030BE VOL: 0
;PCODE: $000030BF VOL: 0
;PCODE: $000030C0 VOL: 0
;PCODE: $000030C1 VOL: 0
; 0000 15A2             PORTB.2 = PORT_STER4.bits.b2;
;PCODE: $000030C2 VOL: 0
;PCODE: $000030C3 VOL: 0
;PCODE: $000030C4 VOL: 0
;PCODE: $000030C5 VOL: 0
;PCODE: $000030C6 VOL: 0
;PCODE: $000030C7 VOL: 0
;PCODE: $000030C8 VOL: 0
;PCODE: $000030C9 VOL: 0
;PCODE: $000030CA VOL: 0
;PCODE: $000030CB VOL: 0
; 0000 15A3             PORTB.3 = PORT_STER4.bits.b3;
;PCODE: $000030CC VOL: 0
;PCODE: $000030CD VOL: 0
;PCODE: $000030CE VOL: 0
;PCODE: $000030CF VOL: 0
;PCODE: $000030D0 VOL: 0
;PCODE: $000030D1 VOL: 0
;PCODE: $000030D2 VOL: 0
;PCODE: $000030D3 VOL: 0
;PCODE: $000030D4 VOL: 0
;PCODE: $000030D5 VOL: 0
; 0000 15A4             PORTE.4 = PORT_STER4.bits.b4;
;PCODE: $000030D6 VOL: 0
;PCODE: $000030D7 VOL: 0
;PCODE: $000030D8 VOL: 0
;PCODE: $000030D9 VOL: 0
;PCODE: $000030DA VOL: 0
;PCODE: $000030DB VOL: 0
;PCODE: $000030DC VOL: 0
;PCODE: $000030DD VOL: 0
;PCODE: $000030DE VOL: 0
;PCODE: $000030DF VOL: 0
; 0000 15A5             PORTE.5 = PORT_STER4.bits.b5;
;PCODE: $000030E0 VOL: 0
;PCODE: $000030E1 VOL: 0
;PCODE: $000030E2 VOL: 0
;PCODE: $000030E3 VOL: 0
;PCODE: $000030E4 VOL: 0
;PCODE: $000030E5 VOL: 0
;PCODE: $000030E6 VOL: 0
;PCODE: $000030E7 VOL: 0
;PCODE: $000030E8 VOL: 0
;PCODE: $000030E9 VOL: 0
; 0000 15A6 
; 0000 15A7             sek4 = 0;
;PCODE: $000030EA VOL: 0
;PCODE: $000030EB VOL: 0
; 0000 15A8             cykl_sterownik_4 = 1;
;PCODE: $000030EC VOL: 0
;PCODE: $000030ED VOL: 0
; 0000 15A9 
; 0000 15AA         break;
;PCODE: $000030EE VOL: 0
; 0000 15AB 
; 0000 15AC         case 1:
;PCODE: $000030EF VOL: 0
;PCODE: $000030F0 VOL: 0
;PCODE: $000030F1 VOL: 0
; 0000 15AD 
; 0000 15AE             if(sek4 > 1)
;PCODE: $000030F2 VOL: 0
;PCODE: $000030F3 VOL: 0
;PCODE: $000030F4 VOL: 0
; 0000 15AF                 {
; 0000 15B0                 PORTB.5 = 1;
;PCODE: $000030F5 VOL: 0
;PCODE: $000030F6 VOL: 0
; 0000 15B1                 cykl_sterownik_4 = 2;    //drive
;PCODE: $000030F7 VOL: 0
;PCODE: $000030F8 VOL: 0
; 0000 15B2                 }
; 0000 15B3         break;
;PCODE: $000030F9 VOL: 0
;PCODE: $000030FA VOL: 0
; 0000 15B4 
; 0000 15B5 
; 0000 15B6         case 2:
;PCODE: $000030FB VOL: 0
;PCODE: $000030FC VOL: 0
;PCODE: $000030FD VOL: 0
; 0000 15B7 
; 0000 15B8                if(sprawdz_pin4(PORTKK,0x75) == 0)
;PCODE: $000030FE VOL: 0
;PCODE: $000030FF VOL: 0
;PCODE: $00003100 VOL: 0
;PCODE: $00003101 VOL: 0
;PCODE: $00003102 VOL: 0
;PCODE: $00003103 VOL: 0
;PCODE: $00003104 VOL: 0
; 0000 15B9                   {
; 0000 15BA                   PORTB.5 = 0;  //drive
;PCODE: $00003105 VOL: 0
;PCODE: $00003106 VOL: 0
; 0000 15BB 
; 0000 15BC                   PORTB.0 = 0;
;PCODE: $00003107 VOL: 0
;PCODE: $00003108 VOL: 0
; 0000 15BD                   PORTB.1 = 0;
;PCODE: $00003109 VOL: 0
;PCODE: $0000310A VOL: 0
; 0000 15BE                   PORTB.2 = 0;
;PCODE: $0000310B VOL: 0
;PCODE: $0000310C VOL: 0
; 0000 15BF                   PORTB.3 = 0;
;PCODE: $0000310D VOL: 0
;PCODE: $0000310E VOL: 0
; 0000 15C0                   PORTE.4 = 0;
;PCODE: $0000310F VOL: 0
;PCODE: $00003110 VOL: 0
; 0000 15C1                   PORTE.5 = 0;
;PCODE: $00003111 VOL: 0
;PCODE: $00003112 VOL: 0
; 0000 15C2 
; 0000 15C3                   sek4 = 0;
;PCODE: $00003113 VOL: 0
;PCODE: $00003114 VOL: 0
; 0000 15C4                   cykl_sterownik_4 = 3;
;PCODE: $00003115 VOL: 0
;PCODE: $00003116 VOL: 0
; 0000 15C5                   }
; 0000 15C6 
; 0000 15C7         break;
;PCODE: $00003117 VOL: 0
;PCODE: $00003118 VOL: 0
; 0000 15C8 
; 0000 15C9         case 3:
;PCODE: $00003119 VOL: 0
;PCODE: $0000311A VOL: 0
;PCODE: $0000311B VOL: 0
; 0000 15CA 
; 0000 15CB                if(sprawdz_pin7(PORTKK,0x75) == 0)  //czy INP
;PCODE: $0000311C VOL: 0
;PCODE: $0000311D VOL: 0
;PCODE: $0000311E VOL: 0
;PCODE: $0000311F VOL: 0
;PCODE: $00003120 VOL: 0
;PCODE: $00003121 VOL: 0
;PCODE: $00003122 VOL: 0
; 0000 15CC                   {
; 0000 15CD                   //if(p == 1)
; 0000 15CE                   //  PORTE.2 = 1;
; 0000 15CF 
; 0000 15D0                   sek4 = 0;
;PCODE: $00003123 VOL: 0
;PCODE: $00003124 VOL: 0
; 0000 15D1                   cykl_sterownik_4 = 4;
;PCODE: $00003125 VOL: 0
;PCODE: $00003126 VOL: 0
; 0000 15D2                   }
; 0000 15D3 
; 0000 15D4 
; 0000 15D5         break;
;PCODE: $00003127 VOL: 0
;PCODE: $00003128 VOL: 0
; 0000 15D6 
; 0000 15D7 
; 0000 15D8         case 4:
;PCODE: $00003129 VOL: 0
;PCODE: $0000312A VOL: 0
;PCODE: $0000312B VOL: 0
; 0000 15D9 
; 0000 15DA               if(sprawdz_pin4(PORTKK,0x75) == 1)  //czy BUSY
;PCODE: $0000312C VOL: 0
;PCODE: $0000312D VOL: 0
;PCODE: $0000312E VOL: 0
;PCODE: $0000312F VOL: 0
;PCODE: $00003130 VOL: 0
;PCODE: $00003131 VOL: 0
;PCODE: $00003132 VOL: 0
; 0000 15DB                 {
; 0000 15DC                 cykl_sterownik_4 = 5;
;PCODE: $00003133 VOL: 0
;PCODE: $00003134 VOL: 0
; 0000 15DD                 }
; 0000 15DE         break;
;PCODE: $00003135 VOL: 0
;PCODE: $00003136 VOL: 0
; 0000 15DF 
; 0000 15E0         }
;PCODE: $00003137 VOL: 0
; 0000 15E1 
; 0000 15E2 return cykl_sterownik_4;
;PCODE: $00003138 VOL: 0
;PCODE: $00003139 VOL: 0
;PCODE: $0000313A VOL: 0
; 0000 15E3 }
;PCODE: $0000313B VOL: 0
;
;
;void test_geometryczny()
; 0000 15E7 {
;PCODE: $0000313C VOL: 0
;PCODE: $0000313D VOL: 0
; 0000 15E8 int cykl_testu,d;
; 0000 15E9 int ff[12];
; 0000 15EA int i;
; 0000 15EB d = 0;
;PCODE: $0000313E VOL: 0
;PCODE: $0000313F VOL: 0
;	cykl_testu -> R16,R17
;	d -> R18,R19
;	ff -> Y+6
;	i -> R20,R21
;PCODE: $00003140 VOL: 0
;PCODE: $00003141 VOL: 0
; 0000 15EC cykl_testu = 0;
;PCODE: $00003142 VOL: 0
;PCODE: $00003143 VOL: 0
; 0000 15ED 
; 0000 15EE for(i=0;i<11;i++)
;PCODE: $00003144 VOL: 0
;PCODE: $00003145 VOL: 0
;PCODE: $00003146 VOL: 0
;PCODE: $00003147 VOL: 0
;PCODE: $00003148 VOL: 0
;PCODE: $00003149 VOL: 0
;PCODE: $0000314A VOL: 0
;PCODE: $0000314B VOL: 0
;PCODE: $0000314C VOL: 0
; 0000 15EF      ff[i]=0;
;PCODE: $0000314D VOL: 0
;PCODE: $0000314E VOL: 0
;PCODE: $0000314F VOL: 0
;PCODE: $00003150 VOL: 0
;PCODE: $00003151 VOL: 0
;PCODE: $00003152 VOL: 0
;PCODE: $00003153 VOL: 0
;PCODE: $00003154 VOL: 0
;PCODE: $00003155 VOL: 0
;PCODE: $00003156 VOL: 0
;PCODE: $00003157 VOL: 0
; 0000 15F2 if(test_geometryczny_rzad_1 == 1 & test_geometryczny_rzad_2 == 0 & PORTD.7 == 0  & PORT_F.bits.b6 == 0 &
; 0000 15F3     il_zaciskow_rzad_1 > 1 & macierz_zaciskow[1]!=0)
;PCODE: $00003158 VOL: 0
;PCODE: $00003159 VOL: 0
;PCODE: $0000315A VOL: 0
;PCODE: $0000315B VOL: 0
;PCODE: $0000315C VOL: 0
;PCODE: $0000315D VOL: 0
;PCODE: $0000315E VOL: 0
;PCODE: $0000315F VOL: 0
;PCODE: $00003160 VOL: 0
;PCODE: $00003161 VOL: 0
;PCODE: $00003162 VOL: 0
;PCODE: $00003163 VOL: 0
;PCODE: $00003164 VOL: 0
;PCODE: $00003165 VOL: 0
;PCODE: $00003166 VOL: 0
;PCODE: $00003167 VOL: 0
;PCODE: $00003168 VOL: 0
;PCODE: $00003169 VOL: 0
;PCODE: $0000316A VOL: 0
;PCODE: $0000316B VOL: 0
;PCODE: $0000316C VOL: 0
;PCODE: $0000316D VOL: 0
;PCODE: $0000316E VOL: 0
;PCODE: $0000316F VOL: 0
;PCODE: $00003170 VOL: 0
;PCODE: $00003171 VOL: 0
;PCODE: $00003172 VOL: 0
;PCODE: $00003173 VOL: 0
;PCODE: $00003174 VOL: 0
;PCODE: $00003175 VOL: 0
;PCODE: $00003176 VOL: 0
;PCODE: $00003177 VOL: 0
;PCODE: $00003178 VOL: 0
; 0000 15F4     {
; 0000 15F5     while(test_geometryczny_rzad_1 == 1)
;PCODE: $00003179 VOL: 0
;PCODE: $0000317A VOL: 0
;PCODE: $0000317B VOL: 0
;PCODE: $0000317C VOL: 0
; 0000 15F6         {
; 0000 15F7         switch(cykl_testu)
;PCODE: $0000317D VOL: 0
; 0000 15F8             {
; 0000 15F9              case 0:
;PCODE: $0000317E VOL: 0
;PCODE: $0000317F VOL: 0
; 0000 15FA 
; 0000 15FB                cykl_sterownik_1 = 0;
;PCODE: $00003180 VOL: 0
;PCODE: $00003181 VOL: 0
; 0000 15FC                cykl_sterownik_2 = 0;
;PCODE: $00003182 VOL: 0
;PCODE: $00003183 VOL: 0
; 0000 15FD                cykl_sterownik_3 = 0;
;PCODE: $00003184 VOL: 0
;PCODE: $00003185 VOL: 0
; 0000 15FE                cykl_sterownik_4 = 0;
;PCODE: $00003186 VOL: 0
;PCODE: $00003187 VOL: 0
; 0000 15FF                wybor_linijek_sterownikow(1);
;PCODE: $00003188 VOL: 0
;PCODE: $00003189 VOL: 0
;PCODE: $0000318A VOL: 0
; 0000 1600                cykl_testu = 1;
;PCODE: $0000318B VOL: 0
;PCODE: $0000318C VOL: 0
; 0000 1601 
; 0000 1602 
; 0000 1603 
; 0000 1604             break;
;PCODE: $0000318D VOL: 0
; 0000 1605 
; 0000 1606             case 1:
;PCODE: $0000318E VOL: 0
;PCODE: $0000318F VOL: 0
;PCODE: $00003190 VOL: 0
; 0000 1607 
; 0000 1608             //na sam dol zjezdzamy pionami
; 0000 1609                 if(cykl_sterownik_3 < 5)
;PCODE: $00003191 VOL: 0
;PCODE: $00003192 VOL: 0
;PCODE: $00003193 VOL: 0
; 0000 160A                     cykl_sterownik_3 = sterownik_3_praca(0x00);  //na sam dol, jedziemy miedzy rzedami
;PCODE: $00003194 VOL: 0
;PCODE: $00003195 VOL: 0
;PCODE: $00003196 VOL: 0
;PCODE: $00003197 VOL: 0
; 0000 160B                 if(cykl_sterownik_4 < 5)
;PCODE: $00003198 VOL: 0
;PCODE: $00003199 VOL: 0
;PCODE: $0000319A VOL: 0
;PCODE: $0000319B VOL: 0
; 0000 160C                     cykl_sterownik_4 = sterownik_4_praca(0x00,0);  //na sam dol, jedziemy miedzy rzedami
;PCODE: $0000319C VOL: 0
;PCODE: $0000319D VOL: 0
;PCODE: $0000319E VOL: 0
;PCODE: $0000319F VOL: 0
;PCODE: $000031A0 VOL: 0
;PCODE: $000031A1 VOL: 0
; 0000 160D 
; 0000 160E                 if(cykl_sterownik_3 == 5 & cykl_sterownik_4 == 5)
;PCODE: $000031A2 VOL: 0
;PCODE: $000031A3 VOL: 0
;PCODE: $000031A4 VOL: 0
;PCODE: $000031A5 VOL: 0
;PCODE: $000031A6 VOL: 0
;PCODE: $000031A7 VOL: 0
;PCODE: $000031A8 VOL: 0
;PCODE: $000031A9 VOL: 0
;PCODE: $000031AA VOL: 0
;PCODE: $000031AB VOL: 0
; 0000 160F                                         {
; 0000 1610                                         cykl_sterownik_3 = 0;
;PCODE: $000031AC VOL: 0
;PCODE: $000031AD VOL: 0
; 0000 1611                                         cykl_sterownik_4 = 0;
;PCODE: $000031AE VOL: 0
;PCODE: $000031AF VOL: 0
; 0000 1612                                         cykl_testu = 2;
;PCODE: $000031B0 VOL: 0
;PCODE: $000031B1 VOL: 0
; 0000 1613                                         }
; 0000 1614 
; 0000 1615 
; 0000 1616 
; 0000 1617             break;
;PCODE: $000031B2 VOL: 0
;PCODE: $000031B3 VOL: 0
; 0000 1618 
; 0000 1619 
; 0000 161A             case 2:
;PCODE: $000031B4 VOL: 0
;PCODE: $000031B5 VOL: 0
;PCODE: $000031B6 VOL: 0
; 0000 161B 
; 0000 161C                                 if(cykl_sterownik_1 < 5)
;PCODE: $000031B7 VOL: 0
;PCODE: $000031B8 VOL: 0
;PCODE: $000031B9 VOL: 0
; 0000 161D                                     cykl_sterownik_1 = sterownik_1_praca(0x000);
;PCODE: $000031BA VOL: 0
;PCODE: $000031BB VOL: 0
;PCODE: $000031BC VOL: 0
;PCODE: $000031BD VOL: 0
; 0000 161E                                  if(cykl_sterownik_2 < 5)                                //ster 1 pod pin pozycjonujacy
;PCODE: $000031BE VOL: 0
;PCODE: $000031BF VOL: 0
;PCODE: $000031C0 VOL: 0
;PCODE: $000031C1 VOL: 0
; 0000 161F                                     cykl_sterownik_2 = sterownik_2_praca(0x008);       //ster 2 ucieczka do zera (druciak)
;PCODE: $000031C2 VOL: 0
;PCODE: $000031C3 VOL: 0
;PCODE: $000031C4 VOL: 0
;PCODE: $000031C5 VOL: 0
; 0000 1620 
; 0000 1621                                     if(cykl_sterownik_1 == 5 & cykl_sterownik_2 == 5)
;PCODE: $000031C6 VOL: 0
;PCODE: $000031C7 VOL: 0
;PCODE: $000031C8 VOL: 0
;PCODE: $000031C9 VOL: 0
;PCODE: $000031CA VOL: 0
;PCODE: $000031CB VOL: 0
;PCODE: $000031CC VOL: 0
;PCODE: $000031CD VOL: 0
;PCODE: $000031CE VOL: 0
;PCODE: $000031CF VOL: 0
; 0000 1622                                         {
; 0000 1623                                         cykl_sterownik_1 = 0;
;PCODE: $000031D0 VOL: 0
;PCODE: $000031D1 VOL: 0
; 0000 1624                                         cykl_sterownik_2 = 0;
;PCODE: $000031D2 VOL: 0
;PCODE: $000031D3 VOL: 0
; 0000 1625                                         cykl_sterownik_3 = 0;
;PCODE: $000031D4 VOL: 0
;PCODE: $000031D5 VOL: 0
; 0000 1626                                         cykl_sterownik_4 = 0;
;PCODE: $000031D6 VOL: 0
;PCODE: $000031D7 VOL: 0
; 0000 1627                                         cykl_testu = 3;
;PCODE: $000031D8 VOL: 0
;PCODE: $000031D9 VOL: 0
; 0000 1628 
; 0000 1629                                         }
; 0000 162A 
; 0000 162B             break;
;PCODE: $000031DA VOL: 0
;PCODE: $000031DB VOL: 0
; 0000 162C 
; 0000 162D 
; 0000 162E             case 3:
;PCODE: $000031DC VOL: 0
;PCODE: $000031DD VOL: 0
;PCODE: $000031DE VOL: 0
; 0000 162F 
; 0000 1630                                 if(cykl_sterownik_1 < 5)
;PCODE: $000031DF VOL: 0
;PCODE: $000031E0 VOL: 0
;PCODE: $000031E1 VOL: 0
; 0000 1631                                     cykl_sterownik_1 = sterownik_1_praca(a[0]); //ster 1 pod srodek zacisku
;PCODE: $000031E2 VOL: 0
;PCODE: $000031E3 VOL: 0
;PCODE: $000031E4 VOL: 0
;PCODE: $000031E5 VOL: 0
; 0000 1632 
; 0000 1633                                     if(cykl_sterownik_1 == 5)
;PCODE: $000031E6 VOL: 0
;PCODE: $000031E7 VOL: 0
;PCODE: $000031E8 VOL: 0
;PCODE: $000031E9 VOL: 0
; 0000 1634                                         {
; 0000 1635                                         cykl_sterownik_1 = 0;
;PCODE: $000031EA VOL: 0
;PCODE: $000031EB VOL: 0
; 0000 1636                                         cykl_sterownik_2 = 0;
;PCODE: $000031EC VOL: 0
;PCODE: $000031ED VOL: 0
; 0000 1637                                         cykl_sterownik_3 = 0;
;PCODE: $000031EE VOL: 0
;PCODE: $000031EF VOL: 0
; 0000 1638                                         cykl_sterownik_4 = 0;
;PCODE: $000031F0 VOL: 0
;PCODE: $000031F1 VOL: 0
; 0000 1639                                         cykl_testu = 4;
;PCODE: $000031F2 VOL: 0
;PCODE: $000031F3 VOL: 0
; 0000 163A                                         }
; 0000 163B 
; 0000 163C             break;
;PCODE: $000031F4 VOL: 0
;PCODE: $000031F5 VOL: 0
; 0000 163D 
; 0000 163E             case 4:
;PCODE: $000031F6 VOL: 0
;PCODE: $000031F7 VOL: 0
;PCODE: $000031F8 VOL: 0
; 0000 163F 
; 0000 1640                                    if(cykl_sterownik_3 < 5)
;PCODE: $000031F9 VOL: 0
;PCODE: $000031FA VOL: 0
;PCODE: $000031FB VOL: 0
; 0000 1641                                         cykl_sterownik_3 = sterownik_3_praca(a[4]);  //abs
;PCODE: $000031FC VOL: 0
;PCODE: $000031FD VOL: 0
;PCODE: $000031FE VOL: 0
;PCODE: $000031FF VOL: 0
;PCODE: $00003200 VOL: 0
; 0000 1642 
; 0000 1643                                    if(cykl_sterownik_3 == 5)
;PCODE: $00003201 VOL: 0
;PCODE: $00003202 VOL: 0
;PCODE: $00003203 VOL: 0
;PCODE: $00003204 VOL: 0
; 0000 1644                                         {
; 0000 1645                                         cykl_sterownik_1 = 0;
;PCODE: $00003205 VOL: 0
;PCODE: $00003206 VOL: 0
; 0000 1646                                         cykl_sterownik_2 = 0;
;PCODE: $00003207 VOL: 0
;PCODE: $00003208 VOL: 0
; 0000 1647                                         cykl_sterownik_3 = 0;
;PCODE: $00003209 VOL: 0
;PCODE: $0000320A VOL: 0
; 0000 1648                                         cykl_sterownik_4 = 0;
;PCODE: $0000320B VOL: 0
;PCODE: $0000320C VOL: 0
; 0000 1649                                         cykl_testu = 5;
;PCODE: $0000320D VOL: 0
;PCODE: $0000320E VOL: 0
; 0000 164A                                         }
; 0000 164B 
; 0000 164C             break;
;PCODE: $0000320F VOL: 0
;PCODE: $00003210 VOL: 0
; 0000 164D 
; 0000 164E             case 5:
;PCODE: $00003211 VOL: 0
;PCODE: $00003212 VOL: 0
;PCODE: $00003213 VOL: 0
; 0000 164F 
; 0000 1650                                      d = odczytaj_parametr(48,80);
;PCODE: $00003214 VOL: 0
;PCODE: $00003215 VOL: 0
;PCODE: $00003216 VOL: 0
;PCODE: $00003217 VOL: 0
;PCODE: $00003218 VOL: 0
;PCODE: $00003219 VOL: 0
; 0000 1651                                         if(d == 0)
;PCODE: $0000321A VOL: 0
;PCODE: $0000321B VOL: 0
; 0000 1652                                             cykl_testu = 666;
;PCODE: $0000321C VOL: 0
;PCODE: $0000321D VOL: 0
; 0000 1653 
; 0000 1654                                         if(d == 2 & ff[2] == 0)
;PCODE: $0000321E VOL: 0
;PCODE: $0000321F VOL: 0
;PCODE: $00003220 VOL: 0
;PCODE: $00003221 VOL: 0
;PCODE: $00003222 VOL: 0
;PCODE: $00003223 VOL: 0
;PCODE: $00003224 VOL: 0
;PCODE: $00003225 VOL: 0
;PCODE: $00003226 VOL: 0
;PCODE: $00003227 VOL: 0
; 0000 1655                                             {
; 0000 1656                                             cykl_testu = 6;
;PCODE: $00003228 VOL: 0
;PCODE: $00003229 VOL: 0
; 0000 1657                                             ff[d]=1;
;PCODE: $0000322A VOL: 0
;PCODE: $0000322B VOL: 0
;PCODE: $0000322C VOL: 0
;PCODE: $0000322D VOL: 0
;PCODE: $0000322E VOL: 0
;PCODE: $0000322F VOL: 0
; 0000 1658                                             }
; 0000 1659                                         if(d == 3 & ff[2] == 1 & ff[3] == 0)
;PCODE: $00003230 VOL: 0
;PCODE: $00003231 VOL: 0
;PCODE: $00003232 VOL: 0
;PCODE: $00003233 VOL: 0
;PCODE: $00003234 VOL: 0
;PCODE: $00003235 VOL: 0
;PCODE: $00003236 VOL: 0
;PCODE: $00003237 VOL: 0
;PCODE: $00003238 VOL: 0
;PCODE: $00003239 VOL: 0
;PCODE: $0000323A VOL: 0
;PCODE: $0000323B VOL: 0
;PCODE: $0000323C VOL: 0
;PCODE: $0000323D VOL: 0
;PCODE: $0000323E VOL: 0
; 0000 165A                                             {
; 0000 165B                                             cykl_testu = 6;
;PCODE: $0000323F VOL: 0
;PCODE: $00003240 VOL: 0
; 0000 165C                                             ff[d]=1;
;PCODE: $00003241 VOL: 0
;PCODE: $00003242 VOL: 0
;PCODE: $00003243 VOL: 0
;PCODE: $00003244 VOL: 0
;PCODE: $00003245 VOL: 0
;PCODE: $00003246 VOL: 0
; 0000 165D                                             }
; 0000 165E                                         if(d == 4 & ff[3] == 1 & ff[4] == 0)
;PCODE: $00003247 VOL: 0
;PCODE: $00003248 VOL: 0
;PCODE: $00003249 VOL: 0
;PCODE: $0000324A VOL: 0
;PCODE: $0000324B VOL: 0
;PCODE: $0000324C VOL: 0
;PCODE: $0000324D VOL: 0
;PCODE: $0000324E VOL: 0
;PCODE: $0000324F VOL: 0
;PCODE: $00003250 VOL: 0
;PCODE: $00003251 VOL: 0
;PCODE: $00003252 VOL: 0
;PCODE: $00003253 VOL: 0
;PCODE: $00003254 VOL: 0
;PCODE: $00003255 VOL: 0
; 0000 165F                                             {
; 0000 1660                                             cykl_testu = 6;
;PCODE: $00003256 VOL: 0
;PCODE: $00003257 VOL: 0
; 0000 1661                                             ff[d]=1;
;PCODE: $00003258 VOL: 0
;PCODE: $00003259 VOL: 0
;PCODE: $0000325A VOL: 0
;PCODE: $0000325B VOL: 0
;PCODE: $0000325C VOL: 0
;PCODE: $0000325D VOL: 0
; 0000 1662                                             }
; 0000 1663                                         if(d == 5 & ff[4] == 1 & ff[5] == 0)
;PCODE: $0000325E VOL: 0
;PCODE: $0000325F VOL: 0
;PCODE: $00003260 VOL: 0
;PCODE: $00003261 VOL: 0
;PCODE: $00003262 VOL: 0
;PCODE: $00003263 VOL: 0
;PCODE: $00003264 VOL: 0
;PCODE: $00003265 VOL: 0
;PCODE: $00003266 VOL: 0
;PCODE: $00003267 VOL: 0
;PCODE: $00003268 VOL: 0
;PCODE: $00003269 VOL: 0
;PCODE: $0000326A VOL: 0
;PCODE: $0000326B VOL: 0
;PCODE: $0000326C VOL: 0
; 0000 1664                                             {
; 0000 1665                                             cykl_testu = 6;
;PCODE: $0000326D VOL: 0
;PCODE: $0000326E VOL: 0
; 0000 1666                                             ff[d]=1;
;PCODE: $0000326F VOL: 0
;PCODE: $00003270 VOL: 0
;PCODE: $00003271 VOL: 0
;PCODE: $00003272 VOL: 0
;PCODE: $00003273 VOL: 0
;PCODE: $00003274 VOL: 0
; 0000 1667                                             }
; 0000 1668                                         if(d == 6 & ff[5] == 1 & ff[6] == 0)
;PCODE: $00003275 VOL: 0
;PCODE: $00003276 VOL: 0
;PCODE: $00003277 VOL: 0
;PCODE: $00003278 VOL: 0
;PCODE: $00003279 VOL: 0
;PCODE: $0000327A VOL: 0
;PCODE: $0000327B VOL: 0
;PCODE: $0000327C VOL: 0
;PCODE: $0000327D VOL: 0
;PCODE: $0000327E VOL: 0
;PCODE: $0000327F VOL: 0
;PCODE: $00003280 VOL: 0
;PCODE: $00003281 VOL: 0
;PCODE: $00003282 VOL: 0
;PCODE: $00003283 VOL: 0
; 0000 1669                                             {
; 0000 166A                                             cykl_testu = 6;
;PCODE: $00003284 VOL: 0
;PCODE: $00003285 VOL: 0
; 0000 166B                                             ff[d]=1;
;PCODE: $00003286 VOL: 0
;PCODE: $00003287 VOL: 0
;PCODE: $00003288 VOL: 0
;PCODE: $00003289 VOL: 0
;PCODE: $0000328A VOL: 0
;PCODE: $0000328B VOL: 0
; 0000 166C                                             }
; 0000 166D                                         if(d == 7 & ff[6] == 1 & ff[7] == 0)
;PCODE: $0000328C VOL: 0
;PCODE: $0000328D VOL: 0
;PCODE: $0000328E VOL: 0
;PCODE: $0000328F VOL: 0
;PCODE: $00003290 VOL: 0
;PCODE: $00003291 VOL: 0
;PCODE: $00003292 VOL: 0
;PCODE: $00003293 VOL: 0
;PCODE: $00003294 VOL: 0
;PCODE: $00003295 VOL: 0
;PCODE: $00003296 VOL: 0
;PCODE: $00003297 VOL: 0
;PCODE: $00003298 VOL: 0
;PCODE: $00003299 VOL: 0
;PCODE: $0000329A VOL: 0
; 0000 166E                                             {
; 0000 166F                                             cykl_testu = 6;
;PCODE: $0000329B VOL: 0
;PCODE: $0000329C VOL: 0
; 0000 1670                                             ff[d]=1;
;PCODE: $0000329D VOL: 0
;PCODE: $0000329E VOL: 0
;PCODE: $0000329F VOL: 0
;PCODE: $000032A0 VOL: 0
;PCODE: $000032A1 VOL: 0
;PCODE: $000032A2 VOL: 0
; 0000 1671                                             }
; 0000 1672                                         if(d == 8 & ff[7] == 1 & ff[8] == 0)
;PCODE: $000032A3 VOL: 0
;PCODE: $000032A4 VOL: 0
;PCODE: $000032A5 VOL: 0
;PCODE: $000032A6 VOL: 0
;PCODE: $000032A7 VOL: 0
;PCODE: $000032A8 VOL: 0
;PCODE: $000032A9 VOL: 0
;PCODE: $000032AA VOL: 0
;PCODE: $000032AB VOL: 0
;PCODE: $000032AC VOL: 0
;PCODE: $000032AD VOL: 0
;PCODE: $000032AE VOL: 0
;PCODE: $000032AF VOL: 0
;PCODE: $000032B0 VOL: 0
;PCODE: $000032B1 VOL: 0
; 0000 1673                                             {
; 0000 1674                                             cykl_testu = 6;
;PCODE: $000032B2 VOL: 0
;PCODE: $000032B3 VOL: 0
; 0000 1675                                             ff[d]=1;
;PCODE: $000032B4 VOL: 0
;PCODE: $000032B5 VOL: 0
;PCODE: $000032B6 VOL: 0
;PCODE: $000032B7 VOL: 0
;PCODE: $000032B8 VOL: 0
;PCODE: $000032B9 VOL: 0
; 0000 1676                                             }
; 0000 1677                                         if(d == 9 & ff[8] == 1 & ff[9] == 0)
;PCODE: $000032BA VOL: 0
;PCODE: $000032BB VOL: 0
;PCODE: $000032BC VOL: 0
;PCODE: $000032BD VOL: 0
;PCODE: $000032BE VOL: 0
;PCODE: $000032BF VOL: 0
;PCODE: $000032C0 VOL: 0
;PCODE: $000032C1 VOL: 0
;PCODE: $000032C2 VOL: 0
;PCODE: $000032C3 VOL: 0
;PCODE: $000032C4 VOL: 0
;PCODE: $000032C5 VOL: 0
;PCODE: $000032C6 VOL: 0
;PCODE: $000032C7 VOL: 0
;PCODE: $000032C8 VOL: 0
; 0000 1678                                             {
; 0000 1679                                             cykl_testu = 6;
;PCODE: $000032C9 VOL: 0
;PCODE: $000032CA VOL: 0
; 0000 167A                                             ff[d]=1;
;PCODE: $000032CB VOL: 0
;PCODE: $000032CC VOL: 0
;PCODE: $000032CD VOL: 0
;PCODE: $000032CE VOL: 0
;PCODE: $000032CF VOL: 0
;PCODE: $000032D0 VOL: 0
; 0000 167B                                             }
; 0000 167C                                         if(d == 10 & ff[9] == 1 & ff[10] == 0)
;PCODE: $000032D1 VOL: 0
;PCODE: $000032D2 VOL: 0
;PCODE: $000032D3 VOL: 0
;PCODE: $000032D4 VOL: 0
;PCODE: $000032D5 VOL: 0
;PCODE: $000032D6 VOL: 0
;PCODE: $000032D7 VOL: 0
;PCODE: $000032D8 VOL: 0
;PCODE: $000032D9 VOL: 0
;PCODE: $000032DA VOL: 0
;PCODE: $000032DB VOL: 0
;PCODE: $000032DC VOL: 0
;PCODE: $000032DD VOL: 0
;PCODE: $000032DE VOL: 0
;PCODE: $000032DF VOL: 0
; 0000 167D                                             {
; 0000 167E                                             cykl_testu = 6;
;PCODE: $000032E0 VOL: 0
;PCODE: $000032E1 VOL: 0
; 0000 167F                                             ff[d]=1;
;PCODE: $000032E2 VOL: 0
;PCODE: $000032E3 VOL: 0
;PCODE: $000032E4 VOL: 0
;PCODE: $000032E5 VOL: 0
;PCODE: $000032E6 VOL: 0
;PCODE: $000032E7 VOL: 0
; 0000 1680                                             }
; 0000 1681 
; 0000 1682 
; 0000 1683             break;
;PCODE: $000032E8 VOL: 0
;PCODE: $000032E9 VOL: 0
; 0000 1684 
; 0000 1685             case 6:
;PCODE: $000032EA VOL: 0
;PCODE: $000032EB VOL: 0
;PCODE: $000032EC VOL: 0
; 0000 1686                                      if(cykl_sterownik_3 < 5)
;PCODE: $000032ED VOL: 0
;PCODE: $000032EE VOL: 0
;PCODE: $000032EF VOL: 0
; 0000 1687                                             cykl_sterownik_3 = sterownik_3_praca(0x00);  //na sam dol, jedziemy miedzy rzedami
;PCODE: $000032F0 VOL: 0
;PCODE: $000032F1 VOL: 0
;PCODE: $000032F2 VOL: 0
;PCODE: $000032F3 VOL: 0
; 0000 1688                                         if(cykl_sterownik_3 == 5)
;PCODE: $000032F4 VOL: 0
;PCODE: $000032F5 VOL: 0
;PCODE: $000032F6 VOL: 0
;PCODE: $000032F7 VOL: 0
; 0000 1689                                             {
; 0000 168A                                             cykl_sterownik_1 = 0;
;PCODE: $000032F8 VOL: 0
;PCODE: $000032F9 VOL: 0
; 0000 168B                                             cykl_sterownik_2 = 0;
;PCODE: $000032FA VOL: 0
;PCODE: $000032FB VOL: 0
; 0000 168C                                             cykl_sterownik_3 = 0;
;PCODE: $000032FC VOL: 0
;PCODE: $000032FD VOL: 0
; 0000 168D                                             cykl_sterownik_4 = 0;
;PCODE: $000032FE VOL: 0
;PCODE: $000032FF VOL: 0
; 0000 168E                                             cykl_testu = 7;
;PCODE: $00003300 VOL: 0
;PCODE: $00003301 VOL: 0
; 0000 168F                                             }
; 0000 1690 
; 0000 1691             break;
;PCODE: $00003302 VOL: 0
;PCODE: $00003303 VOL: 0
; 0000 1692 
; 0000 1693             case 7:
;PCODE: $00003304 VOL: 0
;PCODE: $00003305 VOL: 0
;PCODE: $00003306 VOL: 0
; 0000 1694 
; 0000 1695                                     if(cykl_sterownik_1 < 5)
;PCODE: $00003307 VOL: 0
;PCODE: $00003308 VOL: 0
;PCODE: $00003309 VOL: 0
; 0000 1696                                         cykl_sterownik_1 = sterownik_1_praca(0x003);     //pod nastepny dolek
;PCODE: $0000330A VOL: 0
;PCODE: $0000330B VOL: 0
;PCODE: $0000330C VOL: 0
;PCODE: $0000330D VOL: 0
; 0000 1697 
; 0000 1698                                     if(cykl_sterownik_1 == 5)
;PCODE: $0000330E VOL: 0
;PCODE: $0000330F VOL: 0
;PCODE: $00003310 VOL: 0
;PCODE: $00003311 VOL: 0
; 0000 1699                                         {
; 0000 169A                                         cykl_sterownik_1 = 0;
;PCODE: $00003312 VOL: 0
;PCODE: $00003313 VOL: 0
; 0000 169B                                         cykl_sterownik_2 = 0;
;PCODE: $00003314 VOL: 0
;PCODE: $00003315 VOL: 0
; 0000 169C                                         cykl_sterownik_3 = 0;
;PCODE: $00003316 VOL: 0
;PCODE: $00003317 VOL: 0
; 0000 169D                                         cykl_sterownik_4 = 0;
;PCODE: $00003318 VOL: 0
;PCODE: $00003319 VOL: 0
; 0000 169E                                         cykl_testu = 4;
;PCODE: $0000331A VOL: 0
;PCODE: $0000331B VOL: 0
; 0000 169F                                         }
; 0000 16A0 
; 0000 16A1 
; 0000 16A2             break;
;PCODE: $0000331C VOL: 0
;PCODE: $0000331D VOL: 0
; 0000 16A3 
; 0000 16A4 
; 0000 16A5 
; 0000 16A6 
; 0000 16A7 
; 0000 16A8 
; 0000 16A9 
; 0000 16AA             case 666:
;PCODE: $0000331E VOL: 0
;PCODE: $0000331F VOL: 0
;PCODE: $00003320 VOL: 0
; 0000 16AB 
; 0000 16AC                                         if(cykl_sterownik_3 < 5)
;PCODE: $00003321 VOL: 0
;PCODE: $00003322 VOL: 0
;PCODE: $00003323 VOL: 0
; 0000 16AD                                             cykl_sterownik_3 = sterownik_3_praca(0x00);  //na sam dol, jedziemy miedzy rzedami
;PCODE: $00003324 VOL: 0
;PCODE: $00003325 VOL: 0
;PCODE: $00003326 VOL: 0
;PCODE: $00003327 VOL: 0
; 0000 16AE                                         if(cykl_sterownik_3 == 5)
;PCODE: $00003328 VOL: 0
;PCODE: $00003329 VOL: 0
;PCODE: $0000332A VOL: 0
;PCODE: $0000332B VOL: 0
; 0000 16AF                                             {
; 0000 16B0                                             cykl_sterownik_3 = 0;
;PCODE: $0000332C VOL: 0
;PCODE: $0000332D VOL: 0
; 0000 16B1                                             cykl_sterownik_4 = 0;
;PCODE: $0000332E VOL: 0
;PCODE: $0000332F VOL: 0
; 0000 16B2                                             cykl_testu = 100;
;PCODE: $00003330 VOL: 0
;PCODE: $00003331 VOL: 0
; 0000 16B3                                             test_geometryczny_rzad_1 = 0;
;PCODE: $00003332 VOL: 0
;PCODE: $00003333 VOL: 0
; 0000 16B4                                             }
; 0000 16B5 
; 0000 16B6             break;
;PCODE: $00003334 VOL: 0
;PCODE: $00003335 VOL: 0
; 0000 16B7 
; 0000 16B8 
; 0000 16B9 
; 0000 16BA             }
;PCODE: $00003336 VOL: 0
; 0000 16BB 
; 0000 16BC         }
;PCODE: $00003337 VOL: 0
;PCODE: $00003338 VOL: 0
; 0000 16BD     }
; 0000 16BE 
; 0000 16BF 
; 0000 16C0 
; 0000 16C1                                                                    //swiatlo czer       //swiatlo zolte
; 0000 16C2 if(test_geometryczny_rzad_1 == 0 & test_geometryczny_rzad_2 == 1 & PORTD.7 == 0  & PORT_F.bits.b6 == 0 &
;PCODE: $00003339 VOL: 0
; 0000 16C3     il_zaciskow_rzad_2 > 0 & macierz_zaciskow[2]!=0)
;PCODE: $0000333A VOL: 0
;PCODE: $0000333B VOL: 0
;PCODE: $0000333C VOL: 0
;PCODE: $0000333D VOL: 0
;PCODE: $0000333E VOL: 0
;PCODE: $0000333F VOL: 0
;PCODE: $00003340 VOL: 0
;PCODE: $00003341 VOL: 0
;PCODE: $00003342 VOL: 0
;PCODE: $00003343 VOL: 0
;PCODE: $00003344 VOL: 0
;PCODE: $00003345 VOL: 0
;PCODE: $00003346 VOL: 0
;PCODE: $00003347 VOL: 0
;PCODE: $00003348 VOL: 0
;PCODE: $00003349 VOL: 0
;PCODE: $0000334A VOL: 0
;PCODE: $0000334B VOL: 0
;PCODE: $0000334C VOL: 0
;PCODE: $0000334D VOL: 0
;PCODE: $0000334E VOL: 0
;PCODE: $0000334F VOL: 0
;PCODE: $00003350 VOL: 0
;PCODE: $00003351 VOL: 0
;PCODE: $00003352 VOL: 0
;PCODE: $00003353 VOL: 0
;PCODE: $00003354 VOL: 0
;PCODE: $00003355 VOL: 0
;PCODE: $00003356 VOL: 0
;PCODE: $00003357 VOL: 0
;PCODE: $00003358 VOL: 0
;PCODE: $00003359 VOL: 0
;PCODE: $0000335A VOL: 0
; 0000 16C4     {
; 0000 16C5     while(test_geometryczny_rzad_2 == 1)
;PCODE: $0000335B VOL: 0
;PCODE: $0000335C VOL: 0
;PCODE: $0000335D VOL: 0
;PCODE: $0000335E VOL: 0
; 0000 16C6         {
; 0000 16C7         switch(cykl_testu)
;PCODE: $0000335F VOL: 0
; 0000 16C8             {
; 0000 16C9              case 0:
;PCODE: $00003360 VOL: 0
;PCODE: $00003361 VOL: 0
; 0000 16CA 
; 0000 16CB                cykl_sterownik_1 = 0;
;PCODE: $00003362 VOL: 0
;PCODE: $00003363 VOL: 0
; 0000 16CC                cykl_sterownik_2 = 0;
;PCODE: $00003364 VOL: 0
;PCODE: $00003365 VOL: 0
; 0000 16CD                cykl_sterownik_3 = 0;
;PCODE: $00003366 VOL: 0
;PCODE: $00003367 VOL: 0
; 0000 16CE                cykl_sterownik_4 = 0;
;PCODE: $00003368 VOL: 0
;PCODE: $00003369 VOL: 0
; 0000 16CF                wybor_linijek_sterownikow(2);
;PCODE: $0000336A VOL: 0
;PCODE: $0000336B VOL: 0
;PCODE: $0000336C VOL: 0
; 0000 16D0                cykl_testu = 1;
;PCODE: $0000336D VOL: 0
;PCODE: $0000336E VOL: 0
; 0000 16D1 
; 0000 16D2 
; 0000 16D3 
; 0000 16D4             break;
;PCODE: $0000336F VOL: 0
; 0000 16D5 
; 0000 16D6             case 1:
;PCODE: $00003370 VOL: 0
;PCODE: $00003371 VOL: 0
;PCODE: $00003372 VOL: 0
; 0000 16D7 
; 0000 16D8             //na sam dol zjezdzamy pionami
; 0000 16D9                 if(cykl_sterownik_3 < 5)
;PCODE: $00003373 VOL: 0
;PCODE: $00003374 VOL: 0
;PCODE: $00003375 VOL: 0
; 0000 16DA                     cykl_sterownik_3 = sterownik_3_praca(0x00);  //na sam dol, jedziemy miedzy rzedami
;PCODE: $00003376 VOL: 0
;PCODE: $00003377 VOL: 0
;PCODE: $00003378 VOL: 0
;PCODE: $00003379 VOL: 0
; 0000 16DB                 if(cykl_sterownik_4 < 5)
;PCODE: $0000337A VOL: 0
;PCODE: $0000337B VOL: 0
;PCODE: $0000337C VOL: 0
;PCODE: $0000337D VOL: 0
; 0000 16DC                     cykl_sterownik_4 = sterownik_4_praca(0x00,0);  //na sam dol, jedziemy miedzy rzedami
;PCODE: $0000337E VOL: 0
;PCODE: $0000337F VOL: 0
;PCODE: $00003380 VOL: 0
;PCODE: $00003381 VOL: 0
;PCODE: $00003382 VOL: 0
;PCODE: $00003383 VOL: 0
; 0000 16DD 
; 0000 16DE                 if(cykl_sterownik_3 == 5 & cykl_sterownik_4 == 5)
;PCODE: $00003384 VOL: 0
;PCODE: $00003385 VOL: 0
;PCODE: $00003386 VOL: 0
;PCODE: $00003387 VOL: 0
;PCODE: $00003388 VOL: 0
;PCODE: $00003389 VOL: 0
;PCODE: $0000338A VOL: 0
;PCODE: $0000338B VOL: 0
;PCODE: $0000338C VOL: 0
;PCODE: $0000338D VOL: 0
; 0000 16DF                                         {
; 0000 16E0                                         cykl_sterownik_3 = 0;
;PCODE: $0000338E VOL: 0
;PCODE: $0000338F VOL: 0
; 0000 16E1                                         cykl_sterownik_4 = 0;
;PCODE: $00003390 VOL: 0
;PCODE: $00003391 VOL: 0
; 0000 16E2                                         cykl_testu = 2;
;PCODE: $00003392 VOL: 0
;PCODE: $00003393 VOL: 0
; 0000 16E3                                         }
; 0000 16E4 
; 0000 16E5 
; 0000 16E6 
; 0000 16E7             break;
;PCODE: $00003394 VOL: 0
;PCODE: $00003395 VOL: 0
; 0000 16E8 
; 0000 16E9 
; 0000 16EA             case 2:
;PCODE: $00003396 VOL: 0
;PCODE: $00003397 VOL: 0
;PCODE: $00003398 VOL: 0
; 0000 16EB 
; 0000 16EC                                 if(cykl_sterownik_1 < 5)
;PCODE: $00003399 VOL: 0
;PCODE: $0000339A VOL: 0
;PCODE: $0000339B VOL: 0
; 0000 16ED                                     cykl_sterownik_1 = sterownik_1_praca(0x001);
;PCODE: $0000339C VOL: 0
;PCODE: $0000339D VOL: 0
;PCODE: $0000339E VOL: 0
;PCODE: $0000339F VOL: 0
; 0000 16EE                                  if(cykl_sterownik_2 < 5)                                //ster 1 pod pin pozycjonujacy rzad 2
;PCODE: $000033A0 VOL: 0
;PCODE: $000033A1 VOL: 0
;PCODE: $000033A2 VOL: 0
;PCODE: $000033A3 VOL: 0
; 0000 16EF                                     cykl_sterownik_2 = sterownik_2_praca(0x009);       //ster 2 ucieczka dla II rzedu (druciak)
;PCODE: $000033A4 VOL: 0
;PCODE: $000033A5 VOL: 0
;PCODE: $000033A6 VOL: 0
;PCODE: $000033A7 VOL: 0
; 0000 16F0 
; 0000 16F1                                     if(cykl_sterownik_1 == 5 & cykl_sterownik_2 == 5)
;PCODE: $000033A8 VOL: 0
;PCODE: $000033A9 VOL: 0
;PCODE: $000033AA VOL: 0
;PCODE: $000033AB VOL: 0
;PCODE: $000033AC VOL: 0
;PCODE: $000033AD VOL: 0
;PCODE: $000033AE VOL: 0
;PCODE: $000033AF VOL: 0
;PCODE: $000033B0 VOL: 0
;PCODE: $000033B1 VOL: 0
; 0000 16F2                                         {
; 0000 16F3                                         cykl_sterownik_1 = 0;
;PCODE: $000033B2 VOL: 0
;PCODE: $000033B3 VOL: 0
; 0000 16F4                                         cykl_sterownik_2 = 0;
;PCODE: $000033B4 VOL: 0
;PCODE: $000033B5 VOL: 0
; 0000 16F5                                         cykl_sterownik_3 = 0;
;PCODE: $000033B6 VOL: 0
;PCODE: $000033B7 VOL: 0
; 0000 16F6                                         cykl_sterownik_4 = 0;
;PCODE: $000033B8 VOL: 0
;PCODE: $000033B9 VOL: 0
; 0000 16F7                                         cykl_testu = 3;
;PCODE: $000033BA VOL: 0
;PCODE: $000033BB VOL: 0
; 0000 16F8 
; 0000 16F9                                         }
; 0000 16FA 
; 0000 16FB             break;
;PCODE: $000033BC VOL: 0
;PCODE: $000033BD VOL: 0
; 0000 16FC 
; 0000 16FD 
; 0000 16FE             case 3:
;PCODE: $000033BE VOL: 0
;PCODE: $000033BF VOL: 0
;PCODE: $000033C0 VOL: 0
; 0000 16FF 
; 0000 1700                                 if(cykl_sterownik_1 < 5)
;PCODE: $000033C1 VOL: 0
;PCODE: $000033C2 VOL: 0
;PCODE: $000033C3 VOL: 0
; 0000 1701                                     cykl_sterownik_1 = sterownik_1_praca(a[1]); //ster 1 pod srodek zacisku
;PCODE: $000033C4 VOL: 0
;PCODE: $000033C5 VOL: 0
;PCODE: $000033C6 VOL: 0
;PCODE: $000033C7 VOL: 0
;PCODE: $000033C8 VOL: 0
; 0000 1702 
; 0000 1703                                     if(cykl_sterownik_1 == 5)
;PCODE: $000033C9 VOL: 0
;PCODE: $000033CA VOL: 0
;PCODE: $000033CB VOL: 0
;PCODE: $000033CC VOL: 0
; 0000 1704                                         {
; 0000 1705                                         cykl_sterownik_1 = 0;
;PCODE: $000033CD VOL: 0
;PCODE: $000033CE VOL: 0
; 0000 1706                                         cykl_sterownik_2 = 0;
;PCODE: $000033CF VOL: 0
;PCODE: $000033D0 VOL: 0
; 0000 1707                                         cykl_sterownik_3 = 0;
;PCODE: $000033D1 VOL: 0
;PCODE: $000033D2 VOL: 0
; 0000 1708                                         cykl_sterownik_4 = 0;
;PCODE: $000033D3 VOL: 0
;PCODE: $000033D4 VOL: 0
; 0000 1709                                         cykl_testu = 4;
;PCODE: $000033D5 VOL: 0
;PCODE: $000033D6 VOL: 0
; 0000 170A                                         }
; 0000 170B 
; 0000 170C             break;
;PCODE: $000033D7 VOL: 0
;PCODE: $000033D8 VOL: 0
; 0000 170D 
; 0000 170E             case 4:
;PCODE: $000033D9 VOL: 0
;PCODE: $000033DA VOL: 0
;PCODE: $000033DB VOL: 0
; 0000 170F 
; 0000 1710                                    if(cykl_sterownik_3 < 5)
;PCODE: $000033DC VOL: 0
;PCODE: $000033DD VOL: 0
;PCODE: $000033DE VOL: 0
; 0000 1711                                         cykl_sterownik_3 = sterownik_3_praca(a[4]);  //abs
;PCODE: $000033DF VOL: 0
;PCODE: $000033E0 VOL: 0
;PCODE: $000033E1 VOL: 0
;PCODE: $000033E2 VOL: 0
;PCODE: $000033E3 VOL: 0
; 0000 1712 
; 0000 1713                                    if(cykl_sterownik_3 == 5)
;PCODE: $000033E4 VOL: 0
;PCODE: $000033E5 VOL: 0
;PCODE: $000033E6 VOL: 0
;PCODE: $000033E7 VOL: 0
; 0000 1714                                         {
; 0000 1715                                         cykl_sterownik_1 = 0;
;PCODE: $000033E8 VOL: 0
;PCODE: $000033E9 VOL: 0
; 0000 1716                                         cykl_sterownik_2 = 0;
;PCODE: $000033EA VOL: 0
;PCODE: $000033EB VOL: 0
; 0000 1717                                         cykl_sterownik_3 = 0;
;PCODE: $000033EC VOL: 0
;PCODE: $000033ED VOL: 0
; 0000 1718                                         cykl_sterownik_4 = 0;
;PCODE: $000033EE VOL: 0
;PCODE: $000033EF VOL: 0
; 0000 1719                                         cykl_testu = 5;
;PCODE: $000033F0 VOL: 0
;PCODE: $000033F1 VOL: 0
; 0000 171A                                         }
; 0000 171B 
; 0000 171C             break;
;PCODE: $000033F2 VOL: 0
;PCODE: $000033F3 VOL: 0
; 0000 171D 
; 0000 171E             case 5:
;PCODE: $000033F4 VOL: 0
;PCODE: $000033F5 VOL: 0
;PCODE: $000033F6 VOL: 0
; 0000 171F 
; 0000 1720                                      d = odczytaj_parametr(48,96);
;PCODE: $000033F7 VOL: 0
;PCODE: $000033F8 VOL: 0
;PCODE: $000033F9 VOL: 0
;PCODE: $000033FA VOL: 0
;PCODE: $000033FB VOL: 0
;PCODE: $000033FC VOL: 0
; 0000 1721                                         if(d == 0)
;PCODE: $000033FD VOL: 0
;PCODE: $000033FE VOL: 0
; 0000 1722                                             cykl_testu = 666;
;PCODE: $000033FF VOL: 0
;PCODE: $00003400 VOL: 0
; 0000 1723 
; 0000 1724 
; 0000 1725 
; 0000 1726 
; 0000 1727                                         if(d == 2 & ff[2] == 0)
;PCODE: $00003401 VOL: 0
;PCODE: $00003402 VOL: 0
;PCODE: $00003403 VOL: 0
;PCODE: $00003404 VOL: 0
;PCODE: $00003405 VOL: 0
;PCODE: $00003406 VOL: 0
;PCODE: $00003407 VOL: 0
;PCODE: $00003408 VOL: 0
;PCODE: $00003409 VOL: 0
;PCODE: $0000340A VOL: 0
; 0000 1728                                             {
; 0000 1729                                             cykl_testu = 6;
;PCODE: $0000340B VOL: 0
;PCODE: $0000340C VOL: 0
; 0000 172A                                             ff[d]=1;
;PCODE: $0000340D VOL: 0
;PCODE: $0000340E VOL: 0
;PCODE: $0000340F VOL: 0
;PCODE: $00003410 VOL: 0
;PCODE: $00003411 VOL: 0
;PCODE: $00003412 VOL: 0
; 0000 172B                                             }
; 0000 172C                                         if(d == 3 & ff[2] == 1 & ff[3] == 0)
;PCODE: $00003413 VOL: 0
;PCODE: $00003414 VOL: 0
;PCODE: $00003415 VOL: 0
;PCODE: $00003416 VOL: 0
;PCODE: $00003417 VOL: 0
;PCODE: $00003418 VOL: 0
;PCODE: $00003419 VOL: 0
;PCODE: $0000341A VOL: 0
;PCODE: $0000341B VOL: 0
;PCODE: $0000341C VOL: 0
;PCODE: $0000341D VOL: 0
;PCODE: $0000341E VOL: 0
;PCODE: $0000341F VOL: 0
;PCODE: $00003420 VOL: 0
;PCODE: $00003421 VOL: 0
; 0000 172D                                             {
; 0000 172E                                             cykl_testu = 6;
;PCODE: $00003422 VOL: 0
;PCODE: $00003423 VOL: 0
; 0000 172F                                             ff[d]=1;
;PCODE: $00003424 VOL: 0
;PCODE: $00003425 VOL: 0
;PCODE: $00003426 VOL: 0
;PCODE: $00003427 VOL: 0
;PCODE: $00003428 VOL: 0
;PCODE: $00003429 VOL: 0
; 0000 1730                                             }
; 0000 1731                                         if(d == 4 & ff[3] == 1 & ff[4] == 0)
;PCODE: $0000342A VOL: 0
;PCODE: $0000342B VOL: 0
;PCODE: $0000342C VOL: 0
;PCODE: $0000342D VOL: 0
;PCODE: $0000342E VOL: 0
;PCODE: $0000342F VOL: 0
;PCODE: $00003430 VOL: 0
;PCODE: $00003431 VOL: 0
;PCODE: $00003432 VOL: 0
;PCODE: $00003433 VOL: 0
;PCODE: $00003434 VOL: 0
;PCODE: $00003435 VOL: 0
;PCODE: $00003436 VOL: 0
;PCODE: $00003437 VOL: 0
;PCODE: $00003438 VOL: 0
; 0000 1732                                             {
; 0000 1733                                             cykl_testu = 6;
;PCODE: $00003439 VOL: 0
;PCODE: $0000343A VOL: 0
; 0000 1734                                             ff[d]=1;
;PCODE: $0000343B VOL: 0
;PCODE: $0000343C VOL: 0
;PCODE: $0000343D VOL: 0
;PCODE: $0000343E VOL: 0
;PCODE: $0000343F VOL: 0
;PCODE: $00003440 VOL: 0
; 0000 1735                                             }
; 0000 1736                                         if(d == 5 & ff[4] == 1 & ff[5] == 0)
;PCODE: $00003441 VOL: 0
;PCODE: $00003442 VOL: 0
;PCODE: $00003443 VOL: 0
;PCODE: $00003444 VOL: 0
;PCODE: $00003445 VOL: 0
;PCODE: $00003446 VOL: 0
;PCODE: $00003447 VOL: 0
;PCODE: $00003448 VOL: 0
;PCODE: $00003449 VOL: 0
;PCODE: $0000344A VOL: 0
;PCODE: $0000344B VOL: 0
;PCODE: $0000344C VOL: 0
;PCODE: $0000344D VOL: 0
;PCODE: $0000344E VOL: 0
;PCODE: $0000344F VOL: 0
; 0000 1737                                             {
; 0000 1738                                             cykl_testu = 6;
;PCODE: $00003450 VOL: 0
;PCODE: $00003451 VOL: 0
; 0000 1739                                             ff[d]=1;
;PCODE: $00003452 VOL: 0
;PCODE: $00003453 VOL: 0
;PCODE: $00003454 VOL: 0
;PCODE: $00003455 VOL: 0
;PCODE: $00003456 VOL: 0
;PCODE: $00003457 VOL: 0
; 0000 173A                                             }
; 0000 173B                                         if(d == 6 & ff[5] == 1 & ff[6] == 0)
;PCODE: $00003458 VOL: 0
;PCODE: $00003459 VOL: 0
;PCODE: $0000345A VOL: 0
;PCODE: $0000345B VOL: 0
;PCODE: $0000345C VOL: 0
;PCODE: $0000345D VOL: 0
;PCODE: $0000345E VOL: 0
;PCODE: $0000345F VOL: 0
;PCODE: $00003460 VOL: 0
;PCODE: $00003461 VOL: 0
;PCODE: $00003462 VOL: 0
;PCODE: $00003463 VOL: 0
;PCODE: $00003464 VOL: 0
;PCODE: $00003465 VOL: 0
;PCODE: $00003466 VOL: 0
; 0000 173C                                             {
; 0000 173D                                             cykl_testu = 6;
;PCODE: $00003467 VOL: 0
;PCODE: $00003468 VOL: 0
; 0000 173E                                             ff[d]=1;
;PCODE: $00003469 VOL: 0
;PCODE: $0000346A VOL: 0
;PCODE: $0000346B VOL: 0
;PCODE: $0000346C VOL: 0
;PCODE: $0000346D VOL: 0
;PCODE: $0000346E VOL: 0
; 0000 173F                                             }
; 0000 1740                                         if(d == 7 & ff[6] == 1 & ff[7] == 0)
;PCODE: $0000346F VOL: 0
;PCODE: $00003470 VOL: 0
;PCODE: $00003471 VOL: 0
;PCODE: $00003472 VOL: 0
;PCODE: $00003473 VOL: 0
;PCODE: $00003474 VOL: 0
;PCODE: $00003475 VOL: 0
;PCODE: $00003476 VOL: 0
;PCODE: $00003477 VOL: 0
;PCODE: $00003478 VOL: 0
;PCODE: $00003479 VOL: 0
;PCODE: $0000347A VOL: 0
;PCODE: $0000347B VOL: 0
;PCODE: $0000347C VOL: 0
;PCODE: $0000347D VOL: 0
; 0000 1741                                             {
; 0000 1742                                             cykl_testu = 6;
;PCODE: $0000347E VOL: 0
;PCODE: $0000347F VOL: 0
; 0000 1743                                             ff[d]=1;
;PCODE: $00003480 VOL: 0
;PCODE: $00003481 VOL: 0
;PCODE: $00003482 VOL: 0
;PCODE: $00003483 VOL: 0
;PCODE: $00003484 VOL: 0
;PCODE: $00003485 VOL: 0
; 0000 1744                                             }
; 0000 1745                                         if(d == 8 & ff[7] == 1 & ff[8] == 0)
;PCODE: $00003486 VOL: 0
;PCODE: $00003487 VOL: 0
;PCODE: $00003488 VOL: 0
;PCODE: $00003489 VOL: 0
;PCODE: $0000348A VOL: 0
;PCODE: $0000348B VOL: 0
;PCODE: $0000348C VOL: 0
;PCODE: $0000348D VOL: 0
;PCODE: $0000348E VOL: 0
;PCODE: $0000348F VOL: 0
;PCODE: $00003490 VOL: 0
;PCODE: $00003491 VOL: 0
;PCODE: $00003492 VOL: 0
;PCODE: $00003493 VOL: 0
;PCODE: $00003494 VOL: 0
; 0000 1746                                             {
; 0000 1747                                             cykl_testu = 6;
;PCODE: $00003495 VOL: 0
;PCODE: $00003496 VOL: 0
; 0000 1748                                             ff[d]=1;
;PCODE: $00003497 VOL: 0
;PCODE: $00003498 VOL: 0
;PCODE: $00003499 VOL: 0
;PCODE: $0000349A VOL: 0
;PCODE: $0000349B VOL: 0
;PCODE: $0000349C VOL: 0
; 0000 1749                                             }
; 0000 174A                                         if(d == 9 & ff[8] == 1 & ff[9] == 0)
;PCODE: $0000349D VOL: 0
;PCODE: $0000349E VOL: 0
;PCODE: $0000349F VOL: 0
;PCODE: $000034A0 VOL: 0
;PCODE: $000034A1 VOL: 0
;PCODE: $000034A2 VOL: 0
;PCODE: $000034A3 VOL: 0
;PCODE: $000034A4 VOL: 0
;PCODE: $000034A5 VOL: 0
;PCODE: $000034A6 VOL: 0
;PCODE: $000034A7 VOL: 0
;PCODE: $000034A8 VOL: 0
;PCODE: $000034A9 VOL: 0
;PCODE: $000034AA VOL: 0
;PCODE: $000034AB VOL: 0
; 0000 174B                                             {
; 0000 174C                                             cykl_testu = 6;
;PCODE: $000034AC VOL: 0
;PCODE: $000034AD VOL: 0
; 0000 174D                                             ff[d]=1;
;PCODE: $000034AE VOL: 0
;PCODE: $000034AF VOL: 0
;PCODE: $000034B0 VOL: 0
;PCODE: $000034B1 VOL: 0
;PCODE: $000034B2 VOL: 0
;PCODE: $000034B3 VOL: 0
; 0000 174E                                             }
; 0000 174F                                         if(d == 10 & ff[9] == 1 & ff[10] == 0)
;PCODE: $000034B4 VOL: 0
;PCODE: $000034B5 VOL: 0
;PCODE: $000034B6 VOL: 0
;PCODE: $000034B7 VOL: 0
;PCODE: $000034B8 VOL: 0
;PCODE: $000034B9 VOL: 0
;PCODE: $000034BA VOL: 0
;PCODE: $000034BB VOL: 0
;PCODE: $000034BC VOL: 0
;PCODE: $000034BD VOL: 0
;PCODE: $000034BE VOL: 0
;PCODE: $000034BF VOL: 0
;PCODE: $000034C0 VOL: 0
;PCODE: $000034C1 VOL: 0
;PCODE: $000034C2 VOL: 0
; 0000 1750                                             {
; 0000 1751                                             cykl_testu = 6;
;PCODE: $000034C3 VOL: 0
;PCODE: $000034C4 VOL: 0
; 0000 1752                                             ff[d]=1;
;PCODE: $000034C5 VOL: 0
;PCODE: $000034C6 VOL: 0
;PCODE: $000034C7 VOL: 0
;PCODE: $000034C8 VOL: 0
;PCODE: $000034C9 VOL: 0
;PCODE: $000034CA VOL: 0
; 0000 1753                                             }
; 0000 1754 
; 0000 1755 
; 0000 1756             break;
;PCODE: $000034CB VOL: 0
;PCODE: $000034CC VOL: 0
; 0000 1757 
; 0000 1758             case 6:
;PCODE: $000034CD VOL: 0
;PCODE: $000034CE VOL: 0
;PCODE: $000034CF VOL: 0
; 0000 1759                                      if(cykl_sterownik_3 < 5)
;PCODE: $000034D0 VOL: 0
;PCODE: $000034D1 VOL: 0
;PCODE: $000034D2 VOL: 0
; 0000 175A                                             cykl_sterownik_3 = sterownik_3_praca(0x00);  //na sam dol, jedziemy miedzy rzedami
;PCODE: $000034D3 VOL: 0
;PCODE: $000034D4 VOL: 0
;PCODE: $000034D5 VOL: 0
;PCODE: $000034D6 VOL: 0
; 0000 175B                                         if(cykl_sterownik_3 == 5)
;PCODE: $000034D7 VOL: 0
;PCODE: $000034D8 VOL: 0
;PCODE: $000034D9 VOL: 0
;PCODE: $000034DA VOL: 0
; 0000 175C                                             {
; 0000 175D                                             cykl_sterownik_1 = 0;
;PCODE: $000034DB VOL: 0
;PCODE: $000034DC VOL: 0
; 0000 175E                                             cykl_sterownik_2 = 0;
;PCODE: $000034DD VOL: 0
;PCODE: $000034DE VOL: 0
; 0000 175F                                             cykl_sterownik_3 = 0;
;PCODE: $000034DF VOL: 0
;PCODE: $000034E0 VOL: 0
; 0000 1760                                             cykl_sterownik_4 = 0;
;PCODE: $000034E1 VOL: 0
;PCODE: $000034E2 VOL: 0
; 0000 1761                                             cykl_testu = 7;
;PCODE: $000034E3 VOL: 0
;PCODE: $000034E4 VOL: 0
; 0000 1762                                             }
; 0000 1763 
; 0000 1764             break;
;PCODE: $000034E5 VOL: 0
;PCODE: $000034E6 VOL: 0
; 0000 1765 
; 0000 1766             case 7:
;PCODE: $000034E7 VOL: 0
;PCODE: $000034E8 VOL: 0
;PCODE: $000034E9 VOL: 0
; 0000 1767 
; 0000 1768                                     if(cykl_sterownik_1 < 5)
;PCODE: $000034EA VOL: 0
;PCODE: $000034EB VOL: 0
;PCODE: $000034EC VOL: 0
; 0000 1769                                         cykl_sterownik_1 = sterownik_1_praca(0x003);     //pod nastepny dolek
;PCODE: $000034ED VOL: 0
;PCODE: $000034EE VOL: 0
;PCODE: $000034EF VOL: 0
;PCODE: $000034F0 VOL: 0
; 0000 176A 
; 0000 176B                                     if(cykl_sterownik_1 == 5)
;PCODE: $000034F1 VOL: 0
;PCODE: $000034F2 VOL: 0
;PCODE: $000034F3 VOL: 0
;PCODE: $000034F4 VOL: 0
; 0000 176C                                         {
; 0000 176D                                         cykl_sterownik_1 = 0;
;PCODE: $000034F5 VOL: 0
;PCODE: $000034F6 VOL: 0
; 0000 176E                                         cykl_sterownik_2 = 0;
;PCODE: $000034F7 VOL: 0
;PCODE: $000034F8 VOL: 0
; 0000 176F                                         cykl_sterownik_3 = 0;
;PCODE: $000034F9 VOL: 0
;PCODE: $000034FA VOL: 0
; 0000 1770                                         cykl_sterownik_4 = 0;
;PCODE: $000034FB VOL: 0
;PCODE: $000034FC VOL: 0
; 0000 1771                                         cykl_testu = 4;
;PCODE: $000034FD VOL: 0
;PCODE: $000034FE VOL: 0
; 0000 1772                                         }
; 0000 1773 
; 0000 1774 
; 0000 1775             break;
;PCODE: $000034FF VOL: 0
;PCODE: $00003500 VOL: 0
; 0000 1776 
; 0000 1777 
; 0000 1778 
; 0000 1779             case 666:
;PCODE: $00003501 VOL: 0
;PCODE: $00003502 VOL: 0
;PCODE: $00003503 VOL: 0
; 0000 177A 
; 0000 177B                                         if(cykl_sterownik_3 < 5)
;PCODE: $00003504 VOL: 0
;PCODE: $00003505 VOL: 0
;PCODE: $00003506 VOL: 0
; 0000 177C                                             cykl_sterownik_3 = sterownik_3_praca(0x00);  //na sam dol, jedziemy miedzy rzedami
;PCODE: $00003507 VOL: 0
;PCODE: $00003508 VOL: 0
;PCODE: $00003509 VOL: 0
;PCODE: $0000350A VOL: 0
; 0000 177D                                         if(cykl_sterownik_3 == 5)
;PCODE: $0000350B VOL: 0
;PCODE: $0000350C VOL: 0
;PCODE: $0000350D VOL: 0
;PCODE: $0000350E VOL: 0
; 0000 177E                                             {
; 0000 177F                                             cykl_sterownik_3 = 0;
;PCODE: $0000350F VOL: 0
;PCODE: $00003510 VOL: 0
; 0000 1780                                             cykl_sterownik_4 = 0;
;PCODE: $00003511 VOL: 0
;PCODE: $00003512 VOL: 0
; 0000 1781                                             cykl_testu = 100;
;PCODE: $00003513 VOL: 0
;PCODE: $00003514 VOL: 0
; 0000 1782                                             test_geometryczny_rzad_2 = 0;
;PCODE: $00003515 VOL: 0
;PCODE: $00003516 VOL: 0
; 0000 1783                                             }
; 0000 1784 
; 0000 1785             break;
;PCODE: $00003517 VOL: 0
;PCODE: $00003518 VOL: 0
; 0000 1786 
; 0000 1787 
; 0000 1788 
; 0000 1789             }
;PCODE: $00003519 VOL: 0
; 0000 178A 
; 0000 178B         }
;PCODE: $0000351A VOL: 0
;PCODE: $0000351B VOL: 0
; 0000 178C     }
; 0000 178D 
; 0000 178E 
; 0000 178F 
; 0000 1790 
; 0000 1791 
; 0000 1792 }
;PCODE: $0000351C VOL: 0
;PCODE: $0000351D VOL: 0
;PCODE: $0000351E VOL: 0
;PCODE: $0000351F VOL: 0
;PCODE: $00003520 VOL: 0
;
;
;
;
;
;void kontrola_zoltego_swiatla()
; 0000 1799 {
;PCODE: $00003521 VOL: 0
;PCODE: $00003522 VOL: 0
; 0000 179A 
; 0000 179B 
; 0000 179C if(czas_pracy_szczotki_drucianej_h >= czas_pracy_szczotki_drucianej_stala)
;PCODE: $00003523 VOL: 0
;PCODE: $00003524 VOL: 0
;PCODE: $00003525 VOL: 0
;PCODE: $00003526 VOL: 0
;PCODE: $00003527 VOL: 0
;PCODE: $00003528 VOL: 0
;PCODE: $00003529 VOL: 0
; 0000 179D      {
; 0000 179E      PORT_F.bits.b6 = 1;
;PCODE: $0000352A VOL: 0
;PCODE: $0000352B VOL: 0
;PCODE: $0000352C VOL: 0
; 0000 179F      PORTF = PORT_F.byte;
;PCODE: $0000352D VOL: 0
;PCODE: $0000352E VOL: 0
; 0000 17A0      komunikat_na_panel("                                                ",80,0);
;PCODE: $0000352F VOL: 0
;PCODE: $00003530 VOL: 0
;PCODE: $00003531 VOL: 0
;PCODE: $00003532 VOL: 0
;PCODE: $00003533 VOL: 0
;PCODE: $00003534 VOL: 0
;PCODE: $00003535 VOL: 0
;PCODE: $00003536 VOL: 0
; 0000 17A1      komunikat_na_panel("Wymien szczotke pedzelkowa",80,0);
;PCODE: $00003537 VOL: 0
;PCODE: $00003538 VOL: 0
;PCODE: $00003539 VOL: 0
;PCODE: $0000353A VOL: 0
;PCODE: $0000353B VOL: 0
;PCODE: $0000353C VOL: 0
;PCODE: $0000353D VOL: 0
;PCODE: $0000353E VOL: 0
; 0000 17A2      }
; 0000 17A3 
; 0000 17A4 if(czas_pracy_krazka_sciernego_h >= czas_pracy_krazka_sciernego_stala)
;PCODE: $0000353F VOL: 0
;PCODE: $00003540 VOL: 0
;PCODE: $00003541 VOL: 0
;PCODE: $00003542 VOL: 0
;PCODE: $00003543 VOL: 0
;PCODE: $00003544 VOL: 0
;PCODE: $00003545 VOL: 0
;PCODE: $00003546 VOL: 0
; 0000 17A5      {
; 0000 17A6      PORT_F.bits.b6 = 1;
;PCODE: $00003547 VOL: 0
;PCODE: $00003548 VOL: 0
;PCODE: $00003549 VOL: 0
; 0000 17A7      PORTF = PORT_F.byte;
;PCODE: $0000354A VOL: 0
;PCODE: $0000354B VOL: 0
; 0000 17A8      komunikat_na_panel("                                                ",64,0);
;PCODE: $0000354C VOL: 0
;PCODE: $0000354D VOL: 0
;PCODE: $0000354E VOL: 0
;PCODE: $0000354F VOL: 0
;PCODE: $00003550 VOL: 0
;PCODE: $00003551 VOL: 0
;PCODE: $00003552 VOL: 0
;PCODE: $00003553 VOL: 0
; 0000 17A9      komunikat_na_panel("Wymien krazek scierny",64,0);
;PCODE: $00003554 VOL: 0
;PCODE: $00003555 VOL: 0
;PCODE: $00003556 VOL: 0
;PCODE: $00003557 VOL: 0
;PCODE: $00003558 VOL: 0
;PCODE: $00003559 VOL: 0
;PCODE: $0000355A VOL: 0
;PCODE: $0000355B VOL: 0
; 0000 17AA      }
; 0000 17AB 
; 0000 17AC 
; 0000 17AD }
;PCODE: $0000355C VOL: 0
;PCODE: $0000355D VOL: 0
;PCODE: $0000355E VOL: 0
;
;void wymiana_szczotki_i_krazka()
; 0000 17B0 {
;PCODE: $0000355F VOL: 0
;PCODE: $00003560 VOL: 0
; 0000 17B1 int g,e,f,d,cykl_wymiany;
; 0000 17B2 cykl_wymiany = 0;
;PCODE: $00003561 VOL: 0
;PCODE: $00003562 VOL: 0
;	g -> R16,R17
;	e -> R18,R19
;	f -> R20,R21
;	d -> Y+8
;	cykl_wymiany -> Y+6
;PCODE: $00003563 VOL: 0
;PCODE: $00003564 VOL: 0
; 0000 17B3                       //30 //20
; 0000 17B4 g = odczytaj_parametr(48,32);  //szczotka druciana
;PCODE: $00003565 VOL: 0
;PCODE: $00003566 VOL: 0
;PCODE: $00003567 VOL: 0
;PCODE: $00003568 VOL: 0
;PCODE: $00003569 VOL: 0
;PCODE: $0000356A VOL: 0
; 0000 17B5                     //30  //30
; 0000 17B6 f = odczytaj_parametr(48,48);  //krazek scierny
;PCODE: $0000356B VOL: 0
;PCODE: $0000356C VOL: 0
;PCODE: $0000356D VOL: 0
;PCODE: $0000356E VOL: 0
;PCODE: $0000356F VOL: 0
;PCODE: $00003570 VOL: 0
; 0000 17B7 
; 0000 17B8 while(g == 1)
;PCODE: $00003571 VOL: 0
;PCODE: $00003572 VOL: 0
;PCODE: $00003573 VOL: 0
;PCODE: $00003574 VOL: 0
; 0000 17B9     {
; 0000 17BA     switch(cykl_wymiany)
;PCODE: $00003575 VOL: 0
; 0000 17BB     {
; 0000 17BC     case 0:
;PCODE: $00003576 VOL: 0
;PCODE: $00003577 VOL: 0
; 0000 17BD 
; 0000 17BE                cykl_sterownik_1 = 0;
;PCODE: $00003578 VOL: 0
;PCODE: $00003579 VOL: 0
; 0000 17BF                cykl_sterownik_2 = 0;
;PCODE: $0000357A VOL: 0
;PCODE: $0000357B VOL: 0
; 0000 17C0                cykl_sterownik_3 = 0;
;PCODE: $0000357C VOL: 0
;PCODE: $0000357D VOL: 0
; 0000 17C1                cykl_sterownik_4 = 0;
;PCODE: $0000357E VOL: 0
;PCODE: $0000357F VOL: 0
; 0000 17C2                cykl_wymiany = 1;
;PCODE: $00003580 VOL: 0
;PCODE: $00003581 VOL: 0
; 0000 17C3 
; 0000 17C4 
; 0000 17C5 
; 0000 17C6     break;
;PCODE: $00003582 VOL: 0
; 0000 17C7 
; 0000 17C8     case 1:
;PCODE: $00003583 VOL: 0
;PCODE: $00003584 VOL: 0
;PCODE: $00003585 VOL: 0
; 0000 17C9 
; 0000 17CA             //na sam dol zjezdzamy pionami
; 0000 17CB                 if(cykl_sterownik_3 < 5)
;PCODE: $00003586 VOL: 0
;PCODE: $00003587 VOL: 0
;PCODE: $00003588 VOL: 0
; 0000 17CC                     cykl_sterownik_3 = sterownik_3_praca(0x00);  //na sam dol, jedziemy miedzy rzedami
;PCODE: $00003589 VOL: 0
;PCODE: $0000358A VOL: 0
;PCODE: $0000358B VOL: 0
;PCODE: $0000358C VOL: 0
; 0000 17CD                 if(cykl_sterownik_4 < 5)
;PCODE: $0000358D VOL: 0
;PCODE: $0000358E VOL: 0
;PCODE: $0000358F VOL: 0
;PCODE: $00003590 VOL: 0
; 0000 17CE                     cykl_sterownik_4 = sterownik_4_praca(0x00,0);  //na sam dol, jedziemy miedzy rzedami
;PCODE: $00003591 VOL: 0
;PCODE: $00003592 VOL: 0
;PCODE: $00003593 VOL: 0
;PCODE: $00003594 VOL: 0
;PCODE: $00003595 VOL: 0
;PCODE: $00003596 VOL: 0
; 0000 17CF 
; 0000 17D0                 if(cykl_sterownik_3 == 5 & cykl_sterownik_4 == 5)
;PCODE: $00003597 VOL: 0
;PCODE: $00003598 VOL: 0
;PCODE: $00003599 VOL: 0
;PCODE: $0000359A VOL: 0
;PCODE: $0000359B VOL: 0
;PCODE: $0000359C VOL: 0
;PCODE: $0000359D VOL: 0
;PCODE: $0000359E VOL: 0
;PCODE: $0000359F VOL: 0
;PCODE: $000035A0 VOL: 0
; 0000 17D1 
; 0000 17D2                             {
; 0000 17D3                                         cykl_sterownik_3 = 0;
;PCODE: $000035A1 VOL: 0
;PCODE: $000035A2 VOL: 0
; 0000 17D4                                         cykl_sterownik_4 = 0;
;PCODE: $000035A3 VOL: 0
;PCODE: $000035A4 VOL: 0
; 0000 17D5                                         cykl_wymiany = 2;
;PCODE: $000035A5 VOL: 0
;PCODE: $000035A6 VOL: 0
; 0000 17D6                                         }
; 0000 17D7 
; 0000 17D8 
; 0000 17D9 
; 0000 17DA     break;
;PCODE: $000035A7 VOL: 0
;PCODE: $000035A8 VOL: 0
; 0000 17DB 
; 0000 17DC 
; 0000 17DD 
; 0000 17DE     case 2:
;PCODE: $000035A9 VOL: 0
;PCODE: $000035AA VOL: 0
;PCODE: $000035AB VOL: 0
; 0000 17DF 
; 0000 17E0                                 if(cykl_sterownik_1 < 5)
;PCODE: $000035AC VOL: 0
;PCODE: $000035AD VOL: 0
;PCODE: $000035AE VOL: 0
; 0000 17E1                                     cykl_sterownik_1 = sterownik_1_praca(0x1F9);
;PCODE: $000035AF VOL: 0
;PCODE: $000035B0 VOL: 0
;PCODE: $000035B1 VOL: 0
;PCODE: $000035B2 VOL: 0
; 0000 17E2                                  if(cykl_sterownik_2 < 5)                                //ster 1 do 0
;PCODE: $000035B3 VOL: 0
;PCODE: $000035B4 VOL: 0
;PCODE: $000035B5 VOL: 0
;PCODE: $000035B6 VOL: 0
; 0000 17E3                                     cykl_sterownik_2 = sterownik_2_praca(0x1F9);       //ster 2 pod pin pozy rzad 1
;PCODE: $000035B7 VOL: 0
;PCODE: $000035B8 VOL: 0
;PCODE: $000035B9 VOL: 0
;PCODE: $000035BA VOL: 0
; 0000 17E4 
; 0000 17E5                                     if(cykl_sterownik_1 == 5 & cykl_sterownik_2 == 5)
;PCODE: $000035BB VOL: 0
;PCODE: $000035BC VOL: 0
;PCODE: $000035BD VOL: 0
;PCODE: $000035BE VOL: 0
;PCODE: $000035BF VOL: 0
;PCODE: $000035C0 VOL: 0
;PCODE: $000035C1 VOL: 0
;PCODE: $000035C2 VOL: 0
;PCODE: $000035C3 VOL: 0
;PCODE: $000035C4 VOL: 0
; 0000 17E6                                         {
; 0000 17E7                                         cykl_sterownik_1 = 0;
;PCODE: $000035C5 VOL: 0
;PCODE: $000035C6 VOL: 0
; 0000 17E8                                         cykl_sterownik_2 = 0;
;PCODE: $000035C7 VOL: 0
;PCODE: $000035C8 VOL: 0
; 0000 17E9                                         cykl_sterownik_3 = 0;
;PCODE: $000035C9 VOL: 0
;PCODE: $000035CA VOL: 0
; 0000 17EA                                         cykl_sterownik_4 = 0;
;PCODE: $000035CB VOL: 0
;PCODE: $000035CC VOL: 0
; 0000 17EB                                          cykl_wymiany = 3;
;PCODE: $000035CD VOL: 0
;PCODE: $000035CE VOL: 0
; 0000 17EC 
; 0000 17ED                                         }
; 0000 17EE 
; 0000 17EF     break;
;PCODE: $000035CF VOL: 0
;PCODE: $000035D0 VOL: 0
; 0000 17F0 
; 0000 17F1 
; 0000 17F2 
; 0000 17F3     case 3:
;PCODE: $000035D1 VOL: 0
;PCODE: $000035D2 VOL: 0
;PCODE: $000035D3 VOL: 0
; 0000 17F4 
; 0000 17F5             //na sam dol zjezdzamy pionami
; 0000 17F6                 if(cykl_sterownik_3 < 5)
;PCODE: $000035D4 VOL: 0
;PCODE: $000035D5 VOL: 0
;PCODE: $000035D6 VOL: 0
; 0000 17F7                     cykl_sterownik_3 = sterownik_3_praca(0x02);  //do pozycji wymiany
;PCODE: $000035D7 VOL: 0
;PCODE: $000035D8 VOL: 0
;PCODE: $000035D9 VOL: 0
;PCODE: $000035DA VOL: 0
; 0000 17F8                 if(cykl_sterownik_4 < 5)
;PCODE: $000035DB VOL: 0
;PCODE: $000035DC VOL: 0
;PCODE: $000035DD VOL: 0
;PCODE: $000035DE VOL: 0
; 0000 17F9                     cykl_sterownik_4 = sterownik_4_praca(0x02,0);  //do pozycji wymiany
;PCODE: $000035DF VOL: 0
;PCODE: $000035E0 VOL: 0
;PCODE: $000035E1 VOL: 0
;PCODE: $000035E2 VOL: 0
;PCODE: $000035E3 VOL: 0
;PCODE: $000035E4 VOL: 0
; 0000 17FA 
; 0000 17FB                 if(cykl_sterownik_3 == 5 & cykl_sterownik_4 == 5)
;PCODE: $000035E5 VOL: 0
;PCODE: $000035E6 VOL: 0
;PCODE: $000035E7 VOL: 0
;PCODE: $000035E8 VOL: 0
;PCODE: $000035E9 VOL: 0
;PCODE: $000035EA VOL: 0
;PCODE: $000035EB VOL: 0
;PCODE: $000035EC VOL: 0
;PCODE: $000035ED VOL: 0
;PCODE: $000035EE VOL: 0
; 0000 17FC 
; 0000 17FD                             {
; 0000 17FE                                         cykl_sterownik_3 = 0;
;PCODE: $000035EF VOL: 0
;PCODE: $000035F0 VOL: 0
; 0000 17FF                                         cykl_sterownik_4 = 0;
;PCODE: $000035F1 VOL: 0
;PCODE: $000035F2 VOL: 0
; 0000 1800                                         d = odczytaj_parametr(48,32);
;PCODE: $000035F3 VOL: 0
;PCODE: $000035F4 VOL: 0
;PCODE: $000035F5 VOL: 0
;PCODE: $000035F6 VOL: 0
;PCODE: $000035F7 VOL: 0
;PCODE: $000035F8 VOL: 0
; 0000 1801 
; 0000 1802                                         switch (d)
;PCODE: $000035F9 VOL: 0
; 0000 1803                                         {
; 0000 1804                                         case 0:
;PCODE: $000035FA VOL: 0
;PCODE: $000035FB VOL: 0
; 0000 1805 
; 0000 1806                                              cykl_wymiany = 4;
;PCODE: $000035FC VOL: 0
;PCODE: $000035FD VOL: 0
; 0000 1807                                              //jednak nie wymianiamy
; 0000 1808 
; 0000 1809                                         break;
;PCODE: $000035FE VOL: 0
; 0000 180A 
; 0000 180B                                         case 1:
;PCODE: $000035FF VOL: 0
;PCODE: $00003600 VOL: 0
;PCODE: $00003601 VOL: 0
; 0000 180C                                              cykl_wymiany = 3;
;PCODE: $00003602 VOL: 0
;PCODE: $00003603 VOL: 0
; 0000 180D                                              //czekam z decyzja - w trakcie wymiany
; 0000 180E                                         break;
;PCODE: $00003604 VOL: 0
; 0000 180F 
; 0000 1810                                         case 2:
;PCODE: $00003605 VOL: 0
;PCODE: $00003606 VOL: 0
;PCODE: $00003607 VOL: 0
; 0000 1811 
; 0000 1812                                              wymieniono_szczotke_druciana = 1;
;PCODE: $00003608 VOL: 0
;PCODE: $00003609 VOL: 0
; 0000 1813                                              PORT_F.bits.b6 = 0;   //zgas lampke
;PCODE: $0000360A VOL: 0
;PCODE: $0000360B VOL: 0
;PCODE: $0000360C VOL: 0
;PCODE: $0000360D VOL: 0
; 0000 1814                                              PORTF = PORT_F.byte;
;PCODE: $0000360E VOL: 0
;PCODE: $0000360F VOL: 0
; 0000 1815                                              czas_pracy_szczotki_drucianej = 0;
;PCODE: $00003610 VOL: 0
;PCODE: $00003611 VOL: 0
; 0000 1816                                              czas_pracy_szczotki_drucianej_h = 0;
;PCODE: $00003612 VOL: 0
;PCODE: $00003613 VOL: 0
;PCODE: $00003614 VOL: 0
; 0000 1817                                              zaktualizuj_parametry_panelu();
;PCODE: $00003615 VOL: 0
; 0000 1818                                              komunikat_na_panel("                                                ",80,0);
;PCODE: $00003616 VOL: 0
;PCODE: $00003617 VOL: 0
;PCODE: $00003618 VOL: 0
;PCODE: $00003619 VOL: 0
;PCODE: $0000361A VOL: 0
;PCODE: $0000361B VOL: 0
;PCODE: $0000361C VOL: 0
;PCODE: $0000361D VOL: 0
; 0000 1819                                              cykl_wymiany = 4;
;PCODE: $0000361E VOL: 0
;PCODE: $0000361F VOL: 0
; 0000 181A                                              //wymianymy
; 0000 181B                                         break;
;PCODE: $00003620 VOL: 0
; 0000 181C                                         }
;PCODE: $00003621 VOL: 0
; 0000 181D                             }
; 0000 181E 
; 0000 181F 
; 0000 1820 
; 0000 1821 
; 0000 1822 
; 0000 1823 
; 0000 1824     break;
;PCODE: $00003622 VOL: 0
;PCODE: $00003623 VOL: 0
; 0000 1825 
; 0000 1826    case 4:
;PCODE: $00003624 VOL: 0
;PCODE: $00003625 VOL: 0
;PCODE: $00003626 VOL: 0
; 0000 1827 
; 0000 1828                       //na sam dol zjezdzamy pionami
; 0000 1829                 if(cykl_sterownik_3 < 5)
;PCODE: $00003627 VOL: 0
;PCODE: $00003628 VOL: 0
;PCODE: $00003629 VOL: 0
; 0000 182A                     cykl_sterownik_3 = sterownik_3_praca(0x00);  //na sam dol, jedziemy miedzy rzedami
;PCODE: $0000362A VOL: 0
;PCODE: $0000362B VOL: 0
;PCODE: $0000362C VOL: 0
;PCODE: $0000362D VOL: 0
; 0000 182B                 if(cykl_sterownik_4 < 5)
;PCODE: $0000362E VOL: 0
;PCODE: $0000362F VOL: 0
;PCODE: $00003630 VOL: 0
;PCODE: $00003631 VOL: 0
; 0000 182C                     cykl_sterownik_4 = sterownik_4_praca(0x00,0);  //na sam dol, jedziemy miedzy rzedami
;PCODE: $00003632 VOL: 0
;PCODE: $00003633 VOL: 0
;PCODE: $00003634 VOL: 0
;PCODE: $00003635 VOL: 0
;PCODE: $00003636 VOL: 0
;PCODE: $00003637 VOL: 0
; 0000 182D 
; 0000 182E                 if(cykl_sterownik_3 == 5 & cykl_sterownik_4 == 5)
;PCODE: $00003638 VOL: 0
;PCODE: $00003639 VOL: 0
;PCODE: $0000363A VOL: 0
;PCODE: $0000363B VOL: 0
;PCODE: $0000363C VOL: 0
;PCODE: $0000363D VOL: 0
;PCODE: $0000363E VOL: 0
;PCODE: $0000363F VOL: 0
;PCODE: $00003640 VOL: 0
;PCODE: $00003641 VOL: 0
; 0000 182F 
; 0000 1830                             {
; 0000 1831                                         cykl_sterownik_1 = 0;
;PCODE: $00003642 VOL: 0
;PCODE: $00003643 VOL: 0
; 0000 1832                                         cykl_sterownik_2 = 0;
;PCODE: $00003644 VOL: 0
;PCODE: $00003645 VOL: 0
; 0000 1833                                         cykl_sterownik_3 = 0;
;PCODE: $00003646 VOL: 0
;PCODE: $00003647 VOL: 0
; 0000 1834                                         cykl_sterownik_4 = 0;
;PCODE: $00003648 VOL: 0
;PCODE: $00003649 VOL: 0
; 0000 1835                                         wartosc_parametru_panelu(0,48,32);
;PCODE: $0000364A VOL: 0
;PCODE: $0000364B VOL: 0
;PCODE: $0000364C VOL: 0
;PCODE: $0000364D VOL: 0
;PCODE: $0000364E VOL: 0
;PCODE: $0000364F VOL: 0
;PCODE: $00003650 VOL: 0
; 0000 1836                                         cykl_wymiany = 5;
;PCODE: $00003651 VOL: 0
;PCODE: $00003652 VOL: 0
; 0000 1837                                         g = 0;
;PCODE: $00003653 VOL: 0
;PCODE: $00003654 VOL: 0
; 0000 1838                                         }
; 0000 1839 
; 0000 183A    break;
;PCODE: $00003655 VOL: 0
;PCODE: $00003656 VOL: 0
; 0000 183B 
; 0000 183C 
; 0000 183D     }//switch
;PCODE: $00003657 VOL: 0
; 0000 183E 
; 0000 183F    }//while
;PCODE: $00003658 VOL: 0
;PCODE: $00003659 VOL: 0
; 0000 1840 
; 0000 1841 f = odczytaj_parametr(48,48);  //krazek scierny
;PCODE: $0000365A VOL: 0
;PCODE: $0000365B VOL: 0
;PCODE: $0000365C VOL: 0
;PCODE: $0000365D VOL: 0
;PCODE: $0000365E VOL: 0
;PCODE: $0000365F VOL: 0
; 0000 1842 cykl_wymiany = 0;
;PCODE: $00003660 VOL: 0
;PCODE: $00003661 VOL: 0
; 0000 1843 
; 0000 1844 while(f == 1)
;PCODE: $00003662 VOL: 0
;PCODE: $00003663 VOL: 0
;PCODE: $00003664 VOL: 0
;PCODE: $00003665 VOL: 0
; 0000 1845     {
; 0000 1846     switch(cykl_wymiany)
;PCODE: $00003666 VOL: 0
; 0000 1847     {
; 0000 1848     case 0:
;PCODE: $00003667 VOL: 0
;PCODE: $00003668 VOL: 0
; 0000 1849 
; 0000 184A                cykl_sterownik_1 = 0;
;PCODE: $00003669 VOL: 0
;PCODE: $0000366A VOL: 0
; 0000 184B                cykl_sterownik_2 = 0;
;PCODE: $0000366B VOL: 0
;PCODE: $0000366C VOL: 0
; 0000 184C                cykl_sterownik_3 = 0;
;PCODE: $0000366D VOL: 0
;PCODE: $0000366E VOL: 0
; 0000 184D                cykl_sterownik_4 = 0;
;PCODE: $0000366F VOL: 0
;PCODE: $00003670 VOL: 0
; 0000 184E                cykl_wymiany = 1;
;PCODE: $00003671 VOL: 0
;PCODE: $00003672 VOL: 0
; 0000 184F 
; 0000 1850 
; 0000 1851 
; 0000 1852     break;
;PCODE: $00003673 VOL: 0
; 0000 1853 
; 0000 1854     case 1:
;PCODE: $00003674 VOL: 0
;PCODE: $00003675 VOL: 0
;PCODE: $00003676 VOL: 0
; 0000 1855 
; 0000 1856             //na sam dol zjezdzamy pionami
; 0000 1857                 if(cykl_sterownik_3 < 5)
;PCODE: $00003677 VOL: 0
;PCODE: $00003678 VOL: 0
;PCODE: $00003679 VOL: 0
; 0000 1858                     cykl_sterownik_3 = sterownik_3_praca(0x00);  //na sam dol, jedziemy miedzy rzedami
;PCODE: $0000367A VOL: 0
;PCODE: $0000367B VOL: 0
;PCODE: $0000367C VOL: 0
;PCODE: $0000367D VOL: 0
; 0000 1859                 if(cykl_sterownik_4 < 5)
;PCODE: $0000367E VOL: 0
;PCODE: $0000367F VOL: 0
;PCODE: $00003680 VOL: 0
;PCODE: $00003681 VOL: 0
; 0000 185A                     cykl_sterownik_4 = sterownik_4_praca(0x00,0);  //na sam dol, jedziemy miedzy rzedami
;PCODE: $00003682 VOL: 0
;PCODE: $00003683 VOL: 0
;PCODE: $00003684 VOL: 0
;PCODE: $00003685 VOL: 0
;PCODE: $00003686 VOL: 0
;PCODE: $00003687 VOL: 0
; 0000 185B 
; 0000 185C                 if(cykl_sterownik_3 == 5 & cykl_sterownik_4 == 5)
;PCODE: $00003688 VOL: 0
;PCODE: $00003689 VOL: 0
;PCODE: $0000368A VOL: 0
;PCODE: $0000368B VOL: 0
;PCODE: $0000368C VOL: 0
;PCODE: $0000368D VOL: 0
;PCODE: $0000368E VOL: 0
;PCODE: $0000368F VOL: 0
;PCODE: $00003690 VOL: 0
;PCODE: $00003691 VOL: 0
; 0000 185D 
; 0000 185E                             {
; 0000 185F                                         cykl_sterownik_3 = 0;
;PCODE: $00003692 VOL: 0
;PCODE: $00003693 VOL: 0
; 0000 1860                                         cykl_sterownik_4 = 0;
;PCODE: $00003694 VOL: 0
;PCODE: $00003695 VOL: 0
; 0000 1861                                         cykl_wymiany = 2;
;PCODE: $00003696 VOL: 0
;PCODE: $00003697 VOL: 0
; 0000 1862                                         }
; 0000 1863 
; 0000 1864 
; 0000 1865 
; 0000 1866     break;
;PCODE: $00003698 VOL: 0
;PCODE: $00003699 VOL: 0
; 0000 1867 
; 0000 1868 
; 0000 1869 
; 0000 186A     case 2:
;PCODE: $0000369A VOL: 0
;PCODE: $0000369B VOL: 0
;PCODE: $0000369C VOL: 0
; 0000 186B 
; 0000 186C                                 if(cykl_sterownik_1 < 5)
;PCODE: $0000369D VOL: 0
;PCODE: $0000369E VOL: 0
;PCODE: $0000369F VOL: 0
; 0000 186D                                     cykl_sterownik_1 = sterownik_1_praca(0x1F9);
;PCODE: $000036A0 VOL: 0
;PCODE: $000036A1 VOL: 0
;PCODE: $000036A2 VOL: 0
;PCODE: $000036A3 VOL: 0
; 0000 186E                                  if(cykl_sterownik_2 < 5)                                //ster 1 do 0
;PCODE: $000036A4 VOL: 0
;PCODE: $000036A5 VOL: 0
;PCODE: $000036A6 VOL: 0
;PCODE: $000036A7 VOL: 0
; 0000 186F                                     cykl_sterownik_2 = sterownik_2_praca(0x1F9);       //ster 2 pod pin pozy rzad 1
;PCODE: $000036A8 VOL: 0
;PCODE: $000036A9 VOL: 0
;PCODE: $000036AA VOL: 0
;PCODE: $000036AB VOL: 0
; 0000 1870 
; 0000 1871                                     if(cykl_sterownik_1 == 5 & cykl_sterownik_2 == 5)
;PCODE: $000036AC VOL: 0
;PCODE: $000036AD VOL: 0
;PCODE: $000036AE VOL: 0
;PCODE: $000036AF VOL: 0
;PCODE: $000036B0 VOL: 0
;PCODE: $000036B1 VOL: 0
;PCODE: $000036B2 VOL: 0
;PCODE: $000036B3 VOL: 0
;PCODE: $000036B4 VOL: 0
;PCODE: $000036B5 VOL: 0
; 0000 1872                                         {
; 0000 1873                                         cykl_sterownik_1 = 0;
;PCODE: $000036B6 VOL: 0
;PCODE: $000036B7 VOL: 0
; 0000 1874                                         cykl_sterownik_2 = 0;
;PCODE: $000036B8 VOL: 0
;PCODE: $000036B9 VOL: 0
; 0000 1875                                         cykl_sterownik_3 = 0;
;PCODE: $000036BA VOL: 0
;PCODE: $000036BB VOL: 0
; 0000 1876                                         cykl_sterownik_4 = 0;
;PCODE: $000036BC VOL: 0
;PCODE: $000036BD VOL: 0
; 0000 1877                                          cykl_wymiany = 3;
;PCODE: $000036BE VOL: 0
;PCODE: $000036BF VOL: 0
; 0000 1878 
; 0000 1879                                         }
; 0000 187A 
; 0000 187B     break;
;PCODE: $000036C0 VOL: 0
;PCODE: $000036C1 VOL: 0
; 0000 187C 
; 0000 187D 
; 0000 187E 
; 0000 187F     case 3:
;PCODE: $000036C2 VOL: 0
;PCODE: $000036C3 VOL: 0
;PCODE: $000036C4 VOL: 0
; 0000 1880 
; 0000 1881             //na sam dol zjezdzamy pionami
; 0000 1882                 if(cykl_sterownik_3 < 5)
;PCODE: $000036C5 VOL: 0
;PCODE: $000036C6 VOL: 0
;PCODE: $000036C7 VOL: 0
; 0000 1883                     cykl_sterownik_3 = sterownik_3_praca(0x02);  //do pozycji wymiany
;PCODE: $000036C8 VOL: 0
;PCODE: $000036C9 VOL: 0
;PCODE: $000036CA VOL: 0
;PCODE: $000036CB VOL: 0
; 0000 1884                 if(cykl_sterownik_4 < 5)
;PCODE: $000036CC VOL: 0
;PCODE: $000036CD VOL: 0
;PCODE: $000036CE VOL: 0
;PCODE: $000036CF VOL: 0
; 0000 1885                     cykl_sterownik_4 = sterownik_4_praca(0x02,0);  //do pozycji wymiany
;PCODE: $000036D0 VOL: 0
;PCODE: $000036D1 VOL: 0
;PCODE: $000036D2 VOL: 0
;PCODE: $000036D3 VOL: 0
;PCODE: $000036D4 VOL: 0
;PCODE: $000036D5 VOL: 0
; 0000 1886 
; 0000 1887                 if(cykl_sterownik_3 == 5 & cykl_sterownik_4 == 5)
;PCODE: $000036D6 VOL: 0
;PCODE: $000036D7 VOL: 0
;PCODE: $000036D8 VOL: 0
;PCODE: $000036D9 VOL: 0
;PCODE: $000036DA VOL: 0
;PCODE: $000036DB VOL: 0
;PCODE: $000036DC VOL: 0
;PCODE: $000036DD VOL: 0
;PCODE: $000036DE VOL: 0
;PCODE: $000036DF VOL: 0
; 0000 1888 
; 0000 1889                             {
; 0000 188A                                         cykl_sterownik_3 = 0;
;PCODE: $000036E0 VOL: 0
;PCODE: $000036E1 VOL: 0
; 0000 188B                                         cykl_sterownik_4 = 0;
;PCODE: $000036E2 VOL: 0
;PCODE: $000036E3 VOL: 0
; 0000 188C                                         e = odczytaj_parametr(48,48);
;PCODE: $000036E4 VOL: 0
;PCODE: $000036E5 VOL: 0
;PCODE: $000036E6 VOL: 0
;PCODE: $000036E7 VOL: 0
;PCODE: $000036E8 VOL: 0
;PCODE: $000036E9 VOL: 0
; 0000 188D 
; 0000 188E                                         switch (e)
;PCODE: $000036EA VOL: 0
; 0000 188F                                         {
; 0000 1890                                         case 0:
;PCODE: $000036EB VOL: 0
;PCODE: $000036EC VOL: 0
; 0000 1891 
; 0000 1892                                              cykl_wymiany = 4;
;PCODE: $000036ED VOL: 0
;PCODE: $000036EE VOL: 0
; 0000 1893                                              //jednak nie wymianiamy
; 0000 1894 
; 0000 1895                                         break;
;PCODE: $000036EF VOL: 0
; 0000 1896 
; 0000 1897                                         case 1:
;PCODE: $000036F0 VOL: 0
;PCODE: $000036F1 VOL: 0
;PCODE: $000036F2 VOL: 0
; 0000 1898                                              cykl_wymiany = 3;
;PCODE: $000036F3 VOL: 0
;PCODE: $000036F4 VOL: 0
; 0000 1899                                              //czekam z decyzja - w trakcie wymiany
; 0000 189A                                         break;
;PCODE: $000036F5 VOL: 0
; 0000 189B 
; 0000 189C                                         case 2:
;PCODE: $000036F6 VOL: 0
;PCODE: $000036F7 VOL: 0
;PCODE: $000036F8 VOL: 0
; 0000 189D                                              cykl_wymiany = 4;
;PCODE: $000036F9 VOL: 0
;PCODE: $000036FA VOL: 0
; 0000 189E                                              wymieniono_krazek_scierny = 1;
;PCODE: $000036FB VOL: 0
;PCODE: $000036FC VOL: 0
; 0000 189F                                              PORT_F.bits.b6 = 0;   //zgas lampke
;PCODE: $000036FD VOL: 0
;PCODE: $000036FE VOL: 0
;PCODE: $000036FF VOL: 0
;PCODE: $00003700 VOL: 0
; 0000 18A0                                              PORTF = PORT_F.byte;
;PCODE: $00003701 VOL: 0
;PCODE: $00003702 VOL: 0
; 0000 18A1                                              czas_pracy_krazka_sciernego = 0;
;PCODE: $00003703 VOL: 0
;PCODE: $00003704 VOL: 0
; 0000 18A2                                              czas_pracy_krazka_sciernego_h = 0;
;PCODE: $00003705 VOL: 0
;PCODE: $00003706 VOL: 0
;PCODE: $00003707 VOL: 0
; 0000 18A3                                              zaktualizuj_parametry_panelu();
;PCODE: $00003708 VOL: 0
; 0000 18A4                                              komunikat_na_panel("                                                ",64,0);
;PCODE: $00003709 VOL: 0
;PCODE: $0000370A VOL: 0
;PCODE: $0000370B VOL: 0
;PCODE: $0000370C VOL: 0
;PCODE: $0000370D VOL: 0
;PCODE: $0000370E VOL: 0
;PCODE: $0000370F VOL: 0
;PCODE: $00003710 VOL: 0
; 0000 18A5                                              //wymianymy
; 0000 18A6                                         break;
;PCODE: $00003711 VOL: 0
; 0000 18A7                                         }
;PCODE: $00003712 VOL: 0
; 0000 18A8                             }
; 0000 18A9 
; 0000 18AA 
; 0000 18AB 
; 0000 18AC 
; 0000 18AD 
; 0000 18AE 
; 0000 18AF     break;
;PCODE: $00003713 VOL: 0
;PCODE: $00003714 VOL: 0
; 0000 18B0 
; 0000 18B1    case 4:
;PCODE: $00003715 VOL: 0
;PCODE: $00003716 VOL: 0
;PCODE: $00003717 VOL: 0
; 0000 18B2 
; 0000 18B3                       //na sam dol zjezdzamy pionami
; 0000 18B4                 if(cykl_sterownik_3 < 5)
;PCODE: $00003718 VOL: 0
;PCODE: $00003719 VOL: 0
;PCODE: $0000371A VOL: 0
; 0000 18B5                     cykl_sterownik_3 = sterownik_3_praca(0x00);  //na sam dol, jedziemy miedzy rzedami
;PCODE: $0000371B VOL: 0
;PCODE: $0000371C VOL: 0
;PCODE: $0000371D VOL: 0
;PCODE: $0000371E VOL: 0
; 0000 18B6                 if(cykl_sterownik_4 < 5)
;PCODE: $0000371F VOL: 0
;PCODE: $00003720 VOL: 0
;PCODE: $00003721 VOL: 0
;PCODE: $00003722 VOL: 0
; 0000 18B7                     cykl_sterownik_4 = sterownik_4_praca(0x00,0);  //na sam dol, jedziemy miedzy rzedami
;PCODE: $00003723 VOL: 0
;PCODE: $00003724 VOL: 0
;PCODE: $00003725 VOL: 0
;PCODE: $00003726 VOL: 0
;PCODE: $00003727 VOL: 0
;PCODE: $00003728 VOL: 0
; 0000 18B8 
; 0000 18B9                 if(cykl_sterownik_3 == 5 & cykl_sterownik_4 == 5)
;PCODE: $00003729 VOL: 0
;PCODE: $0000372A VOL: 0
;PCODE: $0000372B VOL: 0
;PCODE: $0000372C VOL: 0
;PCODE: $0000372D VOL: 0
;PCODE: $0000372E VOL: 0
;PCODE: $0000372F VOL: 0
;PCODE: $00003730 VOL: 0
;PCODE: $00003731 VOL: 0
;PCODE: $00003732 VOL: 0
; 0000 18BA 
; 0000 18BB                             {
; 0000 18BC                                         cykl_sterownik_1 = 0;
;PCODE: $00003733 VOL: 0
;PCODE: $00003734 VOL: 0
; 0000 18BD                                         cykl_sterownik_2 = 0;
;PCODE: $00003735 VOL: 0
;PCODE: $00003736 VOL: 0
; 0000 18BE                                         cykl_sterownik_3 = 0;
;PCODE: $00003737 VOL: 0
;PCODE: $00003738 VOL: 0
; 0000 18BF                                         cykl_sterownik_4 = 0;
;PCODE: $00003739 VOL: 0
;PCODE: $0000373A VOL: 0
; 0000 18C0                                         cykl_wymiany = 5;
;PCODE: $0000373B VOL: 0
;PCODE: $0000373C VOL: 0
; 0000 18C1                                         wartosc_parametru_panelu(0,48,48);
;PCODE: $0000373D VOL: 0
;PCODE: $0000373E VOL: 0
;PCODE: $0000373F VOL: 0
;PCODE: $00003740 VOL: 0
;PCODE: $00003741 VOL: 0
;PCODE: $00003742 VOL: 0
;PCODE: $00003743 VOL: 0
; 0000 18C2                                         f = 0;
;PCODE: $00003744 VOL: 0
;PCODE: $00003745 VOL: 0
; 0000 18C3                                         }
; 0000 18C4 
; 0000 18C5    break;
;PCODE: $00003746 VOL: 0
;PCODE: $00003747 VOL: 0
; 0000 18C6 
; 0000 18C7 
; 0000 18C8     }//switch
;PCODE: $00003748 VOL: 0
; 0000 18C9 
; 0000 18CA    }//while
;PCODE: $00003749 VOL: 0
;PCODE: $0000374A VOL: 0
; 0000 18CB 
; 0000 18CC 
; 0000 18CD 
; 0000 18CE 
; 0000 18CF 
; 0000 18D0 
; 0000 18D1 
; 0000 18D2 }
;PCODE: $0000374B VOL: 0
;PCODE: $0000374C VOL: 0
;PCODE: $0000374D VOL: 0
;PCODE: $0000374E VOL: 0
;
;
;
;
;
;void main(void)
; 0000 18D9 {
;PCODE: $0000374F VOL: 0
; 0000 18DA 
; 0000 18DB // Input/Output Ports initialization
; 0000 18DC // Port A initialization
; 0000 18DD // Func7=Out Func6=Out Func5=Out Func4=Out Func3=Out Func2=Out Func1=Out Func0=Out
; 0000 18DE // State7=0 State6=0 State5=0 State4=0 State3=0 State2=0 State1=0 State0=0
; 0000 18DF PORTA=0x00;
;PCODE: $00003750 VOL: 0
;PCODE: $00003751 VOL: 0
; 0000 18E0 DDRA=0xFF;
;PCODE: $00003752 VOL: 0
;PCODE: $00003753 VOL: 0
; 0000 18E1 
; 0000 18E2 // Port B initialization
; 0000 18E3 // Func7=Out Func6=Out Func5=Out Func4=Out Func3=Out Func2=Out Func1=Out Func0=Out
; 0000 18E4 // State7=0 State6=0 State5=0 State4=0 State3=0 State2=0 State1=0 State0=0
; 0000 18E5 PORTB=0x00;
;PCODE: $00003754 VOL: 0
;PCODE: $00003755 VOL: 0
; 0000 18E6 DDRB=0xFF;
;PCODE: $00003756 VOL: 0
;PCODE: $00003757 VOL: 0
; 0000 18E7 
; 0000 18E8 // Port C initialization
; 0000 18E9 // Func7=Out Func6=Out Func5=Out Func4=Out Func3=Out Func2=Out Func1=Out Func0=Out
; 0000 18EA // State7=0 State6=0 State5=0 State4=0 State3=0 State2=0 State1=0 State0=0
; 0000 18EB PORTC=0x00;
;PCODE: $00003758 VOL: 0
;PCODE: $00003759 VOL: 0
; 0000 18EC DDRC=0xFF;
;PCODE: $0000375A VOL: 0
;PCODE: $0000375B VOL: 0
; 0000 18ED 
; 0000 18EE // Port D initialization
; 0000 18EF // Func7=Out Func6=Out Func5=Out Func4=Out Func3=Out Func2=Out Func1=Out Func0=Out
; 0000 18F0 // State7=0 State6=0 State5=0 State4=0 State3=0 State2=0 State1=0 State0=0
; 0000 18F1 PORTD=0x00;
;PCODE: $0000375C VOL: 0
;PCODE: $0000375D VOL: 0
; 0000 18F2 DDRD=0xFF;
;PCODE: $0000375E VOL: 0
;PCODE: $0000375F VOL: 0
; 0000 18F3 
; 0000 18F4 // Port E initialization
; 0000 18F5 // Func7=Out Func6=Out Func5=Out Func4=Out Func3=Out Func2=Out Func1=Out Func0=Out
; 0000 18F6 // State7=0 State6=0 State5=0 State4=0 State3=0 State2=0 State1=0 State0=0
; 0000 18F7 PORTE=0x00;
;PCODE: $00003760 VOL: 0
;PCODE: $00003761 VOL: 0
; 0000 18F8 DDRE=0xFF;
;PCODE: $00003762 VOL: 0
;PCODE: $00003763 VOL: 0
; 0000 18F9 
; 0000 18FA // Port F initialization
; 0000 18FB // Func7=Out Func6=Out Func5=Out Func4=Out Func3=Out Func2=Out Func1=Out Func0=Out
; 0000 18FC // State7=0 State6=0 State5=0 State4=0 State3=0 State2=0 State1=0 State0=0
; 0000 18FD PORTF=0x00;
;PCODE: $00003764 VOL: 0
;PCODE: $00003765 VOL: 0
; 0000 18FE DDRF=0xFF;
;PCODE: $00003766 VOL: 0
;PCODE: $00003767 VOL: 0
; 0000 18FF 
; 0000 1900 // Port G initialization
; 0000 1901 // Func4=Out Func3=Out Func2=Out Func1=Out Func0=Out
; 0000 1902 // State4=0 State3=0 State2=0 State1=0 State0=0
; 0000 1903 PORTG=0x00;
;PCODE: $00003768 VOL: 0
;PCODE: $00003769 VOL: 0
; 0000 1904 DDRG=0x1F;
;PCODE: $0000376A VOL: 0
;PCODE: $0000376B VOL: 0
; 0000 1905 
; 0000 1906 
; 0000 1907 
; 0000 1908 
; 0000 1909 
; 0000 190A // Timer/Counter 0 initialization
; 0000 190B // Clock source: System Clock
; 0000 190C // Clock value: 15,625 kHz
; 0000 190D // Mode: Normal top=0xFF
; 0000 190E // OC0 output: Disconnected
; 0000 190F ASSR=0x00;
;PCODE: $0000376C VOL: 0
;PCODE: $0000376D VOL: 0
; 0000 1910 TCCR0=0x07;
;PCODE: $0000376E VOL: 0
;PCODE: $0000376F VOL: 0
; 0000 1911 TCNT0=0x00;
;PCODE: $00003770 VOL: 0
;PCODE: $00003771 VOL: 0
; 0000 1912 OCR0=0x00;
;PCODE: $00003772 VOL: 0
;PCODE: $00003773 VOL: 0
; 0000 1913 
; 0000 1914 // Timer/Counter 1 initialization
; 0000 1915 // Clock source: System Clock
; 0000 1916 // Clock value: Timer1 Stopped
; 0000 1917 // Mode: Normal top=0xFFFF
; 0000 1918 // OC1A output: Discon.
; 0000 1919 // OC1B output: Discon.
; 0000 191A // OC1C output: Discon.
; 0000 191B // Noise Canceler: Off
; 0000 191C // Input Capture on Falling Edge
; 0000 191D // Timer1 Overflow Interrupt: Off
; 0000 191E // Input Capture Interrupt: Off
; 0000 191F // Compare A Match Interrupt: Off
; 0000 1920 // Compare B Match Interrupt: Off
; 0000 1921 // Compare C Match Interrupt: Off
; 0000 1922 TCCR1A=0x00;
;PCODE: $00003774 VOL: 0
;PCODE: $00003775 VOL: 0
; 0000 1923 TCCR1B=0x00;
;PCODE: $00003776 VOL: 0
;PCODE: $00003777 VOL: 0
; 0000 1924 TCNT1H=0x00;
;PCODE: $00003778 VOL: 0
;PCODE: $00003779 VOL: 0
; 0000 1925 TCNT1L=0x00;
;PCODE: $0000377A VOL: 0
;PCODE: $0000377B VOL: 0
; 0000 1926 ICR1H=0x00;
;PCODE: $0000377C VOL: 0
;PCODE: $0000377D VOL: 0
; 0000 1927 ICR1L=0x00;
;PCODE: $0000377E VOL: 0
;PCODE: $0000377F VOL: 0
; 0000 1928 OCR1AH=0x00;
;PCODE: $00003780 VOL: 0
;PCODE: $00003781 VOL: 0
; 0000 1929 OCR1AL=0x00;
;PCODE: $00003782 VOL: 0
;PCODE: $00003783 VOL: 0
; 0000 192A OCR1BH=0x00;
;PCODE: $00003784 VOL: 0
;PCODE: $00003785 VOL: 0
; 0000 192B OCR1BL=0x00;
;PCODE: $00003786 VOL: 0
;PCODE: $00003787 VOL: 0
; 0000 192C OCR1CH=0x00;
;PCODE: $00003788 VOL: 0
;PCODE: $00003789 VOL: 0
; 0000 192D OCR1CL=0x00;
;PCODE: $0000378A VOL: 0
;PCODE: $0000378B VOL: 0
; 0000 192E 
; 0000 192F // Timer/Counter 2 initialization
; 0000 1930 // Clock source: System Clock
; 0000 1931 // Clock value: Timer2 Stopped
; 0000 1932 // Mode: Normal top=0xFF
; 0000 1933 // OC2 output: Disconnected
; 0000 1934 TCCR2=0x00;
;PCODE: $0000378C VOL: 0
;PCODE: $0000378D VOL: 0
; 0000 1935 TCNT2=0x00;
;PCODE: $0000378E VOL: 0
;PCODE: $0000378F VOL: 0
; 0000 1936 OCR2=0x00;
;PCODE: $00003790 VOL: 0
;PCODE: $00003791 VOL: 0
; 0000 1937 
; 0000 1938 // Timer/Counter 3 initialization
; 0000 1939 // Clock source: System Clock
; 0000 193A // Clock value: Timer3 Stopped
; 0000 193B // Mode: Normal top=0xFFFF
; 0000 193C // OC3A output: Discon.
; 0000 193D // OC3B output: Discon.
; 0000 193E // OC3C output: Discon.
; 0000 193F // Noise Canceler: Off
; 0000 1940 // Input Capture on Falling Edge
; 0000 1941 // Timer3 Overflow Interrupt: Off
; 0000 1942 // Input Capture Interrupt: Off
; 0000 1943 // Compare A Match Interrupt: Off
; 0000 1944 // Compare B Match Interrupt: Off
; 0000 1945 // Compare C Match Interrupt: Off
; 0000 1946 TCCR3A=0x00;
;PCODE: $00003792 VOL: 0
;PCODE: $00003793 VOL: 0
; 0000 1947 TCCR3B=0x00;
;PCODE: $00003794 VOL: 0
;PCODE: $00003795 VOL: 0
; 0000 1948 TCNT3H=0x00;
;PCODE: $00003796 VOL: 0
;PCODE: $00003797 VOL: 0
; 0000 1949 TCNT3L=0x00;
;PCODE: $00003798 VOL: 0
;PCODE: $00003799 VOL: 0
; 0000 194A ICR3H=0x00;
;PCODE: $0000379A VOL: 0
;PCODE: $0000379B VOL: 0
; 0000 194B ICR3L=0x00;
;PCODE: $0000379C VOL: 0
;PCODE: $0000379D VOL: 0
; 0000 194C OCR3AH=0x00;
;PCODE: $0000379E VOL: 0
;PCODE: $0000379F VOL: 0
; 0000 194D OCR3AL=0x00;
;PCODE: $000037A0 VOL: 0
;PCODE: $000037A1 VOL: 0
; 0000 194E OCR3BH=0x00;
;PCODE: $000037A2 VOL: 0
;PCODE: $000037A3 VOL: 0
; 0000 194F OCR3BL=0x00;
;PCODE: $000037A4 VOL: 0
;PCODE: $000037A5 VOL: 0
; 0000 1950 OCR3CH=0x00;
;PCODE: $000037A6 VOL: 0
;PCODE: $000037A7 VOL: 0
; 0000 1951 OCR3CL=0x00;
;PCODE: $000037A8 VOL: 0
;PCODE: $000037A9 VOL: 0
; 0000 1952 
; 0000 1953 // External Interrupt(s) initialization
; 0000 1954 // INT0: Off
; 0000 1955 // INT1: Off
; 0000 1956 // INT2: Off
; 0000 1957 // INT3: Off
; 0000 1958 // INT4: Off
; 0000 1959 // INT5: Off
; 0000 195A // INT6: Off
; 0000 195B // INT7: Off
; 0000 195C EICRA=0x00;
;PCODE: $000037AA VOL: 0
;PCODE: $000037AB VOL: 0
; 0000 195D EICRB=0x00;
;PCODE: $000037AC VOL: 0
;PCODE: $000037AD VOL: 0
; 0000 195E EIMSK=0x00;
;PCODE: $000037AE VOL: 0
;PCODE: $000037AF VOL: 0
; 0000 195F 
; 0000 1960 // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 1961 TIMSK=0x01;
;PCODE: $000037B0 VOL: 0
;PCODE: $000037B1 VOL: 0
; 0000 1962 
; 0000 1963 ETIMSK=0x00;
;PCODE: $000037B2 VOL: 0
;PCODE: $000037B3 VOL: 0
; 0000 1964 
; 0000 1965 
; 0000 1966 // USART0 initialization
; 0000 1967 // Communication Parameters: 8 Data, 1 Stop, No Parity
; 0000 1968 // USART0 Receiver: On
; 0000 1969 // USART0 Transmitter: On
; 0000 196A // USART0 Mode: Asynchronous
; 0000 196B // USART0 Baud Rate: 115200
; 0000 196C UCSR0A=(0<<RXC0) | (0<<TXC0) | (0<<UDRE0) | (0<<FE0) | (0<<DOR0) | (0<<UPE0) | (0<<U2X0) | (0<<MPCM0);
;PCODE: $000037B4 VOL: 0
;PCODE: $000037B5 VOL: 0
; 0000 196D UCSR0B=(0<<RXCIE0) | (0<<TXCIE0) | (0<<UDRIE0) | (1<<RXEN0) | (1<<TXEN0) | (0<<UCSZ02) | (0<<RXB80) | (0<<TXB80);
;PCODE: $000037B6 VOL: 0
;PCODE: $000037B7 VOL: 0
; 0000 196E UCSR0C=(0<<UMSEL0) | (0<<UPM01) | (0<<UPM00) | (0<<USBS0) | (1<<UCSZ01) | (1<<UCSZ00) | (0<<UCPOL0);
;PCODE: $000037B8 VOL: 0
;PCODE: $000037B9 VOL: 0
; 0000 196F UBRR0H=0x00;
;PCODE: $000037BA VOL: 0
;PCODE: $000037BB VOL: 0
; 0000 1970 UBRR0L=0x08;
;PCODE: $000037BC VOL: 0
;PCODE: $000037BD VOL: 0
; 0000 1971 
; 0000 1972 // USART1 initialization
; 0000 1973 // USART1 disabled
; 0000 1974 UCSR1B=(0<<RXCIE1) | (0<<TXCIE1) | (0<<UDRIE1) | (0<<RXEN1) | (0<<TXEN1) | (0<<UCSZ12) | (0<<RXB81) | (0<<TXB81);
;PCODE: $000037BE VOL: 0
;PCODE: $000037BF VOL: 0
; 0000 1975 
; 0000 1976 // Analog Comparator initialization
; 0000 1977 // Analog Comparator: Off
; 0000 1978 // Analog Comparator Input Capture by Timer/Counter 1: Off
; 0000 1979 ACSR=0x80;
;PCODE: $000037C0 VOL: 0
;PCODE: $000037C1 VOL: 0
; 0000 197A SFIOR=0x00;
;PCODE: $000037C2 VOL: 0
;PCODE: $000037C3 VOL: 0
; 0000 197B 
; 0000 197C // ADC initialization
; 0000 197D // ADC disabled
; 0000 197E ADCSRA=0x00;
;PCODE: $000037C4 VOL: 0
;PCODE: $000037C5 VOL: 0
; 0000 197F 
; 0000 1980 // SPI initialization
; 0000 1981 // SPI disabled
; 0000 1982 SPCR=0x00;
;PCODE: $000037C6 VOL: 0
;PCODE: $000037C7 VOL: 0
; 0000 1983 
; 0000 1984 // TWI initialization
; 0000 1985 // TWI disabled
; 0000 1986 TWCR=0x00;
;PCODE: $000037C8 VOL: 0
;PCODE: $000037C9 VOL: 0
; 0000 1987 
; 0000 1988 //ciekawe, tej linijki brakowalo w medalach ,wyczailem w borgu
; 0000 1989 // I2C Bus initialization
; 0000 198A i2c_init();
;PCODE: $000037CA VOL: 0
; 0000 198B 
; 0000 198C // Global enable interrupts
; 0000 198D #asm("sei")
;PCODE: $000037CB VOL: 0
	sei
;PCODE: $000037CC VOL: 0
; 0000 198E 
; 0000 198F delay_ms(2000); //bo panel sie inicjalizuje
;PCODE: $000037CD VOL: 0
;PCODE: $000037CE VOL: 0
;PCODE: $000037CF VOL: 0
; 0000 1990 delay_ms(2000); //bo panel sie inicjalizuje
;PCODE: $000037D0 VOL: 0
;PCODE: $000037D1 VOL: 0
;PCODE: $000037D2 VOL: 0
; 0000 1991 delay_ms(2000); //bo panel sie inicjalizuje
;PCODE: $000037D3 VOL: 0
;PCODE: $000037D4 VOL: 0
;PCODE: $000037D5 VOL: 0
; 0000 1992 delay_ms(2000); //bo panel sie inicjalizuje
;PCODE: $000037D6 VOL: 0
;PCODE: $000037D7 VOL: 0
;PCODE: $000037D8 VOL: 0
; 0000 1993 
; 0000 1994 //jak patrze na maszyne to ten po lewej to 1
; 0000 1995 
; 0000 1996 putchar(90);  //5A
;PCODE: $000037D9 VOL: 0
;PCODE: $000037DA VOL: 0
;PCODE: $000037DB VOL: 0
; 0000 1997 putchar(165); //A5
;PCODE: $000037DC VOL: 0
;PCODE: $000037DD VOL: 0
;PCODE: $000037DE VOL: 0
; 0000 1998 putchar(3);//03  //znak dzwiekowy ze jestem
;PCODE: $000037DF VOL: 0
;PCODE: $000037E0 VOL: 0
;PCODE: $000037E1 VOL: 0
; 0000 1999 putchar(128);  //80
;PCODE: $000037E2 VOL: 0
;PCODE: $000037E3 VOL: 0
;PCODE: $000037E4 VOL: 0
; 0000 199A putchar(2);    //02
;PCODE: $000037E5 VOL: 0
;PCODE: $000037E6 VOL: 0
;PCODE: $000037E7 VOL: 0
; 0000 199B putchar(16);   //10
;PCODE: $000037E8 VOL: 0
;PCODE: $000037E9 VOL: 0
;PCODE: $000037EA VOL: 0
; 0000 199C 
; 0000 199D il_prob_odczytu = 1;    //100
;PCODE: $000037EB VOL: 0
;PCODE: $000037EC VOL: 0
; 0000 199E start = 0;
;PCODE: $000037ED VOL: 0
; 0000 199F //szczotka_druciana_ilosc_cykli = 4; bo eeprom
; 0000 19A0 //krazek_scierny_cykl_po_okregu_ilosc = 4;
; 0000 19A1 //krazek_scierny_ilosc_cykli = 4;
; 0000 19A2 rzad_obrabiany = 1;
;PCODE: $000037EE VOL: 0
;PCODE: $000037EF VOL: 0
; 0000 19A3 jestem_w_trakcie_czyszczenia_calosci = 0;
;PCODE: $000037F0 VOL: 0
;PCODE: $000037F1 VOL: 0
; 0000 19A4 wykonalem_rzedow = 0;
;PCODE: $000037F2 VOL: 0
;PCODE: $000037F3 VOL: 0
; 0000 19A5 cykl_ilosc_zaciskow = 0;
;PCODE: $000037F4 VOL: 0
;PCODE: $000037F5 VOL: 0
; 0000 19A6 guzik1_przelaczania_zaciskow = 1;
;PCODE: $000037F6 VOL: 0
;PCODE: $000037F7 VOL: 0
;PCODE: $000037F8 VOL: 0
; 0000 19A7 guzik2_przelaczania_zaciskow = 1;
;PCODE: $000037F9 VOL: 0
;PCODE: $000037FA VOL: 0
;PCODE: $000037FB VOL: 0
; 0000 19A8 PORTE.6 = 1;  //aby byl dostep do zaciskow rzad 1
;PCODE: $000037FC VOL: 0
;PCODE: $000037FD VOL: 0
; 0000 19A9 zmienna_przelaczanie_zaciskow = 1;
;PCODE: $000037FE VOL: 0
;PCODE: $000037FF VOL: 0
;PCODE: $00003800 VOL: 0
; 0000 19AA czas_przedmuchu = 183;
;PCODE: $00003801 VOL: 0
;PCODE: $00003802 VOL: 0
; 0000 19AB predkosc_pion_szczotka = 100;
;PCODE: $00003803 VOL: 0
;PCODE: $00003804 VOL: 0
; 0000 19AC predkosc_pion_krazek = 100;
;PCODE: $00003805 VOL: 0
;PCODE: $00003806 VOL: 0
; 0000 19AD wejscie_krazka_sciernego_w_pow_boczna_cylindra = 1;
;PCODE: $00003807 VOL: 0
;PCODE: $00003808 VOL: 0
; 0000 19AE predkosc_ruchow_po_okregu_krazek_scierny = 50;
;PCODE: $00003809 VOL: 0
;PCODE: $0000380A VOL: 0
; 0000 19AF czas_druciaka_na_gorze = 125;  //2 sekundy dla druciaka na gorze aby dolek zrobil git
;PCODE: $0000380B VOL: 0
;PCODE: $0000380C VOL: 0
; 0000 19B0 
; 0000 19B1 adr1 = 80;  //rzad 1
;PCODE: $0000380D VOL: 0
;PCODE: $0000380E VOL: 0
; 0000 19B2 adr2 = 0;   //
;PCODE: $0000380F VOL: 0
;PCODE: $00003810 VOL: 0
; 0000 19B3 adr3 = 64;  //rzad 2
;PCODE: $00003811 VOL: 0
;PCODE: $00003812 VOL: 0
; 0000 19B4 adr4 = 0;
;PCODE: $00003813 VOL: 0
;PCODE: $00003814 VOL: 0
; 0000 19B5 
; 0000 19B6 
; 0000 19B7 wartosci_wstepne_panelu();
;PCODE: $00003815 VOL: 0
; 0000 19B8 wypozycjonuj_napedy_minimalistyczna();
;PCODE: $00003816 VOL: 0
; 0000 19B9 sprawdz_cisnienie();
;PCODE: $00003817 VOL: 0
; 0000 19BA 
; 0000 19BB //mniejsze ziarno na krazku - dobry pomysl
; 0000 19BC 
; 0000 19BD 
; 0000 19BE while (1)
;PCODE: $00003818 VOL: 0
; 0000 19BF       {
; 0000 19C0       ostateczny_wybor_zacisku();
;PCODE: $00003819 VOL: 0
; 0000 19C1       przerzucanie_dociskow();
;PCODE: $0000381A VOL: 0
; 0000 19C2       kontrola_zoltego_swiatla();
;PCODE: $0000381B VOL: 0
; 0000 19C3       wymiana_szczotki_i_krazka();
;PCODE: $0000381C VOL: 0
; 0000 19C4       zaktualizuj_parametry_panelu();
;PCODE: $0000381D VOL: 0
; 0000 19C5       odpytaj_parametry_panelu();
;PCODE: $0000381E VOL: 0
; 0000 19C6       test_geometryczny();
;PCODE: $0000381F VOL: 0
; 0000 19C7       sprawdz_cisnienie();
;PCODE: $00003820 VOL: 0
; 0000 19C8 
; 0000 19C9       while((start == 1 & il_zaciskow_rzad_1 > 1 & il_zaciskow_rzad_2 != 1 & macierz_zaciskow[1]!=0  & (macierz_zaciskow[2]!=0 |  il_zaciskow_rzad_2 == 0)) | jestem_w_trakcie_czyszczenia_calosci == 1)
;PCODE: $00003821 VOL: 0
;PCODE: $00003822 VOL: 0
;PCODE: $00003823 VOL: 0
;PCODE: $00003824 VOL: 0
;PCODE: $00003825 VOL: 0
;PCODE: $00003826 VOL: 0
;PCODE: $00003827 VOL: 0
;PCODE: $00003828 VOL: 0
;PCODE: $00003829 VOL: 0
;PCODE: $0000382A VOL: 0
;PCODE: $0000382B VOL: 0
;PCODE: $0000382C VOL: 0
;PCODE: $0000382D VOL: 0
;PCODE: $0000382E VOL: 0
;PCODE: $0000382F VOL: 0
;PCODE: $00003830 VOL: 0
;PCODE: $00003831 VOL: 0
;PCODE: $00003832 VOL: 0
;PCODE: $00003833 VOL: 0
;PCODE: $00003834 VOL: 0
;PCODE: $00003835 VOL: 0
;PCODE: $00003836 VOL: 0
;PCODE: $00003837 VOL: 0
;PCODE: $00003838 VOL: 0
;PCODE: $00003839 VOL: 0
;PCODE: $0000383A VOL: 0
;PCODE: $0000383B VOL: 0
;PCODE: $0000383C VOL: 0
;PCODE: $0000383D VOL: 0
;PCODE: $0000383E VOL: 0
;PCODE: $0000383F VOL: 0
;PCODE: $00003840 VOL: 0
;PCODE: $00003841 VOL: 0
;PCODE: $00003842 VOL: 0
;PCODE: $00003843 VOL: 0
;PCODE: $00003844 VOL: 0
;PCODE: $00003845 VOL: 0
; 0000 19CA             {
; 0000 19CB             switch (cykl_glowny)
;PCODE: $00003846 VOL: 0
; 0000 19CC             {
; 0000 19CD             case 0:
;PCODE: $00003847 VOL: 0
;PCODE: $00003848 VOL: 0
; 0000 19CE 
; 0000 19CF 
; 0000 19D0                     PORTB.6 = 1;   ////zielona lampka
;PCODE: $00003849 VOL: 0
;PCODE: $0000384A VOL: 0
; 0000 19D1                     if(jestem_w_trakcie_czyszczenia_calosci == 0)
;PCODE: $0000384B VOL: 0
;PCODE: $0000384C VOL: 0
;PCODE: $0000384D VOL: 0
; 0000 19D2                         {
; 0000 19D3                         wartosc_parametru_panelu(0,0,16);  //wykonano zaciskow rzad1
;PCODE: $0000384E VOL: 0
;PCODE: $0000384F VOL: 0
;PCODE: $00003850 VOL: 0
;PCODE: $00003851 VOL: 0
;PCODE: $00003852 VOL: 0
;PCODE: $00003853 VOL: 0
;PCODE: $00003854 VOL: 0
; 0000 19D4                         wartosc_parametru_panelu(0,0,96);  //wykonano zaciskow rzad2
;PCODE: $00003855 VOL: 0
;PCODE: $00003856 VOL: 0
;PCODE: $00003857 VOL: 0
;PCODE: $00003858 VOL: 0
;PCODE: $00003859 VOL: 0
;PCODE: $0000385A VOL: 0
;PCODE: $0000385B VOL: 0
; 0000 19D5 
; 0000 19D6                         il_zaciskow_rzad_1 = odczytaj_parametr(0,128);
;PCODE: $0000385C VOL: 0
;PCODE: $0000385D VOL: 0
;PCODE: $0000385E VOL: 0
;PCODE: $0000385F VOL: 0
;PCODE: $00003860 VOL: 0
;PCODE: $00003861 VOL: 0
; 0000 19D7                         il_zaciskow_rzad_2 = odczytaj_parametr(0,48);
;PCODE: $00003862 VOL: 0
;PCODE: $00003863 VOL: 0
;PCODE: $00003864 VOL: 0
;PCODE: $00003865 VOL: 0
;PCODE: $00003866 VOL: 0
;PCODE: $00003867 VOL: 0
; 0000 19D8 
; 0000 19D9                         szczotka_druciana_ilosc_cykli = odczytaj_parametr(48,64);  //wykonano zaciskow rzad1
;PCODE: $00003868 VOL: 0
;PCODE: $00003869 VOL: 0
;PCODE: $0000386A VOL: 0
;PCODE: $0000386B VOL: 0
;PCODE: $0000386C VOL: 0
;PCODE: $0000386D VOL: 0
;PCODE: $0000386E VOL: 0
; 0000 19DA                                                 //2090
; 0000 19DB                         krazek_scierny_ilosc_cykli = odczytaj_parametr(32,144);  //wykonano zaciskow rzad1
;PCODE: $0000386F VOL: 0
;PCODE: $00003870 VOL: 0
;PCODE: $00003871 VOL: 0
;PCODE: $00003872 VOL: 0
;PCODE: $00003873 VOL: 0
;PCODE: $00003874 VOL: 0
;PCODE: $00003875 VOL: 0
; 0000 19DC                                                     //3000
; 0000 19DD                         krazek_scierny_cykl_po_okregu_ilosc = odczytaj_parametr(48,0);  //wykonano zaciskow rzad1
;PCODE: $00003876 VOL: 0
;PCODE: $00003877 VOL: 0
;PCODE: $00003878 VOL: 0
;PCODE: $00003879 VOL: 0
;PCODE: $0000387A VOL: 0
;PCODE: $0000387B VOL: 0
;PCODE: $0000387C VOL: 0
; 0000 19DE 
; 0000 19DF                         predkosc_pion_szczotka = odczytaj_parametr(32,80);
;PCODE: $0000387D VOL: 0
;PCODE: $0000387E VOL: 0
;PCODE: $0000387F VOL: 0
;PCODE: $00003880 VOL: 0
;PCODE: $00003881 VOL: 0
;PCODE: $00003882 VOL: 0
; 0000 19E0                                                 //2060
; 0000 19E1                         predkosc_pion_krazek = odczytaj_parametr(32,96);
;PCODE: $00003883 VOL: 0
;PCODE: $00003884 VOL: 0
;PCODE: $00003885 VOL: 0
;PCODE: $00003886 VOL: 0
;PCODE: $00003887 VOL: 0
;PCODE: $00003888 VOL: 0
; 0000 19E2 
; 0000 19E3                         wejscie_krazka_sciernego_w_pow_boczna_cylindra = odczytaj_parametr(48,16);
;PCODE: $00003889 VOL: 0
;PCODE: $0000388A VOL: 0
;PCODE: $0000388B VOL: 0
;PCODE: $0000388C VOL: 0
;PCODE: $0000388D VOL: 0
;PCODE: $0000388E VOL: 0
; 0000 19E4 
; 0000 19E5                         predkosc_ruchow_po_okregu_krazek_scierny = odczytaj_parametr(32,112);
;PCODE: $0000388F VOL: 0
;PCODE: $00003890 VOL: 0
;PCODE: $00003891 VOL: 0
;PCODE: $00003892 VOL: 0
;PCODE: $00003893 VOL: 0
;PCODE: $00003894 VOL: 0
; 0000 19E6 
; 0000 19E7                         if(il_zaciskow_rzad_2 > 0 & macierz_zaciskow[2]!=0)
;PCODE: $00003895 VOL: 0
;PCODE: $00003896 VOL: 0
;PCODE: $00003897 VOL: 0
;PCODE: $00003898 VOL: 0
;PCODE: $00003899 VOL: 0
;PCODE: $0000389A VOL: 0
;PCODE: $0000389B VOL: 0
;PCODE: $0000389C VOL: 0
;PCODE: $0000389D VOL: 0
;PCODE: $0000389E VOL: 0
; 0000 19E8                               il_zaciskow_rzad_2 = il_zaciskow_rzad_2;
;PCODE: $0000389F VOL: 0
;PCODE: $000038A0 VOL: 0
; 0000 19E9                         else
;PCODE: $000038A1 VOL: 0
;PCODE: $000038A2 VOL: 0
; 0000 19EA                               il_zaciskow_rzad_2 = 0;
;PCODE: $000038A3 VOL: 0
;PCODE: $000038A4 VOL: 0
; 0000 19EB 
; 0000 19EC                         wybor_linijek_sterownikow(1);  //rzad 1
;PCODE: $000038A5 VOL: 0
;PCODE: $000038A6 VOL: 0
;PCODE: $000038A7 VOL: 0
;PCODE: $000038A8 VOL: 0
; 0000 19ED                         }
; 0000 19EE 
; 0000 19EF                     jestem_w_trakcie_czyszczenia_calosci = 1;
;PCODE: $000038A9 VOL: 0
;PCODE: $000038AA VOL: 0
;PCODE: $000038AB VOL: 0
; 0000 19F0 
; 0000 19F1                     if(rzad_obrabiany == 1)
;PCODE: $000038AC VOL: 0
;PCODE: $000038AD VOL: 0
;PCODE: $000038AE VOL: 0
; 0000 19F2                     {
; 0000 19F3                     PORTE.6 = 0;    //przelacz rzad zaciskow - rzad 1
;PCODE: $000038AF VOL: 0
;PCODE: $000038B0 VOL: 0
; 0000 19F4                     if(cykl_sterownik_1 < 5)
;PCODE: $000038B1 VOL: 0
;PCODE: $000038B2 VOL: 0
;PCODE: $000038B3 VOL: 0
; 0000 19F5                         cykl_sterownik_1 = sterownik_1_praca(0x009);
;PCODE: $000038B4 VOL: 0
;PCODE: $000038B5 VOL: 0
;PCODE: $000038B6 VOL: 0
;PCODE: $000038B7 VOL: 0
; 0000 19F6                     if(cykl_sterownik_2 < 5)                                //ster 1 do 0
;PCODE: $000038B8 VOL: 0
;PCODE: $000038B9 VOL: 0
;PCODE: $000038BA VOL: 0
;PCODE: $000038BB VOL: 0
; 0000 19F7                         cykl_sterownik_2 = sterownik_2_praca(0x000);       //ster 2 pod pin pozy rzad 1
;PCODE: $000038BC VOL: 0
;PCODE: $000038BD VOL: 0
;PCODE: $000038BE VOL: 0
;PCODE: $000038BF VOL: 0
; 0000 19F8                     }
;PCODE: $000038C0 VOL: 0
; 0000 19F9 
; 0000 19FA                     if(rzad_obrabiany == 2)
;PCODE: $000038C1 VOL: 0
;PCODE: $000038C2 VOL: 0
;PCODE: $000038C3 VOL: 0
;PCODE: $000038C4 VOL: 0
; 0000 19FB                     {
; 0000 19FC                     ostateczny_wybor_zacisku();
;PCODE: $000038C5 VOL: 0
; 0000 19FD                     //PORTE.6 = 1;    //przelacz rzad zaciskow - rzad 2 - na razie nie bo nie ma jeszcze oslon
; 0000 19FE 
; 0000 19FF                     if(cykl_sterownik_1 < 5)
;PCODE: $000038C6 VOL: 0
;PCODE: $000038C7 VOL: 0
;PCODE: $000038C8 VOL: 0
; 0000 1A00                         cykl_sterownik_1 = sterownik_1_praca(0x008);
;PCODE: $000038C9 VOL: 0
;PCODE: $000038CA VOL: 0
;PCODE: $000038CB VOL: 0
;PCODE: $000038CC VOL: 0
; 0000 1A01                     if(cykl_sterownik_2 < 5)                                //ster 1 do 0
;PCODE: $000038CD VOL: 0
;PCODE: $000038CE VOL: 0
;PCODE: $000038CF VOL: 0
;PCODE: $000038D0 VOL: 0
; 0000 1A02                         cykl_sterownik_2 = sterownik_2_praca(0x001);       //ster 2 pod pin pozy rzad 2
;PCODE: $000038D1 VOL: 0
;PCODE: $000038D2 VOL: 0
;PCODE: $000038D3 VOL: 0
;PCODE: $000038D4 VOL: 0
; 0000 1A03                     }
;PCODE: $000038D5 VOL: 0
; 0000 1A04 
; 0000 1A05 
; 0000 1A06                     if(cykl_sterownik_1 == 5 & cykl_sterownik_2 == 5)
;PCODE: $000038D6 VOL: 0
;PCODE: $000038D7 VOL: 0
;PCODE: $000038D8 VOL: 0
;PCODE: $000038D9 VOL: 0
;PCODE: $000038DA VOL: 0
;PCODE: $000038DB VOL: 0
;PCODE: $000038DC VOL: 0
;PCODE: $000038DD VOL: 0
;PCODE: $000038DE VOL: 0
;PCODE: $000038DF VOL: 0
; 0000 1A07                         {
; 0000 1A08 
; 0000 1A09                           if(rzad_obrabiany == 2)
;PCODE: $000038E0 VOL: 0
;PCODE: $000038E1 VOL: 0
;PCODE: $000038E2 VOL: 0
; 0000 1A0A                             {
; 0000 1A0B                             while(PORTE.6 == 0)
;PCODE: $000038E3 VOL: 0
;PCODE: $000038E4 VOL: 0
;PCODE: $000038E5 VOL: 0
;PCODE: $000038E6 VOL: 0
; 0000 1A0C                                 przerzucanie_dociskow();
;PCODE: $000038E7 VOL: 0
;PCODE: $000038E8 VOL: 0
;PCODE: $000038E9 VOL: 0
; 0000 1A0D delay_ms(3000);
;PCODE: $000038EA VOL: 0
;PCODE: $000038EB VOL: 0
;PCODE: $000038EC VOL: 0
; 0000 1A0E                             }
; 0000 1A0F 
; 0000 1A10                         delay_ms(2000);  //aby zdazyl przelozyc
;PCODE: $000038ED VOL: 0
;PCODE: $000038EE VOL: 0
;PCODE: $000038EF VOL: 0
;PCODE: $000038F0 VOL: 0
; 0000 1A11                         cykl_sterownik_1 = 0;
;PCODE: $000038F1 VOL: 0
;PCODE: $000038F2 VOL: 0
; 0000 1A12                         cykl_sterownik_2 = 0;
;PCODE: $000038F3 VOL: 0
;PCODE: $000038F4 VOL: 0
; 0000 1A13                         cykl_sterownik_3 = 0;
;PCODE: $000038F5 VOL: 0
;PCODE: $000038F6 VOL: 0
; 0000 1A14                         cykl_sterownik_4 = 0;
;PCODE: $000038F7 VOL: 0
;PCODE: $000038F8 VOL: 0
; 0000 1A15                         cykl_ilosc_zaciskow = 0;
;PCODE: $000038F9 VOL: 0
;PCODE: $000038FA VOL: 0
; 0000 1A16                         koniec_rzedu_10 = 0;
;PCODE: $000038FB VOL: 0
;PCODE: $000038FC VOL: 0
; 0000 1A17                         if(rzad_obrabiany == 1)
;PCODE: $000038FD VOL: 0
;PCODE: $000038FE VOL: 0
;PCODE: $000038FF VOL: 0
; 0000 1A18                              {
; 0000 1A19                              while(sprawdz_pin0(PORTMM,0x77) == 1)
;PCODE: $00003900 VOL: 0
;PCODE: $00003901 VOL: 0
;PCODE: $00003902 VOL: 0
;PCODE: $00003903 VOL: 0
;PCODE: $00003904 VOL: 0
;PCODE: $00003905 VOL: 0
;PCODE: $00003906 VOL: 0
;PCODE: $00003907 VOL: 0
; 0000 1A1A                                 {
; 0000 1A1B                                 }
;PCODE: $00003908 VOL: 0
;PCODE: $00003909 VOL: 0
; 0000 1A1C 
; 0000 1A1D                             cykl_glowny = 1;
;PCODE: $0000390A VOL: 0
;PCODE: $0000390B VOL: 0
; 0000 1A1E                              }
; 0000 1A1F 
; 0000 1A20                         if(rzad_obrabiany == 2)
;PCODE: $0000390C VOL: 0
;PCODE: $0000390D VOL: 0
;PCODE: $0000390E VOL: 0
;PCODE: $0000390F VOL: 0
; 0000 1A21                              {
; 0000 1A22                              while(sprawdz_pin1(PORTMM,0x77) == 1)
;PCODE: $00003910 VOL: 0
;PCODE: $00003911 VOL: 0
;PCODE: $00003912 VOL: 0
;PCODE: $00003913 VOL: 0
;PCODE: $00003914 VOL: 0
;PCODE: $00003915 VOL: 0
;PCODE: $00003916 VOL: 0
;PCODE: $00003917 VOL: 0
; 0000 1A23                                 {
; 0000 1A24                                 }
;PCODE: $00003918 VOL: 0
;PCODE: $00003919 VOL: 0
; 0000 1A25 
; 0000 1A26                             cykl_glowny = 1;
;PCODE: $0000391A VOL: 0
;PCODE: $0000391B VOL: 0
; 0000 1A27                              }
; 0000 1A28                         }
;PCODE: $0000391C VOL: 0
; 0000 1A29 
; 0000 1A2A             break;
;PCODE: $0000391D VOL: 0
;PCODE: $0000391E VOL: 0
; 0000 1A2B 
; 0000 1A2C 
; 0000 1A2D 
; 0000 1A2E             case 1:
;PCODE: $0000391F VOL: 0
;PCODE: $00003920 VOL: 0
;PCODE: $00003921 VOL: 0
; 0000 1A2F 
; 0000 1A30 
; 0000 1A31                      if(cykl_sterownik_2 < 5 & rzad_obrabiany == 1)
;PCODE: $00003922 VOL: 0
;PCODE: $00003923 VOL: 0
;PCODE: $00003924 VOL: 0
;PCODE: $00003925 VOL: 0
;PCODE: $00003926 VOL: 0
;PCODE: $00003927 VOL: 0
;PCODE: $00003928 VOL: 0
;PCODE: $00003929 VOL: 0
;PCODE: $0000392A VOL: 0
; 0000 1A32                           {          //ster 1 nic
; 0000 1A33                           PORTE.7 = 1;   //zacisnij zaciski
;PCODE: $0000392B VOL: 0
;PCODE: $0000392C VOL: 0
; 0000 1A34                           cykl_sterownik_2 = sterownik_2_praca(a[0]);        //ster 2 pod zacisk
;PCODE: $0000392D VOL: 0
;PCODE: $0000392E VOL: 0
;PCODE: $0000392F VOL: 0
;PCODE: $00003930 VOL: 0
; 0000 1A35                           }                                                    //ster 4 na pozycje miedzy rzedzami
; 0000 1A36 
; 0000 1A37                      if(cykl_sterownik_2 < 5 & rzad_obrabiany == 2)
;PCODE: $00003931 VOL: 0
;PCODE: $00003932 VOL: 0
;PCODE: $00003933 VOL: 0
;PCODE: $00003934 VOL: 0
;PCODE: $00003935 VOL: 0
;PCODE: $00003936 VOL: 0
;PCODE: $00003937 VOL: 0
;PCODE: $00003938 VOL: 0
;PCODE: $00003939 VOL: 0
;PCODE: $0000393A VOL: 0
; 0000 1A38                         {
; 0000 1A39                         //cykl_sterownik_2 = sterownik_2_praca(0x5B,0);
; 0000 1A3A                           PORTE.7 = 1;   //zacisnij zaciski
;PCODE: $0000393B VOL: 0
;PCODE: $0000393C VOL: 0
; 0000 1A3B                           ostateczny_wybor_zacisku();
;PCODE: $0000393D VOL: 0
; 0000 1A3C                           cykl_sterownik_2 = sterownik_2_praca(a[1]);
;PCODE: $0000393E VOL: 0
;PCODE: $0000393F VOL: 0
;PCODE: $00003940 VOL: 0
;PCODE: $00003941 VOL: 0
;PCODE: $00003942 VOL: 0
; 0000 1A3D                          }
; 0000 1A3E                      if(cykl_sterownik_4 < 5 & cykl_sterownik_2 == 5)
;PCODE: $00003943 VOL: 0
;PCODE: $00003944 VOL: 0
;PCODE: $00003945 VOL: 0
;PCODE: $00003946 VOL: 0
;PCODE: $00003947 VOL: 0
;PCODE: $00003948 VOL: 0
;PCODE: $00003949 VOL: 0
;PCODE: $0000394A VOL: 0
;PCODE: $0000394B VOL: 0
;PCODE: $0000394C VOL: 0
; 0000 1A3F                        // cykl_sterownik_4 = sterownik_4_praca(0,0,0,0,0,1);
; 0000 1A40                         cykl_sterownik_4 = sterownik_4_praca(0x01,0);
;PCODE: $0000394D VOL: 0
;PCODE: $0000394E VOL: 0
;PCODE: $0000394F VOL: 0
;PCODE: $00003950 VOL: 0
;PCODE: $00003951 VOL: 0
;PCODE: $00003952 VOL: 0
; 0000 1A41 
; 0000 1A42                       if(cykl_sterownik_2 == 5 & cykl_sterownik_4 == 5)
;PCODE: $00003953 VOL: 0
;PCODE: $00003954 VOL: 0
;PCODE: $00003955 VOL: 0
;PCODE: $00003956 VOL: 0
;PCODE: $00003957 VOL: 0
;PCODE: $00003958 VOL: 0
;PCODE: $00003959 VOL: 0
;PCODE: $0000395A VOL: 0
;PCODE: $0000395B VOL: 0
;PCODE: $0000395C VOL: 0
; 0000 1A43                         {
; 0000 1A44                         cykl_sterownik_1 = 0;
;PCODE: $0000395D VOL: 0
;PCODE: $0000395E VOL: 0
; 0000 1A45                         cykl_sterownik_2 = 0;
;PCODE: $0000395F VOL: 0
;PCODE: $00003960 VOL: 0
; 0000 1A46                         cykl_sterownik_4 = 0;
;PCODE: $00003961 VOL: 0
;PCODE: $00003962 VOL: 0
; 0000 1A47                         szczotka_druc_cykl = 0;
;PCODE: $00003963 VOL: 0
;PCODE: $00003964 VOL: 0
; 0000 1A48 
; 0000 1A49 
; 0000 1A4A                         if(rzad_obrabiany == 1)
;PCODE: $00003965 VOL: 0
;PCODE: $00003966 VOL: 0
;PCODE: $00003967 VOL: 0
; 0000 1A4B                              {
; 0000 1A4C                              while(sprawdz_pin0(PORTMM,0x77) == 1)
;PCODE: $00003968 VOL: 0
;PCODE: $00003969 VOL: 0
;PCODE: $0000396A VOL: 0
;PCODE: $0000396B VOL: 0
;PCODE: $0000396C VOL: 0
;PCODE: $0000396D VOL: 0
;PCODE: $0000396E VOL: 0
;PCODE: $0000396F VOL: 0
; 0000 1A4D                                 {
; 0000 1A4E                                 }
;PCODE: $00003970 VOL: 0
;PCODE: $00003971 VOL: 0
; 0000 1A4F 
; 0000 1A50                             cykl_glowny = 2;
;PCODE: $00003972 VOL: 0
;PCODE: $00003973 VOL: 0
; 0000 1A51                              }
; 0000 1A52 
; 0000 1A53                         if(rzad_obrabiany == 2)
;PCODE: $00003974 VOL: 0
;PCODE: $00003975 VOL: 0
;PCODE: $00003976 VOL: 0
;PCODE: $00003977 VOL: 0
; 0000 1A54                              {
; 0000 1A55                              while(sprawdz_pin1(PORTMM,0x77) == 1)
;PCODE: $00003978 VOL: 0
;PCODE: $00003979 VOL: 0
;PCODE: $0000397A VOL: 0
;PCODE: $0000397B VOL: 0
;PCODE: $0000397C VOL: 0
;PCODE: $0000397D VOL: 0
;PCODE: $0000397E VOL: 0
;PCODE: $0000397F VOL: 0
; 0000 1A56                                 {
; 0000 1A57                                 }
;PCODE: $00003980 VOL: 0
;PCODE: $00003981 VOL: 0
; 0000 1A58 
; 0000 1A59                             cykl_glowny = 2;
;PCODE: $00003982 VOL: 0
;PCODE: $00003983 VOL: 0
; 0000 1A5A                              }
; 0000 1A5B                         }
;PCODE: $00003984 VOL: 0
; 0000 1A5C 
; 0000 1A5D 
; 0000 1A5E             break;
;PCODE: $00003985 VOL: 0
;PCODE: $00003986 VOL: 0
; 0000 1A5F 
; 0000 1A60 
; 0000 1A61             case 2:
;PCODE: $00003987 VOL: 0
;PCODE: $00003988 VOL: 0
;PCODE: $00003989 VOL: 0
; 0000 1A62                     if(rzad_obrabiany == 2)
;PCODE: $0000398A VOL: 0
;PCODE: $0000398B VOL: 0
;PCODE: $0000398C VOL: 0
; 0000 1A63                         ostateczny_wybor_zacisku();
;PCODE: $0000398D VOL: 0
; 0000 1A64 
; 0000 1A65                     if(cykl_sterownik_4 < 5)
;PCODE: $0000398E VOL: 0
;PCODE: $0000398F VOL: 0
;PCODE: $00003990 VOL: 0
;PCODE: $00003991 VOL: 0
; 0000 1A66                         //cykl_sterownik_4 = sterownik_4_praca(1,0,0,0,1,0);
; 0000 1A67                           cykl_sterownik_4 = sterownik_4_praca(a[2],1);
;PCODE: $00003992 VOL: 0
;PCODE: $00003993 VOL: 0
;PCODE: $00003994 VOL: 0
;PCODE: $00003995 VOL: 0
;PCODE: $00003996 VOL: 0
;PCODE: $00003997 VOL: 0
;PCODE: $00003998 VOL: 0
; 0000 1A68                     if(cykl_sterownik_4 == 5)
;PCODE: $00003999 VOL: 0
;PCODE: $0000399A VOL: 0
;PCODE: $0000399B VOL: 0
;PCODE: $0000399C VOL: 0
; 0000 1A69                         {
; 0000 1A6A                         PORTE.2 = 1;  //wlacz szlifierke
;PCODE: $0000399D VOL: 0
;PCODE: $0000399E VOL: 0
; 0000 1A6B                         cykl_sterownik_4 = 0;
;PCODE: $0000399F VOL: 0
;PCODE: $000039A0 VOL: 0
; 0000 1A6C                         if(rzad_obrabiany == 1)
;PCODE: $000039A1 VOL: 0
;PCODE: $000039A2 VOL: 0
;PCODE: $000039A3 VOL: 0
; 0000 1A6D                              {
; 0000 1A6E                              while(sprawdz_pin0(PORTMM,0x77) == 1)
;PCODE: $000039A4 VOL: 0
;PCODE: $000039A5 VOL: 0
;PCODE: $000039A6 VOL: 0
;PCODE: $000039A7 VOL: 0
;PCODE: $000039A8 VOL: 0
;PCODE: $000039A9 VOL: 0
;PCODE: $000039AA VOL: 0
;PCODE: $000039AB VOL: 0
; 0000 1A6F                                 {
; 0000 1A70                                 }
;PCODE: $000039AC VOL: 0
;PCODE: $000039AD VOL: 0
; 0000 1A71 
; 0000 1A72                              sek13 = 0;; //czas zatrzymania druciakaa na gorze
;PCODE: $000039AE VOL: 0
;PCODE: $000039AF VOL: 0
; 0000 1A73                              cykl_glowny = 3;
;PCODE: $000039B0 VOL: 0
;PCODE: $000039B1 VOL: 0
; 0000 1A74                              }
; 0000 1A75 
; 0000 1A76                         if(rzad_obrabiany == 2)
;PCODE: $000039B2 VOL: 0
;PCODE: $000039B3 VOL: 0
;PCODE: $000039B4 VOL: 0
;PCODE: $000039B5 VOL: 0
; 0000 1A77                              {
; 0000 1A78                              while(sprawdz_pin1(PORTMM,0x77) == 1)
;PCODE: $000039B6 VOL: 0
;PCODE: $000039B7 VOL: 0
;PCODE: $000039B8 VOL: 0
;PCODE: $000039B9 VOL: 0
;PCODE: $000039BA VOL: 0
;PCODE: $000039BB VOL: 0
;PCODE: $000039BC VOL: 0
;PCODE: $000039BD VOL: 0
; 0000 1A79                                 {
; 0000 1A7A                                 }
;PCODE: $000039BE VOL: 0
;PCODE: $000039BF VOL: 0
; 0000 1A7B 
; 0000 1A7C                             sek13 = 0;
;PCODE: $000039C0 VOL: 0
;PCODE: $000039C1 VOL: 0
; 0000 1A7D                             cykl_glowny = 3;
;PCODE: $000039C2 VOL: 0
;PCODE: $000039C3 VOL: 0
; 0000 1A7E                              }
; 0000 1A7F                         }
;PCODE: $000039C4 VOL: 0
; 0000 1A80 
; 0000 1A81             break;
;PCODE: $000039C5 VOL: 0
;PCODE: $000039C6 VOL: 0
; 0000 1A82 
; 0000 1A83 
; 0000 1A84             case 3:
;PCODE: $000039C7 VOL: 0
;PCODE: $000039C8 VOL: 0
;PCODE: $000039C9 VOL: 0
; 0000 1A85 
; 0000 1A86                      if(rzad_obrabiany == 2)
;PCODE: $000039CA VOL: 0
;PCODE: $000039CB VOL: 0
;PCODE: $000039CC VOL: 0
; 0000 1A87                         ostateczny_wybor_zacisku();
;PCODE: $000039CD VOL: 0
; 0000 1A88 
; 0000 1A89                     if(cykl_sterownik_4 < 5 & sek13 > czas_druciaka_na_gorze)
;PCODE: $000039CE VOL: 0
;PCODE: $000039CF VOL: 0
;PCODE: $000039D0 VOL: 0
;PCODE: $000039D1 VOL: 0
;PCODE: $000039D2 VOL: 0
;PCODE: $000039D3 VOL: 0
;PCODE: $000039D4 VOL: 0
;PCODE: $000039D5 VOL: 0
;PCODE: $000039D6 VOL: 0
;PCODE: $000039D7 VOL: 0
;PCODE: $000039D8 VOL: 0
; 0000 1A8A                          cykl_sterownik_4 = sterownik_4_praca(a[3],0); //INV
;PCODE: $000039D9 VOL: 0
;PCODE: $000039DA VOL: 0
;PCODE: $000039DB VOL: 0
;PCODE: $000039DC VOL: 0
;PCODE: $000039DD VOL: 0
;PCODE: $000039DE VOL: 0
;PCODE: $000039DF VOL: 0
; 0000 1A8B 
; 0000 1A8C                     if(cykl_sterownik_4 == 5 & szczotka_druc_cykl < szczotka_druciana_ilosc_cykli)
;PCODE: $000039E0 VOL: 0
;PCODE: $000039E1 VOL: 0
;PCODE: $000039E2 VOL: 0
;PCODE: $000039E3 VOL: 0
;PCODE: $000039E4 VOL: 0
;PCODE: $000039E5 VOL: 0
;PCODE: $000039E6 VOL: 0
;PCODE: $000039E7 VOL: 0
;PCODE: $000039E8 VOL: 0
;PCODE: $000039E9 VOL: 0
;PCODE: $000039EA VOL: 0
; 0000 1A8D                         {
; 0000 1A8E                         szczotka_druc_cykl++;
;PCODE: $000039EB VOL: 0
;PCODE: $000039EC VOL: 0
;PCODE: $000039ED VOL: 0
;PCODE: $000039EE VOL: 0
; 0000 1A8F                         cykl_sterownik_4 = 0;
;PCODE: $000039EF VOL: 0
;PCODE: $000039F0 VOL: 0
; 0000 1A90 
; 0000 1A91                         if(szczotka_druc_cykl == szczotka_druciana_ilosc_cykli)
;PCODE: $000039F1 VOL: 0
;PCODE: $000039F2 VOL: 0
;PCODE: $000039F3 VOL: 0
;PCODE: $000039F4 VOL: 0
;PCODE: $000039F5 VOL: 0
; 0000 1A92                             {
; 0000 1A93                             if(rzad_obrabiany == 1)
;PCODE: $000039F6 VOL: 0
;PCODE: $000039F7 VOL: 0
;PCODE: $000039F8 VOL: 0
; 0000 1A94                              {
; 0000 1A95                              while(sprawdz_pin0(PORTMM,0x77) == 1)
;PCODE: $000039F9 VOL: 0
;PCODE: $000039FA VOL: 0
;PCODE: $000039FB VOL: 0
;PCODE: $000039FC VOL: 0
;PCODE: $000039FD VOL: 0
;PCODE: $000039FE VOL: 0
;PCODE: $000039FF VOL: 0
;PCODE: $00003A00 VOL: 0
; 0000 1A96                                 {
; 0000 1A97                                 }
;PCODE: $00003A01 VOL: 0
;PCODE: $00003A02 VOL: 0
; 0000 1A98 
; 0000 1A99                             cykl_glowny = 4;
;PCODE: $00003A03 VOL: 0
;PCODE: $00003A04 VOL: 0
; 0000 1A9A                              }
; 0000 1A9B 
; 0000 1A9C                         if(rzad_obrabiany == 2)
;PCODE: $00003A05 VOL: 0
;PCODE: $00003A06 VOL: 0
;PCODE: $00003A07 VOL: 0
;PCODE: $00003A08 VOL: 0
; 0000 1A9D                              {
; 0000 1A9E                              while(sprawdz_pin1(PORTMM,0x77) == 1)
;PCODE: $00003A09 VOL: 0
;PCODE: $00003A0A VOL: 0
;PCODE: $00003A0B VOL: 0
;PCODE: $00003A0C VOL: 0
;PCODE: $00003A0D VOL: 0
;PCODE: $00003A0E VOL: 0
;PCODE: $00003A0F VOL: 0
;PCODE: $00003A10 VOL: 0
; 0000 1A9F                                 {
; 0000 1AA0                                 }
;PCODE: $00003A11 VOL: 0
;PCODE: $00003A12 VOL: 0
; 0000 1AA1 
; 0000 1AA2                             cykl_glowny = 4;
;PCODE: $00003A13 VOL: 0
;PCODE: $00003A14 VOL: 0
; 0000 1AA3                              }
; 0000 1AA4                             }
;PCODE: $00003A15 VOL: 0
; 0000 1AA5                         else
;PCODE: $00003A16 VOL: 0
;PCODE: $00003A17 VOL: 0
; 0000 1AA6                             {
; 0000 1AA7                             if(rzad_obrabiany == 1)
;PCODE: $00003A18 VOL: 0
;PCODE: $00003A19 VOL: 0
;PCODE: $00003A1A VOL: 0
; 0000 1AA8                              {
; 0000 1AA9                              while(sprawdz_pin0(PORTMM,0x77) == 1)
;PCODE: $00003A1B VOL: 0
;PCODE: $00003A1C VOL: 0
;PCODE: $00003A1D VOL: 0
;PCODE: $00003A1E VOL: 0
;PCODE: $00003A1F VOL: 0
;PCODE: $00003A20 VOL: 0
;PCODE: $00003A21 VOL: 0
;PCODE: $00003A22 VOL: 0
; 0000 1AAA                                 {
; 0000 1AAB                                 }
;PCODE: $00003A23 VOL: 0
;PCODE: $00003A24 VOL: 0
; 0000 1AAC 
; 0000 1AAD                             cykl_glowny = 2;
;PCODE: $00003A25 VOL: 0
;PCODE: $00003A26 VOL: 0
; 0000 1AAE                              }
; 0000 1AAF 
; 0000 1AB0                         if(rzad_obrabiany == 2)
;PCODE: $00003A27 VOL: 0
;PCODE: $00003A28 VOL: 0
;PCODE: $00003A29 VOL: 0
;PCODE: $00003A2A VOL: 0
; 0000 1AB1                              {
; 0000 1AB2                              while(sprawdz_pin1(PORTMM,0x77) == 1)
;PCODE: $00003A2B VOL: 0
;PCODE: $00003A2C VOL: 0
;PCODE: $00003A2D VOL: 0
;PCODE: $00003A2E VOL: 0
;PCODE: $00003A2F VOL: 0
;PCODE: $00003A30 VOL: 0
;PCODE: $00003A31 VOL: 0
;PCODE: $00003A32 VOL: 0
; 0000 1AB3                                 {
; 0000 1AB4                                 }
;PCODE: $00003A33 VOL: 0
;PCODE: $00003A34 VOL: 0
; 0000 1AB5 
; 0000 1AB6                             cykl_glowny = 2;
;PCODE: $00003A35 VOL: 0
;PCODE: $00003A36 VOL: 0
; 0000 1AB7                              }
; 0000 1AB8 
; 0000 1AB9                             }
;PCODE: $00003A37 VOL: 0
;PCODE: $00003A38 VOL: 0
; 0000 1ABA                         }
; 0000 1ABB 
; 0000 1ABC 
; 0000 1ABD 
; 0000 1ABE             break;
;PCODE: $00003A39 VOL: 0
;PCODE: $00003A3A VOL: 0
; 0000 1ABF 
; 0000 1AC0             case 4:
;PCODE: $00003A3B VOL: 0
;PCODE: $00003A3C VOL: 0
;PCODE: $00003A3D VOL: 0
; 0000 1AC1 
; 0000 1AC2 
; 0000 1AC3                       if(rzad_obrabiany == 2)
;PCODE: $00003A3E VOL: 0
;PCODE: $00003A3F VOL: 0
;PCODE: $00003A40 VOL: 0
; 0000 1AC4                             ostateczny_wybor_zacisku();
;PCODE: $00003A41 VOL: 0
; 0000 1AC5 
; 0000 1AC6                      if(cykl_sterownik_4 < 5)
;PCODE: $00003A42 VOL: 0
;PCODE: $00003A43 VOL: 0
;PCODE: $00003A44 VOL: 0
;PCODE: $00003A45 VOL: 0
; 0000 1AC7                         cykl_sterownik_4 = sterownik_4_praca(0x01,0);
;PCODE: $00003A46 VOL: 0
;PCODE: $00003A47 VOL: 0
;PCODE: $00003A48 VOL: 0
;PCODE: $00003A49 VOL: 0
;PCODE: $00003A4A VOL: 0
;PCODE: $00003A4B VOL: 0
; 0000 1AC8 
; 0000 1AC9                      if(cykl_sterownik_4 == 5)
;PCODE: $00003A4C VOL: 0
;PCODE: $00003A4D VOL: 0
;PCODE: $00003A4E VOL: 0
;PCODE: $00003A4F VOL: 0
; 0000 1ACA                         {
; 0000 1ACB                         PORTE.2 = 0;  //wylacz szlifierke
;PCODE: $00003A50 VOL: 0
;PCODE: $00003A51 VOL: 0
; 0000 1ACC                         cykl_sterownik_4 = 0;
;PCODE: $00003A52 VOL: 0
;PCODE: $00003A53 VOL: 0
; 0000 1ACD 
; 0000 1ACE 
; 0000 1ACF                         if(rzad_obrabiany == 1)
;PCODE: $00003A54 VOL: 0
;PCODE: $00003A55 VOL: 0
;PCODE: $00003A56 VOL: 0
; 0000 1AD0                              {
; 0000 1AD1                              while(sprawdz_pin0(PORTMM,0x77) == 1)
;PCODE: $00003A57 VOL: 0
;PCODE: $00003A58 VOL: 0
;PCODE: $00003A59 VOL: 0
;PCODE: $00003A5A VOL: 0
;PCODE: $00003A5B VOL: 0
;PCODE: $00003A5C VOL: 0
;PCODE: $00003A5D VOL: 0
;PCODE: $00003A5E VOL: 0
; 0000 1AD2                                 {
; 0000 1AD3                                 }
;PCODE: $00003A5F VOL: 0
;PCODE: $00003A60 VOL: 0
; 0000 1AD4                                ruch_zlozony = 0;
;PCODE: $00003A61 VOL: 0
;PCODE: $00003A62 VOL: 0
; 0000 1AD5                             cykl_glowny = 5;
;PCODE: $00003A63 VOL: 0
;PCODE: $00003A64 VOL: 0
; 0000 1AD6                              }
; 0000 1AD7 
; 0000 1AD8                         if(rzad_obrabiany == 2)
;PCODE: $00003A65 VOL: 0
;PCODE: $00003A66 VOL: 0
;PCODE: $00003A67 VOL: 0
;PCODE: $00003A68 VOL: 0
; 0000 1AD9                              {
; 0000 1ADA                              while(sprawdz_pin1(PORTMM,0x77) == 1)
;PCODE: $00003A69 VOL: 0
;PCODE: $00003A6A VOL: 0
;PCODE: $00003A6B VOL: 0
;PCODE: $00003A6C VOL: 0
;PCODE: $00003A6D VOL: 0
;PCODE: $00003A6E VOL: 0
;PCODE: $00003A6F VOL: 0
;PCODE: $00003A70 VOL: 0
; 0000 1ADB                                 {
; 0000 1ADC                                 }
;PCODE: $00003A71 VOL: 0
;PCODE: $00003A72 VOL: 0
; 0000 1ADD                                ruch_zlozony = 0;
;PCODE: $00003A73 VOL: 0
;PCODE: $00003A74 VOL: 0
; 0000 1ADE                             cykl_glowny = 5;
;PCODE: $00003A75 VOL: 0
;PCODE: $00003A76 VOL: 0
; 0000 1ADF                              }
; 0000 1AE0 
; 0000 1AE1                         }
;PCODE: $00003A77 VOL: 0
; 0000 1AE2 
; 0000 1AE3             break;
;PCODE: $00003A78 VOL: 0
;PCODE: $00003A79 VOL: 0
; 0000 1AE4 
; 0000 1AE5             case 5:
;PCODE: $00003A7A VOL: 0
;PCODE: $00003A7B VOL: 0
;PCODE: $00003A7C VOL: 0
; 0000 1AE6 
; 0000 1AE7 
; 0000 1AE8                     if(cykl_sterownik_1 < 5 & ruch_zlozony == 0 & rzad_obrabiany == 1)
;PCODE: $00003A7D VOL: 0
;PCODE: $00003A7E VOL: 0
;PCODE: $00003A7F VOL: 0
;PCODE: $00003A80 VOL: 0
;PCODE: $00003A81 VOL: 0
;PCODE: $00003A82 VOL: 0
;PCODE: $00003A83 VOL: 0
;PCODE: $00003A84 VOL: 0
;PCODE: $00003A85 VOL: 0
;PCODE: $00003A86 VOL: 0
;PCODE: $00003A87 VOL: 0
;PCODE: $00003A88 VOL: 0
;PCODE: $00003A89 VOL: 0
;PCODE: $00003A8A VOL: 0
; 0000 1AE9                         cykl_sterownik_1 = sterownik_1_praca(0x000);
;PCODE: $00003A8B VOL: 0
;PCODE: $00003A8C VOL: 0
;PCODE: $00003A8D VOL: 0
;PCODE: $00003A8E VOL: 0
; 0000 1AEA                     if(cykl_sterownik_1 < 5 & ruch_zlozony == 0 & rzad_obrabiany == 2)
;PCODE: $00003A8F VOL: 0
;PCODE: $00003A90 VOL: 0
;PCODE: $00003A91 VOL: 0
;PCODE: $00003A92 VOL: 0
;PCODE: $00003A93 VOL: 0
;PCODE: $00003A94 VOL: 0
;PCODE: $00003A95 VOL: 0
;PCODE: $00003A96 VOL: 0
;PCODE: $00003A97 VOL: 0
;PCODE: $00003A98 VOL: 0
;PCODE: $00003A99 VOL: 0
;PCODE: $00003A9A VOL: 0
;PCODE: $00003A9B VOL: 0
;PCODE: $00003A9C VOL: 0
;PCODE: $00003A9D VOL: 0
; 0000 1AEB                         cykl_sterownik_1 = sterownik_1_praca(0x001);
;PCODE: $00003A9E VOL: 0
;PCODE: $00003A9F VOL: 0
;PCODE: $00003AA0 VOL: 0
;PCODE: $00003AA1 VOL: 0
; 0000 1AEC 
; 0000 1AED                      if(rzad_obrabiany == 2)
;PCODE: $00003AA2 VOL: 0
;PCODE: $00003AA3 VOL: 0
;PCODE: $00003AA4 VOL: 0
;PCODE: $00003AA5 VOL: 0
; 0000 1AEE                         ostateczny_wybor_zacisku();
;PCODE: $00003AA6 VOL: 0
; 0000 1AEF 
; 0000 1AF0                     if(cykl_sterownik_1 == 5 & ruch_zlozony == 0)
;PCODE: $00003AA7 VOL: 0
;PCODE: $00003AA8 VOL: 0
;PCODE: $00003AA9 VOL: 0
;PCODE: $00003AAA VOL: 0
;PCODE: $00003AAB VOL: 0
;PCODE: $00003AAC VOL: 0
;PCODE: $00003AAD VOL: 0
;PCODE: $00003AAE VOL: 0
;PCODE: $00003AAF VOL: 0
;PCODE: $00003AB0 VOL: 0
; 0000 1AF1                         {
; 0000 1AF2                         cykl_sterownik_1 = 0;
;PCODE: $00003AB1 VOL: 0
;PCODE: $00003AB2 VOL: 0
; 0000 1AF3                         ruch_zlozony = 1;
;PCODE: $00003AB3 VOL: 0
;PCODE: $00003AB4 VOL: 0
; 0000 1AF4                         }
; 0000 1AF5 
; 0000 1AF6                     if(cykl_sterownik_1 < 5 & ruch_zlozony == 1 & rzad_obrabiany == 1)
;PCODE: $00003AB5 VOL: 0
;PCODE: $00003AB6 VOL: 0
;PCODE: $00003AB7 VOL: 0
;PCODE: $00003AB8 VOL: 0
;PCODE: $00003AB9 VOL: 0
;PCODE: $00003ABA VOL: 0
;PCODE: $00003ABB VOL: 0
;PCODE: $00003ABC VOL: 0
;PCODE: $00003ABD VOL: 0
;PCODE: $00003ABE VOL: 0
;PCODE: $00003ABF VOL: 0
;PCODE: $00003AC0 VOL: 0
;PCODE: $00003AC1 VOL: 0
;PCODE: $00003AC2 VOL: 0
;PCODE: $00003AC3 VOL: 0
; 0000 1AF7                         //cykl_sterownik_1 = sterownik_1_praca(0x5A,0);
; 0000 1AF8                         cykl_sterownik_1 = sterownik_1_praca(a[0]);
;PCODE: $00003AC4 VOL: 0
;PCODE: $00003AC5 VOL: 0
;PCODE: $00003AC6 VOL: 0
;PCODE: $00003AC7 VOL: 0
; 0000 1AF9                     if(cykl_sterownik_1 < 5 & ruch_zlozony == 1 & rzad_obrabiany == 2)
;PCODE: $00003AC8 VOL: 0
;PCODE: $00003AC9 VOL: 0
;PCODE: $00003ACA VOL: 0
;PCODE: $00003ACB VOL: 0
;PCODE: $00003ACC VOL: 0
;PCODE: $00003ACD VOL: 0
;PCODE: $00003ACE VOL: 0
;PCODE: $00003ACF VOL: 0
;PCODE: $00003AD0 VOL: 0
;PCODE: $00003AD1 VOL: 0
;PCODE: $00003AD2 VOL: 0
;PCODE: $00003AD3 VOL: 0
;PCODE: $00003AD4 VOL: 0
;PCODE: $00003AD5 VOL: 0
;PCODE: $00003AD6 VOL: 0
; 0000 1AFA                         //cykl_sterownik_1 = sterownik_1_praca(0x5B,0);
; 0000 1AFB                           cykl_sterownik_1 = sterownik_1_praca(a[1]);
;PCODE: $00003AD7 VOL: 0
;PCODE: $00003AD8 VOL: 0
;PCODE: $00003AD9 VOL: 0
;PCODE: $00003ADA VOL: 0
;PCODE: $00003ADB VOL: 0
; 0000 1AFC 
; 0000 1AFD 
; 0000 1AFE                     if(cykl_sterownik_1 < 5 & ruch_zlozony == 2)
;PCODE: $00003ADC VOL: 0
;PCODE: $00003ADD VOL: 0
;PCODE: $00003ADE VOL: 0
;PCODE: $00003ADF VOL: 0
;PCODE: $00003AE0 VOL: 0
;PCODE: $00003AE1 VOL: 0
;PCODE: $00003AE2 VOL: 0
;PCODE: $00003AE3 VOL: 0
;PCODE: $00003AE4 VOL: 0
;PCODE: $00003AE5 VOL: 0
; 0000 1AFF                         cykl_sterownik_1 = sterownik_1_praca(0x003);     ////////////////////////////////////////////////////////////
;PCODE: $00003AE6 VOL: 0
;PCODE: $00003AE7 VOL: 0
;PCODE: $00003AE8 VOL: 0
;PCODE: $00003AE9 VOL: 0
; 0000 1B00 
; 0000 1B01                     if(cykl_sterownik_2 < 5 & koniec_rzedu_10 == 0)                                //ster 1 do pierwszego dolka
;PCODE: $00003AEA VOL: 0
;PCODE: $00003AEB VOL: 0
;PCODE: $00003AEC VOL: 0
;PCODE: $00003AED VOL: 0
;PCODE: $00003AEE VOL: 0
;PCODE: $00003AEF VOL: 0
;PCODE: $00003AF0 VOL: 0
;PCODE: $00003AF1 VOL: 0
;PCODE: $00003AF2 VOL: 0
;PCODE: $00003AF3 VOL: 0
; 0000 1B02                         cykl_sterownik_2 = sterownik_2_praca(0x003);       //ster 2 pod nastpeny dolek
;PCODE: $00003AF4 VOL: 0
;PCODE: $00003AF5 VOL: 0
;PCODE: $00003AF6 VOL: 0
;PCODE: $00003AF7 VOL: 0
; 0000 1B03 
; 0000 1B04 
; 0000 1B05                     if(cykl_sterownik_2 < 5 & koniec_rzedu_10 == 1 & rzad_obrabiany == 1)
;PCODE: $00003AF8 VOL: 0
;PCODE: $00003AF9 VOL: 0
;PCODE: $00003AFA VOL: 0
;PCODE: $00003AFB VOL: 0
;PCODE: $00003AFC VOL: 0
;PCODE: $00003AFD VOL: 0
;PCODE: $00003AFE VOL: 0
;PCODE: $00003AFF VOL: 0
;PCODE: $00003B00 VOL: 0
;PCODE: $00003B01 VOL: 0
;PCODE: $00003B02 VOL: 0
;PCODE: $00003B03 VOL: 0
;PCODE: $00003B04 VOL: 0
;PCODE: $00003B05 VOL: 0
;PCODE: $00003B06 VOL: 0
; 0000 1B06                         cykl_sterownik_2 = sterownik_2_praca(0x008);      //ster 2 do samego tylu
;PCODE: $00003B07 VOL: 0
;PCODE: $00003B08 VOL: 0
;PCODE: $00003B09 VOL: 0
;PCODE: $00003B0A VOL: 0
; 0000 1B07                      if(cykl_sterownik_2 < 5 & koniec_rzedu_10 == 1 & rzad_obrabiany == 2)
;PCODE: $00003B0B VOL: 0
;PCODE: $00003B0C VOL: 0
;PCODE: $00003B0D VOL: 0
;PCODE: $00003B0E VOL: 0
;PCODE: $00003B0F VOL: 0
;PCODE: $00003B10 VOL: 0
;PCODE: $00003B11 VOL: 0
;PCODE: $00003B12 VOL: 0
;PCODE: $00003B13 VOL: 0
;PCODE: $00003B14 VOL: 0
;PCODE: $00003B15 VOL: 0
;PCODE: $00003B16 VOL: 0
;PCODE: $00003B17 VOL: 0
;PCODE: $00003B18 VOL: 0
;PCODE: $00003B19 VOL: 0
; 0000 1B08                         cykl_sterownik_2 = sterownik_2_praca(0x009);      //ster 2 do samego tylu
;PCODE: $00003B1A VOL: 0
;PCODE: $00003B1B VOL: 0
;PCODE: $00003B1C VOL: 0
;PCODE: $00003B1D VOL: 0
; 0000 1B09 
; 0000 1B0A                     if((cykl_sterownik_1 == 5 & cykl_sterownik_2 == 5 & ruch_zlozony == 1) | (cykl_sterownik_1 == 5 & cykl_sterownik_2 == 5) & ruch_zlozony == 2)
;PCODE: $00003B1E VOL: 0
;PCODE: $00003B1F VOL: 0
;PCODE: $00003B20 VOL: 0
;PCODE: $00003B21 VOL: 0
;PCODE: $00003B22 VOL: 0
;PCODE: $00003B23 VOL: 0
;PCODE: $00003B24 VOL: 0
;PCODE: $00003B25 VOL: 0
;PCODE: $00003B26 VOL: 0
;PCODE: $00003B27 VOL: 0
;PCODE: $00003B28 VOL: 0
;PCODE: $00003B29 VOL: 0
;PCODE: $00003B2A VOL: 0
;PCODE: $00003B2B VOL: 0
;PCODE: $00003B2C VOL: 0
;PCODE: $00003B2D VOL: 0
;PCODE: $00003B2E VOL: 0
;PCODE: $00003B2F VOL: 0
;PCODE: $00003B30 VOL: 0
;PCODE: $00003B31 VOL: 0
;PCODE: $00003B32 VOL: 0
;PCODE: $00003B33 VOL: 0
;PCODE: $00003B34 VOL: 0
;PCODE: $00003B35 VOL: 0
;PCODE: $00003B36 VOL: 0
;PCODE: $00003B37 VOL: 0
;PCODE: $00003B38 VOL: 0
;PCODE: $00003B39 VOL: 0
;PCODE: $00003B3A VOL: 0
;PCODE: $00003B3B VOL: 0
; 0000 1B0B                         {
; 0000 1B0C                         cykl_sterownik_1 = 0;
;PCODE: $00003B3C VOL: 0
;PCODE: $00003B3D VOL: 0
; 0000 1B0D                         cykl_sterownik_2 = 0;
;PCODE: $00003B3E VOL: 0
;PCODE: $00003B3F VOL: 0
; 0000 1B0E                         cykl_sterownik_4 = 0;
;PCODE: $00003B40 VOL: 0
;PCODE: $00003B41 VOL: 0
; 0000 1B0F                         cykl_sterownik_3 = 0;
;PCODE: $00003B42 VOL: 0
;PCODE: $00003B43 VOL: 0
; 0000 1B10                         if(rzad_obrabiany == 1)
;PCODE: $00003B44 VOL: 0
;PCODE: $00003B45 VOL: 0
;PCODE: $00003B46 VOL: 0
; 0000 1B11                              {
; 0000 1B12                              while(sprawdz_pin0(PORTMM,0x77) == 1)
;PCODE: $00003B47 VOL: 0
;PCODE: $00003B48 VOL: 0
;PCODE: $00003B49 VOL: 0
;PCODE: $00003B4A VOL: 0
;PCODE: $00003B4B VOL: 0
;PCODE: $00003B4C VOL: 0
;PCODE: $00003B4D VOL: 0
;PCODE: $00003B4E VOL: 0
; 0000 1B13                                 {
; 0000 1B14                                 }
;PCODE: $00003B4F VOL: 0
;PCODE: $00003B50 VOL: 0
; 0000 1B15                              PORTE.3 = 1;  //szlifierka 2 (krazek scierny)
;PCODE: $00003B51 VOL: 0
;PCODE: $00003B52 VOL: 0
; 0000 1B16                              cykl_glowny = 6;
;PCODE: $00003B53 VOL: 0
;PCODE: $00003B54 VOL: 0
; 0000 1B17                              }
; 0000 1B18 
; 0000 1B19                         if(rzad_obrabiany == 2)
;PCODE: $00003B55 VOL: 0
;PCODE: $00003B56 VOL: 0
;PCODE: $00003B57 VOL: 0
;PCODE: $00003B58 VOL: 0
; 0000 1B1A                              {
; 0000 1B1B                              while(sprawdz_pin1(PORTMM,0x77) == 1)
;PCODE: $00003B59 VOL: 0
;PCODE: $00003B5A VOL: 0
;PCODE: $00003B5B VOL: 0
;PCODE: $00003B5C VOL: 0
;PCODE: $00003B5D VOL: 0
;PCODE: $00003B5E VOL: 0
;PCODE: $00003B5F VOL: 0
;PCODE: $00003B60 VOL: 0
; 0000 1B1C                                 {
; 0000 1B1D                                 }
;PCODE: $00003B61 VOL: 0
;PCODE: $00003B62 VOL: 0
; 0000 1B1E                              PORTE.3 = 1;  //szlifierka 2 (krazek scierny)
;PCODE: $00003B63 VOL: 0
;PCODE: $00003B64 VOL: 0
; 0000 1B1F                              cykl_glowny = 6;
;PCODE: $00003B65 VOL: 0
;PCODE: $00003B66 VOL: 0
; 0000 1B20                              }
; 0000 1B21                         }
;PCODE: $00003B67 VOL: 0
; 0000 1B22 
; 0000 1B23             break;
;PCODE: $00003B68 VOL: 0
;PCODE: $00003B69 VOL: 0
; 0000 1B24 
; 0000 1B25 
; 0000 1B26             case 6:
;PCODE: $00003B6A VOL: 0
;PCODE: $00003B6B VOL: 0
;PCODE: $00003B6C VOL: 0
; 0000 1B27 
; 0000 1B28 
; 0000 1B29 
; 0000 1B2A 
; 0000 1B2B                     if(cykl_sterownik_3 < 5)
;PCODE: $00003B6D VOL: 0
;PCODE: $00003B6E VOL: 0
;PCODE: $00003B6F VOL: 0
; 0000 1B2C                         cykl_sterownik_3 = sterownik_3_praca(a[4]);  //abs //krazek scierny do gory
;PCODE: $00003B70 VOL: 0
;PCODE: $00003B71 VOL: 0
;PCODE: $00003B72 VOL: 0
;PCODE: $00003B73 VOL: 0
;PCODE: $00003B74 VOL: 0
; 0000 1B2D 
; 0000 1B2E                     if(koniec_rzedu_10 == 1)
;PCODE: $00003B75 VOL: 0
;PCODE: $00003B76 VOL: 0
;PCODE: $00003B77 VOL: 0
;PCODE: $00003B78 VOL: 0
; 0000 1B2F                         cykl_sterownik_4 = 5;
;PCODE: $00003B79 VOL: 0
;PCODE: $00003B7A VOL: 0
; 0000 1B30 
; 0000 1B31                     if(cykl_sterownik_4 < 5)
;PCODE: $00003B7B VOL: 0
;PCODE: $00003B7C VOL: 0
;PCODE: $00003B7D VOL: 0
;PCODE: $00003B7E VOL: 0
; 0000 1B32                         cykl_sterownik_4 = sterownik_4_praca(a[2],1);    //ABS          //druciak do gory
;PCODE: $00003B7F VOL: 0
;PCODE: $00003B80 VOL: 0
;PCODE: $00003B81 VOL: 0
;PCODE: $00003B82 VOL: 0
;PCODE: $00003B83 VOL: 0
;PCODE: $00003B84 VOL: 0
;PCODE: $00003B85 VOL: 0
; 0000 1B33 
; 0000 1B34                      if(rzad_obrabiany == 2)
;PCODE: $00003B86 VOL: 0
;PCODE: $00003B87 VOL: 0
;PCODE: $00003B88 VOL: 0
;PCODE: $00003B89 VOL: 0
; 0000 1B35                         ostateczny_wybor_zacisku();
;PCODE: $00003B8A VOL: 0
; 0000 1B36 
; 0000 1B37 
; 0000 1B38                     if(cykl_sterownik_4 == 5 & cykl_sterownik_3 == 5)
;PCODE: $00003B8B VOL: 0
;PCODE: $00003B8C VOL: 0
;PCODE: $00003B8D VOL: 0
;PCODE: $00003B8E VOL: 0
;PCODE: $00003B8F VOL: 0
;PCODE: $00003B90 VOL: 0
;PCODE: $00003B91 VOL: 0
;PCODE: $00003B92 VOL: 0
;PCODE: $00003B93 VOL: 0
;PCODE: $00003B94 VOL: 0
; 0000 1B39                         {
; 0000 1B3A                         if((cykl_ilosc_zaciskow != il_zaciskow_rzad_1 - 1 & rzad_obrabiany == 1) | (cykl_ilosc_zaciskow != il_zaciskow_rzad_2 - 1 & rzad_obrabiany == 2))
;PCODE: $00003B95 VOL: 0
;PCODE: $00003B96 VOL: 0
;PCODE: $00003B97 VOL: 0
;PCODE: $00003B98 VOL: 0
;PCODE: $00003B99 VOL: 0
;PCODE: $00003B9A VOL: 0
;PCODE: $00003B9B VOL: 0
;PCODE: $00003B9C VOL: 0
;PCODE: $00003B9D VOL: 0
;PCODE: $00003B9E VOL: 0
;PCODE: $00003B9F VOL: 0
;PCODE: $00003BA0 VOL: 0
;PCODE: $00003BA1 VOL: 0
;PCODE: $00003BA2 VOL: 0
;PCODE: $00003BA3 VOL: 0
;PCODE: $00003BA4 VOL: 0
;PCODE: $00003BA5 VOL: 0
;PCODE: $00003BA6 VOL: 0
;PCODE: $00003BA7 VOL: 0
;PCODE: $00003BA8 VOL: 0
;PCODE: $00003BA9 VOL: 0
; 0000 1B3B                             PORTE.2 = 1;  //wlacz szlifierke
;PCODE: $00003BAA VOL: 0
;PCODE: $00003BAB VOL: 0
; 0000 1B3C                         PORTB.4 = 1;  //przedmuch osi
;PCODE: $00003BAC VOL: 0
;PCODE: $00003BAD VOL: 0
;PCODE: $00003BAE VOL: 0
; 0000 1B3D                         PORTE.3 = 1;  //szlifierka 2 (krazek scierny)
;PCODE: $00003BAF VOL: 0
;PCODE: $00003BB0 VOL: 0
; 0000 1B3E                         cykl_sterownik_3 = 0;
;PCODE: $00003BB1 VOL: 0
;PCODE: $00003BB2 VOL: 0
; 0000 1B3F                         cykl_sterownik_4 = 0;
;PCODE: $00003BB3 VOL: 0
;PCODE: $00003BB4 VOL: 0
; 0000 1B40                         if(cykl_ilosc_zaciskow > 0)
;PCODE: $00003BB5 VOL: 0
;PCODE: $00003BB6 VOL: 0
;PCODE: $00003BB7 VOL: 0
; 0000 1B41                                 {
; 0000 1B42                                 sek12 = 0;    //do przedmuchu
;PCODE: $00003BB8 VOL: 0
;PCODE: $00003BB9 VOL: 0
; 0000 1B43                                 PORT_F.bits.b4 = 1;  //przedmuch zaciskow
;PCODE: $00003BBA VOL: 0
;PCODE: $00003BBB VOL: 0
;PCODE: $00003BBC VOL: 0
; 0000 1B44                                 PORTF = PORT_F.byte;
;PCODE: $00003BBD VOL: 0
;PCODE: $00003BBE VOL: 0
; 0000 1B45                                 }
; 0000 1B46                         if(rzad_obrabiany == 1)
;PCODE: $00003BBF VOL: 0
;PCODE: $00003BC0 VOL: 0
;PCODE: $00003BC1 VOL: 0
;PCODE: $00003BC2 VOL: 0
; 0000 1B47                              {
; 0000 1B48                              while(sprawdz_pin0(PORTMM,0x77) == 1)
;PCODE: $00003BC3 VOL: 0
;PCODE: $00003BC4 VOL: 0
;PCODE: $00003BC5 VOL: 0
;PCODE: $00003BC6 VOL: 0
;PCODE: $00003BC7 VOL: 0
;PCODE: $00003BC8 VOL: 0
;PCODE: $00003BC9 VOL: 0
;PCODE: $00003BCA VOL: 0
; 0000 1B49                                 {
; 0000 1B4A                                 }
;PCODE: $00003BCB VOL: 0
;PCODE: $00003BCC VOL: 0
; 0000 1B4B                              sek13 = 0;
;PCODE: $00003BCD VOL: 0
;PCODE: $00003BCE VOL: 0
; 0000 1B4C                              cykl_glowny = 7;
;PCODE: $00003BCF VOL: 0
;PCODE: $00003BD0 VOL: 0
; 0000 1B4D                              }
; 0000 1B4E 
; 0000 1B4F                         if(rzad_obrabiany == 2)
;PCODE: $00003BD1 VOL: 0
;PCODE: $00003BD2 VOL: 0
;PCODE: $00003BD3 VOL: 0
;PCODE: $00003BD4 VOL: 0
; 0000 1B50                              {
; 0000 1B51                              while(sprawdz_pin1(PORTMM,0x77) == 1)
;PCODE: $00003BD5 VOL: 0
;PCODE: $00003BD6 VOL: 0
;PCODE: $00003BD7 VOL: 0
;PCODE: $00003BD8 VOL: 0
;PCODE: $00003BD9 VOL: 0
;PCODE: $00003BDA VOL: 0
;PCODE: $00003BDB VOL: 0
;PCODE: $00003BDC VOL: 0
; 0000 1B52                                 {
; 0000 1B53                                 }
;PCODE: $00003BDD VOL: 0
;PCODE: $00003BDE VOL: 0
; 0000 1B54                              sek13 = 0;
;PCODE: $00003BDF VOL: 0
;PCODE: $00003BE0 VOL: 0
; 0000 1B55                              cykl_glowny = 7;
;PCODE: $00003BE1 VOL: 0
;PCODE: $00003BE2 VOL: 0
; 0000 1B56                              }
; 0000 1B57                         }
;PCODE: $00003BE3 VOL: 0
; 0000 1B58 
; 0000 1B59            break;
;PCODE: $00003BE4 VOL: 0
;PCODE: $00003BE5 VOL: 0
; 0000 1B5A 
; 0000 1B5B 
; 0000 1B5C            case 7:
;PCODE: $00003BE6 VOL: 0
;PCODE: $00003BE7 VOL: 0
;PCODE: $00003BE8 VOL: 0
; 0000 1B5D                                                                                               //mini ruch do przygotowania do okregu
; 0000 1B5E                     if(cykl_sterownik_1 < 5 & krazek_scierny_cykl_po_okregu_ilosc > 0 )
;PCODE: $00003BE9 VOL: 0
;PCODE: $00003BEA VOL: 0
;PCODE: $00003BEB VOL: 0
;PCODE: $00003BEC VOL: 0
;PCODE: $00003BED VOL: 0
;PCODE: $00003BEE VOL: 0
;PCODE: $00003BEF VOL: 0
;PCODE: $00003BF0 VOL: 0
;PCODE: $00003BF1 VOL: 0
;PCODE: $00003BF2 VOL: 0
;PCODE: $00003BF3 VOL: 0
; 0000 1B5F                           cykl_sterownik_1 = sterownik_1_praca(a[5]);
;PCODE: $00003BF4 VOL: 0
;PCODE: $00003BF5 VOL: 0
;PCODE: $00003BF6 VOL: 0
;PCODE: $00003BF7 VOL: 0
;PCODE: $00003BF8 VOL: 0
; 0000 1B60 
; 0000 1B61                      if(rzad_obrabiany == 2)
;PCODE: $00003BF9 VOL: 0
;PCODE: $00003BFA VOL: 0
;PCODE: $00003BFB VOL: 0
;PCODE: $00003BFC VOL: 0
; 0000 1B62                         ostateczny_wybor_zacisku();
;PCODE: $00003BFD VOL: 0
; 0000 1B63 
; 0000 1B64                     if(cykl_sterownik_1 == 5 | krazek_scierny_cykl_po_okregu_ilosc == 0)
;PCODE: $00003BFE VOL: 0
;PCODE: $00003BFF VOL: 0
;PCODE: $00003C00 VOL: 0
;PCODE: $00003C01 VOL: 0
;PCODE: $00003C02 VOL: 0
;PCODE: $00003C03 VOL: 0
;PCODE: $00003C04 VOL: 0
;PCODE: $00003C05 VOL: 0
;PCODE: $00003C06 VOL: 0
;PCODE: $00003C07 VOL: 0
;PCODE: $00003C08 VOL: 0
; 0000 1B65                         {
; 0000 1B66 
; 0000 1B67                         cykl_sterownik_1 = 0;
;PCODE: $00003C09 VOL: 0
;PCODE: $00003C0A VOL: 0
; 0000 1B68                         wykonalem_komplet_okregow = 0;
;PCODE: $00003C0B VOL: 0
;PCODE: $00003C0C VOL: 0
; 0000 1B69 
; 0000 1B6A                         if(krazek_scierny_cykl_po_okregu_ilosc == 0)
;PCODE: $00003C0D VOL: 0
;PCODE: $00003C0E VOL: 0
;PCODE: $00003C0F VOL: 0
;PCODE: $00003C10 VOL: 0
; 0000 1B6B                             {
; 0000 1B6C                             cykl_sterownik_1 = 5;
;PCODE: $00003C11 VOL: 0
;PCODE: $00003C12 VOL: 0
; 0000 1B6D                             wykonalem_komplet_okregow = 1;
;PCODE: $00003C13 VOL: 0
;PCODE: $00003C14 VOL: 0
; 0000 1B6E                             }
; 0000 1B6F 
; 0000 1B70                         szczotka_druc_cykl = 0;
;PCODE: $00003C15 VOL: 0
;PCODE: $00003C16 VOL: 0
;PCODE: $00003C17 VOL: 0
; 0000 1B71                         krazek_scierny_cykl_po_okregu = 0;
;PCODE: $00003C18 VOL: 0
;PCODE: $00003C19 VOL: 0
; 0000 1B72 
; 0000 1B73                         abs_ster3 = 0;
;PCODE: $00003C1A VOL: 0
;PCODE: $00003C1B VOL: 0
; 0000 1B74                         abs_ster4 = 0;
;PCODE: $00003C1C VOL: 0
;PCODE: $00003C1D VOL: 0
; 0000 1B75                         if(rzad_obrabiany == 1)
;PCODE: $00003C1E VOL: 0
;PCODE: $00003C1F VOL: 0
;PCODE: $00003C20 VOL: 0
; 0000 1B76                              {
; 0000 1B77                              while(sprawdz_pin0(PORTMM,0x77) == 1)
;PCODE: $00003C21 VOL: 0
;PCODE: $00003C22 VOL: 0
;PCODE: $00003C23 VOL: 0
;PCODE: $00003C24 VOL: 0
;PCODE: $00003C25 VOL: 0
;PCODE: $00003C26 VOL: 0
;PCODE: $00003C27 VOL: 0
;PCODE: $00003C28 VOL: 0
; 0000 1B78                                 {
; 0000 1B79                                 }
;PCODE: $00003C29 VOL: 0
;PCODE: $00003C2A VOL: 0
; 0000 1B7A                              cykl_glowny = 8;
;PCODE: $00003C2B VOL: 0
;PCODE: $00003C2C VOL: 0
; 0000 1B7B                              }
; 0000 1B7C 
; 0000 1B7D                         if(rzad_obrabiany == 2)
;PCODE: $00003C2D VOL: 0
;PCODE: $00003C2E VOL: 0
;PCODE: $00003C2F VOL: 0
;PCODE: $00003C30 VOL: 0
; 0000 1B7E                              {
; 0000 1B7F                              while(sprawdz_pin1(PORTMM,0x77) == 1)
;PCODE: $00003C31 VOL: 0
;PCODE: $00003C32 VOL: 0
;PCODE: $00003C33 VOL: 0
;PCODE: $00003C34 VOL: 0
;PCODE: $00003C35 VOL: 0
;PCODE: $00003C36 VOL: 0
;PCODE: $00003C37 VOL: 0
;PCODE: $00003C38 VOL: 0
; 0000 1B80                                 {
; 0000 1B81                                 }
;PCODE: $00003C39 VOL: 0
;PCODE: $00003C3A VOL: 0
; 0000 1B82                              cykl_glowny = 8;
;PCODE: $00003C3B VOL: 0
;PCODE: $00003C3C VOL: 0
; 0000 1B83                              }
; 0000 1B84                         }
;PCODE: $00003C3D VOL: 0
; 0000 1B85 
; 0000 1B86 
; 0000 1B87 
; 0000 1B88            break;
;PCODE: $00003C3E VOL: 0
;PCODE: $00003C3F VOL: 0
; 0000 1B89 
; 0000 1B8A 
; 0000 1B8B             case 8:
;PCODE: $00003C40 VOL: 0
;PCODE: $00003C41 VOL: 0
;PCODE: $00003C42 VOL: 0
; 0000 1B8C 
; 0000 1B8D                     if(sek12 > czas_przedmuchu)
;PCODE: $00003C43 VOL: 0
;PCODE: $00003C44 VOL: 0
;PCODE: $00003C45 VOL: 0
;PCODE: $00003C46 VOL: 0
;PCODE: $00003C47 VOL: 0
; 0000 1B8E                         {
; 0000 1B8F                         PORT_F.bits.b4 = 0;  //przedmuch zaciskow
;PCODE: $00003C48 VOL: 0
;PCODE: $00003C49 VOL: 0
;PCODE: $00003C4A VOL: 0
;PCODE: $00003C4B VOL: 0
; 0000 1B90                         PORTF = PORT_F.byte;
;PCODE: $00003C4C VOL: 0
;PCODE: $00003C4D VOL: 0
; 0000 1B91                         }
; 0000 1B92 
; 0000 1B93 
; 0000 1B94                      if(rzad_obrabiany == 2)
;PCODE: $00003C4E VOL: 0
;PCODE: $00003C4F VOL: 0
;PCODE: $00003C50 VOL: 0
;PCODE: $00003C51 VOL: 0
; 0000 1B95                         ostateczny_wybor_zacisku();
;PCODE: $00003C52 VOL: 0
; 0000 1B96 
; 0000 1B97                     if(cykl_sterownik_1 < 5 & krazek_scierny_cykl_po_okregu < krazek_scierny_cykl_po_okregu_ilosc &  wykonalem_komplet_okregow == 0)
;PCODE: $00003C53 VOL: 0
;PCODE: $00003C54 VOL: 0
;PCODE: $00003C55 VOL: 0
;PCODE: $00003C56 VOL: 0
;PCODE: $00003C57 VOL: 0
;PCODE: $00003C58 VOL: 0
;PCODE: $00003C59 VOL: 0
;PCODE: $00003C5A VOL: 0
;PCODE: $00003C5B VOL: 0
;PCODE: $00003C5C VOL: 0
;PCODE: $00003C5D VOL: 0
;PCODE: $00003C5E VOL: 0
;PCODE: $00003C5F VOL: 0
;PCODE: $00003C60 VOL: 0
;PCODE: $00003C61 VOL: 0
;PCODE: $00003C62 VOL: 0
; 0000 1B98                           cykl_sterownik_1 = sterownik_1_praca(a[6]);
;PCODE: $00003C63 VOL: 0
;PCODE: $00003C64 VOL: 0
;PCODE: $00003C65 VOL: 0
;PCODE: $00003C66 VOL: 0
;PCODE: $00003C67 VOL: 0
; 0000 1B99 
; 0000 1B9A                     if(cykl_sterownik_1 == 5 & krazek_scierny_cykl_po_okregu < krazek_scierny_cykl_po_okregu_ilosc &  wykonalem_komplet_okregow == 0)
;PCODE: $00003C68 VOL: 0
;PCODE: $00003C69 VOL: 0
;PCODE: $00003C6A VOL: 0
;PCODE: $00003C6B VOL: 0
;PCODE: $00003C6C VOL: 0
;PCODE: $00003C6D VOL: 0
;PCODE: $00003C6E VOL: 0
;PCODE: $00003C6F VOL: 0
;PCODE: $00003C70 VOL: 0
;PCODE: $00003C71 VOL: 0
;PCODE: $00003C72 VOL: 0
;PCODE: $00003C73 VOL: 0
;PCODE: $00003C74 VOL: 0
;PCODE: $00003C75 VOL: 0
;PCODE: $00003C76 VOL: 0
;PCODE: $00003C77 VOL: 0
; 0000 1B9B                         {
; 0000 1B9C                         cykl_sterownik_1 = 0;
;PCODE: $00003C78 VOL: 0
;PCODE: $00003C79 VOL: 0
; 0000 1B9D                         krazek_scierny_cykl_po_okregu++;
;PCODE: $00003C7A VOL: 0
;PCODE: $00003C7B VOL: 0
;PCODE: $00003C7C VOL: 0
;PCODE: $00003C7D VOL: 0
; 0000 1B9E                         }
; 0000 1B9F 
; 0000 1BA0                     if(krazek_scierny_cykl_po_okregu == krazek_scierny_cykl_po_okregu_ilosc &  wykonalem_komplet_okregow == 0)
;PCODE: $00003C7E VOL: 0
;PCODE: $00003C7F VOL: 0
;PCODE: $00003C80 VOL: 0
;PCODE: $00003C81 VOL: 0
;PCODE: $00003C82 VOL: 0
;PCODE: $00003C83 VOL: 0
;PCODE: $00003C84 VOL: 0
;PCODE: $00003C85 VOL: 0
;PCODE: $00003C86 VOL: 0
;PCODE: $00003C87 VOL: 0
;PCODE: $00003C88 VOL: 0
; 0000 1BA1                         {
; 0000 1BA2                         cykl_sterownik_1 = 0;
;PCODE: $00003C89 VOL: 0
;PCODE: $00003C8A VOL: 0
; 0000 1BA3                         wykonalem_komplet_okregow = 1;
;PCODE: $00003C8B VOL: 0
;PCODE: $00003C8C VOL: 0
; 0000 1BA4                         }
; 0000 1BA5 
; 0000 1BA6                     if(koniec_rzedu_10 == 1)
;PCODE: $00003C8D VOL: 0
;PCODE: $00003C8E VOL: 0
;PCODE: $00003C8F VOL: 0
;PCODE: $00003C90 VOL: 0
; 0000 1BA7                         cykl_sterownik_4 = 5;
;PCODE: $00003C91 VOL: 0
;PCODE: $00003C92 VOL: 0
; 0000 1BA8                                                               //to nowy war, ostatni dzien w borg
; 0000 1BA9                     if(cykl_sterownik_4 < 5 & abs_ster4 == 0 & powrot_przedwczesny_druciak == 0 & sek13 > czas_druciaka_na_gorze)
;PCODE: $00003C93 VOL: 0
;PCODE: $00003C94 VOL: 0
;PCODE: $00003C95 VOL: 0
;PCODE: $00003C96 VOL: 0
;PCODE: $00003C97 VOL: 0
;PCODE: $00003C98 VOL: 0
;PCODE: $00003C99 VOL: 0
;PCODE: $00003C9A VOL: 0
;PCODE: $00003C9B VOL: 0
;PCODE: $00003C9C VOL: 0
;PCODE: $00003C9D VOL: 0
;PCODE: $00003C9E VOL: 0
;PCODE: $00003C9F VOL: 0
;PCODE: $00003CA0 VOL: 0
;PCODE: $00003CA1 VOL: 0
;PCODE: $00003CA2 VOL: 0
;PCODE: $00003CA3 VOL: 0
;PCODE: $00003CA4 VOL: 0
;PCODE: $00003CA5 VOL: 0
;PCODE: $00003CA6 VOL: 0
;PCODE: $00003CA7 VOL: 0
; 0000 1BAA                          cykl_sterownik_4 = sterownik_4_praca(a[3],0); //INV               //szczotka druc
;PCODE: $00003CA8 VOL: 0
;PCODE: $00003CA9 VOL: 0
;PCODE: $00003CAA VOL: 0
;PCODE: $00003CAB VOL: 0
;PCODE: $00003CAC VOL: 0
;PCODE: $00003CAD VOL: 0
;PCODE: $00003CAE VOL: 0
; 0000 1BAB 
; 0000 1BAC                     if(cykl_sterownik_4 == 5 & szczotka_druc_cykl < szczotka_druciana_ilosc_cykli & powrot_przedwczesny_druciak == 0)
;PCODE: $00003CAF VOL: 0
;PCODE: $00003CB0 VOL: 0
;PCODE: $00003CB1 VOL: 0
;PCODE: $00003CB2 VOL: 0
;PCODE: $00003CB3 VOL: 0
;PCODE: $00003CB4 VOL: 0
;PCODE: $00003CB5 VOL: 0
;PCODE: $00003CB6 VOL: 0
;PCODE: $00003CB7 VOL: 0
;PCODE: $00003CB8 VOL: 0
;PCODE: $00003CB9 VOL: 0
;PCODE: $00003CBA VOL: 0
;PCODE: $00003CBB VOL: 0
;PCODE: $00003CBC VOL: 0
;PCODE: $00003CBD VOL: 0
;PCODE: $00003CBE VOL: 0
; 0000 1BAD                         {
; 0000 1BAE                         if(koniec_rzedu_10 == 0)
;PCODE: $00003CBF VOL: 0
;PCODE: $00003CC0 VOL: 0
;PCODE: $00003CC1 VOL: 0
; 0000 1BAF                             cykl_sterownik_4 = 0;
;PCODE: $00003CC2 VOL: 0
;PCODE: $00003CC3 VOL: 0
; 0000 1BB0                         if(abs_ster4 == 0)
;PCODE: $00003CC4 VOL: 0
;PCODE: $00003CC5 VOL: 0
;PCODE: $00003CC6 VOL: 0
;PCODE: $00003CC7 VOL: 0
; 0000 1BB1                             {
; 0000 1BB2                             szczotka_druc_cykl++;
;PCODE: $00003CC8 VOL: 0
;PCODE: $00003CC9 VOL: 0
;PCODE: $00003CCA VOL: 0
;PCODE: $00003CCB VOL: 0
; 0000 1BB3                             abs_ster4 = 1;
;PCODE: $00003CCC VOL: 0
;PCODE: $00003CCD VOL: 0
; 0000 1BB4                             }
; 0000 1BB5                         else
;PCODE: $00003CCE VOL: 0
;PCODE: $00003CCF VOL: 0
; 0000 1BB6                             {
; 0000 1BB7                             abs_ster4 = 0;
;PCODE: $00003CD0 VOL: 0
;PCODE: $00003CD1 VOL: 0
; 0000 1BB8                             sek13 = 0;
;PCODE: $00003CD2 VOL: 0
;PCODE: $00003CD3 VOL: 0
; 0000 1BB9                             }
;PCODE: $00003CD4 VOL: 0
; 0000 1BBA                         }
; 0000 1BBB 
; 0000 1BBC                     if(cykl_sterownik_3 < 5 & abs_ster3 == 0)
;PCODE: $00003CD5 VOL: 0
;PCODE: $00003CD6 VOL: 0
;PCODE: $00003CD7 VOL: 0
;PCODE: $00003CD8 VOL: 0
;PCODE: $00003CD9 VOL: 0
;PCODE: $00003CDA VOL: 0
;PCODE: $00003CDB VOL: 0
;PCODE: $00003CDC VOL: 0
;PCODE: $00003CDD VOL: 0
;PCODE: $00003CDE VOL: 0
; 0000 1BBD                          cykl_sterownik_3 = sterownik_3_praca(a[7]); //INV
;PCODE: $00003CDF VOL: 0
;PCODE: $00003CE0 VOL: 0
;PCODE: $00003CE1 VOL: 0
;PCODE: $00003CE2 VOL: 0
;PCODE: $00003CE3 VOL: 0
; 0000 1BBE 
; 0000 1BBF 
; 0000 1BC0                     if(cykl_sterownik_3 == 5 & krazek_scierny_cykl < krazek_scierny_ilosc_cykli)
;PCODE: $00003CE4 VOL: 0
;PCODE: $00003CE5 VOL: 0
;PCODE: $00003CE6 VOL: 0
;PCODE: $00003CE7 VOL: 0
;PCODE: $00003CE8 VOL: 0
;PCODE: $00003CE9 VOL: 0
;PCODE: $00003CEA VOL: 0
;PCODE: $00003CEB VOL: 0
;PCODE: $00003CEC VOL: 0
;PCODE: $00003CED VOL: 0
;PCODE: $00003CEE VOL: 0
; 0000 1BC1                         {
; 0000 1BC2 
; 0000 1BC3                          cykl_sterownik_3 = 0;
;PCODE: $00003CEF VOL: 0
;PCODE: $00003CF0 VOL: 0
; 0000 1BC4                         if(abs_ster3 == 0)
;PCODE: $00003CF1 VOL: 0
;PCODE: $00003CF2 VOL: 0
;PCODE: $00003CF3 VOL: 0
; 0000 1BC5                             {
; 0000 1BC6                             krazek_scierny_cykl++;
;PCODE: $00003CF4 VOL: 0
;PCODE: $00003CF5 VOL: 0
;PCODE: $00003CF6 VOL: 0
;PCODE: $00003CF7 VOL: 0
; 0000 1BC7                             abs_ster3 = 1;
;PCODE: $00003CF8 VOL: 0
;PCODE: $00003CF9 VOL: 0
; 0000 1BC8                             }
; 0000 1BC9                         else
;PCODE: $00003CFA VOL: 0
;PCODE: $00003CFB VOL: 0
; 0000 1BCA                             abs_ster3 = 0;
;PCODE: $00003CFC VOL: 0
;PCODE: $00003CFD VOL: 0
; 0000 1BCB                         }
;PCODE: $00003CFE VOL: 0
; 0000 1BCC 
; 0000 1BCD                     if(cykl_sterownik_3 < 5 & abs_ster3 == 1)
;PCODE: $00003CFF VOL: 0
;PCODE: $00003D00 VOL: 0
;PCODE: $00003D01 VOL: 0
;PCODE: $00003D02 VOL: 0
;PCODE: $00003D03 VOL: 0
;PCODE: $00003D04 VOL: 0
;PCODE: $00003D05 VOL: 0
;PCODE: $00003D06 VOL: 0
;PCODE: $00003D07 VOL: 0
;PCODE: $00003D08 VOL: 0
; 0000 1BCE                         cykl_sterownik_3 = sterownik_3_praca(a[4]);  //ABS          //krazek scierny do gory
;PCODE: $00003D09 VOL: 0
;PCODE: $00003D0A VOL: 0
;PCODE: $00003D0B VOL: 0
;PCODE: $00003D0C VOL: 0
;PCODE: $00003D0D VOL: 0
; 0000 1BCF 
; 0000 1BD0                     if(cykl_sterownik_4 < 5 & abs_ster4 == 1 & powrot_przedwczesny_druciak == 0)
;PCODE: $00003D0E VOL: 0
;PCODE: $00003D0F VOL: 0
;PCODE: $00003D10 VOL: 0
;PCODE: $00003D11 VOL: 0
;PCODE: $00003D12 VOL: 0
;PCODE: $00003D13 VOL: 0
;PCODE: $00003D14 VOL: 0
;PCODE: $00003D15 VOL: 0
;PCODE: $00003D16 VOL: 0
;PCODE: $00003D17 VOL: 0
;PCODE: $00003D18 VOL: 0
;PCODE: $00003D19 VOL: 0
;PCODE: $00003D1A VOL: 0
;PCODE: $00003D1B VOL: 0
;PCODE: $00003D1C VOL: 0
; 0000 1BD1                         cykl_sterownik_4 = sterownik_4_praca(a[2],1);  //ABS          //druciak do gory
;PCODE: $00003D1D VOL: 0
;PCODE: $00003D1E VOL: 0
;PCODE: $00003D1F VOL: 0
;PCODE: $00003D20 VOL: 0
;PCODE: $00003D21 VOL: 0
;PCODE: $00003D22 VOL: 0
;PCODE: $00003D23 VOL: 0
; 0000 1BD2 
; 0000 1BD3                                                                                            //mini ruch powrotny do okregu, zeby nie szorowal
; 0000 1BD4                     if(cykl_sterownik_1 < 5 & wykonalem_komplet_okregow == 1)
;PCODE: $00003D24 VOL: 0
;PCODE: $00003D25 VOL: 0
;PCODE: $00003D26 VOL: 0
;PCODE: $00003D27 VOL: 0
;PCODE: $00003D28 VOL: 0
;PCODE: $00003D29 VOL: 0
;PCODE: $00003D2A VOL: 0
;PCODE: $00003D2B VOL: 0
;PCODE: $00003D2C VOL: 0
;PCODE: $00003D2D VOL: 0
; 0000 1BD5                          cykl_sterownik_1 = sterownik_1_praca(a[8]);
;PCODE: $00003D2E VOL: 0
;PCODE: $00003D2F VOL: 0
;PCODE: $00003D30 VOL: 0
;PCODE: $00003D31 VOL: 0
;PCODE: $00003D32 VOL: 0
; 0000 1BD6 
; 0000 1BD7                    ///////////////////////////////////////////////
; 0000 1BD8 
; 0000 1BD9                   if(cykl_sterownik_4 == 5 & szczotka_druc_cykl == szczotka_druciana_ilosc_cykli & (wykonalem_komplet_okregow !=1 | krazek_scierny_cykl != krazek_scierny_ilosc_cykli))
;PCODE: $00003D33 VOL: 0
;PCODE: $00003D34 VOL: 0
;PCODE: $00003D35 VOL: 0
;PCODE: $00003D36 VOL: 0
;PCODE: $00003D37 VOL: 0
;PCODE: $00003D38 VOL: 0
;PCODE: $00003D39 VOL: 0
;PCODE: $00003D3A VOL: 0
;PCODE: $00003D3B VOL: 0
;PCODE: $00003D3C VOL: 0
;PCODE: $00003D3D VOL: 0
;PCODE: $00003D3E VOL: 0
;PCODE: $00003D3F VOL: 0
;PCODE: $00003D40 VOL: 0
;PCODE: $00003D41 VOL: 0
;PCODE: $00003D42 VOL: 0
;PCODE: $00003D43 VOL: 0
;PCODE: $00003D44 VOL: 0
;PCODE: $00003D45 VOL: 0
;PCODE: $00003D46 VOL: 0
;PCODE: $00003D47 VOL: 0
;PCODE: $00003D48 VOL: 0
; 0000 1BDA                        {
; 0000 1BDB                        cykl_sterownik_4 = 0;
;PCODE: $00003D49 VOL: 0
;PCODE: $00003D4A VOL: 0
; 0000 1BDC                        powrot_przedwczesny_druciak = 1;
;PCODE: $00003D4B VOL: 0
;PCODE: $00003D4C VOL: 0
; 0000 1BDD                        }
; 0000 1BDE                   if(powrot_przedwczesny_druciak == 1 & cykl_sterownik_4 < 5)
;PCODE: $00003D4D VOL: 0
;PCODE: $00003D4E VOL: 0
;PCODE: $00003D4F VOL: 0
;PCODE: $00003D50 VOL: 0
;PCODE: $00003D51 VOL: 0
;PCODE: $00003D52 VOL: 0
;PCODE: $00003D53 VOL: 0
;PCODE: $00003D54 VOL: 0
;PCODE: $00003D55 VOL: 0
;PCODE: $00003D56 VOL: 0
; 0000 1BDF                        cykl_sterownik_4 = sterownik_4_praca(0x01,0);  //do pozycji bazowej
;PCODE: $00003D57 VOL: 0
;PCODE: $00003D58 VOL: 0
;PCODE: $00003D59 VOL: 0
;PCODE: $00003D5A VOL: 0
;PCODE: $00003D5B VOL: 0
;PCODE: $00003D5C VOL: 0
; 0000 1BE0 
; 0000 1BE1                   if(cykl_sterownik_4 == 5 & powrot_przedwczesny_druciak == 1)
;PCODE: $00003D5D VOL: 0
;PCODE: $00003D5E VOL: 0
;PCODE: $00003D5F VOL: 0
;PCODE: $00003D60 VOL: 0
;PCODE: $00003D61 VOL: 0
;PCODE: $00003D62 VOL: 0
;PCODE: $00003D63 VOL: 0
;PCODE: $00003D64 VOL: 0
;PCODE: $00003D65 VOL: 0
;PCODE: $00003D66 VOL: 0
; 0000 1BE2                        powrot_przedwczesny_druciak = 0;
;PCODE: $00003D67 VOL: 0
;PCODE: $00003D68 VOL: 0
; 0000 1BE3                    //////////////////////////////////////////////
; 0000 1BE4 
; 0000 1BE5                     if(cykl_sterownik_1 == 5 & wykonalem_komplet_okregow == 1 &
;PCODE: $00003D69 VOL: 0
; 0000 1BE6                        szczotka_druc_cykl == szczotka_druciana_ilosc_cykli &
; 0000 1BE7                        krazek_scierny_cykl == krazek_scierny_ilosc_cykli &
; 0000 1BE8                        cykl_sterownik_3 == 5 & cykl_sterownik_4 == 5 & powrot_przedwczesny_druciak == 0)
;PCODE: $00003D6A VOL: 0
;PCODE: $00003D6B VOL: 0
;PCODE: $00003D6C VOL: 0
;PCODE: $00003D6D VOL: 0
;PCODE: $00003D6E VOL: 0
;PCODE: $00003D6F VOL: 0
;PCODE: $00003D70 VOL: 0
;PCODE: $00003D71 VOL: 0
;PCODE: $00003D72 VOL: 0
;PCODE: $00003D73 VOL: 0
;PCODE: $00003D74 VOL: 0
;PCODE: $00003D75 VOL: 0
;PCODE: $00003D76 VOL: 0
;PCODE: $00003D77 VOL: 0
;PCODE: $00003D78 VOL: 0
;PCODE: $00003D79 VOL: 0
;PCODE: $00003D7A VOL: 0
;PCODE: $00003D7B VOL: 0
;PCODE: $00003D7C VOL: 0
;PCODE: $00003D7D VOL: 0
;PCODE: $00003D7E VOL: 0
;PCODE: $00003D7F VOL: 0
;PCODE: $00003D80 VOL: 0
;PCODE: $00003D81 VOL: 0
;PCODE: $00003D82 VOL: 0
;PCODE: $00003D83 VOL: 0
;PCODE: $00003D84 VOL: 0
;PCODE: $00003D85 VOL: 0
;PCODE: $00003D86 VOL: 0
;PCODE: $00003D87 VOL: 0
;PCODE: $00003D88 VOL: 0
;PCODE: $00003D89 VOL: 0
;PCODE: $00003D8A VOL: 0
;PCODE: $00003D8B VOL: 0
;PCODE: $00003D8C VOL: 0
;PCODE: $00003D8D VOL: 0
; 0000 1BE9                         {
; 0000 1BEA                         powrot_przedwczesny_druciak = 0;
;PCODE: $00003D8E VOL: 0
;PCODE: $00003D8F VOL: 0
; 0000 1BEB                         cykl_sterownik_1 = 0;
;PCODE: $00003D90 VOL: 0
;PCODE: $00003D91 VOL: 0
; 0000 1BEC                         cykl_sterownik_2 = 0;
;PCODE: $00003D92 VOL: 0
;PCODE: $00003D93 VOL: 0
; 0000 1BED                         cykl_sterownik_3 = 0;
;PCODE: $00003D94 VOL: 0
;PCODE: $00003D95 VOL: 0
; 0000 1BEE                         cykl_sterownik_4 = 0;
;PCODE: $00003D96 VOL: 0
;PCODE: $00003D97 VOL: 0
; 0000 1BEF                         szczotka_druc_cykl = 0;
;PCODE: $00003D98 VOL: 0
;PCODE: $00003D99 VOL: 0
; 0000 1BF0                         krazek_scierny_cykl = 0;
;PCODE: $00003D9A VOL: 0
;PCODE: $00003D9B VOL: 0
; 0000 1BF1                         krazek_scierny_cykl_po_okregu = 0;
;PCODE: $00003D9C VOL: 0
;PCODE: $00003D9D VOL: 0
; 0000 1BF2                         PORT_F.bits.b4 = 0;  //przedmuch zaciskow wylacz
;PCODE: $00003D9E VOL: 0
;PCODE: $00003D9F VOL: 0
;PCODE: $00003DA0 VOL: 0
;PCODE: $00003DA1 VOL: 0
; 0000 1BF3                         PORTF = PORT_F.byte;
;PCODE: $00003DA2 VOL: 0
;PCODE: $00003DA3 VOL: 0
; 0000 1BF4 
; 0000 1BF5 
; 0000 1BF6                         if(rzad_obrabiany == 1)
;PCODE: $00003DA4 VOL: 0
;PCODE: $00003DA5 VOL: 0
;PCODE: $00003DA6 VOL: 0
; 0000 1BF7                              {
; 0000 1BF8                              while(sprawdz_pin0(PORTMM,0x77) == 1)
;PCODE: $00003DA7 VOL: 0
;PCODE: $00003DA8 VOL: 0
;PCODE: $00003DA9 VOL: 0
;PCODE: $00003DAA VOL: 0
;PCODE: $00003DAB VOL: 0
;PCODE: $00003DAC VOL: 0
;PCODE: $00003DAD VOL: 0
;PCODE: $00003DAE VOL: 0
; 0000 1BF9                                 {
; 0000 1BFA                                 }
;PCODE: $00003DAF VOL: 0
;PCODE: $00003DB0 VOL: 0
; 0000 1BFB                              cykl_glowny = 9;
;PCODE: $00003DB1 VOL: 0
;PCODE: $00003DB2 VOL: 0
; 0000 1BFC                              }
; 0000 1BFD 
; 0000 1BFE                         if(rzad_obrabiany == 2)
;PCODE: $00003DB3 VOL: 0
;PCODE: $00003DB4 VOL: 0
;PCODE: $00003DB5 VOL: 0
;PCODE: $00003DB6 VOL: 0
; 0000 1BFF                              {
; 0000 1C00                              while(sprawdz_pin1(PORTMM,0x77) == 1)
;PCODE: $00003DB7 VOL: 0
;PCODE: $00003DB8 VOL: 0
;PCODE: $00003DB9 VOL: 0
;PCODE: $00003DBA VOL: 0
;PCODE: $00003DBB VOL: 0
;PCODE: $00003DBC VOL: 0
;PCODE: $00003DBD VOL: 0
;PCODE: $00003DBE VOL: 0
; 0000 1C01                                 {
; 0000 1C02                                 }
;PCODE: $00003DBF VOL: 0
;PCODE: $00003DC0 VOL: 0
; 0000 1C03                              cykl_glowny = 9;
;PCODE: $00003DC1 VOL: 0
;PCODE: $00003DC2 VOL: 0
; 0000 1C04                              }
; 0000 1C05 
; 0000 1C06 
; 0000 1C07                         }
;PCODE: $00003DC3 VOL: 0
; 0000 1C08 
; 0000 1C09                                                                                                 //ster 1 - ruch po okregu
; 0000 1C0A                                                                                                 //ster 2 - nic
; 0000 1C0B                                                                                                 //ster 3 - krazek - gora dol
; 0000 1C0C                                                                                                 //ster 4 - druciak - gora dol
; 0000 1C0D 
; 0000 1C0E             break;
;PCODE: $00003DC4 VOL: 0
;PCODE: $00003DC5 VOL: 0
; 0000 1C0F 
; 0000 1C10 
; 0000 1C11             case 9:                                          //cykl 3 == 5
;PCODE: $00003DC6 VOL: 0
;PCODE: $00003DC7 VOL: 0
;PCODE: $00003DC8 VOL: 0
; 0000 1C12 
; 0000 1C13 
; 0000 1C14                          if(rzad_obrabiany == 1)
;PCODE: $00003DC9 VOL: 0
;PCODE: $00003DCA VOL: 0
;PCODE: $00003DCB VOL: 0
; 0000 1C15                          {
; 0000 1C16                          if(cykl_sterownik_3 < 5 & cykl_ilosc_zaciskow != il_zaciskow_rzad_1 - 1)
;PCODE: $00003DCC VOL: 0
;PCODE: $00003DCD VOL: 0
;PCODE: $00003DCE VOL: 0
;PCODE: $00003DCF VOL: 0
;PCODE: $00003DD0 VOL: 0
;PCODE: $00003DD1 VOL: 0
;PCODE: $00003DD2 VOL: 0
;PCODE: $00003DD3 VOL: 0
;PCODE: $00003DD4 VOL: 0
;PCODE: $00003DD5 VOL: 0
; 0000 1C17                               cykl_sterownik_3 = sterownik_3_praca(0x01);  //do pozycji bazowej
;PCODE: $00003DD6 VOL: 0
;PCODE: $00003DD7 VOL: 0
;PCODE: $00003DD8 VOL: 0
;PCODE: $00003DD9 VOL: 0
; 0000 1C18 
; 0000 1C19 
; 0000 1C1A                           if(cykl_sterownik_4 < 5 & cykl_ilosc_zaciskow < il_zaciskow_rzad_1 - 2)
;PCODE: $00003DDA VOL: 0
;PCODE: $00003DDB VOL: 0
;PCODE: $00003DDC VOL: 0
;PCODE: $00003DDD VOL: 0
;PCODE: $00003DDE VOL: 0
;PCODE: $00003DDF VOL: 0
;PCODE: $00003DE0 VOL: 0
;PCODE: $00003DE1 VOL: 0
;PCODE: $00003DE2 VOL: 0
;PCODE: $00003DE3 VOL: 0
;PCODE: $00003DE4 VOL: 0
; 0000 1C1B                             cykl_sterownik_4 = sterownik_4_praca(0x01,0);  //do pozycji bazowej
;PCODE: $00003DE5 VOL: 0
;PCODE: $00003DE6 VOL: 0
;PCODE: $00003DE7 VOL: 0
;PCODE: $00003DE8 VOL: 0
;PCODE: $00003DE9 VOL: 0
;PCODE: $00003DEA VOL: 0
; 0000 1C1C 
; 0000 1C1D 
; 0000 1C1E                          if(cykl_sterownik_3 < 5 & cykl_ilosc_zaciskow == il_zaciskow_rzad_1 - 1)       //2 marca 2019 wykomentowuje
;PCODE: $00003DEB VOL: 0
;PCODE: $00003DEC VOL: 0
;PCODE: $00003DED VOL: 0
;PCODE: $00003DEE VOL: 0
;PCODE: $00003DEF VOL: 0
;PCODE: $00003DF0 VOL: 0
;PCODE: $00003DF1 VOL: 0
;PCODE: $00003DF2 VOL: 0
;PCODE: $00003DF3 VOL: 0
;PCODE: $00003DF4 VOL: 0
;PCODE: $00003DF5 VOL: 0
; 0000 1C1F                             cykl_sterownik_3 = sterownik_3_praca(0x00);  //na sam dol, jedziemy miedzy rzedami
;PCODE: $00003DF6 VOL: 0
;PCODE: $00003DF7 VOL: 0
;PCODE: $00003DF8 VOL: 0
;PCODE: $00003DF9 VOL: 0
; 0000 1C20 
; 0000 1C21 
; 0000 1C22                          if(cykl_sterownik_4 < 5 & cykl_ilosc_zaciskow >= il_zaciskow_rzad_1 - 2)
;PCODE: $00003DFA VOL: 0
;PCODE: $00003DFB VOL: 0
;PCODE: $00003DFC VOL: 0
;PCODE: $00003DFD VOL: 0
;PCODE: $00003DFE VOL: 0
;PCODE: $00003DFF VOL: 0
;PCODE: $00003E00 VOL: 0
;PCODE: $00003E01 VOL: 0
;PCODE: $00003E02 VOL: 0
;PCODE: $00003E03 VOL: 0
;PCODE: $00003E04 VOL: 0
; 0000 1C23                             cykl_sterownik_4 = sterownik_4_praca(0x00,0);  //na sam dol, jedziemy miedzy rzedami
;PCODE: $00003E05 VOL: 0
;PCODE: $00003E06 VOL: 0
;PCODE: $00003E07 VOL: 0
;PCODE: $00003E08 VOL: 0
;PCODE: $00003E09 VOL: 0
;PCODE: $00003E0A VOL: 0
; 0000 1C24 
; 0000 1C25                           }
;PCODE: $00003E0B VOL: 0
; 0000 1C26 
; 0000 1C27 
; 0000 1C28                          if(rzad_obrabiany == 2)
;PCODE: $00003E0C VOL: 0
;PCODE: $00003E0D VOL: 0
;PCODE: $00003E0E VOL: 0
;PCODE: $00003E0F VOL: 0
; 0000 1C29                          {
; 0000 1C2A                          if(cykl_sterownik_3 < 5 & cykl_ilosc_zaciskow != il_zaciskow_rzad_2 - 1)
;PCODE: $00003E10 VOL: 0
;PCODE: $00003E11 VOL: 0
;PCODE: $00003E12 VOL: 0
;PCODE: $00003E13 VOL: 0
;PCODE: $00003E14 VOL: 0
;PCODE: $00003E15 VOL: 0
;PCODE: $00003E16 VOL: 0
;PCODE: $00003E17 VOL: 0
;PCODE: $00003E18 VOL: 0
;PCODE: $00003E19 VOL: 0
; 0000 1C2B                             cykl_sterownik_3 = sterownik_3_praca(0x01);  //do pozycji bazowej
;PCODE: $00003E1A VOL: 0
;PCODE: $00003E1B VOL: 0
;PCODE: $00003E1C VOL: 0
;PCODE: $00003E1D VOL: 0
; 0000 1C2C 
; 0000 1C2D                           if(cykl_sterownik_4 < 5 & cykl_ilosc_zaciskow < il_zaciskow_rzad_2 - 2)
;PCODE: $00003E1E VOL: 0
;PCODE: $00003E1F VOL: 0
;PCODE: $00003E20 VOL: 0
;PCODE: $00003E21 VOL: 0
;PCODE: $00003E22 VOL: 0
;PCODE: $00003E23 VOL: 0
;PCODE: $00003E24 VOL: 0
;PCODE: $00003E25 VOL: 0
;PCODE: $00003E26 VOL: 0
;PCODE: $00003E27 VOL: 0
;PCODE: $00003E28 VOL: 0
; 0000 1C2E                             cykl_sterownik_4 = sterownik_4_praca(0x01,0);  //do pozycji bazowej
;PCODE: $00003E29 VOL: 0
;PCODE: $00003E2A VOL: 0
;PCODE: $00003E2B VOL: 0
;PCODE: $00003E2C VOL: 0
;PCODE: $00003E2D VOL: 0
;PCODE: $00003E2E VOL: 0
; 0000 1C2F 
; 0000 1C30                          if(cykl_sterownik_3 < 5 & cykl_ilosc_zaciskow == il_zaciskow_rzad_2 - 1)
;PCODE: $00003E2F VOL: 0
;PCODE: $00003E30 VOL: 0
;PCODE: $00003E31 VOL: 0
;PCODE: $00003E32 VOL: 0
;PCODE: $00003E33 VOL: 0
;PCODE: $00003E34 VOL: 0
;PCODE: $00003E35 VOL: 0
;PCODE: $00003E36 VOL: 0
;PCODE: $00003E37 VOL: 0
;PCODE: $00003E38 VOL: 0
;PCODE: $00003E39 VOL: 0
; 0000 1C31                             cykl_sterownik_3 = sterownik_3_praca(0x00);  //na sam dol, jedziemy miedzy rzedami
;PCODE: $00003E3A VOL: 0
;PCODE: $00003E3B VOL: 0
;PCODE: $00003E3C VOL: 0
;PCODE: $00003E3D VOL: 0
; 0000 1C32 
; 0000 1C33 
; 0000 1C34                           if(cykl_sterownik_4 < 5 & cykl_ilosc_zaciskow >= il_zaciskow_rzad_2 - 2)
;PCODE: $00003E3E VOL: 0
;PCODE: $00003E3F VOL: 0
;PCODE: $00003E40 VOL: 0
;PCODE: $00003E41 VOL: 0
;PCODE: $00003E42 VOL: 0
;PCODE: $00003E43 VOL: 0
;PCODE: $00003E44 VOL: 0
;PCODE: $00003E45 VOL: 0
;PCODE: $00003E46 VOL: 0
;PCODE: $00003E47 VOL: 0
;PCODE: $00003E48 VOL: 0
; 0000 1C35                             cykl_sterownik_4 = sterownik_4_praca(0x00,0);  //na sam dol, jedziemy miedzy rzedami
;PCODE: $00003E49 VOL: 0
;PCODE: $00003E4A VOL: 0
;PCODE: $00003E4B VOL: 0
;PCODE: $00003E4C VOL: 0
;PCODE: $00003E4D VOL: 0
;PCODE: $00003E4E VOL: 0
; 0000 1C36 
; 0000 1C37                            if(rzad_obrabiany == 2)
;PCODE: $00003E4F VOL: 0
;PCODE: $00003E50 VOL: 0
;PCODE: $00003E51 VOL: 0
;PCODE: $00003E52 VOL: 0
; 0000 1C38                             ostateczny_wybor_zacisku();
;PCODE: $00003E53 VOL: 0
; 0000 1C39 
; 0000 1C3A                           }
;PCODE: $00003E54 VOL: 0
; 0000 1C3B 
; 0000 1C3C 
; 0000 1C3D                           if(cykl_sterownik_3 == 5 & cykl_sterownik_4 == 5)
;PCODE: $00003E55 VOL: 0
;PCODE: $00003E56 VOL: 0
;PCODE: $00003E57 VOL: 0
;PCODE: $00003E58 VOL: 0
;PCODE: $00003E59 VOL: 0
;PCODE: $00003E5A VOL: 0
;PCODE: $00003E5B VOL: 0
;PCODE: $00003E5C VOL: 0
;PCODE: $00003E5D VOL: 0
;PCODE: $00003E5E VOL: 0
; 0000 1C3E                             {
; 0000 1C3F                             PORTE.2 = 0;  //wylacz szlifierke
;PCODE: $00003E5F VOL: 0
;PCODE: $00003E60 VOL: 0
; 0000 1C40                             PORTE.3 = 0;  //szlifierka 2 (krazek scierny)
;PCODE: $00003E61 VOL: 0
;PCODE: $00003E62 VOL: 0
; 0000 1C41                             PORTB.4 = 0;  //wylacz przedmuchy
;PCODE: $00003E63 VOL: 0
;PCODE: $00003E64 VOL: 0
; 0000 1C42                             cykl_sterownik_4 = 0;
;PCODE: $00003E65 VOL: 0
;PCODE: $00003E66 VOL: 0
; 0000 1C43                             cykl_sterownik_3 = 0;
;PCODE: $00003E67 VOL: 0
;PCODE: $00003E68 VOL: 0
; 0000 1C44                             cykl_ilosc_zaciskow++;
;PCODE: $00003E69 VOL: 0
;PCODE: $00003E6A VOL: 0
;PCODE: $00003E6B VOL: 0
;PCODE: $00003E6C VOL: 0
; 0000 1C45                             ruch_zlozony = 2;                       //il_zaciskow_rzad_1
;PCODE: $00003E6D VOL: 0
;PCODE: $00003E6E VOL: 0
; 0000 1C46 
; 0000 1C47 
; 0000 1C48                             if(rzad_obrabiany == 1)
;PCODE: $00003E6F VOL: 0
;PCODE: $00003E70 VOL: 0
;PCODE: $00003E71 VOL: 0
; 0000 1C49                              {
; 0000 1C4A                              while(sprawdz_pin0(PORTMM,0x77) == 1)
;PCODE: $00003E72 VOL: 0
;PCODE: $00003E73 VOL: 0
;PCODE: $00003E74 VOL: 0
;PCODE: $00003E75 VOL: 0
;PCODE: $00003E76 VOL: 0
;PCODE: $00003E77 VOL: 0
;PCODE: $00003E78 VOL: 0
;PCODE: $00003E79 VOL: 0
; 0000 1C4B                                 {
; 0000 1C4C                                 }
;PCODE: $00003E7A VOL: 0
;PCODE: $00003E7B VOL: 0
; 0000 1C4D                              cykl_glowny = 10;
;PCODE: $00003E7C VOL: 0
;PCODE: $00003E7D VOL: 0
; 0000 1C4E                              }
; 0000 1C4F 
; 0000 1C50                         if(rzad_obrabiany == 2)
;PCODE: $00003E7E VOL: 0
;PCODE: $00003E7F VOL: 0
;PCODE: $00003E80 VOL: 0
;PCODE: $00003E81 VOL: 0
; 0000 1C51                              {
; 0000 1C52                              while(sprawdz_pin1(PORTMM,0x77) == 1)
;PCODE: $00003E82 VOL: 0
;PCODE: $00003E83 VOL: 0
;PCODE: $00003E84 VOL: 0
;PCODE: $00003E85 VOL: 0
;PCODE: $00003E86 VOL: 0
;PCODE: $00003E87 VOL: 0
;PCODE: $00003E88 VOL: 0
;PCODE: $00003E89 VOL: 0
; 0000 1C53                                 {
; 0000 1C54                                 }
;PCODE: $00003E8A VOL: 0
;PCODE: $00003E8B VOL: 0
; 0000 1C55                              cykl_glowny = 10;
;PCODE: $00003E8C VOL: 0
;PCODE: $00003E8D VOL: 0
; 0000 1C56                              }
; 0000 1C57 
; 0000 1C58 
; 0000 1C59                             }
;PCODE: $00003E8E VOL: 0
; 0000 1C5A 
; 0000 1C5B 
; 0000 1C5C             break;
;PCODE: $00003E8F VOL: 0
;PCODE: $00003E90 VOL: 0
; 0000 1C5D 
; 0000 1C5E 
; 0000 1C5F 
; 0000 1C60             case 10:
;PCODE: $00003E91 VOL: 0
;PCODE: $00003E92 VOL: 0
;PCODE: $00003E93 VOL: 0
; 0000 1C61 
; 0000 1C62                                                //wywali ten warunek jak zadziala
; 0000 1C63                      if(rzad_obrabiany == 1 & cykl_glowny != 0)
;PCODE: $00003E94 VOL: 0
;PCODE: $00003E95 VOL: 0
;PCODE: $00003E96 VOL: 0
;PCODE: $00003E97 VOL: 0
;PCODE: $00003E98 VOL: 0
;PCODE: $00003E99 VOL: 0
;PCODE: $00003E9A VOL: 0
;PCODE: $00003E9B VOL: 0
;PCODE: $00003E9C VOL: 0
; 0000 1C64                             {
; 0000 1C65                             wartosc_parametru_panelu(cykl_ilosc_zaciskow,0,16);  //wykonano zaciskow rzad1
;PCODE: $00003E9D VOL: 0
;PCODE: $00003E9E VOL: 0
;PCODE: $00003E9F VOL: 0
;PCODE: $00003EA0 VOL: 0
;PCODE: $00003EA1 VOL: 0
;PCODE: $00003EA2 VOL: 0
;PCODE: $00003EA3 VOL: 0
; 0000 1C66                             if(cykl_ilosc_zaciskow <  il_zaciskow_rzad_1 - 1)
;PCODE: $00003EA4 VOL: 0
;PCODE: $00003EA5 VOL: 0
;PCODE: $00003EA6 VOL: 0
;PCODE: $00003EA7 VOL: 0
;PCODE: $00003EA8 VOL: 0
; 0000 1C67                                 {
; 0000 1C68                                 cykl_glowny = 5;
;PCODE: $00003EA9 VOL: 0
;PCODE: $00003EAA VOL: 0
; 0000 1C69                                 koniec_rzedu_10 = 0;
;PCODE: $00003EAB VOL: 0
;PCODE: $00003EAC VOL: 0
; 0000 1C6A                                 }
; 0000 1C6B 
; 0000 1C6C                             if(cykl_ilosc_zaciskow == il_zaciskow_rzad_1 - 1)
;PCODE: $00003EAD VOL: 0
;PCODE: $00003EAE VOL: 0
;PCODE: $00003EAF VOL: 0
;PCODE: $00003EB0 VOL: 0
;PCODE: $00003EB1 VOL: 0
;PCODE: $00003EB2 VOL: 0
; 0000 1C6D                                 {
; 0000 1C6E                                 cykl_glowny = 5;
;PCODE: $00003EB3 VOL: 0
;PCODE: $00003EB4 VOL: 0
; 0000 1C6F                                 koniec_rzedu_10 = 1;
;PCODE: $00003EB5 VOL: 0
;PCODE: $00003EB6 VOL: 0
; 0000 1C70                                 }
; 0000 1C71 
; 0000 1C72                             if(cykl_ilosc_zaciskow == il_zaciskow_rzad_1 & il_zaciskow_rzad_1 == 10)
;PCODE: $00003EB7 VOL: 0
;PCODE: $00003EB8 VOL: 0
;PCODE: $00003EB9 VOL: 0
;PCODE: $00003EBA VOL: 0
;PCODE: $00003EBB VOL: 0
;PCODE: $00003EBC VOL: 0
;PCODE: $00003EBD VOL: 0
;PCODE: $00003EBE VOL: 0
;PCODE: $00003EBF VOL: 0
;PCODE: $00003EC0 VOL: 0
; 0000 1C73                                 {
; 0000 1C74                                 cykl_glowny = 11;
;PCODE: $00003EC1 VOL: 0
;PCODE: $00003EC2 VOL: 0
; 0000 1C75                                 }
; 0000 1C76 
; 0000 1C77                              if(cykl_ilosc_zaciskow == il_zaciskow_rzad_1 & il_zaciskow_rzad_1 != 10)  /////zmieniam + 1 20.02
;PCODE: $00003EC3 VOL: 0
;PCODE: $00003EC4 VOL: 0
;PCODE: $00003EC5 VOL: 0
;PCODE: $00003EC6 VOL: 0
;PCODE: $00003EC7 VOL: 0
;PCODE: $00003EC8 VOL: 0
;PCODE: $00003EC9 VOL: 0
;PCODE: $00003ECA VOL: 0
;PCODE: $00003ECB VOL: 0
;PCODE: $00003ECC VOL: 0
; 0000 1C78                                 {
; 0000 1C79                                 cykl_glowny = 14;
;PCODE: $00003ECD VOL: 0
;PCODE: $00003ECE VOL: 0
; 0000 1C7A                                 }
; 0000 1C7B                             }
;PCODE: $00003ECF VOL: 0
; 0000 1C7C 
; 0000 1C7D 
; 0000 1C7E                              if(rzad_obrabiany == 2)
;PCODE: $00003ED0 VOL: 0
;PCODE: $00003ED1 VOL: 0
;PCODE: $00003ED2 VOL: 0
;PCODE: $00003ED3 VOL: 0
; 0000 1C7F                                 ostateczny_wybor_zacisku();
;PCODE: $00003ED4 VOL: 0
; 0000 1C80 
; 0000 1C81                             if(rzad_obrabiany == 2 & cykl_glowny != 0)
;PCODE: $00003ED5 VOL: 0
;PCODE: $00003ED6 VOL: 0
;PCODE: $00003ED7 VOL: 0
;PCODE: $00003ED8 VOL: 0
;PCODE: $00003ED9 VOL: 0
;PCODE: $00003EDA VOL: 0
;PCODE: $00003EDB VOL: 0
;PCODE: $00003EDC VOL: 0
;PCODE: $00003EDD VOL: 0
;PCODE: $00003EDE VOL: 0
; 0000 1C82                             {
; 0000 1C83                             wartosc_parametru_panelu(cykl_ilosc_zaciskow,0,96);  //wykonano zaciskow rzad1
;PCODE: $00003EDF VOL: 0
;PCODE: $00003EE0 VOL: 0
;PCODE: $00003EE1 VOL: 0
;PCODE: $00003EE2 VOL: 0
;PCODE: $00003EE3 VOL: 0
;PCODE: $00003EE4 VOL: 0
;PCODE: $00003EE5 VOL: 0
; 0000 1C84                             if(cykl_ilosc_zaciskow <  il_zaciskow_rzad_2 - 1)
;PCODE: $00003EE6 VOL: 0
;PCODE: $00003EE7 VOL: 0
;PCODE: $00003EE8 VOL: 0
;PCODE: $00003EE9 VOL: 0
;PCODE: $00003EEA VOL: 0
; 0000 1C85                                 {
; 0000 1C86                                 cykl_glowny = 5;
;PCODE: $00003EEB VOL: 0
;PCODE: $00003EEC VOL: 0
; 0000 1C87                                 koniec_rzedu_10 = 0;
;PCODE: $00003EED VOL: 0
;PCODE: $00003EEE VOL: 0
; 0000 1C88                                 }
; 0000 1C89 
; 0000 1C8A                             if(cykl_ilosc_zaciskow == il_zaciskow_rzad_2 - 1)
;PCODE: $00003EEF VOL: 0
;PCODE: $00003EF0 VOL: 0
;PCODE: $00003EF1 VOL: 0
;PCODE: $00003EF2 VOL: 0
;PCODE: $00003EF3 VOL: 0
;PCODE: $00003EF4 VOL: 0
; 0000 1C8B                                 {
; 0000 1C8C                                 cykl_glowny = 5;
;PCODE: $00003EF5 VOL: 0
;PCODE: $00003EF6 VOL: 0
; 0000 1C8D                                 koniec_rzedu_10 = 1;
;PCODE: $00003EF7 VOL: 0
;PCODE: $00003EF8 VOL: 0
; 0000 1C8E                                 }
; 0000 1C8F 
; 0000 1C90                             if(cykl_ilosc_zaciskow == il_zaciskow_rzad_2 & il_zaciskow_rzad_2 == 10)
;PCODE: $00003EF9 VOL: 0
;PCODE: $00003EFA VOL: 0
;PCODE: $00003EFB VOL: 0
;PCODE: $00003EFC VOL: 0
;PCODE: $00003EFD VOL: 0
;PCODE: $00003EFE VOL: 0
;PCODE: $00003EFF VOL: 0
;PCODE: $00003F00 VOL: 0
;PCODE: $00003F01 VOL: 0
;PCODE: $00003F02 VOL: 0
; 0000 1C91                                 {
; 0000 1C92                                 cykl_glowny = 12;
;PCODE: $00003F03 VOL: 0
;PCODE: $00003F04 VOL: 0
; 0000 1C93                                 }
; 0000 1C94 
; 0000 1C95 
; 0000 1C96                              if(cykl_ilosc_zaciskow == il_zaciskow_rzad_2 & il_zaciskow_rzad_2 != 10)   ///////////////////zmieniam + 1 20.02
;PCODE: $00003F05 VOL: 0
;PCODE: $00003F06 VOL: 0
;PCODE: $00003F07 VOL: 0
;PCODE: $00003F08 VOL: 0
;PCODE: $00003F09 VOL: 0
;PCODE: $00003F0A VOL: 0
;PCODE: $00003F0B VOL: 0
;PCODE: $00003F0C VOL: 0
;PCODE: $00003F0D VOL: 0
;PCODE: $00003F0E VOL: 0
; 0000 1C97                                 {
; 0000 1C98                                 cykl_glowny = 14;
;PCODE: $00003F0F VOL: 0
;PCODE: $00003F10 VOL: 0
; 0000 1C99                                 }
; 0000 1C9A                             }
;PCODE: $00003F11 VOL: 0
; 0000 1C9B 
; 0000 1C9C 
; 0000 1C9D 
; 0000 1C9E             break;
;PCODE: $00003F12 VOL: 0
;PCODE: $00003F13 VOL: 0
; 0000 1C9F 
; 0000 1CA0 
; 0000 1CA1 
; 0000 1CA2             case 11:
;PCODE: $00003F14 VOL: 0
;PCODE: $00003F15 VOL: 0
;PCODE: $00003F16 VOL: 0
; 0000 1CA3 
; 0000 1CA4                               if(rzad_obrabiany == 2)
;PCODE: $00003F17 VOL: 0
;PCODE: $00003F18 VOL: 0
;PCODE: $00003F19 VOL: 0
; 0000 1CA5                                 ostateczny_wybor_zacisku();
;PCODE: $00003F1A VOL: 0
; 0000 1CA6 
; 0000 1CA7                              //ster 1 ucieka od szafy
; 0000 1CA8                              if(cykl_sterownik_1 < 5)
;PCODE: $00003F1B VOL: 0
;PCODE: $00003F1C VOL: 0
;PCODE: $00003F1D VOL: 0
;PCODE: $00003F1E VOL: 0
; 0000 1CA9                                     cykl_sterownik_1 = sterownik_1_praca(0x007);     //uciekamy do tylu
;PCODE: $00003F1F VOL: 0
;PCODE: $00003F20 VOL: 0
;PCODE: $00003F21 VOL: 0
;PCODE: $00003F22 VOL: 0
; 0000 1CAA 
; 0000 1CAB                              if(cykl_sterownik_2 < 5)
;PCODE: $00003F23 VOL: 0
;PCODE: $00003F24 VOL: 0
;PCODE: $00003F25 VOL: 0
;PCODE: $00003F26 VOL: 0
; 0000 1CAC                                     cykl_sterownik_2 = sterownik_2_praca(0x190);     //pod dolek ostatni 10 do przedmuchu rzad 1
;PCODE: $00003F27 VOL: 0
;PCODE: $00003F28 VOL: 0
;PCODE: $00003F29 VOL: 0
;PCODE: $00003F2A VOL: 0
; 0000 1CAD 
; 0000 1CAE                              if(cykl_sterownik_1 == 5 & cykl_sterownik_2 == 5)
;PCODE: $00003F2B VOL: 0
;PCODE: $00003F2C VOL: 0
;PCODE: $00003F2D VOL: 0
;PCODE: $00003F2E VOL: 0
;PCODE: $00003F2F VOL: 0
;PCODE: $00003F30 VOL: 0
;PCODE: $00003F31 VOL: 0
;PCODE: $00003F32 VOL: 0
;PCODE: $00003F33 VOL: 0
;PCODE: $00003F34 VOL: 0
; 0000 1CAF                                     {
; 0000 1CB0                                     PORT_F.bits.b4 = 1;  //przedmuch zaciskow
;PCODE: $00003F35 VOL: 0
;PCODE: $00003F36 VOL: 0
;PCODE: $00003F37 VOL: 0
; 0000 1CB1                                     PORTF = PORT_F.byte;
;PCODE: $00003F38 VOL: 0
;PCODE: $00003F39 VOL: 0
; 0000 1CB2                                     cykl_sterownik_1 = 0;
;PCODE: $00003F3A VOL: 0
;PCODE: $00003F3B VOL: 0
; 0000 1CB3                                     cykl_sterownik_2 = 0;
;PCODE: $00003F3C VOL: 0
;PCODE: $00003F3D VOL: 0
; 0000 1CB4 
; 0000 1CB5                                     if(rzad_obrabiany == 1)
;PCODE: $00003F3E VOL: 0
;PCODE: $00003F3F VOL: 0
;PCODE: $00003F40 VOL: 0
; 0000 1CB6                                     {
; 0000 1CB7                                         while(sprawdz_pin0(PORTMM,0x77) == 1)
;PCODE: $00003F41 VOL: 0
;PCODE: $00003F42 VOL: 0
;PCODE: $00003F43 VOL: 0
;PCODE: $00003F44 VOL: 0
;PCODE: $00003F45 VOL: 0
;PCODE: $00003F46 VOL: 0
;PCODE: $00003F47 VOL: 0
;PCODE: $00003F48 VOL: 0
; 0000 1CB8                                             {
; 0000 1CB9                                             }
;PCODE: $00003F49 VOL: 0
;PCODE: $00003F4A VOL: 0
; 0000 1CBA                                     cykl_glowny = 13;
;PCODE: $00003F4B VOL: 0
;PCODE: $00003F4C VOL: 0
; 0000 1CBB                                     }
; 0000 1CBC 
; 0000 1CBD                                     if(rzad_obrabiany == 2)
;PCODE: $00003F4D VOL: 0
;PCODE: $00003F4E VOL: 0
;PCODE: $00003F4F VOL: 0
;PCODE: $00003F50 VOL: 0
; 0000 1CBE                                     {
; 0000 1CBF                                     while(sprawdz_pin1(PORTMM,0x77) == 1)
;PCODE: $00003F51 VOL: 0
;PCODE: $00003F52 VOL: 0
;PCODE: $00003F53 VOL: 0
;PCODE: $00003F54 VOL: 0
;PCODE: $00003F55 VOL: 0
;PCODE: $00003F56 VOL: 0
;PCODE: $00003F57 VOL: 0
;PCODE: $00003F58 VOL: 0
; 0000 1CC0                                         {
; 0000 1CC1                                         }
;PCODE: $00003F59 VOL: 0
;PCODE: $00003F5A VOL: 0
; 0000 1CC2                                         cykl_glowny = 13;
;PCODE: $00003F5B VOL: 0
;PCODE: $00003F5C VOL: 0
; 0000 1CC3                                     }
; 0000 1CC4 
; 0000 1CC5 
; 0000 1CC6 
; 0000 1CC7 
; 0000 1CC8                                     }
;PCODE: $00003F5D VOL: 0
; 0000 1CC9             break;
;PCODE: $00003F5E VOL: 0
;PCODE: $00003F5F VOL: 0
; 0000 1CCA 
; 0000 1CCB 
; 0000 1CCC             case 12:
;PCODE: $00003F60 VOL: 0
;PCODE: $00003F61 VOL: 0
;PCODE: $00003F62 VOL: 0
; 0000 1CCD 
; 0000 1CCE                              if(rzad_obrabiany == 2)
;PCODE: $00003F63 VOL: 0
;PCODE: $00003F64 VOL: 0
;PCODE: $00003F65 VOL: 0
; 0000 1CCF                                 ostateczny_wybor_zacisku();
;PCODE: $00003F66 VOL: 0
; 0000 1CD0 
; 0000 1CD1                                //ster 1 ucieka od szafy
; 0000 1CD2                              if(cykl_sterownik_1 < 5)
;PCODE: $00003F67 VOL: 0
;PCODE: $00003F68 VOL: 0
;PCODE: $00003F69 VOL: 0
;PCODE: $00003F6A VOL: 0
; 0000 1CD3                                     cykl_sterownik_1 = sterownik_1_praca(0x007);     //uciekamy do tylu
;PCODE: $00003F6B VOL: 0
;PCODE: $00003F6C VOL: 0
;PCODE: $00003F6D VOL: 0
;PCODE: $00003F6E VOL: 0
; 0000 1CD4 
; 0000 1CD5                             if(cykl_sterownik_2 < 5)
;PCODE: $00003F6F VOL: 0
;PCODE: $00003F70 VOL: 0
;PCODE: $00003F71 VOL: 0
;PCODE: $00003F72 VOL: 0
; 0000 1CD6                                     cykl_sterownik_2 = sterownik_2_praca(0x191);     //pod dolek ostatni 10 do przedmuchu rzad 2
;PCODE: $00003F73 VOL: 0
;PCODE: $00003F74 VOL: 0
;PCODE: $00003F75 VOL: 0
;PCODE: $00003F76 VOL: 0
; 0000 1CD7 
; 0000 1CD8                              if(cykl_sterownik_1 == 5 & cykl_sterownik_2 == 5)
;PCODE: $00003F77 VOL: 0
;PCODE: $00003F78 VOL: 0
;PCODE: $00003F79 VOL: 0
;PCODE: $00003F7A VOL: 0
;PCODE: $00003F7B VOL: 0
;PCODE: $00003F7C VOL: 0
;PCODE: $00003F7D VOL: 0
;PCODE: $00003F7E VOL: 0
;PCODE: $00003F7F VOL: 0
;PCODE: $00003F80 VOL: 0
; 0000 1CD9                                     {
; 0000 1CDA                                     PORT_F.bits.b4 = 1;  //przedmuch zaciskow
;PCODE: $00003F81 VOL: 0
;PCODE: $00003F82 VOL: 0
;PCODE: $00003F83 VOL: 0
; 0000 1CDB                                     PORTF = PORT_F.byte;
;PCODE: $00003F84 VOL: 0
;PCODE: $00003F85 VOL: 0
; 0000 1CDC                                     cykl_sterownik_1 = 0;
;PCODE: $00003F86 VOL: 0
;PCODE: $00003F87 VOL: 0
; 0000 1CDD                                     cykl_sterownik_2 = 0;
;PCODE: $00003F88 VOL: 0
;PCODE: $00003F89 VOL: 0
; 0000 1CDE 
; 0000 1CDF                                     if(rzad_obrabiany == 1)
;PCODE: $00003F8A VOL: 0
;PCODE: $00003F8B VOL: 0
;PCODE: $00003F8C VOL: 0
; 0000 1CE0                                     {
; 0000 1CE1                                         while(sprawdz_pin0(PORTMM,0x77) == 1)
;PCODE: $00003F8D VOL: 0
;PCODE: $00003F8E VOL: 0
;PCODE: $00003F8F VOL: 0
;PCODE: $00003F90 VOL: 0
;PCODE: $00003F91 VOL: 0
;PCODE: $00003F92 VOL: 0
;PCODE: $00003F93 VOL: 0
;PCODE: $00003F94 VOL: 0
; 0000 1CE2                                             {
; 0000 1CE3                                             }
;PCODE: $00003F95 VOL: 0
;PCODE: $00003F96 VOL: 0
; 0000 1CE4                                     cykl_glowny = 13;
;PCODE: $00003F97 VOL: 0
;PCODE: $00003F98 VOL: 0
; 0000 1CE5                                     }
; 0000 1CE6 
; 0000 1CE7                                     if(rzad_obrabiany == 2)
;PCODE: $00003F99 VOL: 0
;PCODE: $00003F9A VOL: 0
;PCODE: $00003F9B VOL: 0
;PCODE: $00003F9C VOL: 0
; 0000 1CE8                                     {
; 0000 1CE9                                     while(sprawdz_pin1(PORTMM,0x77) == 1)
;PCODE: $00003F9D VOL: 0
;PCODE: $00003F9E VOL: 0
;PCODE: $00003F9F VOL: 0
;PCODE: $00003FA0 VOL: 0
;PCODE: $00003FA1 VOL: 0
;PCODE: $00003FA2 VOL: 0
;PCODE: $00003FA3 VOL: 0
;PCODE: $00003FA4 VOL: 0
; 0000 1CEA                                         {
; 0000 1CEB                                         }
;PCODE: $00003FA5 VOL: 0
;PCODE: $00003FA6 VOL: 0
; 0000 1CEC                                         cykl_glowny = 13;
;PCODE: $00003FA7 VOL: 0
;PCODE: $00003FA8 VOL: 0
; 0000 1CED                                     }
; 0000 1CEE 
; 0000 1CEF 
; 0000 1CF0 
; 0000 1CF1                                     }
;PCODE: $00003FA9 VOL: 0
; 0000 1CF2 
; 0000 1CF3 
; 0000 1CF4             break;
;PCODE: $00003FAA VOL: 0
;PCODE: $00003FAB VOL: 0
; 0000 1CF5 
; 0000 1CF6 
; 0000 1CF7 
; 0000 1CF8             case 13:
;PCODE: $00003FAC VOL: 0
;PCODE: $00003FAD VOL: 0
;PCODE: $00003FAE VOL: 0
; 0000 1CF9 
; 0000 1CFA 
; 0000 1CFB                               if(rzad_obrabiany == 2)
;PCODE: $00003FAF VOL: 0
;PCODE: $00003FB0 VOL: 0
;PCODE: $00003FB1 VOL: 0
; 0000 1CFC                                 ostateczny_wybor_zacisku();
;PCODE: $00003FB2 VOL: 0
; 0000 1CFD 
; 0000 1CFE                              if(cykl_sterownik_2 < 5)
;PCODE: $00003FB3 VOL: 0
;PCODE: $00003FB4 VOL: 0
;PCODE: $00003FB5 VOL: 0
;PCODE: $00003FB6 VOL: 0
; 0000 1CFF                                     cykl_sterownik_2 = sterownik_2_praca(0x192);     //okrag
;PCODE: $00003FB7 VOL: 0
;PCODE: $00003FB8 VOL: 0
;PCODE: $00003FB9 VOL: 0
;PCODE: $00003FBA VOL: 0
; 0000 1D00                              if(cykl_sterownik_2 == 5)
;PCODE: $00003FBB VOL: 0
;PCODE: $00003FBC VOL: 0
;PCODE: $00003FBD VOL: 0
;PCODE: $00003FBE VOL: 0
; 0000 1D01                                     {
; 0000 1D02                                     PORT_F.bits.b4 = 0;  //przedmuch zaciskow - wylaczenie
;PCODE: $00003FBF VOL: 0
;PCODE: $00003FC0 VOL: 0
;PCODE: $00003FC1 VOL: 0
;PCODE: $00003FC2 VOL: 0
; 0000 1D03                                     PORTF = PORT_F.byte;
;PCODE: $00003FC3 VOL: 0
;PCODE: $00003FC4 VOL: 0
; 0000 1D04                                     cykl_sterownik_2 = 0;
;PCODE: $00003FC5 VOL: 0
;PCODE: $00003FC6 VOL: 0
; 0000 1D05 
; 0000 1D06 
; 0000 1D07                                     if(rzad_obrabiany == 1)
;PCODE: $00003FC7 VOL: 0
;PCODE: $00003FC8 VOL: 0
;PCODE: $00003FC9 VOL: 0
; 0000 1D08                                     {
; 0000 1D09                                         while(sprawdz_pin0(PORTMM,0x77) == 1)
;PCODE: $00003FCA VOL: 0
;PCODE: $00003FCB VOL: 0
;PCODE: $00003FCC VOL: 0
;PCODE: $00003FCD VOL: 0
;PCODE: $00003FCE VOL: 0
;PCODE: $00003FCF VOL: 0
;PCODE: $00003FD0 VOL: 0
;PCODE: $00003FD1 VOL: 0
; 0000 1D0A                                             {
; 0000 1D0B                                             }
;PCODE: $00003FD2 VOL: 0
;PCODE: $00003FD3 VOL: 0
; 0000 1D0C                                     cykl_glowny = 16;
;PCODE: $00003FD4 VOL: 0
;PCODE: $00003FD5 VOL: 0
; 0000 1D0D                                     }
; 0000 1D0E 
; 0000 1D0F                                     if(rzad_obrabiany == 2)
;PCODE: $00003FD6 VOL: 0
;PCODE: $00003FD7 VOL: 0
;PCODE: $00003FD8 VOL: 0
;PCODE: $00003FD9 VOL: 0
; 0000 1D10                                     {
; 0000 1D11                                     while(sprawdz_pin1(PORTMM,0x77) == 1)
;PCODE: $00003FDA VOL: 0
;PCODE: $00003FDB VOL: 0
;PCODE: $00003FDC VOL: 0
;PCODE: $00003FDD VOL: 0
;PCODE: $00003FDE VOL: 0
;PCODE: $00003FDF VOL: 0
;PCODE: $00003FE0 VOL: 0
;PCODE: $00003FE1 VOL: 0
; 0000 1D12                                         {
; 0000 1D13                                         }
;PCODE: $00003FE2 VOL: 0
;PCODE: $00003FE3 VOL: 0
; 0000 1D14                                         cykl_glowny = 16;
;PCODE: $00003FE4 VOL: 0
;PCODE: $00003FE5 VOL: 0
; 0000 1D15                                     }
; 0000 1D16 
; 0000 1D17 
; 0000 1D18 
; 0000 1D19                                     }
;PCODE: $00003FE6 VOL: 0
; 0000 1D1A 
; 0000 1D1B             break;
;PCODE: $00003FE7 VOL: 0
;PCODE: $00003FE8 VOL: 0
; 0000 1D1C 
; 0000 1D1D 
; 0000 1D1E 
; 0000 1D1F             case 14:
;PCODE: $00003FE9 VOL: 0
;PCODE: $00003FEA VOL: 0
;PCODE: $00003FEB VOL: 0
; 0000 1D20 
; 0000 1D21 
; 0000 1D22                      if(rzad_obrabiany == 2)
;PCODE: $00003FEC VOL: 0
;PCODE: $00003FED VOL: 0
;PCODE: $00003FEE VOL: 0
; 0000 1D23                         ostateczny_wybor_zacisku();
;PCODE: $00003FEF VOL: 0
; 0000 1D24 
; 0000 1D25                     if(cykl_sterownik_1 < 5)
;PCODE: $00003FF0 VOL: 0
;PCODE: $00003FF1 VOL: 0
;PCODE: $00003FF2 VOL: 0
;PCODE: $00003FF3 VOL: 0
; 0000 1D26                         cykl_sterownik_1 = sterownik_1_praca(0x003);     //pod nastepny dolek zeby przedmuchac
;PCODE: $00003FF4 VOL: 0
;PCODE: $00003FF5 VOL: 0
;PCODE: $00003FF6 VOL: 0
;PCODE: $00003FF7 VOL: 0
; 0000 1D27                     if(cykl_sterownik_1 == 5)
;PCODE: $00003FF8 VOL: 0
;PCODE: $00003FF9 VOL: 0
;PCODE: $00003FFA VOL: 0
;PCODE: $00003FFB VOL: 0
; 0000 1D28                         {
; 0000 1D29                         cykl_sterownik_1 = 0;
;PCODE: $00003FFC VOL: 0
;PCODE: $00003FFD VOL: 0
; 0000 1D2A                         sek12 = 0;
;PCODE: $00003FFE VOL: 0
;PCODE: $00003FFF VOL: 0
; 0000 1D2B 
; 0000 1D2C                         if(rzad_obrabiany == 1)
;PCODE: $00004000 VOL: 0
;PCODE: $00004001 VOL: 0
;PCODE: $00004002 VOL: 0
; 0000 1D2D                                     {
; 0000 1D2E                                         while(sprawdz_pin0(PORTMM,0x77) == 1)
;PCODE: $00004003 VOL: 0
;PCODE: $00004004 VOL: 0
;PCODE: $00004005 VOL: 0
;PCODE: $00004006 VOL: 0
;PCODE: $00004007 VOL: 0
;PCODE: $00004008 VOL: 0
;PCODE: $00004009 VOL: 0
;PCODE: $0000400A VOL: 0
; 0000 1D2F                                             {
; 0000 1D30                                             }
;PCODE: $0000400B VOL: 0
;PCODE: $0000400C VOL: 0
; 0000 1D31                                     cykl_glowny = 15;
;PCODE: $0000400D VOL: 0
;PCODE: $0000400E VOL: 0
; 0000 1D32                                     }
; 0000 1D33 
; 0000 1D34                                     if(rzad_obrabiany == 2)
;PCODE: $0000400F VOL: 0
;PCODE: $00004010 VOL: 0
;PCODE: $00004011 VOL: 0
;PCODE: $00004012 VOL: 0
; 0000 1D35                                     {
; 0000 1D36                                     while(sprawdz_pin1(PORTMM,0x77) == 1)
;PCODE: $00004013 VOL: 0
;PCODE: $00004014 VOL: 0
;PCODE: $00004015 VOL: 0
;PCODE: $00004016 VOL: 0
;PCODE: $00004017 VOL: 0
;PCODE: $00004018 VOL: 0
;PCODE: $00004019 VOL: 0
;PCODE: $0000401A VOL: 0
; 0000 1D37                                         {
; 0000 1D38                                         }
;PCODE: $0000401B VOL: 0
;PCODE: $0000401C VOL: 0
; 0000 1D39                                         cykl_glowny = 15;
;PCODE: $0000401D VOL: 0
;PCODE: $0000401E VOL: 0
; 0000 1D3A                                     }
; 0000 1D3B 
; 0000 1D3C 
; 0000 1D3D 
; 0000 1D3E 
; 0000 1D3F 
; 0000 1D40                         }
;PCODE: $0000401F VOL: 0
; 0000 1D41 
; 0000 1D42             break;
;PCODE: $00004020 VOL: 0
;PCODE: $00004021 VOL: 0
; 0000 1D43 
; 0000 1D44 
; 0000 1D45 
; 0000 1D46             case 15:
;PCODE: $00004022 VOL: 0
;PCODE: $00004023 VOL: 0
;PCODE: $00004024 VOL: 0
; 0000 1D47 
; 0000 1D48                      if(rzad_obrabiany == 2)
;PCODE: $00004025 VOL: 0
;PCODE: $00004026 VOL: 0
;PCODE: $00004027 VOL: 0
; 0000 1D49                         ostateczny_wybor_zacisku();
;PCODE: $00004028 VOL: 0
; 0000 1D4A 
; 0000 1D4B                     //przedmuch
; 0000 1D4C                     PORT_F.bits.b4 = 1;  //przedmuch zaciskow
;PCODE: $00004029 VOL: 0
;PCODE: $0000402A VOL: 0
;PCODE: $0000402B VOL: 0
;PCODE: $0000402C VOL: 0
; 0000 1D4D                     PORTF = PORT_F.byte;
;PCODE: $0000402D VOL: 0
;PCODE: $0000402E VOL: 0
; 0000 1D4E                     if(sek12 > czas_przedmuchu)
;PCODE: $0000402F VOL: 0
;PCODE: $00004030 VOL: 0
;PCODE: $00004031 VOL: 0
;PCODE: $00004032 VOL: 0
;PCODE: $00004033 VOL: 0
; 0000 1D4F                         {
; 0000 1D50                         PORT_F.bits.b4 = 0;  //przedmuch zaciskow
;PCODE: $00004034 VOL: 0
;PCODE: $00004035 VOL: 0
;PCODE: $00004036 VOL: 0
;PCODE: $00004037 VOL: 0
; 0000 1D51                         PORTF = PORT_F.byte;
;PCODE: $00004038 VOL: 0
;PCODE: $00004039 VOL: 0
; 0000 1D52 
; 0000 1D53                         if(rzad_obrabiany == 1)
;PCODE: $0000403A VOL: 0
;PCODE: $0000403B VOL: 0
;PCODE: $0000403C VOL: 0
; 0000 1D54                                     {
; 0000 1D55                                         while(sprawdz_pin0(PORTMM,0x77) == 1)
;PCODE: $0000403D VOL: 0
;PCODE: $0000403E VOL: 0
;PCODE: $0000403F VOL: 0
;PCODE: $00004040 VOL: 0
;PCODE: $00004041 VOL: 0
;PCODE: $00004042 VOL: 0
;PCODE: $00004043 VOL: 0
;PCODE: $00004044 VOL: 0
; 0000 1D56                                             {
; 0000 1D57                                             }
;PCODE: $00004045 VOL: 0
;PCODE: $00004046 VOL: 0
; 0000 1D58                                     cykl_glowny = 16;
;PCODE: $00004047 VOL: 0
;PCODE: $00004048 VOL: 0
; 0000 1D59                                     }
; 0000 1D5A 
; 0000 1D5B                                     if(rzad_obrabiany == 2)
;PCODE: $00004049 VOL: 0
;PCODE: $0000404A VOL: 0
;PCODE: $0000404B VOL: 0
;PCODE: $0000404C VOL: 0
; 0000 1D5C                                     {
; 0000 1D5D                                     while(sprawdz_pin1(PORTMM,0x77) == 1)
;PCODE: $0000404D VOL: 0
;PCODE: $0000404E VOL: 0
;PCODE: $0000404F VOL: 0
;PCODE: $00004050 VOL: 0
;PCODE: $00004051 VOL: 0
;PCODE: $00004052 VOL: 0
;PCODE: $00004053 VOL: 0
;PCODE: $00004054 VOL: 0
; 0000 1D5E                                         {
; 0000 1D5F                                         }
;PCODE: $00004055 VOL: 0
;PCODE: $00004056 VOL: 0
; 0000 1D60                                         cykl_glowny = 16;
;PCODE: $00004057 VOL: 0
;PCODE: $00004058 VOL: 0
; 0000 1D61                                     }
; 0000 1D62 
; 0000 1D63 
; 0000 1D64 
; 0000 1D65 
; 0000 1D66                         }
;PCODE: $00004059 VOL: 0
; 0000 1D67             break;
;PCODE: $0000405A VOL: 0
;PCODE: $0000405B VOL: 0
; 0000 1D68 
; 0000 1D69 
; 0000 1D6A             case 16:
;PCODE: $0000405C VOL: 0
;PCODE: $0000405D VOL: 0
;PCODE: $0000405E VOL: 0
; 0000 1D6B 
; 0000 1D6C                      if(cykl_ilosc_zaciskow == il_zaciskow_rzad_1 & wykonalem_rzedow == 0)  /////zmieniam + 1 20.02
;PCODE: $0000405F VOL: 0
;PCODE: $00004060 VOL: 0
;PCODE: $00004061 VOL: 0
;PCODE: $00004062 VOL: 0
;PCODE: $00004063 VOL: 0
;PCODE: $00004064 VOL: 0
;PCODE: $00004065 VOL: 0
;PCODE: $00004066 VOL: 0
;PCODE: $00004067 VOL: 0
; 0000 1D6D                                 {
; 0000 1D6E                                 cykl_ilosc_zaciskow = 0;
;PCODE: $00004068 VOL: 0
;PCODE: $00004069 VOL: 0
; 0000 1D6F                                 PORTE.7 = 0;   //pusc zaciski
;PCODE: $0000406A VOL: 0
;PCODE: $0000406B VOL: 0
; 0000 1D70                                 if(il_zaciskow_rzad_2 > 0)
;PCODE: $0000406C VOL: 0
;PCODE: $0000406D VOL: 0
;PCODE: $0000406E VOL: 0
; 0000 1D71                                     {
; 0000 1D72 
; 0000 1D73                                     rzad_obrabiany = 2;
;PCODE: $0000406F VOL: 0
;PCODE: $00004070 VOL: 0
; 0000 1D74                                     wybor_linijek_sterownikow(2);  //rzad 2
;PCODE: $00004071 VOL: 0
;PCODE: $00004072 VOL: 0
;PCODE: $00004073 VOL: 0
; 0000 1D75                                     cykl_glowny = 0;
;PCODE: $00004074 VOL: 0
;PCODE: $00004075 VOL: 0
; 0000 1D76                                     }
; 0000 1D77                                 else
;PCODE: $00004076 VOL: 0
;PCODE: $00004077 VOL: 0
; 0000 1D78                                     cykl_glowny = 17;
;PCODE: $00004078 VOL: 0
;PCODE: $00004079 VOL: 0
; 0000 1D79 
; 0000 1D7A                                 wykonalem_rzedow = 1;
;PCODE: $0000407A VOL: 0
;PCODE: $0000407B VOL: 0
;PCODE: $0000407C VOL: 0
; 0000 1D7B                                 }
; 0000 1D7C 
; 0000 1D7D                        if(cykl_ilosc_zaciskow == il_zaciskow_rzad_2 & il_zaciskow_rzad_2 > 0 & wykonalem_rzedow == 1)   ///////////////////zmieniam + 1 20.02
;PCODE: $0000407D VOL: 0
;PCODE: $0000407E VOL: 0
;PCODE: $0000407F VOL: 0
;PCODE: $00004080 VOL: 0
;PCODE: $00004081 VOL: 0
;PCODE: $00004082 VOL: 0
;PCODE: $00004083 VOL: 0
;PCODE: $00004084 VOL: 0
;PCODE: $00004085 VOL: 0
;PCODE: $00004086 VOL: 0
;PCODE: $00004087 VOL: 0
;PCODE: $00004088 VOL: 0
;PCODE: $00004089 VOL: 0
;PCODE: $0000408A VOL: 0
;PCODE: $0000408B VOL: 0
; 0000 1D7E                                 {
; 0000 1D7F                                 PORTE.7 = 0;   //pusc zaciski
;PCODE: $0000408C VOL: 0
;PCODE: $0000408D VOL: 0
; 0000 1D80                                 cykl_ilosc_zaciskow = 0;
;PCODE: $0000408E VOL: 0
;PCODE: $0000408F VOL: 0
; 0000 1D81                                 cykl_glowny = 17;
;PCODE: $00004090 VOL: 0
;PCODE: $00004091 VOL: 0
; 0000 1D82                                 rzad_obrabiany = 1;
;PCODE: $00004092 VOL: 0
;PCODE: $00004093 VOL: 0
; 0000 1D83                                 wykonalem_rzedow = 2;
;PCODE: $00004094 VOL: 0
;PCODE: $00004095 VOL: 0
; 0000 1D84                                 }
; 0000 1D85 
; 0000 1D86 
; 0000 1D87 
; 0000 1D88 
; 0000 1D89                         if(il_zaciskow_rzad_1 > 0 & il_zaciskow_rzad_2 > 0 & wykonalem_rzedow == 2)
;PCODE: $00004096 VOL: 0
;PCODE: $00004097 VOL: 0
;PCODE: $00004098 VOL: 0
;PCODE: $00004099 VOL: 0
;PCODE: $0000409A VOL: 0
;PCODE: $0000409B VOL: 0
;PCODE: $0000409C VOL: 0
;PCODE: $0000409D VOL: 0
;PCODE: $0000409E VOL: 0
;PCODE: $0000409F VOL: 0
;PCODE: $000040A0 VOL: 0
;PCODE: $000040A1 VOL: 0
;PCODE: $000040A2 VOL: 0
;PCODE: $000040A3 VOL: 0
;PCODE: $000040A4 VOL: 0
; 0000 1D8A                                   {
; 0000 1D8B                                   rzad_obrabiany = 1;
;PCODE: $000040A5 VOL: 0
;PCODE: $000040A6 VOL: 0
; 0000 1D8C                                   wykonalem_rzedow = 0;
;PCODE: $000040A7 VOL: 0
;PCODE: $000040A8 VOL: 0
; 0000 1D8D                                   PORTE.7 = 0;   //pusc zaciski
;PCODE: $000040A9 VOL: 0
;PCODE: $000040AA VOL: 0
; 0000 1D8E                                   //PORTE.6 = 0;    //przelacz rzad zaciskow - rzad 1 - tego na razie nie poki nie ma oslon
; 0000 1D8F                                   PORTB.6 = 0;   ////zielona lampka
;PCODE: $000040AB VOL: 0
;PCODE: $000040AC VOL: 0
; 0000 1D90                                   wartosc_parametru_panelu(0,0,64);
;PCODE: $000040AD VOL: 0
;PCODE: $000040AE VOL: 0
;PCODE: $000040AF VOL: 0
;PCODE: $000040B0 VOL: 0
;PCODE: $000040B1 VOL: 0
;PCODE: $000040B2 VOL: 0
;PCODE: $000040B3 VOL: 0
; 0000 1D91                                   }
; 0000 1D92 
; 0000 1D93                             if(il_zaciskow_rzad_1 > 0 & il_zaciskow_rzad_2 == 0 & wykonalem_rzedow == 1)
;PCODE: $000040B4 VOL: 0
;PCODE: $000040B5 VOL: 0
;PCODE: $000040B6 VOL: 0
;PCODE: $000040B7 VOL: 0
;PCODE: $000040B8 VOL: 0
;PCODE: $000040B9 VOL: 0
;PCODE: $000040BA VOL: 0
;PCODE: $000040BB VOL: 0
;PCODE: $000040BC VOL: 0
;PCODE: $000040BD VOL: 0
;PCODE: $000040BE VOL: 0
;PCODE: $000040BF VOL: 0
;PCODE: $000040C0 VOL: 0
;PCODE: $000040C1 VOL: 0
;PCODE: $000040C2 VOL: 0
; 0000 1D94                                   {
; 0000 1D95                                   rzad_obrabiany = 1;
;PCODE: $000040C3 VOL: 0
;PCODE: $000040C4 VOL: 0
; 0000 1D96                                   wykonalem_rzedow = 0;
;PCODE: $000040C5 VOL: 0
;PCODE: $000040C6 VOL: 0
; 0000 1D97                                   PORTE.6 = 1;    //przelacz rzad zaciskow - rzad 2
;PCODE: $000040C7 VOL: 0
;PCODE: $000040C8 VOL: 0
; 0000 1D98                                   PORTB.6 = 0;   ////zielona lampka
;PCODE: $000040C9 VOL: 0
;PCODE: $000040CA VOL: 0
; 0000 1D99                                   wartosc_parametru_panelu(0,0,64);
;PCODE: $000040CB VOL: 0
;PCODE: $000040CC VOL: 0
;PCODE: $000040CD VOL: 0
;PCODE: $000040CE VOL: 0
;PCODE: $000040CF VOL: 0
;PCODE: $000040D0 VOL: 0
;PCODE: $000040D1 VOL: 0
; 0000 1D9A                                   }
; 0000 1D9B 
; 0000 1D9C 
; 0000 1D9D 
; 0000 1D9E             break;
;PCODE: $000040D2 VOL: 0
;PCODE: $000040D3 VOL: 0
; 0000 1D9F 
; 0000 1DA0 
; 0000 1DA1             case 17:
;PCODE: $000040D4 VOL: 0
;PCODE: $000040D5 VOL: 0
;PCODE: $000040D6 VOL: 0
; 0000 1DA2 
; 0000 1DA3 
; 0000 1DA4                                  if(cykl_sterownik_1 < 5)
;PCODE: $000040D7 VOL: 0
;PCODE: $000040D8 VOL: 0
;PCODE: $000040D9 VOL: 0
; 0000 1DA5                                     cykl_sterownik_1 = sterownik_1_praca(0x009);
;PCODE: $000040DA VOL: 0
;PCODE: $000040DB VOL: 0
;PCODE: $000040DC VOL: 0
;PCODE: $000040DD VOL: 0
; 0000 1DA6                                  if(cykl_sterownik_2 < 5)                                //ster 1 do 0
;PCODE: $000040DE VOL: 0
;PCODE: $000040DF VOL: 0
;PCODE: $000040E0 VOL: 0
;PCODE: $000040E1 VOL: 0
; 0000 1DA7                                     cykl_sterownik_2 = sterownik_2_praca(0x000);       //ster 2 pod pin pozy rzad 1
;PCODE: $000040E2 VOL: 0
;PCODE: $000040E3 VOL: 0
;PCODE: $000040E4 VOL: 0
;PCODE: $000040E5 VOL: 0
; 0000 1DA8 
; 0000 1DA9                                     if(cykl_sterownik_1 == 5 & cykl_sterownik_2 == 5)
;PCODE: $000040E6 VOL: 0
;PCODE: $000040E7 VOL: 0
;PCODE: $000040E8 VOL: 0
;PCODE: $000040E9 VOL: 0
;PCODE: $000040EA VOL: 0
;PCODE: $000040EB VOL: 0
;PCODE: $000040EC VOL: 0
;PCODE: $000040ED VOL: 0
;PCODE: $000040EE VOL: 0
;PCODE: $000040EF VOL: 0
; 0000 1DAA                                         {
; 0000 1DAB                                         cykl_sterownik_1 = 0;
;PCODE: $000040F0 VOL: 0
;PCODE: $000040F1 VOL: 0
; 0000 1DAC                                         cykl_sterownik_2 = 0;
;PCODE: $000040F2 VOL: 0
;PCODE: $000040F3 VOL: 0
; 0000 1DAD                                         cykl_sterownik_3 = 0;
;PCODE: $000040F4 VOL: 0
;PCODE: $000040F5 VOL: 0
; 0000 1DAE                                         cykl_sterownik_4 = 0;
;PCODE: $000040F6 VOL: 0
;PCODE: $000040F7 VOL: 0
; 0000 1DAF                                         jestem_w_trakcie_czyszczenia_calosci = 0;
;PCODE: $000040F8 VOL: 0
;PCODE: $000040F9 VOL: 0
; 0000 1DB0                                         start = 0;
;PCODE: $000040FA VOL: 0
; 0000 1DB1                                         cykl_glowny = 0;
;PCODE: $000040FB VOL: 0
;PCODE: $000040FC VOL: 0
; 0000 1DB2                                         }
; 0000 1DB3 
; 0000 1DB4 
; 0000 1DB5 
; 0000 1DB6 
; 0000 1DB7             break;
;PCODE: $000040FD VOL: 0
;PCODE: $000040FE VOL: 0
; 0000 1DB8 
; 0000 1DB9 
; 0000 1DBA 
; 0000 1DBB             }//switch
;PCODE: $000040FF VOL: 0
; 0000 1DBC 
; 0000 1DBD 
; 0000 1DBE   }//while
;PCODE: $00004100 VOL: 0
;PCODE: $00004101 VOL: 0
; 0000 1DBF }//while glowny
;PCODE: $00004102 VOL: 0
;PCODE: $00004103 VOL: 0
; 0000 1DC0 
; 0000 1DC1 }//koniec
;PCODE: $00004104 VOL: 0
;PCODE: $00004105 VOL: 0
;PCODE: $00004106 VOL: 0
;
;
;
;
;/*
;case 0:
;
;
;                    PORTB.6 = 1;   ////zielona lampka
;                    if(jestem_w_trakcie_czyszczenia_calosci == 0)
;                        {
;                        wartosc_parametru_panelu(0,0,16);  //wykonano zaciskow rzad1
;                        wartosc_parametru_panelu(0,0,96);  //wykonano zaciskow rzad2
;
;                        il_zaciskow_rzad_1 = odczytaj_parametr(0,128);
;                        il_zaciskow_rzad_2 = odczytaj_parametr(0,48);
;
;                        szczotka_druciana_ilosc_cykli = odczytaj_parametr(48,64);
;                                                //2090
;                        krazek_scierny_ilosc_cykli = odczytaj_parametr(32,144);
;                                                    //3000
;                        krazek_scierny_cykl_po_okregu_ilosc = odczytaj_parametr(48,0);
;
;                        predkosc_pion_szczotka = odczytaj_parametr(32,80);
;                                                //2060
;                        predkosc_pion_krazek = odczytaj_parametr(32,96);
;
;                        wejscie_krazka_sciernego_w_pow_boczna_cylindra = odczytaj_parametr(48,16);
;
;                        predkosc_ruchow_po_okregu_krazek_scierny = odczytaj_parametr(32,112);
;
;                        if(il_zaciskow_rzad_2 > 0 & macierz_zaciskow[2]!=0)
;                              il_zaciskow_rzad_2 = il_zaciskow_rzad_2;
;                        else
;                              il_zaciskow_rzad_2 = 0;
;
;                        wybor_linijek_sterownikow(1);  //rzad 1
;                        }
;
;                    jestem_w_trakcie_czyszczenia_calosci = 1;
;
;                    if(rzad_obrabiany == 1)
;                    {
;                    PORTE.6 = 0;    //przelacz rzad zaciskow - rzad 1
;                    if(cykl_sterownik_1 < 5)
;                        cykl_sterownik_1 = sterownik_1_praca(0x009);
;                    if(cykl_sterownik_2 < 5)                                //ster 1 do 0
;                        cykl_sterownik_2 = sterownik_2_praca(0x000);       //ster 2 pod pin pozy rzad 1
;                    }
;
;                    if(rzad_obrabiany == 2)
;                    {
;                    ostateczny_wybor_zacisku();
;                    //PORTE.6 = 1;    //przelacz rzad zaciskow - rzad 2 - na razie nie bo nie ma jeszcze oslon
;
;                    if(cykl_sterownik_1 < 5)
;                        cykl_sterownik_1 = sterownik_1_praca(0x008);
;                    if(cykl_sterownik_2 < 5)                                //ster 1 do 0
;                        cykl_sterownik_2 = sterownik_2_praca(0x001);       //ster 2 pod pin pozy rzad 2
;                    }
;
;
;                    if(cykl_sterownik_1 == 5 & cykl_sterownik_2 == 5)
;                        {
;
;                          if(rzad_obrabiany == 2)
;                            {
;                            while(PORTE.6 == 0)
;                                przerzucanie_dociskow();
;                            delay_ms(3000);  //czas na przerzucenie
;                            }
;
;                        cykl_sterownik_1 = 0;
;                        cykl_sterownik_2 = 0;
;                        cykl_sterownik_3 = 0;
;                        cykl_sterownik_4 = 0;
;                        cykl_ilosc_zaciskow = 0;
;                        koniec_rzedu_10 = 0;
;
;
;                        if(rzad_obrabiany == 1)
;                             {
;                             while(sprawdz_pin0(PORTMM,0x77) == 1)
;                                {
;                                }
;                             cykl_glowny = 1;
;                             }
;
;                        if(rzad_obrabiany == 2)
;                             {
;                             while(sprawdz_pin1(PORTMM,0x77) == 1)
;                                {
;                                }
;                             cykl_glowny = 1;
;                             }
;                        }
;
;            break;
;
;
;
;            case 1:
;
;
;                     if(cykl_sterownik_2 < 5 & rzad_obrabiany == 1)
;                          {          //ster 1 nic
;                          PORTE.7 = 1;   //zacisnij zaciski
;                          cykl_sterownik_2 = sterownik_2_praca(a[0]);        //ster 2 pod zacisk
;                          }                                                    //ster 4 na pozycje miedzy rzedzami
;
;                     if(cykl_sterownik_2 < 5 & rzad_obrabiany == 2)
;                        {
;                          PORTE.7 = 1;   //zacisnij zaciski
;                          ostateczny_wybor_zacisku();
;                          cykl_sterownik_2 = sterownik_2_praca(a[1]);
;                         }
;                     if(cykl_sterownik_4 < 5 & cykl_sterownik_2 == 5)
;                        cykl_sterownik_4 = sterownik_4_praca(0x01);
;
;                      if(cykl_sterownik_2 == 5 & cykl_sterownik_4 == 5)
;                        {
;                        cykl_sterownik_1 = 0;
;                        cykl_sterownik_2 = 0;
;                        cykl_sterownik_4 = 0;
;                        szczotka_druc_cykl = 0;
;
;
;                        if(rzad_obrabiany == 1)
;                             {
;                             while(sprawdz_pin0(PORTMM,0x77) == 1)
;                                {
;                                }
;                             cykl_glowny = 2;
;                             }
;
;                        if(rzad_obrabiany == 2)
;                             {
;                             while(sprawdz_pin1(PORTMM,0x77) == 1)
;                                {
;                                }
;                             cykl_glowny = 2;
;                             }
;
;                        }
;
;
;            break;
;
;
;            case 2:
;                    if(rzad_obrabiany == 2)
;                        ostateczny_wybor_zacisku();
;
;                    if(cykl_sterownik_4 < 5)
;                          cykl_sterownik_4 = sterownik_4_praca(a[2]);
;                    if(cykl_sterownik_4 == 5)
;                        {
;                        PORTE.2 = 1;  //wlacz szlifierke
;                        PORTB.4 = 1;   //przedmuch osi
;                        cykl_sterownik_4 = 0;
;                        if(rzad_obrabiany == 1)
;                             {
;                             while(sprawdz_pin0(PORTMM,0x77) == 1)
;                                {
;                                }
;                             cykl_glowny = 3;
;                             }
;
;                        if(rzad_obrabiany == 2)
;                             {
;                             while(sprawdz_pin1(PORTMM,0x77) == 1)
;                                {
;                                }
;                             cykl_glowny = 3;
;                             }
;                        }
;
;            break;
;
;
;            case 3:
;
;                     if(rzad_obrabiany == 2)
;                        ostateczny_wybor_zacisku();
;
;                    if(cykl_sterownik_4 < 5)
;                         cykl_sterownik_4 = sterownik_4_praca(a[3]); //INV
;
;                    if(cykl_sterownik_4 == 5 & szczotka_druc_cykl < szczotka_druciana_ilosc_cykli)
;                        {
;                        szczotka_druc_cykl++;
;                        cykl_sterownik_4 = 0;
;
;                        if(szczotka_druc_cykl == szczotka_druciana_ilosc_cykli)
;                            {
;                            if(rzad_obrabiany == 1)
;                             {
;                             while(sprawdz_pin0(PORTMM,0x77) == 1)
;                                {
;                                }
;                             cykl_glowny = 4;
;                             }
;
;                            if(rzad_obrabiany == 2)
;                             {
;                             while(sprawdz_pin1(PORTMM,0x77) == 1)
;                                {
;                                }
;                             cykl_glowny = 4;
;                             }
;                            }
;                        else
;                            {
;                            if(rzad_obrabiany == 1)
;                             {
;                             while(sprawdz_pin0(PORTMM,0x77) == 1)
;                                {
;                                }
;                             cykl_glowny = 2;
;                             }
;
;                        if(rzad_obrabiany == 2)
;                             {
;                             while(sprawdz_pin1(PORTMM,0x77) == 1)
;                                {
;                                }
;                             cykl_glowny = 2;
;                             }
;
;                            }
;                        }
;
;
;
;            break;
;
;            case 4:
;
;
;                      if(rzad_obrabiany == 2)
;                            ostateczny_wybor_zacisku();
;
;                     if(cykl_sterownik_4 < 5)
;                        cykl_sterownik_4 = sterownik_4_praca(0x01);
;
;                     if(cykl_sterownik_4 == 5)
;                        {
;                        PORTE.2 = 0;  //wylacz szlifierke
;                        PORTB.4 = 0;  //wylacz przedmuch osi
;                        cykl_sterownik_4 = 0;
;                        if(rzad_obrabiany == 1)
;                             {
;                             while(sprawdz_pin0(PORTMM,0x77) == 1)
;                                {
;                                }
;                             cykl_glowny = 5;
;                             }
;
;                        if(rzad_obrabiany == 2)
;                             {
;                             while(sprawdz_pin1(PORTMM,0x77) == 1)
;                                {
;                                }
;                             cykl_glowny = 5;
;                             }
;                        }
;            break;
;
;            case 5:
;
;
;                    if(cykl_sterownik_1 < 5 & ruch_zlozony == 0 & rzad_obrabiany == 1)
;                        cykl_sterownik_1 = sterownik_1_praca(0x000);
;                    if(cykl_sterownik_1 < 5 & ruch_zlozony == 0 & rzad_obrabiany == 2)
;                        cykl_sterownik_1 = sterownik_1_praca(0x001);
;
;                     if(rzad_obrabiany == 2)
;                        ostateczny_wybor_zacisku();
;
;                    if(cykl_sterownik_1 == 5 & ruch_zlozony == 0)
;                        {
;                        cykl_sterownik_1 = 0;
;                        ruch_zlozony = 1;
;                        }
;
;                    if(cykl_sterownik_1 < 5 & ruch_zlozony == 1 & rzad_obrabiany == 1)
;                        cykl_sterownik_1 = sterownik_1_praca(a[0]);
;                    if(cykl_sterownik_1 < 5 & ruch_zlozony == 1 & rzad_obrabiany == 2)
;                          cykl_sterownik_1 = sterownik_1_praca(a[1]);
;
;
;                    if(cykl_sterownik_1 < 5 & ruch_zlozony == 2)
;                        cykl_sterownik_1 = sterownik_1_praca(0x003);    //ster 1 do pierwszego dolka
;
;                    if(cykl_sterownik_2 < 5 & koniec_rzedu_10 == 0)
;                        cykl_sterownik_2 = sterownik_2_praca(0x003);       //ster 2 pod nastpeny dolek
;
;
;                    if(cykl_sterownik_2 < 5 & koniec_rzedu_10 == 1 & rzad_obrabiany == 1)
;                        cykl_sterownik_2 = sterownik_2_praca(0x008);      //ster 2 do samego tylu
;                     if(cykl_sterownik_2 < 5 & koniec_rzedu_10 == 1 & rzad_obrabiany == 2)
;                        cykl_sterownik_2 = sterownik_2_praca(0x009);      //ster 2 do samego tylu
;
;                    if((cykl_sterownik_1 == 5 & cykl_sterownik_2 == 5 & ruch_zlozony == 1) | (cykl_sterownik_1 == 5 & cykl_sterownik_2 == 5) & ruch_zlozony == 2)
;                        {
;                        cykl_sterownik_1 = 0;
;                        cykl_sterownik_2 = 0;
;                        cykl_sterownik_4 = 0;
;                        cykl_sterownik_3 = 0;
;                        if(rzad_obrabiany == 1)
;                             {
;                             while(sprawdz_pin0(PORTMM,0x77) == 1)
;                                {
;                                }
;                             cykl_glowny = 6;
;                             }
;
;                        if(rzad_obrabiany == 2)
;                             {
;                             while(sprawdz_pin1(PORTMM,0x77) == 1)
;                                {
;                                }
;                             cykl_glowny = 6;
;                             }
;                        }
;
;            break;
;
;
;
;           case 6:
;
;
;
;
;                    if(cykl_sterownik_3 < 5)
;                        cykl_sterownik_3 = sterownik_3_praca(a[4]);  //abs //krazek scierny do gory
;
;                    if(koniec_rzedu_10 == 1)
;                        cykl_sterownik_4 = 5;
;
;                    if(cykl_sterownik_4 < 5)
;                        cykl_sterownik_4 = sterownik_4_praca(a[2]);    //ABS          //druciak do gory
;
;                     if(rzad_obrabiany == 2)
;                        ostateczny_wybor_zacisku();
;
;
;                    if(cykl_sterownik_4 == 5 & cykl_sterownik_3 == 5)
;                        {
;                        if((cykl_ilosc_zaciskow != il_zaciskow_rzad_1 - 1 & rzad_obrabiany == 1) | (cykl_ilosc_zaciskow != il_zaciskow_rzad_2 - 1 & rzad_obrabiany == 2))
;                            PORTE.2 = 1;  //wlacz szlifierke
;                        PORTB.4 = 1;  //przedmuch osi
;                        PORTE.3 = 1;  //szlifierka 2 (krazek scierny)
;                        cykl_sterownik_3 = 0;
;                        cykl_sterownik_4 = 0;
;                        if(cykl_ilosc_zaciskow > 0)
;                                {
;                                sek12 = 0;    //do przedmuchu
;                                PORT_F.bits.b4 = 1;  //przedmuch zaciskow
;                                PORTF = PORT_F.byte;
;                                }
;                        if(rzad_obrabiany == 1)
;                             {
;                             while(sprawdz_pin0(PORTMM,0x77) == 1)
;                                {
;                                }
;                             cykl_glowny = 7;
;                             }
;
;                        if(rzad_obrabiany == 2)
;                             {
;                             while(sprawdz_pin1(PORTMM,0x77) == 1)
;                                {
;                                }
;                             cykl_glowny = 7;
;                             }
;                        }
;
;           break;
;
;
;           case 7:
;                                                                                              //mini ruch do przygotowania do okregu
;                    if(cykl_sterownik_1 < 5)
;                          cykl_sterownik_1 = sterownik_1_praca(a[5]);
;
;                     if(rzad_obrabiany == 2)
;                        ostateczny_wybor_zacisku();
;
;                    if(cykl_sterownik_1 == 5)
;                        {
;                        cykl_sterownik_1 = 0;
;
;                        szczotka_druc_cykl = 0;
;                        krazek_scierny_cykl_po_okregu = 0;
;                        wykonalem_komplet_okregow = 0;
;                        abs_ster3 = 0;
;                        abs_ster4 = 0;
;                        if(rzad_obrabiany == 1)
;                             {
;                             while(sprawdz_pin0(PORTMM,0x77) == 1)
;                                {
;                                }
;                             cykl_glowny = 8;
;                             }
;
;                        if(rzad_obrabiany == 2)
;                             {
;                             while(sprawdz_pin1(PORTMM,0x77) == 1)
;                                {
;                                }
;                             cykl_glowny = 8;
;                             }
;                        }
;
;
;
;           break;
;
;
;            case 8:
;
;                    if(sek12 > czas_przedmuchu)
;                        {
;                        PORT_F.bits.b4 = 0;  //przedmuch zaciskow
;                        PORTF = PORT_F.byte;
;                        }
;
;
;                     if(rzad_obrabiany == 2)
;                        ostateczny_wybor_zacisku();
;
;                    if(cykl_sterownik_1 < 5 & krazek_scierny_cykl_po_okregu < krazek_scierny_cykl_po_okregu_ilosc &  wykonalem_komplet_okregow == 0)
;                          cykl_sterownik_1 = sterownik_1_praca(a[6]);
;
;                    if(cykl_sterownik_1 == 5 & krazek_scierny_cykl_po_okregu < krazek_scierny_cykl_po_okregu_ilosc &  wykonalem_komplet_okregow == 0)
;                        {
;                        cykl_sterownik_1 = 0;
;                        krazek_scierny_cykl_po_okregu++;
;                        }
;
;                    if(krazek_scierny_cykl_po_okregu == krazek_scierny_cykl_po_okregu_ilosc &  wykonalem_komplet_okregow == 0)
;                        {
;                        cykl_sterownik_1 = 0;
;                        wykonalem_komplet_okregow = 1;
;                        }
;
;                    if(koniec_rzedu_10 == 1)
;                        cykl_sterownik_4 = 5;
;
;                    if(cykl_sterownik_4 < 5 & abs_ster4 == 0)
;                         cykl_sterownik_4 = sterownik_4_praca(a[3]); //INV               //szczotka druc
;
;                    if(cykl_sterownik_4 == 5 & szczotka_druc_cykl < szczotka_druciana_ilosc_cykli)
;                        {
;                        if(koniec_rzedu_10 == 0)
;                            cykl_sterownik_4 = 0;
;                        if(abs_ster4 == 0)
;                            {
;                            szczotka_druc_cykl++;
;                            abs_ster4 = 1;
;                            }
;                        else
;                            abs_ster4 = 0;
;                        }
;
;                    if(cykl_sterownik_3 < 5 & abs_ster3 == 0)
;                         cykl_sterownik_3 = sterownik_3_praca(a[7]); //INV
;
;
;                    if(cykl_sterownik_3 == 5 & krazek_scierny_cykl < krazek_scierny_ilosc_cykli)
;                        {
;
;                         cykl_sterownik_3 = 0;
;                        if(abs_ster3 == 0)
;                            {
;                            krazek_scierny_cykl++;
;                            abs_ster3 = 1;
;                            }
;                        else
;                            abs_ster3 = 0;
;                        }
;
;                    if(cykl_sterownik_3 < 5 & abs_ster3 == 1)
;                        cykl_sterownik_3 = sterownik_3_praca(a[4]);  //ABS          //krazek scierny do gory
;
;                    if(cykl_sterownik_4 < 5 & abs_ster4 == 1)
;                        cykl_sterownik_4 = sterownik_4_praca(a[2]);  //ABS          //druciak do gory
;
;                                                                                           //mini ruch powrotny do okregu, zeby nie szorowal
;                    if(cykl_sterownik_1 < 5 & wykonalem_komplet_okregow == 1)
;                         cykl_sterownik_1 = sterownik_1_praca(a[8]);
;
;
;                    if(cykl_sterownik_1 == 5 & wykonalem_komplet_okregow == 1 &
;                       szczotka_druc_cykl == szczotka_druciana_ilosc_cykli &
;                       krazek_scierny_cykl == krazek_scierny_ilosc_cykli &
;                       cykl_sterownik_3 == 5 & cykl_sterownik_4 == 5)
;                        {
;                        cykl_sterownik_1 = 0;
;                        cykl_sterownik_2 = 0;
;                        cykl_sterownik_3 = 0;
;                        cykl_sterownik_4 = 0;
;                        szczotka_druc_cykl = 0;
;                        krazek_scierny_cykl = 0;
;                        krazek_scierny_cykl_po_okregu = 0;
;                        PORT_F.bits.b4 = 0;  //przedmuch zaciskow wylacz
;                        PORTF = PORT_F.byte;
;
;
;                        if(rzad_obrabiany == 1)
;                             {
;                             while(sprawdz_pin0(PORTMM,0x77) == 1)
;                                {
;                                }
;                             cykl_glowny = 9;
;                             }
;
;                        if(rzad_obrabiany == 2)
;                             {
;                             while(sprawdz_pin1(PORTMM,0x77) == 1)
;                                {
;                                }
;                             cykl_glowny = 9;
;                             }
;
;
;                        }
;
;                                                                                                //ster 1 - ruch po okregu
;                                                                                                //ster 2 - nic
;                                                                                                //ster 3 - krazek - gora dol
;                                                                                                //ster 4 - druciak - gora dol
;
;            break;
;
;
;            case 9:                                          //cykl 3 == 5
;
;
;                         if(rzad_obrabiany == 1)
;                         {
;                         if(cykl_sterownik_3 < 5 & cykl_ilosc_zaciskow != il_zaciskow_rzad_1 - 1)
;                              cykl_sterownik_3 = sterownik_3_praca(0x01);  //do pozycji bazowej
;
;
;                          if(cykl_sterownik_4 < 5 & cykl_ilosc_zaciskow < il_zaciskow_rzad_1 - 2)
;                            cykl_sterownik_4 = sterownik_4_praca(0x01);  //do pozycji bazowej
;
;
;                         if(cykl_sterownik_3 < 5 & cykl_ilosc_zaciskow == il_zaciskow_rzad_1 - 1)       //2 marca 2019 wykomentowuje
;                            cykl_sterownik_3 = sterownik_3_praca(0x00);  //na sam dol, jedziemy miedzy rzedami
;
;
;                         if(cykl_sterownik_4 < 5 & cykl_ilosc_zaciskow >= il_zaciskow_rzad_1 - 2)
;                            cykl_sterownik_4 = sterownik_4_praca(0x00);  //na sam dol, jedziemy miedzy rzedami
;
;                          }
;
;
;                         if(rzad_obrabiany == 2)
;                         {
;                         if(cykl_sterownik_3 < 5 & cykl_ilosc_zaciskow != il_zaciskow_rzad_2 - 1)
;                            cykl_sterownik_3 = sterownik_3_praca(0x01);  //do pozycji bazowej
;
;                          if(cykl_sterownik_4 < 5 & cykl_ilosc_zaciskow < il_zaciskow_rzad_2 - 2)
;                            cykl_sterownik_4 = sterownik_4_praca(0x01);  //do pozycji bazowej
;
;                         if(cykl_sterownik_3 < 5 & cykl_ilosc_zaciskow == il_zaciskow_rzad_2 - 1)
;                            cykl_sterownik_3 = sterownik_3_praca(0x00);  //na sam dol, jedziemy miedzy rzedami
;
;
;                          if(cykl_sterownik_4 < 5 & cykl_ilosc_zaciskow >= il_zaciskow_rzad_2 - 2)
;                            cykl_sterownik_4 = sterownik_4_praca(0x00);  //na sam dol, jedziemy miedzy rzedami
;
;                           if(rzad_obrabiany == 2)
;                            ostateczny_wybor_zacisku();
;
;                          }
;
;
;                          if(cykl_sterownik_3 == 5 & cykl_sterownik_4 == 5)
;                            {
;                            PORTE.2 = 0;  //wylacz szlifierke
;                            PORTE.3 = 0;  //szlifierka 2 (krazek scierny)
;                            PORTB.4 = 0;  //wylacz przedmuchy
;                            cykl_sterownik_4 = 0;
;                            cykl_sterownik_3 = 0;
;                            cykl_ilosc_zaciskow++;
;                            ruch_zlozony = 2;                       //il_zaciskow_rzad_1
;
;
;                            if(rzad_obrabiany == 1)
;                             {
;                             while(sprawdz_pin0(PORTMM,0x77) == 1)
;                                {
;                                }
;                             cykl_glowny = 10;
;                             }
;
;                        if(rzad_obrabiany == 2)
;                             {
;                             while(sprawdz_pin1(PORTMM,0x77) == 1)
;                                {
;                                }
;                             cykl_glowny = 10;
;                             }
;
;
;                            }
;
;
;            break;
;*/
;
;
;
;
;
;/*
;case 10:
;
;                                               //wywali ten warunek jak zadziala
;                     if(rzad_obrabiany == 1 & cykl_glowny != 0)
;                            {
;                            wartosc_parametru_panelu(cykl_ilosc_zaciskow,0,16);  //wykonano zaciskow rzad1
;                            if(cykl_ilosc_zaciskow <  il_zaciskow_rzad_1 - 1)
;                                {
;                                cykl_glowny = 5;
;                                koniec_rzedu_10 = 0;
;                                }
;
;                            if(cykl_ilosc_zaciskow == il_zaciskow_rzad_1 - 1)
;                                {
;                                cykl_glowny = 5;
;                                koniec_rzedu_10 = 1;
;                                }
;
;                            if(cykl_ilosc_zaciskow == il_zaciskow_rzad_1 & il_zaciskow_rzad_1 == 10)
;                                {
;                                cykl_glowny = 11;
;                                }
;
;                             if(cykl_ilosc_zaciskow == il_zaciskow_rzad_1 & il_zaciskow_rzad_1 != 10)  /////zmieniam + 1 20.02
;                                {
;                                cykl_glowny = 14;
;                                }
;                            }
;
;
;                             if(rzad_obrabiany == 2)
;                                ostateczny_wybor_zacisku();
;
;                            if(rzad_obrabiany == 2 & cykl_glowny != 0)
;                            {
;                            wartosc_parametru_panelu(cykl_ilosc_zaciskow,0,96);  //wykonano zaciskow rzad1
;                            if(cykl_ilosc_zaciskow <  il_zaciskow_rzad_2 - 1)
;                                {
;                                cykl_glowny = 5;
;                                koniec_rzedu_10 = 0;
;                                }
;
;                            if(cykl_ilosc_zaciskow == il_zaciskow_rzad_2 - 1)
;                                {
;                                cykl_glowny = 5;
;                                koniec_rzedu_10 = 1;
;                                }
;
;                            if(cykl_ilosc_zaciskow == il_zaciskow_rzad_2 & il_zaciskow_rzad_2 == 10)
;                                {
;                                cykl_glowny = 12;
;                                }
;
;
;                             if(cykl_ilosc_zaciskow == il_zaciskow_rzad_2 & il_zaciskow_rzad_2 != 10)   ///////////////////zmieniam + 1 20.02
;                                {
;                                cykl_glowny = 14;
;                                }
;                            }
;
;
;
;            break;
;
;
;
;            case 11:
;
;                              if(rzad_obrabiany == 2)
;                                ostateczny_wybor_zacisku();
;
;                             //ster 1 ucieka od szafy
;                             if(cykl_sterownik_1 < 5)
;                                    cykl_sterownik_1 = sterownik_1_praca(0x007);     //uciekamy do tylu
;
;                             if(cykl_sterownik_2 < 5)
;                                    cykl_sterownik_2 = sterownik_2_praca(0x190);     //pod dolek ostatni 10 do przedmuchu rzad 1
;
;                             if(cykl_sterownik_1 == 5 & cykl_sterownik_2 == 5)
;                                    {
;                                    PORT_F.bits.b4 = 1;  //przedmuch zaciskow
;                                    PORTF = PORT_F.byte;
;                                    cykl_sterownik_1 = 0;
;                                    cykl_sterownik_2 = 0;
;
;                                    if(rzad_obrabiany == 1)
;                                    {
;                                        while(sprawdz_pin0(PORTMM,0x77) == 1)
;                                            {
;                                            }
;                                    cykl_glowny = 13;
;                                    }
;
;                                    if(rzad_obrabiany == 2)
;                                    {
;                                    while(sprawdz_pin1(PORTMM,0x77) == 1)
;                                        {
;                                        }
;                                        cykl_glowny = 13;
;                                    }
;
;
;
;
;                                    }
;            break;
;
;
;            case 12:
;
;                             if(rzad_obrabiany == 2)
;                                ostateczny_wybor_zacisku();
;
;                               //ster 1 ucieka od szafy
;                             if(cykl_sterownik_1 < 5)
;                                    cykl_sterownik_1 = sterownik_1_praca(0x007);     //uciekamy do tylu
;
;                            if(cykl_sterownik_2 < 5)
;                                    cykl_sterownik_2 = sterownik_2_praca(0x191);     //pod dolek ostatni 10 do przedmuchu rzad 2
;
;                             if(cykl_sterownik_1 == 5 & cykl_sterownik_2 == 5)
;                                    {
;                                    PORT_F.bits.b4 = 1;  //przedmuch zaciskow
;                                    PORTF = PORT_F.byte;
;                                    cykl_sterownik_1 = 0;
;                                    cykl_sterownik_2 = 0;
;
;                                    if(rzad_obrabiany == 1)
;                                    {
;                                        while(sprawdz_pin0(PORTMM,0x77) == 1)
;                                            {
;                                            }
;                                    cykl_glowny = 13;
;                                    }
;
;                                    if(rzad_obrabiany == 2)
;                                    {
;                                    while(sprawdz_pin1(PORTMM,0x77) == 1)
;                                        {
;                                        }
;                                        cykl_glowny = 13;
;                                    }
;
;
;
;                                    }
;
;
;            break;
;
;
;
;            case 13:
;
;
;                              if(rzad_obrabiany == 2)
;                                ostateczny_wybor_zacisku();
;
;                             if(cykl_sterownik_2 < 5)
;                                    cykl_sterownik_2 = sterownik_2_praca(0x192);     //okrag
;                             if(cykl_sterownik_2 == 5)
;                                    {
;                                    PORT_F.bits.b4 = 0;  //przedmuch zaciskow - wylaczenie
;                                    PORTF = PORT_F.byte;
;                                    cykl_sterownik_2 = 0;
;
;
;                                    if(rzad_obrabiany == 1)
;                                    {
;                                        while(sprawdz_pin0(PORTMM,0x77) == 1)
;                                            {
;                                            }
;                                    cykl_glowny = 16;
;                                    }
;
;                                    if(rzad_obrabiany == 2)
;                                    {
;                                    while(sprawdz_pin1(PORTMM,0x77) == 1)
;                                        {
;                                        }
;                                        cykl_glowny = 16;
;                                    }
;
;
;
;                                    }
;
;            break;
;
;
;
;            case 14:
;
;
;                     if(rzad_obrabiany == 2)
;                        ostateczny_wybor_zacisku();
;
;                    if(cykl_sterownik_1 < 5)
;                        cykl_sterownik_1 = sterownik_1_praca(0x003);     //pod nastepny dolek zeby przedmuchac
;                    if(cykl_sterownik_1 == 5)
;                        {
;                        cykl_sterownik_1 = 0;
;                        sek12 = 0;
;
;                        if(rzad_obrabiany == 1)
;                                    {
;                                        while(sprawdz_pin0(PORTMM,0x77) == 1)
;                                            {
;                                            }
;                                    cykl_glowny = 15;
;                                    }
;
;                                    if(rzad_obrabiany == 2)
;                                    {
;                                    while(sprawdz_pin1(PORTMM,0x77) == 1)
;                                        {
;                                        }
;                                        cykl_glowny = 15;
;                                    }
;
;
;
;
;
;                        }
;
;            break;
;
;
;
;            case 15:
;
;                     if(rzad_obrabiany == 2)
;                        ostateczny_wybor_zacisku();
;
;                    //przedmuch
;                    PORT_F.bits.b4 = 1;  //przedmuch zaciskow
;                    PORTF = PORT_F.byte;
;                    if(sek12 > czas_przedmuchu)
;                        {
;                        PORT_F.bits.b4 = 0;  //przedmuch zaciskow
;                        PORTF = PORT_F.byte;
;
;                        if(rzad_obrabiany == 1)
;                                    {
;                                        while(sprawdz_pin0(PORTMM,0x77) == 1)
;                                            {
;                                            }
;                                    cykl_glowny = 16;
;                                    }
;
;                                    if(rzad_obrabiany == 2)
;                                    {
;                                    while(sprawdz_pin1(PORTMM,0x77) == 1)
;                                        {
;                                        }
;                                        cykl_glowny = 16;
;                                    }
;
;
;
;
;                        }
;            break;
;
;
;            case 16:
;
;                     if(cykl_ilosc_zaciskow == il_zaciskow_rzad_1 & wykonalem_rzedow == 0)  /////zmieniam + 1 20.02
;                                {
;                                cykl_ilosc_zaciskow = 0;
;                                PORTE.7 = 0;   //pusc zaciski
;                                if(il_zaciskow_rzad_2 > 0)
;                                    {
;
;                                    rzad_obrabiany = 2;
;                                    wybor_linijek_sterownikow(2);  //rzad 2
;                                    cykl_glowny = 0;
;                                    }
;                                else
;                                    cykl_glowny = 17;
;
;                                wykonalem_rzedow = 1;
;                                }
;
;                       if(cykl_ilosc_zaciskow == il_zaciskow_rzad_2 & il_zaciskow_rzad_2 > 0 & wykonalem_rzedow == 1)   ///////////////////zmieniam + 1 20.02
;                                {
;                                PORTE.7 = 0;   //pusc zaciski
;                                cykl_ilosc_zaciskow = 0;
;                                cykl_glowny = 17;
;                                rzad_obrabiany = 1;
;                                wykonalem_rzedow = 2;
;                                }
;
;
;
;
;                        if(il_zaciskow_rzad_1 > 0 & il_zaciskow_rzad_2 > 0 & wykonalem_rzedow == 2)
;                                  {
;                                  rzad_obrabiany = 1;
;                                  wykonalem_rzedow = 0;
;                                  PORTE.7 = 0;   //pusc zaciski
;                                  //PORTE.6 = 0;    //przelacz rzad zaciskow - rzad 1 - tego na razie nie poki nie ma oslon
;                                  PORTB.6 = 0;   ////zielona lampka
;                                  wartosc_parametru_panelu(0,0,64);
;                                  }
;
;                            if(il_zaciskow_rzad_1 > 0 & il_zaciskow_rzad_2 == 0 & wykonalem_rzedow == 1)
;                                  {
;                                  rzad_obrabiany = 1;
;                                  wykonalem_rzedow = 0;
;                                  PORTE.6 = 1;    //przelacz rzad zaciskow - rzad 2
;                                  PORTB.6 = 0;   ////zielona lampka
;                                  wartosc_parametru_panelu(0,0,64);
;                                  }
;
;
;
;            break;
;
;
;            case 17:
;
;
;                                 if(cykl_sterownik_1 < 5)
;                                    cykl_sterownik_1 = sterownik_1_praca(0x009);
;                                 if(cykl_sterownik_2 < 5)                                //ster 1 do 0
;                                    cykl_sterownik_2 = sterownik_2_praca(0x000);       //ster 2 pod pin pozy rzad 1
;
;                                    if(cykl_sterownik_1 == 5 & cykl_sterownik_2 == 5)
;                                        {
;                                        cykl_sterownik_1 = 0;
;                                        cykl_sterownik_2 = 0;
;                                        cykl_sterownik_3 = 0;
;                                        cykl_sterownik_4 = 0;
;                                        jestem_w_trakcie_czyszczenia_calosci = 0;
;                                        start = 0;
;                                        cykl_glowny = 0;
;                                        }
;
;
;
;
;            break;
;*/
