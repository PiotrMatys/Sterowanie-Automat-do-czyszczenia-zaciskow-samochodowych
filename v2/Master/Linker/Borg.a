;/*****************************************************
;This program was produced by the
;CodeWizardAVR V2.05.0 Professional
;Automatic Program Generator
;© Copyright 1998-2010 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 2018-08-31
;Author  :
;Company :
;Comments:
;
;
;Chip type               : ATmega128
;Program type            : Application
;AVR Core Clock frequency: 16,000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 1024
;*****************************************************/
;
;#include <io.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x1C
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x18
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x14
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x1C
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x08
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;#define DATA_REGISTER_EMPTY (1<<UDRE0)
;#define RX_COMPLETE (1<<RXC0)
;#define FRAMING_ERROR (1<<FE0)
;#define PARITY_ERROR (1<<UPE0)
;#define DATA_OVERRUN (1<<DOR0)
;
;// Get a character from the USART1 Receiver
;#pragma used+
;char getchar1(void)
; 0000 0023 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0024 unsigned char status;
; 0000 0025 char data;
; 0000 0026 while (1)
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;	status -> R17
;	data -> R16
;PCODE: $00000011 VOL: 0
; 0000 0027       {
; 0000 0028       while (((status=UCSR1A) & RX_COMPLETE)==0);
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 0029       data=UDR1;
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 002A       if ((status & (FRAMING_ERROR | PARITY_ERROR | DATA_OVERRUN))==0)
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 002B          return data;
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 002C       }
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 002D }
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;#pragma used-
;
;// Write a character to the USART1 Transmitter
;#pragma used+
;void putchar1(char c)
; 0000 0033 {
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 0034 while ((UCSR1A & DATA_REGISTER_EMPTY)==0);
;	c -> Y+0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 0035 UDR1=c;
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 0036 }
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;#pragma used-
;
;
;
;#include <mega128.h>
;#include <delay.h>
;#include <string.h>
;#include <stdlib.h>
;#include <math.h>
;#include <stdio.h>
;
;// I2C Bus functions
;#asm
;PCODE: $00000034 VOL: 0
   .equ __i2c_port=0x12 ;PORTD
;PCODE: $00000035 VOL: 0
   .equ __sda_bit=1
;PCODE: $00000036 VOL: 0
   .equ __scl_bit=0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 0047 #endasm
;#include <i2c.h>
;
;
;typedef union{
;   struct{
;      unsigned char b0:1;
;      unsigned char b1:1;
;      unsigned char b2:1;
;      unsigned char b3:1;
;      unsigned char b4:1;
;      unsigned char b5:1;
;      unsigned char b6:1;
;      unsigned char b7:1;
;   }bits;
;   unsigned char byte;
;}BB;
;
;
;typedef union{
;   struct{
;      unsigned char b0:1;
;      unsigned char b1:1;
;      unsigned char b2:1;
;      unsigned char b3:1;
;      unsigned char b4:1;
;      unsigned char b5:1;
;   }bits;
;   unsigned char byte;
;}CC;
;
;typedef union{
;   struct{
;      unsigned char b0:1;
;      unsigned char b1:1;
;      unsigned char b2:1;
;      unsigned char b3:1;
;      unsigned char b4:1;
;      unsigned char b5:1;
;      unsigned char b6:1;
;      unsigned char b7:1;
;      unsigned char b8:1;
;   }bits;
;   unsigned char byte;
;}DD;
;
;
;
;
;
;BB PORT_F;
;BB PORTHH,PORT_CZYTNIK;
;BB PORTJJ,PORTKK,PORTLL,PORTMM;
;CC PORT_STER3,PORT_STER4;
;int xxx;
;
;int nr_zacisku,odczytalem_zacisk,il_prob_odczytu;
;int macierz_zaciskow[3];
;long int sek1,sek2,sek3,sek4,sek5,sek6,sek7,sek8,sek9,sek10,sek11,sek12;
;int rzad;
;int start;
;int cykl;
;int aaa,bbb,ccc,ddd;
;int pozycjonowanie_LEFS32_300_1;
;int pozycjonowanie_LEFS32_300_2;
;int il_zaciskow_rzad_1,il_zaciskow_rzad_2;
;int cykl_sterownik_1,cykl_sterownik_3,cykl_sterownik_2,cykl_sterownik_4;
;int adr1,adr2,adr3,adr4;
;int cykl_sterownik_3_wykonalem;
;int szczotka_druciana_ilosc_cykli;
;int szczotka_druc_cykl;
;int cykl_glowny;
;int start_kontynuacja;
;int ruch_zlozony;
;int krazek_scierny_cykl_po_okregu;
;int krazek_scierny_cykl_po_okregu_ilosc;
;int krazek_scierny_cykl;
;int krazek_scierny_ilosc_cykli;
;int cykl_ilosc_zaciskow;
;int wykonalem_komplet_okregow;
;int abs_ster3,abs_ster4;
;int koniec_rzedu_10;
;int rzad_obrabiany;
;int jestem_w_trakcie_czyszczenia_calosci;
;int wykonalem_rzedow;
;bit guzik1_przelaczania_zaciskow,guzik2_przelaczania_zaciskow;
;bit zmienna_przelaczanie_zaciskow;
;int czekaj_az_puszcze, czek1, czek2;
;int czas_przedmuchu;
;int a[10];
;
;char sprawdz_pin0(BB PORT, int numer_pcf)
; 0000 00A3 {
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0000 00A4 i2c_start();
;	PORT -> Y+2
;	numer_pcf -> Y+0
;PCODE: $0000003B VOL: 0
; 0000 00A5 i2c_write(numer_pcf);
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 00A6 PORT.byte = i2c_read(0);
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 00A7 i2c_stop();
;PCODE: $00000043 VOL: 0
; 0000 00A8 
; 0000 00A9 
; 0000 00AA return PORT.bits.b0;
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0000 00AB }
;PCODE: $00000048 VOL: 0
;
;char sprawdz_pin1(BB PORT, int numer_pcf)
; 0000 00AE {
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0000 00AF i2c_start();
;	PORT -> Y+2
;	numer_pcf -> Y+0
;PCODE: $0000004B VOL: 0
; 0000 00B0 i2c_write(numer_pcf);
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0000 00B1 PORT.byte = i2c_read(0);
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0000 00B2 i2c_stop();
;PCODE: $00000053 VOL: 0
; 0000 00B3 
; 0000 00B4 
; 0000 00B5 return PORT.bits.b1;
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
; 0000 00B6 }
;PCODE: $00000059 VOL: 0
;
;
;char sprawdz_pin2(BB PORT, int numer_pcf)
; 0000 00BA {
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0000 00BB i2c_start();
;	PORT -> Y+2
;	numer_pcf -> Y+0
;PCODE: $0000005C VOL: 0
; 0000 00BC i2c_write(numer_pcf);
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0000 00BD PORT.byte = i2c_read(0);
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0000 00BE i2c_stop();
;PCODE: $00000064 VOL: 0
; 0000 00BF 
; 0000 00C0 
; 0000 00C1 return PORT.bits.b2;
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0000 00C2 }
;PCODE: $0000006A VOL: 0
;
;char sprawdz_pin3(BB PORT, int numer_pcf)
; 0000 00C5 {
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
; 0000 00C6 i2c_start();
;	PORT -> Y+2
;	numer_pcf -> Y+0
;PCODE: $0000006D VOL: 0
; 0000 00C7 i2c_write(numer_pcf);
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
; 0000 00C8 PORT.byte = i2c_read(0);
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
; 0000 00C9 i2c_stop();
;PCODE: $00000075 VOL: 0
; 0000 00CA 
; 0000 00CB 
; 0000 00CC return PORT.bits.b3;
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
; 0000 00CD }
;PCODE: $0000007B VOL: 0
;
;char sprawdz_pin4(BB PORT, int numer_pcf)
; 0000 00D0 {
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
; 0000 00D1 i2c_start();
;	PORT -> Y+2
;	numer_pcf -> Y+0
;PCODE: $0000007E VOL: 0
; 0000 00D2 i2c_write(numer_pcf);
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
; 0000 00D3 PORT.byte = i2c_read(0);
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
; 0000 00D4 i2c_stop();
;PCODE: $00000086 VOL: 0
; 0000 00D5 
; 0000 00D6 
; 0000 00D7 return PORT.bits.b4;
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
; 0000 00D8 }
;PCODE: $0000008C VOL: 0
;
;char sprawdz_pin5(BB PORT, int numer_pcf)
; 0000 00DB {
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
; 0000 00DC i2c_start();
;	PORT -> Y+2
;	numer_pcf -> Y+0
;PCODE: $0000008F VOL: 0
; 0000 00DD i2c_write(numer_pcf);
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
; 0000 00DE PORT.byte = i2c_read(0);
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
; 0000 00DF i2c_stop();
;PCODE: $00000097 VOL: 0
; 0000 00E0 
; 0000 00E1 
; 0000 00E2 return PORT.bits.b5;
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
; 0000 00E3 }
;PCODE: $0000009D VOL: 0
;
;char sprawdz_pin6(BB PORT, int numer_pcf)
; 0000 00E6 {
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
; 0000 00E7 i2c_start();
;	PORT -> Y+2
;	numer_pcf -> Y+0
;PCODE: $000000A0 VOL: 0
; 0000 00E8 i2c_write(numer_pcf);
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
; 0000 00E9 PORT.byte = i2c_read(0);
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
; 0000 00EA i2c_stop();
;PCODE: $000000A8 VOL: 0
; 0000 00EB 
; 0000 00EC 
; 0000 00ED return PORT.bits.b6;
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
; 0000 00EE }
;PCODE: $000000AE VOL: 0
;
;char sprawdz_pin7(BB PORT, int numer_pcf)
; 0000 00F1 {
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
; 0000 00F2 i2c_start();
;	PORT -> Y+2
;	numer_pcf -> Y+0
;PCODE: $000000B1 VOL: 0
; 0000 00F3 i2c_write(numer_pcf);
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
; 0000 00F4 PORT.byte = i2c_read(0);
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
; 0000 00F5 i2c_stop();
;PCODE: $000000B9 VOL: 0
; 0000 00F6 
; 0000 00F7 
; 0000 00F8 return PORT.bits.b7;
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
; 0000 00F9 }
;PCODE: $000000BF VOL: 0
;
;int odczytaj_parametr(int adres1, int adres2)
; 0000 00FC {
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
; 0000 00FD int z;
; 0000 00FE z = 0;
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;	adres1 -> Y+4
;	adres2 -> Y+2
;	z -> R16,R17
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
; 0000 00FF putchar(90);
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
; 0000 0100 putchar(165);
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
; 0000 0101 putchar(4);
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
; 0000 0102 putchar(131);
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
; 0000 0103 putchar(adres1);
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
; 0000 0104 putchar(adres2);
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
; 0000 0105 putchar(1);
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
; 0000 0106 getchar();
;PCODE: $000000DB VOL: 0
; 0000 0107 getchar();
;PCODE: $000000DC VOL: 0
; 0000 0108 getchar();
;PCODE: $000000DD VOL: 0
; 0000 0109 getchar();
;PCODE: $000000DE VOL: 0
; 0000 010A getchar();
;PCODE: $000000DF VOL: 0
; 0000 010B getchar();
;PCODE: $000000E0 VOL: 0
; 0000 010C getchar();
;PCODE: $000000E1 VOL: 0
; 0000 010D getchar();
;PCODE: $000000E2 VOL: 0
; 0000 010E z = getchar();
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
; 0000 010F 
; 0000 0110 
; 0000 0111 
; 0000 0112 
; 0000 0113 
; 0000 0114 
; 0000 0115 
; 0000 0116 
; 0000 0117 
; 0000 0118 
; 0000 0119 
; 0000 011A 
; 0000 011B return z;
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
; 0000 011C }
;PCODE: $000000ED VOL: 0
;
;
;
;int czekaj_na_guzik_start(int adres)
; 0000 0121 {
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
; 0000 0122 //48 to adres zmiennej 30
; 0000 0123 //16 to adres zmiennj 10
; 0000 0124 
; 0000 0125 int z;
; 0000 0126 z = 0;
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;	adres -> Y+2
;	z -> R16,R17
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
; 0000 0127 putchar(90);
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
; 0000 0128 putchar(165);
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
; 0000 0129 putchar(4);
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
; 0000 012A putchar(131);
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
; 0000 012B putchar(0);
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
; 0000 012C putchar(adres);  //adres zmiennej - 30
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
; 0000 012D putchar(1);
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
; 0000 012E getchar();
;PCODE: $00000109 VOL: 0
; 0000 012F getchar();
;PCODE: $0000010A VOL: 0
; 0000 0130 getchar();
;PCODE: $0000010B VOL: 0
; 0000 0131 getchar();
;PCODE: $0000010C VOL: 0
; 0000 0132 getchar();
;PCODE: $0000010D VOL: 0
; 0000 0133 getchar();
;PCODE: $0000010E VOL: 0
; 0000 0134 getchar();
;PCODE: $0000010F VOL: 0
; 0000 0135 getchar();
;PCODE: $00000110 VOL: 0
; 0000 0136 z = getchar();
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
; 0000 0137 //itoa(z,dupa1);
; 0000 0138 //lcd_puts(dupa1);
; 0000 0139 
; 0000 013A return z;
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
; 0000 013B }
;PCODE: $0000011B VOL: 0
;
;
;
;
;// Timer 0 overflow interrupt service routine
;interrupt [TIM0_OVF] void timer0_ovf_isr(void)
; 0000 0142 {
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
; 0000 0143 // Place your code here
; 0000 0144 //16,384 ms
; 0000 0145 sek1++;     //Ster 1
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
; 0000 0146 sek2++;     //ster 3
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
; 0000 0147 
; 0000 0148 
; 0000 0149 sek3++;     //ster 2
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
; 0000 014A sek4++;     //ster 4
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
; 0000 014B 
; 0000 014C 
; 0000 014D //sek10++;
; 0000 014E 
; 0000 014F sek11++;  //do wyboru zacisku
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
; 0000 0150 sek12++;  //do czasu przedmuchu
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
; 0000 0151 }
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
;
;
;
;
;
;// Declare your global variables here
;
;void komunikat_na_panel(char flash *fmtstr,int adres2,int adres22)
; 0000 015A {
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
; 0000 015B int h;
; 0000 015C 
; 0000 015D h = 0;
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
;	*fmtstr -> Y+6
;	adres2 -> Y+4
;	adres22 -> Y+2
;	h -> R16,R17
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
; 0000 015E h = strlenf(fmtstr);
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
; 0000 015F h = h + 3;
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
; 0000 0160 
; 0000 0161 putchar(90);
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
; 0000 0162 putchar(165);
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
; 0000 0163 putchar(h);       //ilosc liter 43 + 3
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
; 0000 0164 putchar(130);  //82
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
; 0000 0165 putchar(adres2);    //
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
; 0000 0166 putchar(adres22);  //
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
; 0000 0167 printf(fmtstr);
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
; 0000 0168 }
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
;
;void wartosc_parametru_panelu(int wartosc, int adres1, int adres2)
; 0000 016B {
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
; 0000 016C putchar(90);  //5A
;	wartosc -> Y+4
;	adres1 -> Y+2
;	adres2 -> Y+0
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
; 0000 016D putchar(165); //A5
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
; 0000 016E putchar(5);//05
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
; 0000 016F putchar(130);  //82    /
;PCODE: $0000016E VOL: 0
;PCODE: $0000016F VOL: 0
;PCODE: $00000170 VOL: 0
; 0000 0170 putchar(adres1);    //00
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
;PCODE: $00000173 VOL: 0
; 0000 0171 putchar(adres2);   //40
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
; 0000 0172 putchar(0);    //00
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
;PCODE: $00000179 VOL: 0
; 0000 0173 putchar(wartosc);   //80
;PCODE: $0000017A VOL: 0
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
; 0000 0174 }
;PCODE: $0000017D VOL: 0
;PCODE: $0000017E VOL: 0
;PCODE: $0000017F VOL: 0
;
;void komunikat_z_czytnika_kodow(char flash *fmtstr,int rzad)
; 0000 0177 {
;PCODE: $00000180 VOL: 0
;PCODE: $00000181 VOL: 0
; 0000 0178 int h, adres1,adres11,adres2,adres22;
; 0000 0179 
; 0000 017A h = 0;
;PCODE: $00000182 VOL: 0
;PCODE: $00000183 VOL: 0
;	*fmtstr -> Y+12
;	rzad -> Y+10
;	h -> R16,R17
;	adres1 -> R18,R19
;	adres11 -> R20,R21
;	adres2 -> Y+8
;	adres22 -> Y+6
;PCODE: $00000184 VOL: 0
;PCODE: $00000185 VOL: 0
; 0000 017B h = strlenf(fmtstr);
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
; 0000 017C h = h + 3;
;PCODE: $0000018A VOL: 0
;PCODE: $0000018B VOL: 0
; 0000 017D 
; 0000 017E if(rzad == 1)
;PCODE: $0000018C VOL: 0
;PCODE: $0000018D VOL: 0
;PCODE: $0000018E VOL: 0
; 0000 017F    {
; 0000 0180    adres1 = 0;
;PCODE: $0000018F VOL: 0
;PCODE: $00000190 VOL: 0
; 0000 0181    adres11 = 80;
;PCODE: $00000191 VOL: 0
;PCODE: $00000192 VOL: 0
; 0000 0182    adres2 = 80;
;PCODE: $00000193 VOL: 0
;PCODE: $00000194 VOL: 0
; 0000 0183    adres22 = 0;
;PCODE: $00000195 VOL: 0
;PCODE: $00000196 VOL: 0
; 0000 0184    }
; 0000 0185 if(rzad == 2)
;PCODE: $00000197 VOL: 0
;PCODE: $00000198 VOL: 0
;PCODE: $00000199 VOL: 0
;PCODE: $0000019A VOL: 0
; 0000 0186    {
; 0000 0187    adres1 = 0;
;PCODE: $0000019B VOL: 0
;PCODE: $0000019C VOL: 0
; 0000 0188    adres11 = 32;
;PCODE: $0000019D VOL: 0
;PCODE: $0000019E VOL: 0
; 0000 0189    adres2 = 64;
;PCODE: $0000019F VOL: 0
;PCODE: $000001A0 VOL: 0
; 0000 018A    adres22 = 0;
;PCODE: $000001A1 VOL: 0
;PCODE: $000001A2 VOL: 0
; 0000 018B    }
; 0000 018C 
; 0000 018D putchar(90);
;PCODE: $000001A3 VOL: 0
;PCODE: $000001A4 VOL: 0
;PCODE: $000001A5 VOL: 0
;PCODE: $000001A6 VOL: 0
; 0000 018E putchar(165);
;PCODE: $000001A7 VOL: 0
;PCODE: $000001A8 VOL: 0
;PCODE: $000001A9 VOL: 0
; 0000 018F putchar(h);       //ilosc liter 43 + 3
;PCODE: $000001AA VOL: 0
;PCODE: $000001AB VOL: 0
; 0000 0190 putchar(130);  //82
;PCODE: $000001AC VOL: 0
;PCODE: $000001AD VOL: 0
;PCODE: $000001AE VOL: 0
; 0000 0191 putchar(adres1);    //
;PCODE: $000001AF VOL: 0
;PCODE: $000001B0 VOL: 0
; 0000 0192 putchar(adres11);  //
;PCODE: $000001B1 VOL: 0
;PCODE: $000001B2 VOL: 0
; 0000 0193 printf(fmtstr);
;PCODE: $000001B3 VOL: 0
;PCODE: $000001B4 VOL: 0
;PCODE: $000001B5 VOL: 0
;PCODE: $000001B6 VOL: 0
;PCODE: $000001B7 VOL: 0
;PCODE: $000001B8 VOL: 0
; 0000 0194 
; 0000 0195 komunikat_na_panel("                                                ",adres2,adres22);
;PCODE: $000001B9 VOL: 0
;PCODE: $000001BA VOL: 0
;PCODE: $000001BB VOL: 0
;PCODE: $000001BC VOL: 0
;PCODE: $000001BD VOL: 0
;PCODE: $000001BE VOL: 0
;PCODE: $000001BF VOL: 0
;PCODE: $000001C0 VOL: 0
; 0000 0196 komunikat_na_panel("Wczytano poprawny zacisk",adres2,adres22);
;PCODE: $000001C1 VOL: 0
;PCODE: $000001C2 VOL: 0
;PCODE: $000001C3 VOL: 0
;PCODE: $000001C4 VOL: 0
;PCODE: $000001C5 VOL: 0
;PCODE: $000001C6 VOL: 0
;PCODE: $000001C7 VOL: 0
;PCODE: $000001C8 VOL: 0
; 0000 0197 
; 0000 0198 }
;PCODE: $000001C9 VOL: 0
;PCODE: $000001CA VOL: 0
;PCODE: $000001CB VOL: 0
;PCODE: $000001CC VOL: 0
;
;
;
;
;void wyrrrjscia_i_wejscia_opis()
; 0000 019E {
;PCODE: $000001CD VOL: 0
;PCODE: $000001CE VOL: 0
; 0000 019F 
; 0000 01A0 
; 0000 01A1 //IN0
; 0000 01A2 
; 0000 01A3 //komunikacja miedzy slave a master
; 0000 01A4 //sprawdz_pin0(PORTHH,0x73)
; 0000 01A5 //sprawdz_pin1(PORTHH,0x73)
; 0000 01A6 //sprawdz_pin2(PORTHH,0x73)
; 0000 01A7 //sprawdz_pin3(PORTHH,0x73)
; 0000 01A8 //sprawdz_pin4(PORTHH,0x73)
; 0000 01A9 //sprawdz_pin5(PORTHH,0x73)
; 0000 01AA //sprawdz_pin6(PORTHH,0x73)
; 0000 01AB //sprawdz_pin7(PORTHH,0x73)
; 0000 01AC 
; 0000 01AD //IN1
; 0000 01AE //sprawdz_pin0(PORTJJ,0x79)  BUSY   STEROWNIK1
; 0000 01AF //sprawdz_pin1(PORTJJ,0x79)  AREA   STEROWNIK1
; 0000 01B0 //sprawdz_pin2(PORTJJ,0x79)  SETON  STEROWNIK1
; 0000 01B1 //sprawdz_pin3(PORTJJ,0x79)  INP    STEROWNIK1
; 0000 01B2 //sprawdz_pin4(PORTJJ,0x79)  SVRE   STEROWNIK1
; 0000 01B3 //sprawdz_pin5(PORTJJ,0x79)  ALARM  STEROWNIK1
; 0000 01B4 //sprawdz_pin6(PORTJJ,0x79)  czujnik cisnienia
; 0000 01B5 //sprawdz_pin7(PORTJJ,0x79)
; 0000 01B6 
; 0000 01B7 //IN2
; 0000 01B8 //sprawdz_pin0(PORTKK,0x75)  B7 BUSY    LECCP STEROWNIK3
; 0000 01B9 //sprawdz_pin1(PORTKK,0x75)  B8 AREA    LECP6 STEROWNIK3
; 0000 01BA //sprawdz_pin2(PORTKK,0x75)  B9 SETON   LECP6 STEROWNIK3
; 0000 01BB //sprawdz_pin3(PORTKK,0x75)  B10 INP    LECP6 STEROWNIK3
; 0000 01BC //sprawdz_pin4(PORTKK,0x75)  B7 BUSY    LECCP STEROWNIK4
; 0000 01BD //sprawdz_pin5(PORTKK,0x75)  B8 AREA    LECP6 STEROWNIK4
; 0000 01BE //sprawdz_pin6(PORTKK,0x75)  B9 SETON   LECP6 STEROWNIK4
; 0000 01BF //sprawdz_pin7(PORTKK,0x75)  B10 INP    LECP6 STEROWNIK4
; 0000 01C0 
; 0000 01C1 //IN3
; 0000 01C2 //sprawdz_pin0(PORTLL,0x71)  BUSY   STEROWNIK2
; 0000 01C3 //sprawdz_pin1(PORTLL,0x71)  AREA   STEROWNIK2
; 0000 01C4 //sprawdz_pin2(PORTLL,0x71)  SETON  STEROWNIK2
; 0000 01C5 //sprawdz_pin3(PORTLL,0x71)  INP    STEROWNIK2
; 0000 01C6 //sprawdz_pin4(PORTLL,0x71)  SVRE   STEROWNIK2
; 0000 01C7 //sprawdz_pin5(PORTLL,0x71)  ALARM  STEROWNIK2
; 0000 01C8 //sprawdz_pin6(PORTLL,0x71)  S6A przek³adanie rzedow
; 0000 01C9 //sprawdz_pin7(PORTLL,0x71)  S6B przekladanie rzedow
; 0000 01CA 
; 0000 01CB //IN4
; 0000 01CC //sprawdz_pin0(PORTMM,0x77)
; 0000 01CD //sprawdz_pin1(PORTMM,0x77)
; 0000 01CE //sprawdz_pin2(PORTMM,0x77)
; 0000 01CF //sprawdz_pin3(PORTMM,0x77)
; 0000 01D0 //sprawdz_pin4(PORTMM,0x77)
; 0000 01D1 //sprawdz_pin5(PORTMM,0x77)
; 0000 01D2 //sprawdz_pin6(PORTMM,0x77) ALARM STEROWNIK4
; 0000 01D3 //sprawdz_pin7(PORTMM,0x77) ALARM STEROWNIK3
; 0000 01D4 
; 0000 01D5 //KARTA IN4 PRZEPINAM Z PORTE NA PORTF (BO RS232)
; 0000 01D6 
; 0000 01D7 
; 0000 01D8 //sterownik 1
; 0000 01D9 //sterownik 3 - szczotka papierowa
; 0000 01DA 
; 0000 01DB //sterownik 2 - druciak
; 0000 01DC ///sterownik 4 - druciak
; 0000 01DD 
; 0000 01DE 
; 0000 01DF //OUT
; 0000 01E0 //PORTA.0   IN0  STEROWNIK1        OUT 1
; 0000 01E1 //PORTA.1   IN1  STEROWNIK1
; 0000 01E2 //PORTA.2   IN2  STEROWNIK1
; 0000 01E3 //PORTA.3   IN3  STEROWNIK1
; 0000 01E4 //PORTA.4   IN4  STEROWNIK1
; 0000 01E5 //PORTA.5   IN5  STEROWNIK1
; 0000 01E6 //PORTA.6   IN6  STEROWNIK1
; 0000 01E7 //PORTA.7   IN7  STEROWNIK1
; 0000 01E8 
; 0000 01E9 //str 83, pin 6 dodac do obu sterownikow
; 0000 01EA 
; 0000 01EB 
; 0000 01EC //PORTB.0   IN0  STEROWNIK4        OUT 5
; 0000 01ED //PORTB.1   IN1  STEROWNIK4
; 0000 01EE //PORTB.2   IN2  STEROWNIK4
; 0000 01EF //PORTB.3   IN3  STEROWNIK4
; 0000 01F0 //PORTB.4   4B CEWKA
; 0000 01F1 //PORTB.5   DRIVE  STEROWNIK4
; 0000 01F2 //PORTB.6   ///////////////////////////////swiatlo zielone
; 0000 01F3 //PORTB.7   IN5 STEROWNIK 3
; 0000 01F4 
; 0000 01F5 //PORTC.0   IN0  STEROWNIK2        OUT 3
; 0000 01F6 //PORTC.1   IN1  STEROWNIK2
; 0000 01F7 //PORTC.2   IN2  STEROWNIK2
; 0000 01F8 //PORTC.3   IN3  STEROWNIK2
; 0000 01F9 //PORTC.4   IN4  STEROWNIK2
; 0000 01FA //PORTC.5   IN5  STEROWNIK2
; 0000 01FB //PORTC.6   IN6  STEROWNIK2
; 0000 01FC //PORTC.7   IN7  STEROWNIK2
; 0000 01FD 
; 0000 01FE //PORTD.0      SDA                 OUT 2
; 0000 01FF //PORTD.1      SCL
; 0000 0200 //PORTD.2  SETUP   STEROWNIK1 STEROWNIK 2 STEROIWNIK 3 STEROWNIK 4
; 0000 0201 //PORTD.3  DRIVE   STEROWNIK1
; 0000 0202 //PORTD.4  IN8 STEROWNIK1
; 0000 0203 //PORTD.5  IN8 STEROWNIK2
; 0000 0204 //PORTD.6  DRIVE   STEROWNIK2
; 0000 0205 //PORTD.7  ///////////////////////////////swiatlo czerwone
; 0000 0206 
; 0000 0207 //PORTE.0
; 0000 0208 //PORTE.1
; 0000 0209 //PORTE.2  1A CEWKA                     OUT 6
; 0000 020A //PORTE.3  1B CEWKA
; 0000 020B //PORTE.4  IN4  STEROWNIK4
; 0000 020C //PORTE.5  IN5  STEROWNIK4
; 0000 020D //PORTE.6  2A CEWKA
; 0000 020E //PORTE.7  3A CEWKA
; 0000 020F 
; 0000 0210 //PORTF.0   IN0  STEROWNIK3             OUT 4
; 0000 0211 //PORTF.1   IN1  STEROWNIK3
; 0000 0212 //PORTF.2   IN2  STEROWNIK3
; 0000 0213 //PORTF.3   IN3  STEROWNIK3
; 0000 0214 //PORTF.4   4A CEWKA
; 0000 0215 //PORTF.5   DRIVE  STEROWNIK3
; 0000 0216 //PORTF.6   /////////////////////////////////swiatlo zolte
; 0000 0217 //PORTF.7   //IN4 STEROWNIK 3
; 0000 0218 
; 0000 0219 
; 0000 021A //POPRAWIC STEROWNIK PRACE ZGODNIE Z OPISEM ZE STRONY 59 - POWINIENEM SPRAWDZIC CZY INP JEST ON A DOPIERO POTEM BUSY
; 0000 021B //CZY SIE WYLACZYL
; 0000 021C //FAJNIE ROBIE Z TYM CZEKAIEM 1S
; 0000 021D 
; 0000 021E //PODPIAC JESZCZE HOLD WSZYSTKIE DO JEDNEGO
; 0000 021F 
; 0000 0220 
; 0000 0221 // macierz_zaciskow[rzad]=44; brak
; 0000 0222 
; 0000 0223 //macierz_zaciskow[rzad]=48; brak
; 0000 0224 
; 0000 0225 //macierz_zaciskow[rzad]=76  brak
; 0000 0226 
; 0000 0227 //komunikat_z_czytnika_kodow("87-2286",rzad); brak
; 0000 0228 //macierz_zaciskow[rzad]=80;
; 0000 0229 
; 0000 022A // komunikat_z_czytnika_kodow("86-2384",rzad);
; 0000 022B // macierz_zaciskow[rzad]=92;
; 0000 022C 
; 0000 022D //  komunikat_z_czytnika_kodow("87-2384",rzad);
; 0000 022E //  macierz_zaciskow[rzad]=96;
; 0000 022F 
; 0000 0230 //      komunikat_z_czytnika_kodow("86-2028",rzad);
; 0000 0231 //      macierz_zaciskow[rzad]=107;
; 0000 0232 
; 0000 0233 //      komunikat_z_czytnika_kodow("87-2028",rzad);
; 0000 0234 //      macierz_zaciskow[rzad]=111;
; 0000 0235 
; 0000 0236 
; 0000 0237 
; 0000 0238 
; 0000 0239 /*
; 0000 023A 
; 0000 023B //testy parzystych i nieparzystych IN0-IN8
; 0000 023C //testy port/pin
; 0000 023D //sterownik 3
; 0000 023E //PORTF.0   IN0  STEROWNIK3
; 0000 023F //PORTF.1   IN1  STEROWNIK3
; 0000 0240 //PORTF.2   IN2  STEROWNIK3
; 0000 0241 //PORTF.3   IN3  STEROWNIK3
; 0000 0242 //PORTF.7   IN4 STEROWNIK 3
; 0000 0243 //PORTB.7   IN5 STEROWNIK 3
; 0000 0244 
; 0000 0245 
; 0000 0246 PORT_F.bits.b0 = 0;
; 0000 0247 PORT_F.bits.b1 = 1;
; 0000 0248 PORT_F.bits.b2 = 0;
; 0000 0249 PORT_F.bits.b3 = 1;
; 0000 024A PORT_F.bits.b7 = 0;
; 0000 024B PORTF = PORT_F.byte;
; 0000 024C PORTB.7 = 1;
; 0000 024D 
; 0000 024E //sterownik 4
; 0000 024F 
; 0000 0250 //PORTB.0   IN0  STEROWNIK4        OUT 5
; 0000 0251 //PORTB.1   IN1  STEROWNIK4
; 0000 0252 //PORTB.2   IN2  STEROWNIK4
; 0000 0253 //PORTB.3   IN3  STEROWNIK4
; 0000 0254 //PORTE.4  IN4  STEROWNIK4
; 0000 0255 //PORTE.5  IN5  STEROWNIK4
; 0000 0256 
; 0000 0257 PORTB.0 = 0;
; 0000 0258 PORTB.1 = 1;
; 0000 0259 PORTB.2 = 0;
; 0000 025A PORTB.3 = 1;
; 0000 025B PORTE.4 = 0;
; 0000 025C PORTE.5 = 1;
; 0000 025D 
; 0000 025E //ster 1
; 0000 025F PORTA.0 = 0;   //IN0  STEROWNIK1        OUT 1
; 0000 0260 PORTA.1 = 1;  //IN1  STEROWNIK1
; 0000 0261 PORTA.2 = 0;  // IN2  STEROWNIK1
; 0000 0262 PORTA.3 = 1;  //IN3  STEROWNIK1
; 0000 0263 PORTA.4 = 0;  // IN4  STEROWNIK1
; 0000 0264 PORTA.5 = 1;  //IN5  STEROWNIK1
; 0000 0265 PORTA.6 = 0;   //IN6  STEROWNIK1
; 0000 0266 PORTA.7 = 1;  //IN7  STEROWNIK1
; 0000 0267 PORTD.4 = 0; //IN8 STEROWNIK1
; 0000 0268 
; 0000 0269 
; 0000 026A 
; 0000 026B //sterownik 2
; 0000 026C PORTC.0 = 0;   //IN0  STEROWNIK2        OUT 3
; 0000 026D PORTC.1  = 1;  //IN1  STEROWNIK2
; 0000 026E PORTC.2 = 0;    //IN2  STEROWNIK2
; 0000 026F PORTC.3= 1;   //IN3  STEROWNIK2
; 0000 0270 PORTC.4 = 0;   // IN4  STEROWNIK2
; 0000 0271 PORTC.5= 1;   //IN5  STEROWNIK2
; 0000 0272 PORTC.6 = 0;   // IN6  STEROWNIK2
; 0000 0273 PORTC.7= 1;   //IN7  STEROWNIK2
; 0000 0274 PORTD.5 = 0;  //IN8 STEROWNIK2
; 0000 0275 
; 0000 0276 */
; 0000 0277 
; 0000 0278 }
;PCODE: $000001CF VOL: 0
;PCODE: $000001D0 VOL: 0
;
;void sprawdz_cisnienie()
; 0000 027B {
;PCODE: $000001D1 VOL: 0
;PCODE: $000001D2 VOL: 0
; 0000 027C int i;
; 0000 027D //i = 0;
; 0000 027E i = 1;
;PCODE: $000001D3 VOL: 0
;PCODE: $000001D4 VOL: 0
;	i -> R16,R17
;PCODE: $000001D5 VOL: 0
;PCODE: $000001D6 VOL: 0
; 0000 027F 
; 0000 0280 while(i == 0)
;PCODE: $000001D7 VOL: 0
;PCODE: $000001D8 VOL: 0
;PCODE: $000001D9 VOL: 0
; 0000 0281     {
; 0000 0282     if(sprawdz_pin6(PORTJJ,0x79) == 0)
;PCODE: $000001DA VOL: 0
;PCODE: $000001DB VOL: 0
;PCODE: $000001DC VOL: 0
;PCODE: $000001DD VOL: 0
;PCODE: $000001DE VOL: 0
;PCODE: $000001DF VOL: 0
;PCODE: $000001E0 VOL: 0
; 0000 0283         {
; 0000 0284         i = 1;
;PCODE: $000001E1 VOL: 0
;PCODE: $000001E2 VOL: 0
; 0000 0285         komunikat_na_panel("                                                ",adr1,adr2);
;PCODE: $000001E3 VOL: 0
;PCODE: $000001E4 VOL: 0
;PCODE: $000001E5 VOL: 0
;PCODE: $000001E6 VOL: 0
;PCODE: $000001E7 VOL: 0
;PCODE: $000001E8 VOL: 0
;PCODE: $000001E9 VOL: 0
;PCODE: $000001EA VOL: 0
; 0000 0286         }
; 0000 0287     else
;PCODE: $000001EB VOL: 0
;PCODE: $000001EC VOL: 0
; 0000 0288         {
; 0000 0289         i = 0;
;PCODE: $000001ED VOL: 0
;PCODE: $000001EE VOL: 0
; 0000 028A         komunikat_na_panel("                                                ",adr1,adr2);
;PCODE: $000001EF VOL: 0
;PCODE: $000001F0 VOL: 0
;PCODE: $000001F1 VOL: 0
;PCODE: $000001F2 VOL: 0
;PCODE: $000001F3 VOL: 0
;PCODE: $000001F4 VOL: 0
;PCODE: $000001F5 VOL: 0
;PCODE: $000001F6 VOL: 0
; 0000 028B         komunikat_na_panel("Cisnienie za male - mniejsze niz 6 bar",adr1,adr2);
;PCODE: $000001F7 VOL: 0
;PCODE: $000001F8 VOL: 0
;PCODE: $000001F9 VOL: 0
;PCODE: $000001FA VOL: 0
;PCODE: $000001FB VOL: 0
;PCODE: $000001FC VOL: 0
;PCODE: $000001FD VOL: 0
;PCODE: $000001FE VOL: 0
; 0000 028C         }
;PCODE: $000001FF VOL: 0
; 0000 028D     }
;PCODE: $00000200 VOL: 0
;PCODE: $00000201 VOL: 0
; 0000 028E }
;PCODE: $00000202 VOL: 0
;PCODE: $00000203 VOL: 0
;PCODE: $00000204 VOL: 0
;
;void odczyt_wybranego_zacisku()
; 0000 0291 {                         //11
;PCODE: $00000205 VOL: 0
;PCODE: $00000206 VOL: 0
; 0000 0292 
; 0000 0293 
; 0000 0294 PORT_CZYTNIK.bits.b0 = sprawdz_pin0(PORTHH,0x73);
;PCODE: $00000207 VOL: 0
;PCODE: $00000208 VOL: 0
;PCODE: $00000209 VOL: 0
;PCODE: $0000020A VOL: 0
;PCODE: $0000020B VOL: 0
;PCODE: $0000020C VOL: 0
;PCODE: $0000020D VOL: 0
;PCODE: $0000020E VOL: 0
;PCODE: $0000020F VOL: 0
;PCODE: $00000210 VOL: 0
;PCODE: $00000211 VOL: 0
;PCODE: $00000212 VOL: 0
; 0000 0295 PORT_CZYTNIK.bits.b1 = sprawdz_pin1(PORTHH,0x73);
;PCODE: $00000213 VOL: 0
;PCODE: $00000214 VOL: 0
;PCODE: $00000215 VOL: 0
;PCODE: $00000216 VOL: 0
;PCODE: $00000217 VOL: 0
;PCODE: $00000218 VOL: 0
;PCODE: $00000219 VOL: 0
;PCODE: $0000021A VOL: 0
;PCODE: $0000021B VOL: 0
;PCODE: $0000021C VOL: 0
;PCODE: $0000021D VOL: 0
;PCODE: $0000021E VOL: 0
;PCODE: $0000021F VOL: 0
; 0000 0296 PORT_CZYTNIK.bits.b2 = sprawdz_pin2(PORTHH,0x73);
;PCODE: $00000220 VOL: 0
;PCODE: $00000221 VOL: 0
;PCODE: $00000222 VOL: 0
;PCODE: $00000223 VOL: 0
;PCODE: $00000224 VOL: 0
;PCODE: $00000225 VOL: 0
;PCODE: $00000226 VOL: 0
;PCODE: $00000227 VOL: 0
;PCODE: $00000228 VOL: 0
;PCODE: $00000229 VOL: 0
;PCODE: $0000022A VOL: 0
;PCODE: $0000022B VOL: 0
;PCODE: $0000022C VOL: 0
; 0000 0297 PORT_CZYTNIK.bits.b3 = sprawdz_pin3(PORTHH,0x73);
;PCODE: $0000022D VOL: 0
;PCODE: $0000022E VOL: 0
;PCODE: $0000022F VOL: 0
;PCODE: $00000230 VOL: 0
;PCODE: $00000231 VOL: 0
;PCODE: $00000232 VOL: 0
;PCODE: $00000233 VOL: 0
;PCODE: $00000234 VOL: 0
;PCODE: $00000235 VOL: 0
;PCODE: $00000236 VOL: 0
;PCODE: $00000237 VOL: 0
;PCODE: $00000238 VOL: 0
;PCODE: $00000239 VOL: 0
; 0000 0298 PORT_CZYTNIK.bits.b4 = sprawdz_pin4(PORTHH,0x73);
;PCODE: $0000023A VOL: 0
;PCODE: $0000023B VOL: 0
;PCODE: $0000023C VOL: 0
;PCODE: $0000023D VOL: 0
;PCODE: $0000023E VOL: 0
;PCODE: $0000023F VOL: 0
;PCODE: $00000240 VOL: 0
;PCODE: $00000241 VOL: 0
;PCODE: $00000242 VOL: 0
;PCODE: $00000243 VOL: 0
;PCODE: $00000244 VOL: 0
;PCODE: $00000245 VOL: 0
;PCODE: $00000246 VOL: 0
; 0000 0299 PORT_CZYTNIK.bits.b5 = sprawdz_pin5(PORTHH,0x73);
;PCODE: $00000247 VOL: 0
;PCODE: $00000248 VOL: 0
;PCODE: $00000249 VOL: 0
;PCODE: $0000024A VOL: 0
;PCODE: $0000024B VOL: 0
;PCODE: $0000024C VOL: 0
;PCODE: $0000024D VOL: 0
;PCODE: $0000024E VOL: 0
;PCODE: $0000024F VOL: 0
;PCODE: $00000250 VOL: 0
;PCODE: $00000251 VOL: 0
;PCODE: $00000252 VOL: 0
;PCODE: $00000253 VOL: 0
; 0000 029A PORT_CZYTNIK.bits.b6 = sprawdz_pin6(PORTHH,0x73);
;PCODE: $00000254 VOL: 0
;PCODE: $00000255 VOL: 0
;PCODE: $00000256 VOL: 0
;PCODE: $00000257 VOL: 0
;PCODE: $00000258 VOL: 0
;PCODE: $00000259 VOL: 0
;PCODE: $0000025A VOL: 0
;PCODE: $0000025B VOL: 0
;PCODE: $0000025C VOL: 0
;PCODE: $0000025D VOL: 0
;PCODE: $0000025E VOL: 0
;PCODE: $0000025F VOL: 0
;PCODE: $00000260 VOL: 0
; 0000 029B PORT_CZYTNIK.bits.b7 = sprawdz_pin7(PORTHH,0x73);
;PCODE: $00000261 VOL: 0
;PCODE: $00000262 VOL: 0
;PCODE: $00000263 VOL: 0
;PCODE: $00000264 VOL: 0
;PCODE: $00000265 VOL: 0
;PCODE: $00000266 VOL: 0
;PCODE: $00000267 VOL: 0
;PCODE: $00000268 VOL: 0
;PCODE: $00000269 VOL: 0
;PCODE: $0000026A VOL: 0
;PCODE: $0000026B VOL: 0
;PCODE: $0000026C VOL: 0
;PCODE: $0000026D VOL: 0
; 0000 029C 
; 0000 029D rzad = odczytaj_parametr(32,128);       //20,80
;PCODE: $0000026E VOL: 0
;PCODE: $0000026F VOL: 0
;PCODE: $00000270 VOL: 0
;PCODE: $00000271 VOL: 0
;PCODE: $00000272 VOL: 0
;PCODE: $00000273 VOL: 0
; 0000 029E 
; 0000 029F if(PORT_CZYTNIK.byte == 0x01)
;PCODE: $00000274 VOL: 0
;PCODE: $00000275 VOL: 0
;PCODE: $00000276 VOL: 0
; 0000 02A0     {
; 0000 02A1       komunikat_z_czytnika_kodow("86-0170",rzad);
;PCODE: $00000277 VOL: 0
;PCODE: $00000278 VOL: 0
;PCODE: $00000279 VOL: 0
;PCODE: $0000027A VOL: 0
;PCODE: $0000027B VOL: 0
; 0000 02A2       macierz_zaciskow[rzad]=1;
;PCODE: $0000027C VOL: 0
;PCODE: $0000027D VOL: 0
;PCODE: $0000027E VOL: 0
;PCODE: $0000027F VOL: 0
;PCODE: $00000280 VOL: 0
;PCODE: $00000281 VOL: 0
; 0000 02A3     }
; 0000 02A4 
; 0000 02A5 if(PORT_CZYTNIK.byte == 0x02)
;PCODE: $00000282 VOL: 0
;PCODE: $00000283 VOL: 0
;PCODE: $00000284 VOL: 0
;PCODE: $00000285 VOL: 0
; 0000 02A6     {
; 0000 02A7       komunikat_z_czytnika_kodow("86-1043",rzad);
;PCODE: $00000286 VOL: 0
;PCODE: $00000287 VOL: 0
;PCODE: $00000288 VOL: 0
;PCODE: $00000289 VOL: 0
;PCODE: $0000028A VOL: 0
; 0000 02A8       macierz_zaciskow[rzad]=2;
;PCODE: $0000028B VOL: 0
;PCODE: $0000028C VOL: 0
;PCODE: $0000028D VOL: 0
;PCODE: $0000028E VOL: 0
;PCODE: $0000028F VOL: 0
;PCODE: $00000290 VOL: 0
; 0000 02A9     }
; 0000 02AA 
; 0000 02AB if(PORT_CZYTNIK.byte == 0x03)
;PCODE: $00000291 VOL: 0
;PCODE: $00000292 VOL: 0
;PCODE: $00000293 VOL: 0
;PCODE: $00000294 VOL: 0
; 0000 02AC     {
; 0000 02AD       komunikat_z_czytnika_kodow("86-1675",rzad);
;PCODE: $00000295 VOL: 0
;PCODE: $00000296 VOL: 0
;PCODE: $00000297 VOL: 0
;PCODE: $00000298 VOL: 0
;PCODE: $00000299 VOL: 0
; 0000 02AE       macierz_zaciskow[rzad]=3;
;PCODE: $0000029A VOL: 0
;PCODE: $0000029B VOL: 0
;PCODE: $0000029C VOL: 0
;PCODE: $0000029D VOL: 0
;PCODE: $0000029E VOL: 0
;PCODE: $0000029F VOL: 0
; 0000 02AF     }
; 0000 02B0 
; 0000 02B1 if(PORT_CZYTNIK.byte == 0x04)
;PCODE: $000002A0 VOL: 0
;PCODE: $000002A1 VOL: 0
;PCODE: $000002A2 VOL: 0
;PCODE: $000002A3 VOL: 0
; 0000 02B2     {
; 0000 02B3       komunikat_z_czytnika_kodow("86-2098",rzad);
;PCODE: $000002A4 VOL: 0
;PCODE: $000002A5 VOL: 0
;PCODE: $000002A6 VOL: 0
;PCODE: $000002A7 VOL: 0
;PCODE: $000002A8 VOL: 0
; 0000 02B4       macierz_zaciskow[rzad]=4;
;PCODE: $000002A9 VOL: 0
;PCODE: $000002AA VOL: 0
;PCODE: $000002AB VOL: 0
;PCODE: $000002AC VOL: 0
;PCODE: $000002AD VOL: 0
;PCODE: $000002AE VOL: 0
; 0000 02B5     }
; 0000 02B6 if(PORT_CZYTNIK.byte == 0x05)
;PCODE: $000002AF VOL: 0
;PCODE: $000002B0 VOL: 0
;PCODE: $000002B1 VOL: 0
;PCODE: $000002B2 VOL: 0
; 0000 02B7     {
; 0000 02B8       komunikat_z_czytnika_kodow("87-0170",rzad);
;PCODE: $000002B3 VOL: 0
;PCODE: $000002B4 VOL: 0
;PCODE: $000002B5 VOL: 0
;PCODE: $000002B6 VOL: 0
;PCODE: $000002B7 VOL: 0
; 0000 02B9       macierz_zaciskow[rzad]=5;
;PCODE: $000002B8 VOL: 0
;PCODE: $000002B9 VOL: 0
;PCODE: $000002BA VOL: 0
;PCODE: $000002BB VOL: 0
;PCODE: $000002BC VOL: 0
;PCODE: $000002BD VOL: 0
; 0000 02BA     }
; 0000 02BB if(PORT_CZYTNIK.byte == 0x06)
;PCODE: $000002BE VOL: 0
;PCODE: $000002BF VOL: 0
;PCODE: $000002C0 VOL: 0
;PCODE: $000002C1 VOL: 0
; 0000 02BC     {
; 0000 02BD       komunikat_z_czytnika_kodow("87-1043",rzad);
;PCODE: $000002C2 VOL: 0
;PCODE: $000002C3 VOL: 0
;PCODE: $000002C4 VOL: 0
;PCODE: $000002C5 VOL: 0
;PCODE: $000002C6 VOL: 0
; 0000 02BE       macierz_zaciskow[rzad]=6;
;PCODE: $000002C7 VOL: 0
;PCODE: $000002C8 VOL: 0
;PCODE: $000002C9 VOL: 0
;PCODE: $000002CA VOL: 0
;PCODE: $000002CB VOL: 0
;PCODE: $000002CC VOL: 0
; 0000 02BF     }
; 0000 02C0 
; 0000 02C1 if(PORT_CZYTNIK.byte == 0x07)
;PCODE: $000002CD VOL: 0
;PCODE: $000002CE VOL: 0
;PCODE: $000002CF VOL: 0
;PCODE: $000002D0 VOL: 0
; 0000 02C2     {
; 0000 02C3       komunikat_z_czytnika_kodow("87-1675",rzad);
;PCODE: $000002D1 VOL: 0
;PCODE: $000002D2 VOL: 0
;PCODE: $000002D3 VOL: 0
;PCODE: $000002D4 VOL: 0
;PCODE: $000002D5 VOL: 0
; 0000 02C4       macierz_zaciskow[rzad]=7;
;PCODE: $000002D6 VOL: 0
;PCODE: $000002D7 VOL: 0
;PCODE: $000002D8 VOL: 0
;PCODE: $000002D9 VOL: 0
;PCODE: $000002DA VOL: 0
;PCODE: $000002DB VOL: 0
; 0000 02C5     }
; 0000 02C6 
; 0000 02C7 if(PORT_CZYTNIK.byte == 0x08)
;PCODE: $000002DC VOL: 0
;PCODE: $000002DD VOL: 0
;PCODE: $000002DE VOL: 0
;PCODE: $000002DF VOL: 0
; 0000 02C8     {
; 0000 02C9       komunikat_z_czytnika_kodow("87-2098",rzad);
;PCODE: $000002E0 VOL: 0
;PCODE: $000002E1 VOL: 0
;PCODE: $000002E2 VOL: 0
;PCODE: $000002E3 VOL: 0
;PCODE: $000002E4 VOL: 0
; 0000 02CA       macierz_zaciskow[rzad]=8;
;PCODE: $000002E5 VOL: 0
;PCODE: $000002E6 VOL: 0
;PCODE: $000002E7 VOL: 0
;PCODE: $000002E8 VOL: 0
;PCODE: $000002E9 VOL: 0
;PCODE: $000002EA VOL: 0
; 0000 02CB     }
; 0000 02CC if(PORT_CZYTNIK.byte == 0x09)
;PCODE: $000002EB VOL: 0
;PCODE: $000002EC VOL: 0
;PCODE: $000002ED VOL: 0
;PCODE: $000002EE VOL: 0
; 0000 02CD     {
; 0000 02CE       komunikat_z_czytnika_kodow("86-0192",rzad);
;PCODE: $000002EF VOL: 0
;PCODE: $000002F0 VOL: 0
;PCODE: $000002F1 VOL: 0
;PCODE: $000002F2 VOL: 0
;PCODE: $000002F3 VOL: 0
; 0000 02CF       macierz_zaciskow[rzad]=9;
;PCODE: $000002F4 VOL: 0
;PCODE: $000002F5 VOL: 0
;PCODE: $000002F6 VOL: 0
;PCODE: $000002F7 VOL: 0
;PCODE: $000002F8 VOL: 0
;PCODE: $000002F9 VOL: 0
; 0000 02D0     }
; 0000 02D1 if(PORT_CZYTNIK.byte == 0x0A)
;PCODE: $000002FA VOL: 0
;PCODE: $000002FB VOL: 0
;PCODE: $000002FC VOL: 0
;PCODE: $000002FD VOL: 0
; 0000 02D2     {
; 0000 02D3       komunikat_z_czytnika_kodow("86-1054",rzad);
;PCODE: $000002FE VOL: 0
;PCODE: $000002FF VOL: 0
;PCODE: $00000300 VOL: 0
;PCODE: $00000301 VOL: 0
;PCODE: $00000302 VOL: 0
; 0000 02D4       macierz_zaciskow[rzad]=10;
;PCODE: $00000303 VOL: 0
;PCODE: $00000304 VOL: 0
;PCODE: $00000305 VOL: 0
;PCODE: $00000306 VOL: 0
;PCODE: $00000307 VOL: 0
;PCODE: $00000308 VOL: 0
; 0000 02D5     }
; 0000 02D6 if(PORT_CZYTNIK.byte == 0x0B)
;PCODE: $00000309 VOL: 0
;PCODE: $0000030A VOL: 0
;PCODE: $0000030B VOL: 0
;PCODE: $0000030C VOL: 0
; 0000 02D7     {
; 0000 02D8       komunikat_z_czytnika_kodow("86-1676",rzad);
;PCODE: $0000030D VOL: 0
;PCODE: $0000030E VOL: 0
;PCODE: $0000030F VOL: 0
;PCODE: $00000310 VOL: 0
;PCODE: $00000311 VOL: 0
; 0000 02D9       macierz_zaciskow[rzad]=11;
;PCODE: $00000312 VOL: 0
;PCODE: $00000313 VOL: 0
;PCODE: $00000314 VOL: 0
;PCODE: $00000315 VOL: 0
;PCODE: $00000316 VOL: 0
;PCODE: $00000317 VOL: 0
; 0000 02DA     }
; 0000 02DB if(PORT_CZYTNIK.byte == 0x0C)
;PCODE: $00000318 VOL: 0
;PCODE: $00000319 VOL: 0
;PCODE: $0000031A VOL: 0
;PCODE: $0000031B VOL: 0
; 0000 02DC     {
; 0000 02DD       komunikat_z_czytnika_kodow("86-2132",rzad);
;PCODE: $0000031C VOL: 0
;PCODE: $0000031D VOL: 0
;PCODE: $0000031E VOL: 0
;PCODE: $0000031F VOL: 0
;PCODE: $00000320 VOL: 0
; 0000 02DE       macierz_zaciskow[rzad]=12;
;PCODE: $00000321 VOL: 0
;PCODE: $00000322 VOL: 0
;PCODE: $00000323 VOL: 0
;PCODE: $00000324 VOL: 0
;PCODE: $00000325 VOL: 0
;PCODE: $00000326 VOL: 0
; 0000 02DF     }
; 0000 02E0 if(PORT_CZYTNIK.byte == 0x0D)
;PCODE: $00000327 VOL: 0
;PCODE: $00000328 VOL: 0
;PCODE: $00000329 VOL: 0
;PCODE: $0000032A VOL: 0
; 0000 02E1     {
; 0000 02E2       komunikat_z_czytnika_kodow("87-0192",rzad);
;PCODE: $0000032B VOL: 0
;PCODE: $0000032C VOL: 0
;PCODE: $0000032D VOL: 0
;PCODE: $0000032E VOL: 0
;PCODE: $0000032F VOL: 0
; 0000 02E3       macierz_zaciskow[rzad]=13;
;PCODE: $00000330 VOL: 0
;PCODE: $00000331 VOL: 0
;PCODE: $00000332 VOL: 0
;PCODE: $00000333 VOL: 0
;PCODE: $00000334 VOL: 0
;PCODE: $00000335 VOL: 0
; 0000 02E4     }
; 0000 02E5 if(PORT_CZYTNIK.byte == 0x0E)
;PCODE: $00000336 VOL: 0
;PCODE: $00000337 VOL: 0
;PCODE: $00000338 VOL: 0
;PCODE: $00000339 VOL: 0
; 0000 02E6     {
; 0000 02E7       komunikat_z_czytnika_kodow("87-1054",rzad);
;PCODE: $0000033A VOL: 0
;PCODE: $0000033B VOL: 0
;PCODE: $0000033C VOL: 0
;PCODE: $0000033D VOL: 0
;PCODE: $0000033E VOL: 0
; 0000 02E8       macierz_zaciskow[rzad]=14;
;PCODE: $0000033F VOL: 0
;PCODE: $00000340 VOL: 0
;PCODE: $00000341 VOL: 0
;PCODE: $00000342 VOL: 0
;PCODE: $00000343 VOL: 0
;PCODE: $00000344 VOL: 0
; 0000 02E9     }
; 0000 02EA 
; 0000 02EB if(PORT_CZYTNIK.byte == 0x0F)
;PCODE: $00000345 VOL: 0
;PCODE: $00000346 VOL: 0
;PCODE: $00000347 VOL: 0
;PCODE: $00000348 VOL: 0
; 0000 02EC     {
; 0000 02ED       komunikat_z_czytnika_kodow("87-1676",rzad);
;PCODE: $00000349 VOL: 0
;PCODE: $0000034A VOL: 0
;PCODE: $0000034B VOL: 0
;PCODE: $0000034C VOL: 0
;PCODE: $0000034D VOL: 0
; 0000 02EE       macierz_zaciskow[rzad]=15;
;PCODE: $0000034E VOL: 0
;PCODE: $0000034F VOL: 0
;PCODE: $00000350 VOL: 0
;PCODE: $00000351 VOL: 0
;PCODE: $00000352 VOL: 0
;PCODE: $00000353 VOL: 0
; 0000 02EF     }
; 0000 02F0 if(PORT_CZYTNIK.byte == 0x10)
;PCODE: $00000354 VOL: 0
;PCODE: $00000355 VOL: 0
;PCODE: $00000356 VOL: 0
;PCODE: $00000357 VOL: 0
; 0000 02F1     {
; 0000 02F2       komunikat_z_czytnika_kodow("87-2132",rzad);
;PCODE: $00000358 VOL: 0
;PCODE: $00000359 VOL: 0
;PCODE: $0000035A VOL: 0
;PCODE: $0000035B VOL: 0
;PCODE: $0000035C VOL: 0
; 0000 02F3       macierz_zaciskow[rzad]=16;
;PCODE: $0000035D VOL: 0
;PCODE: $0000035E VOL: 0
;PCODE: $0000035F VOL: 0
;PCODE: $00000360 VOL: 0
;PCODE: $00000361 VOL: 0
;PCODE: $00000362 VOL: 0
; 0000 02F4     }
; 0000 02F5 
; 0000 02F6 if(PORT_CZYTNIK.byte == 0x11)
;PCODE: $00000363 VOL: 0
;PCODE: $00000364 VOL: 0
;PCODE: $00000365 VOL: 0
;PCODE: $00000366 VOL: 0
; 0000 02F7     {
; 0000 02F8       komunikat_z_czytnika_kodow("86-0193",rzad);
;PCODE: $00000367 VOL: 0
;PCODE: $00000368 VOL: 0
;PCODE: $00000369 VOL: 0
;PCODE: $0000036A VOL: 0
;PCODE: $0000036B VOL: 0
; 0000 02F9       macierz_zaciskow[rzad]=17;
;PCODE: $0000036C VOL: 0
;PCODE: $0000036D VOL: 0
;PCODE: $0000036E VOL: 0
;PCODE: $0000036F VOL: 0
;PCODE: $00000370 VOL: 0
;PCODE: $00000371 VOL: 0
; 0000 02FA     }
; 0000 02FB 
; 0000 02FC if(PORT_CZYTNIK.byte == 0x12)
;PCODE: $00000372 VOL: 0
;PCODE: $00000373 VOL: 0
;PCODE: $00000374 VOL: 0
;PCODE: $00000375 VOL: 0
; 0000 02FD     {
; 0000 02FE       komunikat_z_czytnika_kodow("86-1216",rzad);
;PCODE: $00000376 VOL: 0
;PCODE: $00000377 VOL: 0
;PCODE: $00000378 VOL: 0
;PCODE: $00000379 VOL: 0
;PCODE: $0000037A VOL: 0
; 0000 02FF       macierz_zaciskow[rzad]=18;
;PCODE: $0000037B VOL: 0
;PCODE: $0000037C VOL: 0
;PCODE: $0000037D VOL: 0
;PCODE: $0000037E VOL: 0
;PCODE: $0000037F VOL: 0
;PCODE: $00000380 VOL: 0
; 0000 0300     }
; 0000 0301 if(PORT_CZYTNIK.byte == 0x13)
;PCODE: $00000381 VOL: 0
;PCODE: $00000382 VOL: 0
;PCODE: $00000383 VOL: 0
;PCODE: $00000384 VOL: 0
; 0000 0302     {
; 0000 0303       komunikat_z_czytnika_kodow("86-1832",rzad);
;PCODE: $00000385 VOL: 0
;PCODE: $00000386 VOL: 0
;PCODE: $00000387 VOL: 0
;PCODE: $00000388 VOL: 0
;PCODE: $00000389 VOL: 0
; 0000 0304       macierz_zaciskow[rzad]=19;
;PCODE: $0000038A VOL: 0
;PCODE: $0000038B VOL: 0
;PCODE: $0000038C VOL: 0
;PCODE: $0000038D VOL: 0
;PCODE: $0000038E VOL: 0
;PCODE: $0000038F VOL: 0
; 0000 0305     }
; 0000 0306 
; 0000 0307 if(PORT_CZYTNIK.byte == 0x14)
;PCODE: $00000390 VOL: 0
;PCODE: $00000391 VOL: 0
;PCODE: $00000392 VOL: 0
;PCODE: $00000393 VOL: 0
; 0000 0308     {
; 0000 0309       komunikat_z_czytnika_kodow("86-2174",rzad);
;PCODE: $00000394 VOL: 0
;PCODE: $00000395 VOL: 0
;PCODE: $00000396 VOL: 0
;PCODE: $00000397 VOL: 0
;PCODE: $00000398 VOL: 0
; 0000 030A       macierz_zaciskow[rzad]=20;
;PCODE: $00000399 VOL: 0
;PCODE: $0000039A VOL: 0
;PCODE: $0000039B VOL: 0
;PCODE: $0000039C VOL: 0
;PCODE: $0000039D VOL: 0
;PCODE: $0000039E VOL: 0
; 0000 030B     }
; 0000 030C if(PORT_CZYTNIK.byte == 0x15)
;PCODE: $0000039F VOL: 0
;PCODE: $000003A0 VOL: 0
;PCODE: $000003A1 VOL: 0
;PCODE: $000003A2 VOL: 0
; 0000 030D     {
; 0000 030E       komunikat_z_czytnika_kodow("87-0193",rzad);
;PCODE: $000003A3 VOL: 0
;PCODE: $000003A4 VOL: 0
;PCODE: $000003A5 VOL: 0
;PCODE: $000003A6 VOL: 0
;PCODE: $000003A7 VOL: 0
; 0000 030F       macierz_zaciskow[rzad]=21;
;PCODE: $000003A8 VOL: 0
;PCODE: $000003A9 VOL: 0
;PCODE: $000003AA VOL: 0
;PCODE: $000003AB VOL: 0
;PCODE: $000003AC VOL: 0
;PCODE: $000003AD VOL: 0
; 0000 0310     }
; 0000 0311 
; 0000 0312 if(PORT_CZYTNIK.byte == 0x16)
;PCODE: $000003AE VOL: 0
;PCODE: $000003AF VOL: 0
;PCODE: $000003B0 VOL: 0
;PCODE: $000003B1 VOL: 0
; 0000 0313     {
; 0000 0314       komunikat_z_czytnika_kodow("87-1216",rzad);
;PCODE: $000003B2 VOL: 0
;PCODE: $000003B3 VOL: 0
;PCODE: $000003B4 VOL: 0
;PCODE: $000003B5 VOL: 0
;PCODE: $000003B6 VOL: 0
; 0000 0315       macierz_zaciskow[rzad]=22;
;PCODE: $000003B7 VOL: 0
;PCODE: $000003B8 VOL: 0
;PCODE: $000003B9 VOL: 0
;PCODE: $000003BA VOL: 0
;PCODE: $000003BB VOL: 0
;PCODE: $000003BC VOL: 0
; 0000 0316     }
; 0000 0317 if(PORT_CZYTNIK.byte == 0x17)
;PCODE: $000003BD VOL: 0
;PCODE: $000003BE VOL: 0
;PCODE: $000003BF VOL: 0
;PCODE: $000003C0 VOL: 0
; 0000 0318     {
; 0000 0319       komunikat_z_czytnika_kodow("87-1832",rzad);
;PCODE: $000003C1 VOL: 0
;PCODE: $000003C2 VOL: 0
;PCODE: $000003C3 VOL: 0
;PCODE: $000003C4 VOL: 0
;PCODE: $000003C5 VOL: 0
; 0000 031A       macierz_zaciskow[rzad]=23;
;PCODE: $000003C6 VOL: 0
;PCODE: $000003C7 VOL: 0
;PCODE: $000003C8 VOL: 0
;PCODE: $000003C9 VOL: 0
;PCODE: $000003CA VOL: 0
;PCODE: $000003CB VOL: 0
; 0000 031B     }
; 0000 031C 
; 0000 031D if(PORT_CZYTNIK.byte == 0x18)
;PCODE: $000003CC VOL: 0
;PCODE: $000003CD VOL: 0
;PCODE: $000003CE VOL: 0
;PCODE: $000003CF VOL: 0
; 0000 031E     {
; 0000 031F       komunikat_z_czytnika_kodow("87-2174",rzad);
;PCODE: $000003D0 VOL: 0
;PCODE: $000003D1 VOL: 0
;PCODE: $000003D2 VOL: 0
;PCODE: $000003D3 VOL: 0
;PCODE: $000003D4 VOL: 0
; 0000 0320       macierz_zaciskow[rzad]=24;
;PCODE: $000003D5 VOL: 0
;PCODE: $000003D6 VOL: 0
;PCODE: $000003D7 VOL: 0
;PCODE: $000003D8 VOL: 0
;PCODE: $000003D9 VOL: 0
;PCODE: $000003DA VOL: 0
; 0000 0321     }
; 0000 0322 if(PORT_CZYTNIK.byte == 0x19)
;PCODE: $000003DB VOL: 0
;PCODE: $000003DC VOL: 0
;PCODE: $000003DD VOL: 0
;PCODE: $000003DE VOL: 0
; 0000 0323     {
; 0000 0324       komunikat_z_czytnika_kodow("86-0194",rzad);
;PCODE: $000003DF VOL: 0
;PCODE: $000003E0 VOL: 0
;PCODE: $000003E1 VOL: 0
;PCODE: $000003E2 VOL: 0
;PCODE: $000003E3 VOL: 0
; 0000 0325       macierz_zaciskow[rzad]=25;
;PCODE: $000003E4 VOL: 0
;PCODE: $000003E5 VOL: 0
;PCODE: $000003E6 VOL: 0
;PCODE: $000003E7 VOL: 0
;PCODE: $000003E8 VOL: 0
;PCODE: $000003E9 VOL: 0
; 0000 0326     }
; 0000 0327 
; 0000 0328 if(PORT_CZYTNIK.byte == 0x1A)
;PCODE: $000003EA VOL: 0
;PCODE: $000003EB VOL: 0
;PCODE: $000003EC VOL: 0
;PCODE: $000003ED VOL: 0
; 0000 0329     {
; 0000 032A       komunikat_z_czytnika_kodow("86-1341",rzad);
;PCODE: $000003EE VOL: 0
;PCODE: $000003EF VOL: 0
;PCODE: $000003F0 VOL: 0
;PCODE: $000003F1 VOL: 0
;PCODE: $000003F2 VOL: 0
; 0000 032B       macierz_zaciskow[rzad]=26;
;PCODE: $000003F3 VOL: 0
;PCODE: $000003F4 VOL: 0
;PCODE: $000003F5 VOL: 0
;PCODE: $000003F6 VOL: 0
;PCODE: $000003F7 VOL: 0
;PCODE: $000003F8 VOL: 0
; 0000 032C     }
; 0000 032D if(PORT_CZYTNIK.byte == 0x1B)
;PCODE: $000003F9 VOL: 0
;PCODE: $000003FA VOL: 0
;PCODE: $000003FB VOL: 0
;PCODE: $000003FC VOL: 0
; 0000 032E     {
; 0000 032F       komunikat_z_czytnika_kodow("86-1833",rzad);
;PCODE: $000003FD VOL: 0
;PCODE: $000003FE VOL: 0
;PCODE: $000003FF VOL: 0
;PCODE: $00000400 VOL: 0
;PCODE: $00000401 VOL: 0
; 0000 0330       macierz_zaciskow[rzad]=27;
;PCODE: $00000402 VOL: 0
;PCODE: $00000403 VOL: 0
;PCODE: $00000404 VOL: 0
;PCODE: $00000405 VOL: 0
;PCODE: $00000406 VOL: 0
;PCODE: $00000407 VOL: 0
; 0000 0331     }
; 0000 0332 if(PORT_CZYTNIK.byte == 0x1C)
;PCODE: $00000408 VOL: 0
;PCODE: $00000409 VOL: 0
;PCODE: $0000040A VOL: 0
;PCODE: $0000040B VOL: 0
; 0000 0333     {
; 0000 0334       komunikat_z_czytnika_kodow("86-2180",rzad);
;PCODE: $0000040C VOL: 0
;PCODE: $0000040D VOL: 0
;PCODE: $0000040E VOL: 0
;PCODE: $0000040F VOL: 0
;PCODE: $00000410 VOL: 0
; 0000 0335       macierz_zaciskow[rzad]=28;
;PCODE: $00000411 VOL: 0
;PCODE: $00000412 VOL: 0
;PCODE: $00000413 VOL: 0
;PCODE: $00000414 VOL: 0
;PCODE: $00000415 VOL: 0
;PCODE: $00000416 VOL: 0
; 0000 0336     }
; 0000 0337 if(PORT_CZYTNIK.byte == 0x1D)
;PCODE: $00000417 VOL: 0
;PCODE: $00000418 VOL: 0
;PCODE: $00000419 VOL: 0
;PCODE: $0000041A VOL: 0
; 0000 0338     {
; 0000 0339       komunikat_z_czytnika_kodow("87-0194",rzad);
;PCODE: $0000041B VOL: 0
;PCODE: $0000041C VOL: 0
;PCODE: $0000041D VOL: 0
;PCODE: $0000041E VOL: 0
;PCODE: $0000041F VOL: 0
; 0000 033A       macierz_zaciskow[rzad]=29;
;PCODE: $00000420 VOL: 0
;PCODE: $00000421 VOL: 0
;PCODE: $00000422 VOL: 0
;PCODE: $00000423 VOL: 0
;PCODE: $00000424 VOL: 0
;PCODE: $00000425 VOL: 0
; 0000 033B     }
; 0000 033C 
; 0000 033D if(PORT_CZYTNIK.byte == 0x1E)
;PCODE: $00000426 VOL: 0
;PCODE: $00000427 VOL: 0
;PCODE: $00000428 VOL: 0
;PCODE: $00000429 VOL: 0
; 0000 033E     {
; 0000 033F       komunikat_z_czytnika_kodow("87-1341",rzad);
;PCODE: $0000042A VOL: 0
;PCODE: $0000042B VOL: 0
;PCODE: $0000042C VOL: 0
;PCODE: $0000042D VOL: 0
;PCODE: $0000042E VOL: 0
; 0000 0340       macierz_zaciskow[rzad]=30;
;PCODE: $0000042F VOL: 0
;PCODE: $00000430 VOL: 0
;PCODE: $00000431 VOL: 0
;PCODE: $00000432 VOL: 0
;PCODE: $00000433 VOL: 0
;PCODE: $00000434 VOL: 0
; 0000 0341     }
; 0000 0342 if(PORT_CZYTNIK.byte == 0x1F)
;PCODE: $00000435 VOL: 0
;PCODE: $00000436 VOL: 0
;PCODE: $00000437 VOL: 0
;PCODE: $00000438 VOL: 0
; 0000 0343     {
; 0000 0344       komunikat_z_czytnika_kodow("87-1833",rzad);
;PCODE: $00000439 VOL: 0
;PCODE: $0000043A VOL: 0
;PCODE: $0000043B VOL: 0
;PCODE: $0000043C VOL: 0
;PCODE: $0000043D VOL: 0
; 0000 0345       macierz_zaciskow[rzad]=31;
;PCODE: $0000043E VOL: 0
;PCODE: $0000043F VOL: 0
;PCODE: $00000440 VOL: 0
;PCODE: $00000441 VOL: 0
;PCODE: $00000442 VOL: 0
;PCODE: $00000443 VOL: 0
; 0000 0346     }
; 0000 0347 
; 0000 0348 if(PORT_CZYTNIK.byte == 0x20)
;PCODE: $00000444 VOL: 0
;PCODE: $00000445 VOL: 0
;PCODE: $00000446 VOL: 0
;PCODE: $00000447 VOL: 0
; 0000 0349     {
; 0000 034A       komunikat_z_czytnika_kodow("87-2180",rzad);
;PCODE: $00000448 VOL: 0
;PCODE: $00000449 VOL: 0
;PCODE: $0000044A VOL: 0
;PCODE: $0000044B VOL: 0
;PCODE: $0000044C VOL: 0
; 0000 034B       macierz_zaciskow[rzad]=32;
;PCODE: $0000044D VOL: 0
;PCODE: $0000044E VOL: 0
;PCODE: $0000044F VOL: 0
;PCODE: $00000450 VOL: 0
;PCODE: $00000451 VOL: 0
;PCODE: $00000452 VOL: 0
; 0000 034C     }
; 0000 034D if(PORT_CZYTNIK.byte == 0x21)
;PCODE: $00000453 VOL: 0
;PCODE: $00000454 VOL: 0
;PCODE: $00000455 VOL: 0
;PCODE: $00000456 VOL: 0
; 0000 034E     {
; 0000 034F       komunikat_z_czytnika_kodow("86-0663",rzad);
;PCODE: $00000457 VOL: 0
;PCODE: $00000458 VOL: 0
;PCODE: $00000459 VOL: 0
;PCODE: $0000045A VOL: 0
;PCODE: $0000045B VOL: 0
; 0000 0350       macierz_zaciskow[rzad]=33;
;PCODE: $0000045C VOL: 0
;PCODE: $0000045D VOL: 0
;PCODE: $0000045E VOL: 0
;PCODE: $0000045F VOL: 0
;PCODE: $00000460 VOL: 0
;PCODE: $00000461 VOL: 0
; 0000 0351     }
; 0000 0352 
; 0000 0353 if(PORT_CZYTNIK.byte == 0x22)
;PCODE: $00000462 VOL: 0
;PCODE: $00000463 VOL: 0
;PCODE: $00000464 VOL: 0
;PCODE: $00000465 VOL: 0
; 0000 0354     {
; 0000 0355       komunikat_z_czytnika_kodow("86-1349",rzad);
;PCODE: $00000466 VOL: 0
;PCODE: $00000467 VOL: 0
;PCODE: $00000468 VOL: 0
;PCODE: $00000469 VOL: 0
;PCODE: $0000046A VOL: 0
; 0000 0356       macierz_zaciskow[rzad]=34;
;PCODE: $0000046B VOL: 0
;PCODE: $0000046C VOL: 0
;PCODE: $0000046D VOL: 0
;PCODE: $0000046E VOL: 0
;PCODE: $0000046F VOL: 0
;PCODE: $00000470 VOL: 0
; 0000 0357     }
; 0000 0358 if(PORT_CZYTNIK.byte == 0x23)
;PCODE: $00000471 VOL: 0
;PCODE: $00000472 VOL: 0
;PCODE: $00000473 VOL: 0
;PCODE: $00000474 VOL: 0
; 0000 0359     {
; 0000 035A       komunikat_z_czytnika_kodow("86-1834",rzad);
;PCODE: $00000475 VOL: 0
;PCODE: $00000476 VOL: 0
;PCODE: $00000477 VOL: 0
;PCODE: $00000478 VOL: 0
;PCODE: $00000479 VOL: 0
; 0000 035B       macierz_zaciskow[rzad]=35;
;PCODE: $0000047A VOL: 0
;PCODE: $0000047B VOL: 0
;PCODE: $0000047C VOL: 0
;PCODE: $0000047D VOL: 0
;PCODE: $0000047E VOL: 0
;PCODE: $0000047F VOL: 0
; 0000 035C     }
; 0000 035D if(PORT_CZYTNIK.byte == 0x24)
;PCODE: $00000480 VOL: 0
;PCODE: $00000481 VOL: 0
;PCODE: $00000482 VOL: 0
;PCODE: $00000483 VOL: 0
; 0000 035E     {
; 0000 035F       komunikat_z_czytnika_kodow("86-2204",rzad);
;PCODE: $00000484 VOL: 0
;PCODE: $00000485 VOL: 0
;PCODE: $00000486 VOL: 0
;PCODE: $00000487 VOL: 0
;PCODE: $00000488 VOL: 0
; 0000 0360       macierz_zaciskow[rzad]=36;
;PCODE: $00000489 VOL: 0
;PCODE: $0000048A VOL: 0
;PCODE: $0000048B VOL: 0
;PCODE: $0000048C VOL: 0
;PCODE: $0000048D VOL: 0
;PCODE: $0000048E VOL: 0
; 0000 0361     }
; 0000 0362 if(PORT_CZYTNIK.byte == 0x25)
;PCODE: $0000048F VOL: 0
;PCODE: $00000490 VOL: 0
;PCODE: $00000491 VOL: 0
;PCODE: $00000492 VOL: 0
; 0000 0363     {
; 0000 0364       komunikat_z_czytnika_kodow("87-0663",rzad);
;PCODE: $00000493 VOL: 0
;PCODE: $00000494 VOL: 0
;PCODE: $00000495 VOL: 0
;PCODE: $00000496 VOL: 0
;PCODE: $00000497 VOL: 0
; 0000 0365       macierz_zaciskow[rzad]=37;
;PCODE: $00000498 VOL: 0
;PCODE: $00000499 VOL: 0
;PCODE: $0000049A VOL: 0
;PCODE: $0000049B VOL: 0
;PCODE: $0000049C VOL: 0
;PCODE: $0000049D VOL: 0
; 0000 0366     }
; 0000 0367 if(PORT_CZYTNIK.byte == 0x26)
;PCODE: $0000049E VOL: 0
;PCODE: $0000049F VOL: 0
;PCODE: $000004A0 VOL: 0
;PCODE: $000004A1 VOL: 0
; 0000 0368     {
; 0000 0369       komunikat_z_czytnika_kodow("87-1349",rzad);
;PCODE: $000004A2 VOL: 0
;PCODE: $000004A3 VOL: 0
;PCODE: $000004A4 VOL: 0
;PCODE: $000004A5 VOL: 0
;PCODE: $000004A6 VOL: 0
; 0000 036A       macierz_zaciskow[rzad]=38;
;PCODE: $000004A7 VOL: 0
;PCODE: $000004A8 VOL: 0
;PCODE: $000004A9 VOL: 0
;PCODE: $000004AA VOL: 0
;PCODE: $000004AB VOL: 0
;PCODE: $000004AC VOL: 0
; 0000 036B     }
; 0000 036C if(PORT_CZYTNIK.byte == 0x27)
;PCODE: $000004AD VOL: 0
;PCODE: $000004AE VOL: 0
;PCODE: $000004AF VOL: 0
;PCODE: $000004B0 VOL: 0
; 0000 036D     {
; 0000 036E       komunikat_z_czytnika_kodow("87-1834",rzad);
;PCODE: $000004B1 VOL: 0
;PCODE: $000004B2 VOL: 0
;PCODE: $000004B3 VOL: 0
;PCODE: $000004B4 VOL: 0
;PCODE: $000004B5 VOL: 0
; 0000 036F       macierz_zaciskow[rzad]=39;
;PCODE: $000004B6 VOL: 0
;PCODE: $000004B7 VOL: 0
;PCODE: $000004B8 VOL: 0
;PCODE: $000004B9 VOL: 0
;PCODE: $000004BA VOL: 0
;PCODE: $000004BB VOL: 0
; 0000 0370     }
; 0000 0371 if(PORT_CZYTNIK.byte == 0x28)
;PCODE: $000004BC VOL: 0
;PCODE: $000004BD VOL: 0
;PCODE: $000004BE VOL: 0
;PCODE: $000004BF VOL: 0
; 0000 0372     {
; 0000 0373       komunikat_z_czytnika_kodow("87-2204",rzad);
;PCODE: $000004C0 VOL: 0
;PCODE: $000004C1 VOL: 0
;PCODE: $000004C2 VOL: 0
;PCODE: $000004C3 VOL: 0
;PCODE: $000004C4 VOL: 0
; 0000 0374       macierz_zaciskow[rzad]=40;
;PCODE: $000004C5 VOL: 0
;PCODE: $000004C6 VOL: 0
;PCODE: $000004C7 VOL: 0
;PCODE: $000004C8 VOL: 0
;PCODE: $000004C9 VOL: 0
;PCODE: $000004CA VOL: 0
; 0000 0375     }
; 0000 0376 if(PORT_CZYTNIK.byte == 0x29)
;PCODE: $000004CB VOL: 0
;PCODE: $000004CC VOL: 0
;PCODE: $000004CD VOL: 0
;PCODE: $000004CE VOL: 0
; 0000 0377     {
; 0000 0378       komunikat_z_czytnika_kodow("86-0768",rzad);
;PCODE: $000004CF VOL: 0
;PCODE: $000004D0 VOL: 0
;PCODE: $000004D1 VOL: 0
;PCODE: $000004D2 VOL: 0
;PCODE: $000004D3 VOL: 0
; 0000 0379       macierz_zaciskow[rzad]=41;
;PCODE: $000004D4 VOL: 0
;PCODE: $000004D5 VOL: 0
;PCODE: $000004D6 VOL: 0
;PCODE: $000004D7 VOL: 0
;PCODE: $000004D8 VOL: 0
;PCODE: $000004D9 VOL: 0
; 0000 037A     }
; 0000 037B if(PORT_CZYTNIK.byte == 0x2A)
;PCODE: $000004DA VOL: 0
;PCODE: $000004DB VOL: 0
;PCODE: $000004DC VOL: 0
;PCODE: $000004DD VOL: 0
; 0000 037C     {
; 0000 037D       komunikat_z_czytnika_kodow("86-1357",rzad);
;PCODE: $000004DE VOL: 0
;PCODE: $000004DF VOL: 0
;PCODE: $000004E0 VOL: 0
;PCODE: $000004E1 VOL: 0
;PCODE: $000004E2 VOL: 0
; 0000 037E       macierz_zaciskow[rzad]=42;
;PCODE: $000004E3 VOL: 0
;PCODE: $000004E4 VOL: 0
;PCODE: $000004E5 VOL: 0
;PCODE: $000004E6 VOL: 0
;PCODE: $000004E7 VOL: 0
;PCODE: $000004E8 VOL: 0
; 0000 037F     }
; 0000 0380 if(PORT_CZYTNIK.byte == 0x2B)
;PCODE: $000004E9 VOL: 0
;PCODE: $000004EA VOL: 0
;PCODE: $000004EB VOL: 0
;PCODE: $000004EC VOL: 0
; 0000 0381     {
; 0000 0382       komunikat_z_czytnika_kodow("86-1848",rzad);
;PCODE: $000004ED VOL: 0
;PCODE: $000004EE VOL: 0
;PCODE: $000004EF VOL: 0
;PCODE: $000004F0 VOL: 0
;PCODE: $000004F1 VOL: 0
; 0000 0383       macierz_zaciskow[rzad]=43;
;PCODE: $000004F2 VOL: 0
;PCODE: $000004F3 VOL: 0
;PCODE: $000004F4 VOL: 0
;PCODE: $000004F5 VOL: 0
;PCODE: $000004F6 VOL: 0
;PCODE: $000004F7 VOL: 0
; 0000 0384     }
; 0000 0385 if(PORT_CZYTNIK.byte == 0x2C)
;PCODE: $000004F8 VOL: 0
;PCODE: $000004F9 VOL: 0
;PCODE: $000004FA VOL: 0
;PCODE: $000004FB VOL: 0
; 0000 0386     {
; 0000 0387       komunikat_z_czytnika_kodow("86-2212",rzad);
;PCODE: $000004FC VOL: 0
;PCODE: $000004FD VOL: 0
;PCODE: $000004FE VOL: 0
;PCODE: $000004FF VOL: 0
;PCODE: $00000500 VOL: 0
; 0000 0388       macierz_zaciskow[rzad]=44;
;PCODE: $00000501 VOL: 0
;PCODE: $00000502 VOL: 0
;PCODE: $00000503 VOL: 0
;PCODE: $00000504 VOL: 0
;PCODE: $00000505 VOL: 0
;PCODE: $00000506 VOL: 0
; 0000 0389     }
; 0000 038A if(PORT_CZYTNIK.byte == 0x2D)
;PCODE: $00000507 VOL: 0
;PCODE: $00000508 VOL: 0
;PCODE: $00000509 VOL: 0
;PCODE: $0000050A VOL: 0
; 0000 038B     {
; 0000 038C       komunikat_z_czytnika_kodow("87-0768",rzad);
;PCODE: $0000050B VOL: 0
;PCODE: $0000050C VOL: 0
;PCODE: $0000050D VOL: 0
;PCODE: $0000050E VOL: 0
;PCODE: $0000050F VOL: 0
; 0000 038D       macierz_zaciskow[rzad]=45;
;PCODE: $00000510 VOL: 0
;PCODE: $00000511 VOL: 0
;PCODE: $00000512 VOL: 0
;PCODE: $00000513 VOL: 0
;PCODE: $00000514 VOL: 0
;PCODE: $00000515 VOL: 0
; 0000 038E     }
; 0000 038F if(PORT_CZYTNIK.byte == 0x2E)
;PCODE: $00000516 VOL: 0
;PCODE: $00000517 VOL: 0
;PCODE: $00000518 VOL: 0
;PCODE: $00000519 VOL: 0
; 0000 0390     {
; 0000 0391       komunikat_z_czytnika_kodow("87-1357",rzad);
;PCODE: $0000051A VOL: 0
;PCODE: $0000051B VOL: 0
;PCODE: $0000051C VOL: 0
;PCODE: $0000051D VOL: 0
;PCODE: $0000051E VOL: 0
; 0000 0392       macierz_zaciskow[rzad]=46;
;PCODE: $0000051F VOL: 0
;PCODE: $00000520 VOL: 0
;PCODE: $00000521 VOL: 0
;PCODE: $00000522 VOL: 0
;PCODE: $00000523 VOL: 0
;PCODE: $00000524 VOL: 0
; 0000 0393     }
; 0000 0394 if(PORT_CZYTNIK.byte == 0x2F)
;PCODE: $00000525 VOL: 0
;PCODE: $00000526 VOL: 0
;PCODE: $00000527 VOL: 0
;PCODE: $00000528 VOL: 0
; 0000 0395     {
; 0000 0396       komunikat_z_czytnika_kodow("87-1848",rzad);
;PCODE: $00000529 VOL: 0
;PCODE: $0000052A VOL: 0
;PCODE: $0000052B VOL: 0
;PCODE: $0000052C VOL: 0
;PCODE: $0000052D VOL: 0
; 0000 0397       macierz_zaciskow[rzad]=47;
;PCODE: $0000052E VOL: 0
;PCODE: $0000052F VOL: 0
;PCODE: $00000530 VOL: 0
;PCODE: $00000531 VOL: 0
;PCODE: $00000532 VOL: 0
;PCODE: $00000533 VOL: 0
; 0000 0398     }
; 0000 0399 if(PORT_CZYTNIK.byte == 0x30)
;PCODE: $00000534 VOL: 0
;PCODE: $00000535 VOL: 0
;PCODE: $00000536 VOL: 0
;PCODE: $00000537 VOL: 0
; 0000 039A     {
; 0000 039B       komunikat_z_czytnika_kodow("87-2212",rzad);
;PCODE: $00000538 VOL: 0
;PCODE: $00000539 VOL: 0
;PCODE: $0000053A VOL: 0
;PCODE: $0000053B VOL: 0
;PCODE: $0000053C VOL: 0
; 0000 039C       macierz_zaciskow[rzad]=48;
;PCODE: $0000053D VOL: 0
;PCODE: $0000053E VOL: 0
;PCODE: $0000053F VOL: 0
;PCODE: $00000540 VOL: 0
;PCODE: $00000541 VOL: 0
;PCODE: $00000542 VOL: 0
; 0000 039D     }
; 0000 039E if(PORT_CZYTNIK.byte == 0x31)
;PCODE: $00000543 VOL: 0
;PCODE: $00000544 VOL: 0
;PCODE: $00000545 VOL: 0
;PCODE: $00000546 VOL: 0
; 0000 039F     {
; 0000 03A0       komunikat_z_czytnika_kodow("86-0800",rzad);
;PCODE: $00000547 VOL: 0
;PCODE: $00000548 VOL: 0
;PCODE: $00000549 VOL: 0
;PCODE: $0000054A VOL: 0
;PCODE: $0000054B VOL: 0
; 0000 03A1       macierz_zaciskow[rzad]=49;
;PCODE: $0000054C VOL: 0
;PCODE: $0000054D VOL: 0
;PCODE: $0000054E VOL: 0
;PCODE: $0000054F VOL: 0
;PCODE: $00000550 VOL: 0
;PCODE: $00000551 VOL: 0
; 0000 03A2     }
; 0000 03A3 if(PORT_CZYTNIK.byte == 0x32)
;PCODE: $00000552 VOL: 0
;PCODE: $00000553 VOL: 0
;PCODE: $00000554 VOL: 0
;PCODE: $00000555 VOL: 0
; 0000 03A4     {
; 0000 03A5       komunikat_z_czytnika_kodow("86-1363",rzad);
;PCODE: $00000556 VOL: 0
;PCODE: $00000557 VOL: 0
;PCODE: $00000558 VOL: 0
;PCODE: $00000559 VOL: 0
;PCODE: $0000055A VOL: 0
; 0000 03A6       macierz_zaciskow[rzad]=50;
;PCODE: $0000055B VOL: 0
;PCODE: $0000055C VOL: 0
;PCODE: $0000055D VOL: 0
;PCODE: $0000055E VOL: 0
;PCODE: $0000055F VOL: 0
;PCODE: $00000560 VOL: 0
; 0000 03A7     }
; 0000 03A8 if(PORT_CZYTNIK.byte == 0x33)
;PCODE: $00000561 VOL: 0
;PCODE: $00000562 VOL: 0
;PCODE: $00000563 VOL: 0
;PCODE: $00000564 VOL: 0
; 0000 03A9     {
; 0000 03AA       komunikat_z_czytnika_kodow("86-1904",rzad);
;PCODE: $00000565 VOL: 0
;PCODE: $00000566 VOL: 0
;PCODE: $00000567 VOL: 0
;PCODE: $00000568 VOL: 0
;PCODE: $00000569 VOL: 0
; 0000 03AB       macierz_zaciskow[rzad]=51;
;PCODE: $0000056A VOL: 0
;PCODE: $0000056B VOL: 0
;PCODE: $0000056C VOL: 0
;PCODE: $0000056D VOL: 0
;PCODE: $0000056E VOL: 0
;PCODE: $0000056F VOL: 0
; 0000 03AC     }
; 0000 03AD if(PORT_CZYTNIK.byte == 0x34)
;PCODE: $00000570 VOL: 0
;PCODE: $00000571 VOL: 0
;PCODE: $00000572 VOL: 0
;PCODE: $00000573 VOL: 0
; 0000 03AE     {
; 0000 03AF       komunikat_z_czytnika_kodow("86-2241",rzad);
;PCODE: $00000574 VOL: 0
;PCODE: $00000575 VOL: 0
;PCODE: $00000576 VOL: 0
;PCODE: $00000577 VOL: 0
;PCODE: $00000578 VOL: 0
; 0000 03B0       macierz_zaciskow[rzad]=52;
;PCODE: $00000579 VOL: 0
;PCODE: $0000057A VOL: 0
;PCODE: $0000057B VOL: 0
;PCODE: $0000057C VOL: 0
;PCODE: $0000057D VOL: 0
;PCODE: $0000057E VOL: 0
; 0000 03B1     }
; 0000 03B2 if(PORT_CZYTNIK.byte == 0x35)
;PCODE: $0000057F VOL: 0
;PCODE: $00000580 VOL: 0
;PCODE: $00000581 VOL: 0
;PCODE: $00000582 VOL: 0
; 0000 03B3     {
; 0000 03B4       komunikat_z_czytnika_kodow("87-0800",rzad);
;PCODE: $00000583 VOL: 0
;PCODE: $00000584 VOL: 0
;PCODE: $00000585 VOL: 0
;PCODE: $00000586 VOL: 0
;PCODE: $00000587 VOL: 0
; 0000 03B5       macierz_zaciskow[rzad]=53;
;PCODE: $00000588 VOL: 0
;PCODE: $00000589 VOL: 0
;PCODE: $0000058A VOL: 0
;PCODE: $0000058B VOL: 0
;PCODE: $0000058C VOL: 0
;PCODE: $0000058D VOL: 0
; 0000 03B6     }
; 0000 03B7 
; 0000 03B8 if(PORT_CZYTNIK.byte == 0x36)
;PCODE: $0000058E VOL: 0
;PCODE: $0000058F VOL: 0
;PCODE: $00000590 VOL: 0
;PCODE: $00000591 VOL: 0
; 0000 03B9     {
; 0000 03BA       komunikat_z_czytnika_kodow("87-1363",rzad);
;PCODE: $00000592 VOL: 0
;PCODE: $00000593 VOL: 0
;PCODE: $00000594 VOL: 0
;PCODE: $00000595 VOL: 0
;PCODE: $00000596 VOL: 0
; 0000 03BB       macierz_zaciskow[rzad]=54;
;PCODE: $00000597 VOL: 0
;PCODE: $00000598 VOL: 0
;PCODE: $00000599 VOL: 0
;PCODE: $0000059A VOL: 0
;PCODE: $0000059B VOL: 0
;PCODE: $0000059C VOL: 0
; 0000 03BC     }
; 0000 03BD if(PORT_CZYTNIK.byte == 0x37)
;PCODE: $0000059D VOL: 0
;PCODE: $0000059E VOL: 0
;PCODE: $0000059F VOL: 0
;PCODE: $000005A0 VOL: 0
; 0000 03BE     {
; 0000 03BF       komunikat_z_czytnika_kodow("87-1904",rzad);
;PCODE: $000005A1 VOL: 0
;PCODE: $000005A2 VOL: 0
;PCODE: $000005A3 VOL: 0
;PCODE: $000005A4 VOL: 0
;PCODE: $000005A5 VOL: 0
; 0000 03C0       macierz_zaciskow[rzad]=55;
;PCODE: $000005A6 VOL: 0
;PCODE: $000005A7 VOL: 0
;PCODE: $000005A8 VOL: 0
;PCODE: $000005A9 VOL: 0
;PCODE: $000005AA VOL: 0
;PCODE: $000005AB VOL: 0
; 0000 03C1     }
; 0000 03C2 if(PORT_CZYTNIK.byte == 0x38)
;PCODE: $000005AC VOL: 0
;PCODE: $000005AD VOL: 0
;PCODE: $000005AE VOL: 0
;PCODE: $000005AF VOL: 0
; 0000 03C3     {
; 0000 03C4       komunikat_z_czytnika_kodow("87-2241",rzad);
;PCODE: $000005B0 VOL: 0
;PCODE: $000005B1 VOL: 0
;PCODE: $000005B2 VOL: 0
;PCODE: $000005B3 VOL: 0
;PCODE: $000005B4 VOL: 0
; 0000 03C5       macierz_zaciskow[rzad]=56;
;PCODE: $000005B5 VOL: 0
;PCODE: $000005B6 VOL: 0
;PCODE: $000005B7 VOL: 0
;PCODE: $000005B8 VOL: 0
;PCODE: $000005B9 VOL: 0
;PCODE: $000005BA VOL: 0
; 0000 03C6     }
; 0000 03C7 if(PORT_CZYTNIK.byte == 0x39)
;PCODE: $000005BB VOL: 0
;PCODE: $000005BC VOL: 0
;PCODE: $000005BD VOL: 0
;PCODE: $000005BE VOL: 0
; 0000 03C8     {
; 0000 03C9       komunikat_z_czytnika_kodow("86-0811",rzad);
;PCODE: $000005BF VOL: 0
;PCODE: $000005C0 VOL: 0
;PCODE: $000005C1 VOL: 0
;PCODE: $000005C2 VOL: 0
;PCODE: $000005C3 VOL: 0
; 0000 03CA       macierz_zaciskow[rzad]=57;
;PCODE: $000005C4 VOL: 0
;PCODE: $000005C5 VOL: 0
;PCODE: $000005C6 VOL: 0
;PCODE: $000005C7 VOL: 0
;PCODE: $000005C8 VOL: 0
;PCODE: $000005C9 VOL: 0
; 0000 03CB     }
; 0000 03CC if(PORT_CZYTNIK.byte == 0x3A)
;PCODE: $000005CA VOL: 0
;PCODE: $000005CB VOL: 0
;PCODE: $000005CC VOL: 0
;PCODE: $000005CD VOL: 0
; 0000 03CD     {
; 0000 03CE       komunikat_z_czytnika_kodow("86-1523",rzad);
;PCODE: $000005CE VOL: 0
;PCODE: $000005CF VOL: 0
;PCODE: $000005D0 VOL: 0
;PCODE: $000005D1 VOL: 0
;PCODE: $000005D2 VOL: 0
; 0000 03CF       macierz_zaciskow[rzad]=58;
;PCODE: $000005D3 VOL: 0
;PCODE: $000005D4 VOL: 0
;PCODE: $000005D5 VOL: 0
;PCODE: $000005D6 VOL: 0
;PCODE: $000005D7 VOL: 0
;PCODE: $000005D8 VOL: 0
; 0000 03D0     }
; 0000 03D1 if(PORT_CZYTNIK.byte == 0x3B)
;PCODE: $000005D9 VOL: 0
;PCODE: $000005DA VOL: 0
;PCODE: $000005DB VOL: 0
;PCODE: $000005DC VOL: 0
; 0000 03D2     {
; 0000 03D3       komunikat_z_czytnika_kodow("86-1929",rzad);
;PCODE: $000005DD VOL: 0
;PCODE: $000005DE VOL: 0
;PCODE: $000005DF VOL: 0
;PCODE: $000005E0 VOL: 0
;PCODE: $000005E1 VOL: 0
; 0000 03D4       macierz_zaciskow[rzad]=59;
;PCODE: $000005E2 VOL: 0
;PCODE: $000005E3 VOL: 0
;PCODE: $000005E4 VOL: 0
;PCODE: $000005E5 VOL: 0
;PCODE: $000005E6 VOL: 0
;PCODE: $000005E7 VOL: 0
; 0000 03D5     }
; 0000 03D6 if(PORT_CZYTNIK.byte == 0x3C)
;PCODE: $000005E8 VOL: 0
;PCODE: $000005E9 VOL: 0
;PCODE: $000005EA VOL: 0
;PCODE: $000005EB VOL: 0
; 0000 03D7     {
; 0000 03D8       komunikat_z_czytnika_kodow("86-2261",rzad);
;PCODE: $000005EC VOL: 0
;PCODE: $000005ED VOL: 0
;PCODE: $000005EE VOL: 0
;PCODE: $000005EF VOL: 0
;PCODE: $000005F0 VOL: 0
; 0000 03D9       macierz_zaciskow[rzad]=60;
;PCODE: $000005F1 VOL: 0
;PCODE: $000005F2 VOL: 0
;PCODE: $000005F3 VOL: 0
;PCODE: $000005F4 VOL: 0
;PCODE: $000005F5 VOL: 0
;PCODE: $000005F6 VOL: 0
; 0000 03DA     }
; 0000 03DB if(PORT_CZYTNIK.byte == 0x3D)
;PCODE: $000005F7 VOL: 0
;PCODE: $000005F8 VOL: 0
;PCODE: $000005F9 VOL: 0
;PCODE: $000005FA VOL: 0
; 0000 03DC     {
; 0000 03DD       komunikat_z_czytnika_kodow("87-0811",rzad);
;PCODE: $000005FB VOL: 0
;PCODE: $000005FC VOL: 0
;PCODE: $000005FD VOL: 0
;PCODE: $000005FE VOL: 0
;PCODE: $000005FF VOL: 0
; 0000 03DE       macierz_zaciskow[rzad]=61;
;PCODE: $00000600 VOL: 0
;PCODE: $00000601 VOL: 0
;PCODE: $00000602 VOL: 0
;PCODE: $00000603 VOL: 0
;PCODE: $00000604 VOL: 0
;PCODE: $00000605 VOL: 0
; 0000 03DF     }
; 0000 03E0 if(PORT_CZYTNIK.byte == 0x3E)
;PCODE: $00000606 VOL: 0
;PCODE: $00000607 VOL: 0
;PCODE: $00000608 VOL: 0
;PCODE: $00000609 VOL: 0
; 0000 03E1     {
; 0000 03E2       komunikat_z_czytnika_kodow("87-1523",rzad);
;PCODE: $0000060A VOL: 0
;PCODE: $0000060B VOL: 0
;PCODE: $0000060C VOL: 0
;PCODE: $0000060D VOL: 0
;PCODE: $0000060E VOL: 0
; 0000 03E3       macierz_zaciskow[rzad]=62;
;PCODE: $0000060F VOL: 0
;PCODE: $00000610 VOL: 0
;PCODE: $00000611 VOL: 0
;PCODE: $00000612 VOL: 0
;PCODE: $00000613 VOL: 0
;PCODE: $00000614 VOL: 0
; 0000 03E4     }
; 0000 03E5 if(PORT_CZYTNIK.byte == 0x3F)
;PCODE: $00000615 VOL: 0
;PCODE: $00000616 VOL: 0
;PCODE: $00000617 VOL: 0
;PCODE: $00000618 VOL: 0
; 0000 03E6     {
; 0000 03E7       komunikat_z_czytnika_kodow("87-1929",rzad);
;PCODE: $00000619 VOL: 0
;PCODE: $0000061A VOL: 0
;PCODE: $0000061B VOL: 0
;PCODE: $0000061C VOL: 0
;PCODE: $0000061D VOL: 0
; 0000 03E8       macierz_zaciskow[rzad]=63;
;PCODE: $0000061E VOL: 0
;PCODE: $0000061F VOL: 0
;PCODE: $00000620 VOL: 0
;PCODE: $00000621 VOL: 0
;PCODE: $00000622 VOL: 0
;PCODE: $00000623 VOL: 0
; 0000 03E9     }
; 0000 03EA if(PORT_CZYTNIK.byte == 0x40)
;PCODE: $00000624 VOL: 0
;PCODE: $00000625 VOL: 0
;PCODE: $00000626 VOL: 0
;PCODE: $00000627 VOL: 0
; 0000 03EB     {
; 0000 03EC       komunikat_z_czytnika_kodow("87-2261",rzad);
;PCODE: $00000628 VOL: 0
;PCODE: $00000629 VOL: 0
;PCODE: $0000062A VOL: 0
;PCODE: $0000062B VOL: 0
;PCODE: $0000062C VOL: 0
; 0000 03ED       macierz_zaciskow[rzad]=64;
;PCODE: $0000062D VOL: 0
;PCODE: $0000062E VOL: 0
;PCODE: $0000062F VOL: 0
;PCODE: $00000630 VOL: 0
;PCODE: $00000631 VOL: 0
;PCODE: $00000632 VOL: 0
; 0000 03EE     }
; 0000 03EF if(PORT_CZYTNIK.byte == 0x41)
;PCODE: $00000633 VOL: 0
;PCODE: $00000634 VOL: 0
;PCODE: $00000635 VOL: 0
;PCODE: $00000636 VOL: 0
; 0000 03F0     {
; 0000 03F1       komunikat_z_czytnika_kodow("86-0814",rzad);
;PCODE: $00000637 VOL: 0
;PCODE: $00000638 VOL: 0
;PCODE: $00000639 VOL: 0
;PCODE: $0000063A VOL: 0
;PCODE: $0000063B VOL: 0
; 0000 03F2       macierz_zaciskow[rzad]=65;
;PCODE: $0000063C VOL: 0
;PCODE: $0000063D VOL: 0
;PCODE: $0000063E VOL: 0
;PCODE: $0000063F VOL: 0
;PCODE: $00000640 VOL: 0
;PCODE: $00000641 VOL: 0
; 0000 03F3     }
; 0000 03F4 if(PORT_CZYTNIK.byte == 0x42)
;PCODE: $00000642 VOL: 0
;PCODE: $00000643 VOL: 0
;PCODE: $00000644 VOL: 0
;PCODE: $00000645 VOL: 0
; 0000 03F5     {
; 0000 03F6       komunikat_z_czytnika_kodow("86-1530",rzad);
;PCODE: $00000646 VOL: 0
;PCODE: $00000647 VOL: 0
;PCODE: $00000648 VOL: 0
;PCODE: $00000649 VOL: 0
;PCODE: $0000064A VOL: 0
; 0000 03F7       macierz_zaciskow[rzad]=66;
;PCODE: $0000064B VOL: 0
;PCODE: $0000064C VOL: 0
;PCODE: $0000064D VOL: 0
;PCODE: $0000064E VOL: 0
;PCODE: $0000064F VOL: 0
;PCODE: $00000650 VOL: 0
; 0000 03F8     }
; 0000 03F9 if(PORT_CZYTNIK.byte == 0x43)
;PCODE: $00000651 VOL: 0
;PCODE: $00000652 VOL: 0
;PCODE: $00000653 VOL: 0
;PCODE: $00000654 VOL: 0
; 0000 03FA     {
; 0000 03FB       komunikat_z_czytnika_kodow("86-1936",rzad);
;PCODE: $00000655 VOL: 0
;PCODE: $00000656 VOL: 0
;PCODE: $00000657 VOL: 0
;PCODE: $00000658 VOL: 0
;PCODE: $00000659 VOL: 0
; 0000 03FC       macierz_zaciskow[rzad]=67;
;PCODE: $0000065A VOL: 0
;PCODE: $0000065B VOL: 0
;PCODE: $0000065C VOL: 0
;PCODE: $0000065D VOL: 0
;PCODE: $0000065E VOL: 0
;PCODE: $0000065F VOL: 0
; 0000 03FD     }
; 0000 03FE if(PORT_CZYTNIK.byte == 0x44)
;PCODE: $00000660 VOL: 0
;PCODE: $00000661 VOL: 0
;PCODE: $00000662 VOL: 0
;PCODE: $00000663 VOL: 0
; 0000 03FF     {
; 0000 0400       komunikat_z_czytnika_kodow("86-2285",rzad);
;PCODE: $00000664 VOL: 0
;PCODE: $00000665 VOL: 0
;PCODE: $00000666 VOL: 0
;PCODE: $00000667 VOL: 0
;PCODE: $00000668 VOL: 0
; 0000 0401       macierz_zaciskow[rzad]=68;
;PCODE: $00000669 VOL: 0
;PCODE: $0000066A VOL: 0
;PCODE: $0000066B VOL: 0
;PCODE: $0000066C VOL: 0
;PCODE: $0000066D VOL: 0
;PCODE: $0000066E VOL: 0
; 0000 0402     }
; 0000 0403 if(PORT_CZYTNIK.byte == 0x45)
;PCODE: $0000066F VOL: 0
;PCODE: $00000670 VOL: 0
;PCODE: $00000671 VOL: 0
;PCODE: $00000672 VOL: 0
; 0000 0404     {
; 0000 0405       komunikat_z_czytnika_kodow("87-0814",rzad);
;PCODE: $00000673 VOL: 0
;PCODE: $00000674 VOL: 0
;PCODE: $00000675 VOL: 0
;PCODE: $00000676 VOL: 0
;PCODE: $00000677 VOL: 0
; 0000 0406       macierz_zaciskow[rzad]=69;
;PCODE: $00000678 VOL: 0
;PCODE: $00000679 VOL: 0
;PCODE: $0000067A VOL: 0
;PCODE: $0000067B VOL: 0
;PCODE: $0000067C VOL: 0
;PCODE: $0000067D VOL: 0
; 0000 0407     }
; 0000 0408 if(PORT_CZYTNIK.byte == 0x46)
;PCODE: $0000067E VOL: 0
;PCODE: $0000067F VOL: 0
;PCODE: $00000680 VOL: 0
;PCODE: $00000681 VOL: 0
; 0000 0409     {
; 0000 040A       komunikat_z_czytnika_kodow("87-1530",rzad);
;PCODE: $00000682 VOL: 0
;PCODE: $00000683 VOL: 0
;PCODE: $00000684 VOL: 0
;PCODE: $00000685 VOL: 0
;PCODE: $00000686 VOL: 0
; 0000 040B       macierz_zaciskow[rzad]=70;
;PCODE: $00000687 VOL: 0
;PCODE: $00000688 VOL: 0
;PCODE: $00000689 VOL: 0
;PCODE: $0000068A VOL: 0
;PCODE: $0000068B VOL: 0
;PCODE: $0000068C VOL: 0
; 0000 040C     }
; 0000 040D if(PORT_CZYTNIK.byte == 0x47)
;PCODE: $0000068D VOL: 0
;PCODE: $0000068E VOL: 0
;PCODE: $0000068F VOL: 0
;PCODE: $00000690 VOL: 0
; 0000 040E     {
; 0000 040F       komunikat_z_czytnika_kodow("87-1936",rzad);
;PCODE: $00000691 VOL: 0
;PCODE: $00000692 VOL: 0
;PCODE: $00000693 VOL: 0
;PCODE: $00000694 VOL: 0
;PCODE: $00000695 VOL: 0
; 0000 0410       macierz_zaciskow[rzad]=71;
;PCODE: $00000696 VOL: 0
;PCODE: $00000697 VOL: 0
;PCODE: $00000698 VOL: 0
;PCODE: $00000699 VOL: 0
;PCODE: $0000069A VOL: 0
;PCODE: $0000069B VOL: 0
; 0000 0411     }
; 0000 0412 if(PORT_CZYTNIK.byte == 0x48)
;PCODE: $0000069C VOL: 0
;PCODE: $0000069D VOL: 0
;PCODE: $0000069E VOL: 0
;PCODE: $0000069F VOL: 0
; 0000 0413     {
; 0000 0414       komunikat_z_czytnika_kodow("87-2285",rzad);
;PCODE: $000006A0 VOL: 0
;PCODE: $000006A1 VOL: 0
;PCODE: $000006A2 VOL: 0
;PCODE: $000006A3 VOL: 0
;PCODE: $000006A4 VOL: 0
; 0000 0415       macierz_zaciskow[rzad]=72;
;PCODE: $000006A5 VOL: 0
;PCODE: $000006A6 VOL: 0
;PCODE: $000006A7 VOL: 0
;PCODE: $000006A8 VOL: 0
;PCODE: $000006A9 VOL: 0
;PCODE: $000006AA VOL: 0
; 0000 0416     }
; 0000 0417 if(PORT_CZYTNIK.byte == 0x49)
;PCODE: $000006AB VOL: 0
;PCODE: $000006AC VOL: 0
;PCODE: $000006AD VOL: 0
;PCODE: $000006AE VOL: 0
; 0000 0418     {
; 0000 0419       komunikat_z_czytnika_kodow("86-0815",rzad);
;PCODE: $000006AF VOL: 0
;PCODE: $000006B0 VOL: 0
;PCODE: $000006B1 VOL: 0
;PCODE: $000006B2 VOL: 0
;PCODE: $000006B3 VOL: 0
; 0000 041A       macierz_zaciskow[rzad]=73;
;PCODE: $000006B4 VOL: 0
;PCODE: $000006B5 VOL: 0
;PCODE: $000006B6 VOL: 0
;PCODE: $000006B7 VOL: 0
;PCODE: $000006B8 VOL: 0
;PCODE: $000006B9 VOL: 0
; 0000 041B     }
; 0000 041C 
; 0000 041D if(PORT_CZYTNIK.byte == 0x4A)
;PCODE: $000006BA VOL: 0
;PCODE: $000006BB VOL: 0
;PCODE: $000006BC VOL: 0
;PCODE: $000006BD VOL: 0
; 0000 041E     {
; 0000 041F       komunikat_z_czytnika_kodow("86-1551",rzad);
;PCODE: $000006BE VOL: 0
;PCODE: $000006BF VOL: 0
;PCODE: $000006C0 VOL: 0
;PCODE: $000006C1 VOL: 0
;PCODE: $000006C2 VOL: 0
; 0000 0420       macierz_zaciskow[rzad]=74;
;PCODE: $000006C3 VOL: 0
;PCODE: $000006C4 VOL: 0
;PCODE: $000006C5 VOL: 0
;PCODE: $000006C6 VOL: 0
;PCODE: $000006C7 VOL: 0
;PCODE: $000006C8 VOL: 0
; 0000 0421     }
; 0000 0422 if(PORT_CZYTNIK.byte == 0x4B)
;PCODE: $000006C9 VOL: 0
;PCODE: $000006CA VOL: 0
;PCODE: $000006CB VOL: 0
;PCODE: $000006CC VOL: 0
; 0000 0423     {
; 0000 0424       komunikat_z_czytnika_kodow("86-1941",rzad);
;PCODE: $000006CD VOL: 0
;PCODE: $000006CE VOL: 0
;PCODE: $000006CF VOL: 0
;PCODE: $000006D0 VOL: 0
;PCODE: $000006D1 VOL: 0
; 0000 0425       macierz_zaciskow[rzad]=75;
;PCODE: $000006D2 VOL: 0
;PCODE: $000006D3 VOL: 0
;PCODE: $000006D4 VOL: 0
;PCODE: $000006D5 VOL: 0
;PCODE: $000006D6 VOL: 0
;PCODE: $000006D7 VOL: 0
; 0000 0426     }
; 0000 0427 if(PORT_CZYTNIK.byte == 0x4C)
;PCODE: $000006D8 VOL: 0
;PCODE: $000006D9 VOL: 0
;PCODE: $000006DA VOL: 0
;PCODE: $000006DB VOL: 0
; 0000 0428     {
; 0000 0429       komunikat_z_czytnika_kodow("86-2286",rzad);
;PCODE: $000006DC VOL: 0
;PCODE: $000006DD VOL: 0
;PCODE: $000006DE VOL: 0
;PCODE: $000006DF VOL: 0
;PCODE: $000006E0 VOL: 0
; 0000 042A       macierz_zaciskow[rzad]=76;
;PCODE: $000006E1 VOL: 0
;PCODE: $000006E2 VOL: 0
;PCODE: $000006E3 VOL: 0
;PCODE: $000006E4 VOL: 0
;PCODE: $000006E5 VOL: 0
;PCODE: $000006E6 VOL: 0
; 0000 042B     }
; 0000 042C if(PORT_CZYTNIK.byte == 0x4D)
;PCODE: $000006E7 VOL: 0
;PCODE: $000006E8 VOL: 0
;PCODE: $000006E9 VOL: 0
;PCODE: $000006EA VOL: 0
; 0000 042D     {
; 0000 042E       komunikat_z_czytnika_kodow("87-0815",rzad);
;PCODE: $000006EB VOL: 0
;PCODE: $000006EC VOL: 0
;PCODE: $000006ED VOL: 0
;PCODE: $000006EE VOL: 0
;PCODE: $000006EF VOL: 0
; 0000 042F       macierz_zaciskow[rzad]=77;
;PCODE: $000006F0 VOL: 0
;PCODE: $000006F1 VOL: 0
;PCODE: $000006F2 VOL: 0
;PCODE: $000006F3 VOL: 0
;PCODE: $000006F4 VOL: 0
;PCODE: $000006F5 VOL: 0
; 0000 0430     }
; 0000 0431 if(PORT_CZYTNIK.byte == 0x4E)
;PCODE: $000006F6 VOL: 0
;PCODE: $000006F7 VOL: 0
;PCODE: $000006F8 VOL: 0
;PCODE: $000006F9 VOL: 0
; 0000 0432     {
; 0000 0433       komunikat_z_czytnika_kodow("87-1551",rzad);
;PCODE: $000006FA VOL: 0
;PCODE: $000006FB VOL: 0
;PCODE: $000006FC VOL: 0
;PCODE: $000006FD VOL: 0
;PCODE: $000006FE VOL: 0
; 0000 0434       macierz_zaciskow[rzad]=78;
;PCODE: $000006FF VOL: 0
;PCODE: $00000700 VOL: 0
;PCODE: $00000701 VOL: 0
;PCODE: $00000702 VOL: 0
;PCODE: $00000703 VOL: 0
;PCODE: $00000704 VOL: 0
; 0000 0435     }
; 0000 0436 if(PORT_CZYTNIK.byte == 0x4F)
;PCODE: $00000705 VOL: 0
;PCODE: $00000706 VOL: 0
;PCODE: $00000707 VOL: 0
;PCODE: $00000708 VOL: 0
; 0000 0437     {
; 0000 0438       komunikat_z_czytnika_kodow("87-1941",rzad);
;PCODE: $00000709 VOL: 0
;PCODE: $0000070A VOL: 0
;PCODE: $0000070B VOL: 0
;PCODE: $0000070C VOL: 0
;PCODE: $0000070D VOL: 0
; 0000 0439       macierz_zaciskow[rzad]=79;
;PCODE: $0000070E VOL: 0
;PCODE: $0000070F VOL: 0
;PCODE: $00000710 VOL: 0
;PCODE: $00000711 VOL: 0
;PCODE: $00000712 VOL: 0
;PCODE: $00000713 VOL: 0
; 0000 043A     }
; 0000 043B if(PORT_CZYTNIK.byte == 0x50)
;PCODE: $00000714 VOL: 0
;PCODE: $00000715 VOL: 0
;PCODE: $00000716 VOL: 0
;PCODE: $00000717 VOL: 0
; 0000 043C     {
; 0000 043D       komunikat_z_czytnika_kodow("87-2286",rzad);
;PCODE: $00000718 VOL: 0
;PCODE: $00000719 VOL: 0
;PCODE: $0000071A VOL: 0
;PCODE: $0000071B VOL: 0
;PCODE: $0000071C VOL: 0
; 0000 043E       macierz_zaciskow[rzad]=80;
;PCODE: $0000071D VOL: 0
;PCODE: $0000071E VOL: 0
;PCODE: $0000071F VOL: 0
;PCODE: $00000720 VOL: 0
;PCODE: $00000721 VOL: 0
;PCODE: $00000722 VOL: 0
; 0000 043F     }
; 0000 0440 if(PORT_CZYTNIK.byte == 0x51)
;PCODE: $00000723 VOL: 0
;PCODE: $00000724 VOL: 0
;PCODE: $00000725 VOL: 0
;PCODE: $00000726 VOL: 0
; 0000 0441     {
; 0000 0442       komunikat_z_czytnika_kodow("86-0816",rzad);
;PCODE: $00000727 VOL: 0
;PCODE: $00000728 VOL: 0
;PCODE: $00000729 VOL: 0
;PCODE: $0000072A VOL: 0
;PCODE: $0000072B VOL: 0
; 0000 0443       macierz_zaciskow[rzad]=81;
;PCODE: $0000072C VOL: 0
;PCODE: $0000072D VOL: 0
;PCODE: $0000072E VOL: 0
;PCODE: $0000072F VOL: 0
;PCODE: $00000730 VOL: 0
;PCODE: $00000731 VOL: 0
; 0000 0444     }
; 0000 0445 if(PORT_CZYTNIK.byte == 0x52)
;PCODE: $00000732 VOL: 0
;PCODE: $00000733 VOL: 0
;PCODE: $00000734 VOL: 0
;PCODE: $00000735 VOL: 0
; 0000 0446     {
; 0000 0447       komunikat_z_czytnika_kodow("86-1552",rzad);
;PCODE: $00000736 VOL: 0
;PCODE: $00000737 VOL: 0
;PCODE: $00000738 VOL: 0
;PCODE: $00000739 VOL: 0
;PCODE: $0000073A VOL: 0
; 0000 0448       macierz_zaciskow[rzad]=82;
;PCODE: $0000073B VOL: 0
;PCODE: $0000073C VOL: 0
;PCODE: $0000073D VOL: 0
;PCODE: $0000073E VOL: 0
;PCODE: $0000073F VOL: 0
;PCODE: $00000740 VOL: 0
; 0000 0449     }
; 0000 044A if(PORT_CZYTNIK.byte == 0x53)
;PCODE: $00000741 VOL: 0
;PCODE: $00000742 VOL: 0
;PCODE: $00000743 VOL: 0
;PCODE: $00000744 VOL: 0
; 0000 044B     {
; 0000 044C       komunikat_z_czytnika_kodow("86-2007",rzad);
;PCODE: $00000745 VOL: 0
;PCODE: $00000746 VOL: 0
;PCODE: $00000747 VOL: 0
;PCODE: $00000748 VOL: 0
;PCODE: $00000749 VOL: 0
; 0000 044D       macierz_zaciskow[rzad]=83;
;PCODE: $0000074A VOL: 0
;PCODE: $0000074B VOL: 0
;PCODE: $0000074C VOL: 0
;PCODE: $0000074D VOL: 0
;PCODE: $0000074E VOL: 0
;PCODE: $0000074F VOL: 0
; 0000 044E     }
; 0000 044F if(PORT_CZYTNIK.byte == 0x54)
;PCODE: $00000750 VOL: 0
;PCODE: $00000751 VOL: 0
;PCODE: $00000752 VOL: 0
;PCODE: $00000753 VOL: 0
; 0000 0450     {
; 0000 0451       komunikat_z_czytnika_kodow("86-2292",rzad);
;PCODE: $00000754 VOL: 0
;PCODE: $00000755 VOL: 0
;PCODE: $00000756 VOL: 0
;PCODE: $00000757 VOL: 0
;PCODE: $00000758 VOL: 0
; 0000 0452       macierz_zaciskow[rzad]=84;
;PCODE: $00000759 VOL: 0
;PCODE: $0000075A VOL: 0
;PCODE: $0000075B VOL: 0
;PCODE: $0000075C VOL: 0
;PCODE: $0000075D VOL: 0
;PCODE: $0000075E VOL: 0
; 0000 0453     }
; 0000 0454 if(PORT_CZYTNIK.byte == 0x55)
;PCODE: $0000075F VOL: 0
;PCODE: $00000760 VOL: 0
;PCODE: $00000761 VOL: 0
;PCODE: $00000762 VOL: 0
; 0000 0455     {
; 0000 0456       komunikat_z_czytnika_kodow("87-0816",rzad);
;PCODE: $00000763 VOL: 0
;PCODE: $00000764 VOL: 0
;PCODE: $00000765 VOL: 0
;PCODE: $00000766 VOL: 0
;PCODE: $00000767 VOL: 0
; 0000 0457       macierz_zaciskow[rzad]=85;
;PCODE: $00000768 VOL: 0
;PCODE: $00000769 VOL: 0
;PCODE: $0000076A VOL: 0
;PCODE: $0000076B VOL: 0
;PCODE: $0000076C VOL: 0
;PCODE: $0000076D VOL: 0
; 0000 0458      }
; 0000 0459 if(PORT_CZYTNIK.byte == 0x56)
;PCODE: $0000076E VOL: 0
;PCODE: $0000076F VOL: 0
;PCODE: $00000770 VOL: 0
;PCODE: $00000771 VOL: 0
; 0000 045A     {
; 0000 045B       komunikat_z_czytnika_kodow("87-1552",rzad);
;PCODE: $00000772 VOL: 0
;PCODE: $00000773 VOL: 0
;PCODE: $00000774 VOL: 0
;PCODE: $00000775 VOL: 0
;PCODE: $00000776 VOL: 0
; 0000 045C       macierz_zaciskow[rzad]=86;
;PCODE: $00000777 VOL: 0
;PCODE: $00000778 VOL: 0
;PCODE: $00000779 VOL: 0
;PCODE: $0000077A VOL: 0
;PCODE: $0000077B VOL: 0
;PCODE: $0000077C VOL: 0
; 0000 045D     }
; 0000 045E if(PORT_CZYTNIK.byte == 0x57)
;PCODE: $0000077D VOL: 0
;PCODE: $0000077E VOL: 0
;PCODE: $0000077F VOL: 0
;PCODE: $00000780 VOL: 0
; 0000 045F     {
; 0000 0460       komunikat_z_czytnika_kodow("87-2007",rzad);
;PCODE: $00000781 VOL: 0
;PCODE: $00000782 VOL: 0
;PCODE: $00000783 VOL: 0
;PCODE: $00000784 VOL: 0
;PCODE: $00000785 VOL: 0
; 0000 0461       macierz_zaciskow[rzad]=87;
;PCODE: $00000786 VOL: 0
;PCODE: $00000787 VOL: 0
;PCODE: $00000788 VOL: 0
;PCODE: $00000789 VOL: 0
;PCODE: $0000078A VOL: 0
;PCODE: $0000078B VOL: 0
; 0000 0462     }
; 0000 0463 if(PORT_CZYTNIK.byte == 0x58)
;PCODE: $0000078C VOL: 0
;PCODE: $0000078D VOL: 0
;PCODE: $0000078E VOL: 0
;PCODE: $0000078F VOL: 0
; 0000 0464     {
; 0000 0465       komunikat_z_czytnika_kodow("87-2292",rzad);
;PCODE: $00000790 VOL: 0
;PCODE: $00000791 VOL: 0
;PCODE: $00000792 VOL: 0
;PCODE: $00000793 VOL: 0
;PCODE: $00000794 VOL: 0
; 0000 0466       macierz_zaciskow[rzad]=88;
;PCODE: $00000795 VOL: 0
;PCODE: $00000796 VOL: 0
;PCODE: $00000797 VOL: 0
;PCODE: $00000798 VOL: 0
;PCODE: $00000799 VOL: 0
;PCODE: $0000079A VOL: 0
; 0000 0467     }
; 0000 0468 if(PORT_CZYTNIK.byte == 0x59)
;PCODE: $0000079B VOL: 0
;PCODE: $0000079C VOL: 0
;PCODE: $0000079D VOL: 0
;PCODE: $0000079E VOL: 0
; 0000 0469     {
; 0000 046A       komunikat_z_czytnika_kodow("86-0817",rzad);
;PCODE: $0000079F VOL: 0
;PCODE: $000007A0 VOL: 0
;PCODE: $000007A1 VOL: 0
;PCODE: $000007A2 VOL: 0
;PCODE: $000007A3 VOL: 0
; 0000 046B       macierz_zaciskow[rzad]=89;
;PCODE: $000007A4 VOL: 0
;PCODE: $000007A5 VOL: 0
;PCODE: $000007A6 VOL: 0
;PCODE: $000007A7 VOL: 0
;PCODE: $000007A8 VOL: 0
;PCODE: $000007A9 VOL: 0
; 0000 046C     }
; 0000 046D if(PORT_CZYTNIK.byte == 0x5A)
;PCODE: $000007AA VOL: 0
;PCODE: $000007AB VOL: 0
;PCODE: $000007AC VOL: 0
;PCODE: $000007AD VOL: 0
; 0000 046E     {
; 0000 046F       komunikat_z_czytnika_kodow("86-1602",rzad);
;PCODE: $000007AE VOL: 0
;PCODE: $000007AF VOL: 0
;PCODE: $000007B0 VOL: 0
;PCODE: $000007B1 VOL: 0
;PCODE: $000007B2 VOL: 0
; 0000 0470       macierz_zaciskow[rzad]=90;
;PCODE: $000007B3 VOL: 0
;PCODE: $000007B4 VOL: 0
;PCODE: $000007B5 VOL: 0
;PCODE: $000007B6 VOL: 0
;PCODE: $000007B7 VOL: 0
;PCODE: $000007B8 VOL: 0
; 0000 0471     }
; 0000 0472 if(PORT_CZYTNIK.byte == 0x5B)
;PCODE: $000007B9 VOL: 0
;PCODE: $000007BA VOL: 0
;PCODE: $000007BB VOL: 0
;PCODE: $000007BC VOL: 0
; 0000 0473     {
; 0000 0474       komunikat_z_czytnika_kodow("86-2017",rzad);
;PCODE: $000007BD VOL: 0
;PCODE: $000007BE VOL: 0
;PCODE: $000007BF VOL: 0
;PCODE: $000007C0 VOL: 0
;PCODE: $000007C1 VOL: 0
; 0000 0475       macierz_zaciskow[rzad]=91;
;PCODE: $000007C2 VOL: 0
;PCODE: $000007C3 VOL: 0
;PCODE: $000007C4 VOL: 0
;PCODE: $000007C5 VOL: 0
;PCODE: $000007C6 VOL: 0
;PCODE: $000007C7 VOL: 0
; 0000 0476     }
; 0000 0477 if(PORT_CZYTNIK.byte == 0x5C)
;PCODE: $000007C8 VOL: 0
;PCODE: $000007C9 VOL: 0
;PCODE: $000007CA VOL: 0
;PCODE: $000007CB VOL: 0
; 0000 0478     {
; 0000 0479       komunikat_z_czytnika_kodow("86-2384",rzad);
;PCODE: $000007CC VOL: 0
;PCODE: $000007CD VOL: 0
;PCODE: $000007CE VOL: 0
;PCODE: $000007CF VOL: 0
;PCODE: $000007D0 VOL: 0
; 0000 047A       macierz_zaciskow[rzad]=92;
;PCODE: $000007D1 VOL: 0
;PCODE: $000007D2 VOL: 0
;PCODE: $000007D3 VOL: 0
;PCODE: $000007D4 VOL: 0
;PCODE: $000007D5 VOL: 0
;PCODE: $000007D6 VOL: 0
; 0000 047B     }
; 0000 047C if(PORT_CZYTNIK.byte == 0x5D)
;PCODE: $000007D7 VOL: 0
;PCODE: $000007D8 VOL: 0
;PCODE: $000007D9 VOL: 0
;PCODE: $000007DA VOL: 0
; 0000 047D     {
; 0000 047E       komunikat_z_czytnika_kodow("87-0817",rzad);
;PCODE: $000007DB VOL: 0
;PCODE: $000007DC VOL: 0
;PCODE: $000007DD VOL: 0
;PCODE: $000007DE VOL: 0
;PCODE: $000007DF VOL: 0
; 0000 047F       macierz_zaciskow[rzad]=93;
;PCODE: $000007E0 VOL: 0
;PCODE: $000007E1 VOL: 0
;PCODE: $000007E2 VOL: 0
;PCODE: $000007E3 VOL: 0
;PCODE: $000007E4 VOL: 0
;PCODE: $000007E5 VOL: 0
; 0000 0480     }
; 0000 0481 if(PORT_CZYTNIK.byte == 0x5E)
;PCODE: $000007E6 VOL: 0
;PCODE: $000007E7 VOL: 0
;PCODE: $000007E8 VOL: 0
;PCODE: $000007E9 VOL: 0
; 0000 0482     {
; 0000 0483       komunikat_z_czytnika_kodow("87-1602",rzad);
;PCODE: $000007EA VOL: 0
;PCODE: $000007EB VOL: 0
;PCODE: $000007EC VOL: 0
;PCODE: $000007ED VOL: 0
;PCODE: $000007EE VOL: 0
; 0000 0484       macierz_zaciskow[rzad]=94;
;PCODE: $000007EF VOL: 0
;PCODE: $000007F0 VOL: 0
;PCODE: $000007F1 VOL: 0
;PCODE: $000007F2 VOL: 0
;PCODE: $000007F3 VOL: 0
;PCODE: $000007F4 VOL: 0
; 0000 0485     }
; 0000 0486 if(PORT_CZYTNIK.byte == 0x5F)
;PCODE: $000007F5 VOL: 0
;PCODE: $000007F6 VOL: 0
;PCODE: $000007F7 VOL: 0
;PCODE: $000007F8 VOL: 0
; 0000 0487     {
; 0000 0488       komunikat_z_czytnika_kodow("87-2017",rzad);
;PCODE: $000007F9 VOL: 0
;PCODE: $000007FA VOL: 0
;PCODE: $000007FB VOL: 0
;PCODE: $000007FC VOL: 0
;PCODE: $000007FD VOL: 0
; 0000 0489       macierz_zaciskow[rzad]=95;
;PCODE: $000007FE VOL: 0
;PCODE: $000007FF VOL: 0
;PCODE: $00000800 VOL: 0
;PCODE: $00000801 VOL: 0
;PCODE: $00000802 VOL: 0
;PCODE: $00000803 VOL: 0
; 0000 048A     }
; 0000 048B if(PORT_CZYTNIK.byte == 0x60)
;PCODE: $00000804 VOL: 0
;PCODE: $00000805 VOL: 0
;PCODE: $00000806 VOL: 0
;PCODE: $00000807 VOL: 0
; 0000 048C     {
; 0000 048D       komunikat_z_czytnika_kodow("87-2384",rzad);
;PCODE: $00000808 VOL: 0
;PCODE: $00000809 VOL: 0
;PCODE: $0000080A VOL: 0
;PCODE: $0000080B VOL: 0
;PCODE: $0000080C VOL: 0
; 0000 048E       macierz_zaciskow[rzad]=96;
;PCODE: $0000080D VOL: 0
;PCODE: $0000080E VOL: 0
;PCODE: $0000080F VOL: 0
;PCODE: $00000810 VOL: 0
;PCODE: $00000811 VOL: 0
;PCODE: $00000812 VOL: 0
; 0000 048F     }
; 0000 0490 
; 0000 0491 if(PORT_CZYTNIK.byte == 0x61)
;PCODE: $00000813 VOL: 0
;PCODE: $00000814 VOL: 0
;PCODE: $00000815 VOL: 0
;PCODE: $00000816 VOL: 0
; 0000 0492     {
; 0000 0493       komunikat_z_czytnika_kodow("86-0847",rzad);
;PCODE: $00000817 VOL: 0
;PCODE: $00000818 VOL: 0
;PCODE: $00000819 VOL: 0
;PCODE: $0000081A VOL: 0
;PCODE: $0000081B VOL: 0
; 0000 0494       macierz_zaciskow[rzad]=97;
;PCODE: $0000081C VOL: 0
;PCODE: $0000081D VOL: 0
;PCODE: $0000081E VOL: 0
;PCODE: $0000081F VOL: 0
;PCODE: $00000820 VOL: 0
;PCODE: $00000821 VOL: 0
; 0000 0495     }
; 0000 0496 
; 0000 0497 if(PORT_CZYTNIK.byte == 0x62)
;PCODE: $00000822 VOL: 0
;PCODE: $00000823 VOL: 0
;PCODE: $00000824 VOL: 0
;PCODE: $00000825 VOL: 0
; 0000 0498     {
; 0000 0499       komunikat_z_czytnika_kodow("86-1620",rzad);
;PCODE: $00000826 VOL: 0
;PCODE: $00000827 VOL: 0
;PCODE: $00000828 VOL: 0
;PCODE: $00000829 VOL: 0
;PCODE: $0000082A VOL: 0
; 0000 049A       macierz_zaciskow[rzad]=98;
;PCODE: $0000082B VOL: 0
;PCODE: $0000082C VOL: 0
;PCODE: $0000082D VOL: 0
;PCODE: $0000082E VOL: 0
;PCODE: $0000082F VOL: 0
;PCODE: $00000830 VOL: 0
; 0000 049B     }
; 0000 049C if(PORT_CZYTNIK.byte == 0x63)
;PCODE: $00000831 VOL: 0
;PCODE: $00000832 VOL: 0
;PCODE: $00000833 VOL: 0
;PCODE: $00000834 VOL: 0
; 0000 049D     {
; 0000 049E       komunikat_z_czytnika_kodow("86-2019",rzad);
;PCODE: $00000835 VOL: 0
;PCODE: $00000836 VOL: 0
;PCODE: $00000837 VOL: 0
;PCODE: $00000838 VOL: 0
;PCODE: $00000839 VOL: 0
; 0000 049F       macierz_zaciskow[rzad]=99;
;PCODE: $0000083A VOL: 0
;PCODE: $0000083B VOL: 0
;PCODE: $0000083C VOL: 0
;PCODE: $0000083D VOL: 0
;PCODE: $0000083E VOL: 0
;PCODE: $0000083F VOL: 0
; 0000 04A0     }
; 0000 04A1 if(PORT_CZYTNIK.byte == 0x64)
;PCODE: $00000840 VOL: 0
;PCODE: $00000841 VOL: 0
;PCODE: $00000842 VOL: 0
;PCODE: $00000843 VOL: 0
; 0000 04A2     {
; 0000 04A3       komunikat_z_czytnika_kodow("86-2385",rzad);
;PCODE: $00000844 VOL: 0
;PCODE: $00000845 VOL: 0
;PCODE: $00000846 VOL: 0
;PCODE: $00000847 VOL: 0
;PCODE: $00000848 VOL: 0
; 0000 04A4       macierz_zaciskow[rzad]=100;
;PCODE: $00000849 VOL: 0
;PCODE: $0000084A VOL: 0
;PCODE: $0000084B VOL: 0
;PCODE: $0000084C VOL: 0
;PCODE: $0000084D VOL: 0
;PCODE: $0000084E VOL: 0
; 0000 04A5     }
; 0000 04A6 if(PORT_CZYTNIK.byte == 0x65)
;PCODE: $0000084F VOL: 0
;PCODE: $00000850 VOL: 0
;PCODE: $00000851 VOL: 0
;PCODE: $00000852 VOL: 0
; 0000 04A7     {
; 0000 04A8       komunikat_z_czytnika_kodow("87-0847",rzad);
;PCODE: $00000853 VOL: 0
;PCODE: $00000854 VOL: 0
;PCODE: $00000855 VOL: 0
;PCODE: $00000856 VOL: 0
;PCODE: $00000857 VOL: 0
; 0000 04A9       macierz_zaciskow[rzad]=101;
;PCODE: $00000858 VOL: 0
;PCODE: $00000859 VOL: 0
;PCODE: $0000085A VOL: 0
;PCODE: $0000085B VOL: 0
;PCODE: $0000085C VOL: 0
;PCODE: $0000085D VOL: 0
; 0000 04AA     }
; 0000 04AB if(PORT_CZYTNIK.byte == 0x66)
;PCODE: $0000085E VOL: 0
;PCODE: $0000085F VOL: 0
;PCODE: $00000860 VOL: 0
;PCODE: $00000861 VOL: 0
; 0000 04AC     {
; 0000 04AD       komunikat_z_czytnika_kodow("87-1620",rzad);
;PCODE: $00000862 VOL: 0
;PCODE: $00000863 VOL: 0
;PCODE: $00000864 VOL: 0
;PCODE: $00000865 VOL: 0
;PCODE: $00000866 VOL: 0
; 0000 04AE       macierz_zaciskow[rzad]=102;
;PCODE: $00000867 VOL: 0
;PCODE: $00000868 VOL: 0
;PCODE: $00000869 VOL: 0
;PCODE: $0000086A VOL: 0
;PCODE: $0000086B VOL: 0
;PCODE: $0000086C VOL: 0
; 0000 04AF     }
; 0000 04B0 if(PORT_CZYTNIK.byte == 0x67)
;PCODE: $0000086D VOL: 0
;PCODE: $0000086E VOL: 0
;PCODE: $0000086F VOL: 0
;PCODE: $00000870 VOL: 0
; 0000 04B1     {
; 0000 04B2       komunikat_z_czytnika_kodow("87-2019",rzad);
;PCODE: $00000871 VOL: 0
;PCODE: $00000872 VOL: 0
;PCODE: $00000873 VOL: 0
;PCODE: $00000874 VOL: 0
;PCODE: $00000875 VOL: 0
; 0000 04B3       macierz_zaciskow[rzad]=103;
;PCODE: $00000876 VOL: 0
;PCODE: $00000877 VOL: 0
;PCODE: $00000878 VOL: 0
;PCODE: $00000879 VOL: 0
;PCODE: $0000087A VOL: 0
;PCODE: $0000087B VOL: 0
; 0000 04B4     }
; 0000 04B5 if(PORT_CZYTNIK.byte == 0x68)
;PCODE: $0000087C VOL: 0
;PCODE: $0000087D VOL: 0
;PCODE: $0000087E VOL: 0
;PCODE: $0000087F VOL: 0
; 0000 04B6     {
; 0000 04B7       komunikat_z_czytnika_kodow("87-2385",rzad);
;PCODE: $00000880 VOL: 0
;PCODE: $00000881 VOL: 0
;PCODE: $00000882 VOL: 0
;PCODE: $00000883 VOL: 0
;PCODE: $00000884 VOL: 0
; 0000 04B8       macierz_zaciskow[rzad]=104;
;PCODE: $00000885 VOL: 0
;PCODE: $00000886 VOL: 0
;PCODE: $00000887 VOL: 0
;PCODE: $00000888 VOL: 0
;PCODE: $00000889 VOL: 0
;PCODE: $0000088A VOL: 0
; 0000 04B9     }
; 0000 04BA if(PORT_CZYTNIK.byte == 0x69)
;PCODE: $0000088B VOL: 0
;PCODE: $0000088C VOL: 0
;PCODE: $0000088D VOL: 0
;PCODE: $0000088E VOL: 0
; 0000 04BB     {
; 0000 04BC       komunikat_z_czytnika_kodow("86-0854",rzad);
;PCODE: $0000088F VOL: 0
;PCODE: $00000890 VOL: 0
;PCODE: $00000891 VOL: 0
;PCODE: $00000892 VOL: 0
;PCODE: $00000893 VOL: 0
; 0000 04BD       macierz_zaciskow[rzad]=105;
;PCODE: $00000894 VOL: 0
;PCODE: $00000895 VOL: 0
;PCODE: $00000896 VOL: 0
;PCODE: $00000897 VOL: 0
;PCODE: $00000898 VOL: 0
;PCODE: $00000899 VOL: 0
; 0000 04BE     }
; 0000 04BF if(PORT_CZYTNIK.byte == 0x6A)
;PCODE: $0000089A VOL: 0
;PCODE: $0000089B VOL: 0
;PCODE: $0000089C VOL: 0
;PCODE: $0000089D VOL: 0
; 0000 04C0     {
; 0000 04C1       komunikat_z_czytnika_kodow("86-1622",rzad);
;PCODE: $0000089E VOL: 0
;PCODE: $0000089F VOL: 0
;PCODE: $000008A0 VOL: 0
;PCODE: $000008A1 VOL: 0
;PCODE: $000008A2 VOL: 0
; 0000 04C2       macierz_zaciskow[rzad]=106;
;PCODE: $000008A3 VOL: 0
;PCODE: $000008A4 VOL: 0
;PCODE: $000008A5 VOL: 0
;PCODE: $000008A6 VOL: 0
;PCODE: $000008A7 VOL: 0
;PCODE: $000008A8 VOL: 0
; 0000 04C3     }
; 0000 04C4 if(PORT_CZYTNIK.byte == 0x6B)
;PCODE: $000008A9 VOL: 0
;PCODE: $000008AA VOL: 0
;PCODE: $000008AB VOL: 0
;PCODE: $000008AC VOL: 0
; 0000 04C5     {
; 0000 04C6       komunikat_z_czytnika_kodow("86-2028",rzad);
;PCODE: $000008AD VOL: 0
;PCODE: $000008AE VOL: 0
;PCODE: $000008AF VOL: 0
;PCODE: $000008B0 VOL: 0
;PCODE: $000008B1 VOL: 0
; 0000 04C7       macierz_zaciskow[rzad]=107;
;PCODE: $000008B2 VOL: 0
;PCODE: $000008B3 VOL: 0
;PCODE: $000008B4 VOL: 0
;PCODE: $000008B5 VOL: 0
;PCODE: $000008B6 VOL: 0
;PCODE: $000008B7 VOL: 0
; 0000 04C8     }
; 0000 04C9 if(PORT_CZYTNIK.byte == 0x6C)
;PCODE: $000008B8 VOL: 0
;PCODE: $000008B9 VOL: 0
;PCODE: $000008BA VOL: 0
;PCODE: $000008BB VOL: 0
; 0000 04CA     {
; 0000 04CB       komunikat_z_czytnika_kodow("86-2437",rzad);
;PCODE: $000008BC VOL: 0
;PCODE: $000008BD VOL: 0
;PCODE: $000008BE VOL: 0
;PCODE: $000008BF VOL: 0
;PCODE: $000008C0 VOL: 0
; 0000 04CC       macierz_zaciskow[rzad]=108;
;PCODE: $000008C1 VOL: 0
;PCODE: $000008C2 VOL: 0
;PCODE: $000008C3 VOL: 0
;PCODE: $000008C4 VOL: 0
;PCODE: $000008C5 VOL: 0
;PCODE: $000008C6 VOL: 0
; 0000 04CD     }
; 0000 04CE if(PORT_CZYTNIK.byte == 0x6D)
;PCODE: $000008C7 VOL: 0
;PCODE: $000008C8 VOL: 0
;PCODE: $000008C9 VOL: 0
;PCODE: $000008CA VOL: 0
; 0000 04CF     {
; 0000 04D0       komunikat_z_czytnika_kodow("87-0854",rzad);
;PCODE: $000008CB VOL: 0
;PCODE: $000008CC VOL: 0
;PCODE: $000008CD VOL: 0
;PCODE: $000008CE VOL: 0
;PCODE: $000008CF VOL: 0
; 0000 04D1       macierz_zaciskow[rzad]=109;
;PCODE: $000008D0 VOL: 0
;PCODE: $000008D1 VOL: 0
;PCODE: $000008D2 VOL: 0
;PCODE: $000008D3 VOL: 0
;PCODE: $000008D4 VOL: 0
;PCODE: $000008D5 VOL: 0
; 0000 04D2     }
; 0000 04D3 if(PORT_CZYTNIK.byte == 0x6E)
;PCODE: $000008D6 VOL: 0
;PCODE: $000008D7 VOL: 0
;PCODE: $000008D8 VOL: 0
;PCODE: $000008D9 VOL: 0
; 0000 04D4     {
; 0000 04D5       komunikat_z_czytnika_kodow("87-1622",rzad);
;PCODE: $000008DA VOL: 0
;PCODE: $000008DB VOL: 0
;PCODE: $000008DC VOL: 0
;PCODE: $000008DD VOL: 0
;PCODE: $000008DE VOL: 0
; 0000 04D6       macierz_zaciskow[rzad]=110;
;PCODE: $000008DF VOL: 0
;PCODE: $000008E0 VOL: 0
;PCODE: $000008E1 VOL: 0
;PCODE: $000008E2 VOL: 0
;PCODE: $000008E3 VOL: 0
;PCODE: $000008E4 VOL: 0
; 0000 04D7     }
; 0000 04D8 
; 0000 04D9 if(PORT_CZYTNIK.byte == 0x6F)
;PCODE: $000008E5 VOL: 0
;PCODE: $000008E6 VOL: 0
;PCODE: $000008E7 VOL: 0
;PCODE: $000008E8 VOL: 0
; 0000 04DA     {
; 0000 04DB       komunikat_z_czytnika_kodow("87-2028",rzad);
;PCODE: $000008E9 VOL: 0
;PCODE: $000008EA VOL: 0
;PCODE: $000008EB VOL: 0
;PCODE: $000008EC VOL: 0
;PCODE: $000008ED VOL: 0
; 0000 04DC       macierz_zaciskow[rzad]=111;
;PCODE: $000008EE VOL: 0
;PCODE: $000008EF VOL: 0
;PCODE: $000008F0 VOL: 0
;PCODE: $000008F1 VOL: 0
;PCODE: $000008F2 VOL: 0
;PCODE: $000008F3 VOL: 0
; 0000 04DD     }
; 0000 04DE 
; 0000 04DF if(PORT_CZYTNIK.byte == 0x70)
;PCODE: $000008F4 VOL: 0
;PCODE: $000008F5 VOL: 0
;PCODE: $000008F6 VOL: 0
;PCODE: $000008F7 VOL: 0
; 0000 04E0     {
; 0000 04E1       komunikat_z_czytnika_kodow("87-2437",rzad);
;PCODE: $000008F8 VOL: 0
;PCODE: $000008F9 VOL: 0
;PCODE: $000008FA VOL: 0
;PCODE: $000008FB VOL: 0
;PCODE: $000008FC VOL: 0
; 0000 04E2       macierz_zaciskow[rzad]=112;
;PCODE: $000008FD VOL: 0
;PCODE: $000008FE VOL: 0
;PCODE: $000008FF VOL: 0
;PCODE: $00000900 VOL: 0
;PCODE: $00000901 VOL: 0
;PCODE: $00000902 VOL: 0
; 0000 04E3     }
; 0000 04E4 if(PORT_CZYTNIK.byte == 0x71)
;PCODE: $00000903 VOL: 0
;PCODE: $00000904 VOL: 0
;PCODE: $00000905 VOL: 0
;PCODE: $00000906 VOL: 0
; 0000 04E5     {
; 0000 04E6       komunikat_z_czytnika_kodow("86-0862",rzad);
;PCODE: $00000907 VOL: 0
;PCODE: $00000908 VOL: 0
;PCODE: $00000909 VOL: 0
;PCODE: $0000090A VOL: 0
;PCODE: $0000090B VOL: 0
; 0000 04E7       macierz_zaciskow[rzad]=113;
;PCODE: $0000090C VOL: 0
;PCODE: $0000090D VOL: 0
;PCODE: $0000090E VOL: 0
;PCODE: $0000090F VOL: 0
;PCODE: $00000910 VOL: 0
;PCODE: $00000911 VOL: 0
; 0000 04E8     }
; 0000 04E9 if(PORT_CZYTNIK.byte == 0x72)
;PCODE: $00000912 VOL: 0
;PCODE: $00000913 VOL: 0
;PCODE: $00000914 VOL: 0
;PCODE: $00000915 VOL: 0
; 0000 04EA     {
; 0000 04EB       komunikat_z_czytnika_kodow("86-1625",rzad);
;PCODE: $00000916 VOL: 0
;PCODE: $00000917 VOL: 0
;PCODE: $00000918 VOL: 0
;PCODE: $00000919 VOL: 0
;PCODE: $0000091A VOL: 0
; 0000 04EC       macierz_zaciskow[rzad]=114;
;PCODE: $0000091B VOL: 0
;PCODE: $0000091C VOL: 0
;PCODE: $0000091D VOL: 0
;PCODE: $0000091E VOL: 0
;PCODE: $0000091F VOL: 0
;PCODE: $00000920 VOL: 0
; 0000 04ED     }
; 0000 04EE if(PORT_CZYTNIK.byte == 0x73)
;PCODE: $00000921 VOL: 0
;PCODE: $00000922 VOL: 0
;PCODE: $00000923 VOL: 0
;PCODE: $00000924 VOL: 0
; 0000 04EF     {
; 0000 04F0       komunikat_z_czytnika_kodow("86-2052",rzad);
;PCODE: $00000925 VOL: 0
;PCODE: $00000926 VOL: 0
;PCODE: $00000927 VOL: 0
;PCODE: $00000928 VOL: 0
;PCODE: $00000929 VOL: 0
; 0000 04F1       macierz_zaciskow[rzad]=115;
;PCODE: $0000092A VOL: 0
;PCODE: $0000092B VOL: 0
;PCODE: $0000092C VOL: 0
;PCODE: $0000092D VOL: 0
;PCODE: $0000092E VOL: 0
;PCODE: $0000092F VOL: 0
; 0000 04F2     }
; 0000 04F3 if(PORT_CZYTNIK.byte == 0x74)
;PCODE: $00000930 VOL: 0
;PCODE: $00000931 VOL: 0
;PCODE: $00000932 VOL: 0
;PCODE: $00000933 VOL: 0
; 0000 04F4     {
; 0000 04F5       komunikat_z_czytnika_kodow("86-2492",rzad);
;PCODE: $00000934 VOL: 0
;PCODE: $00000935 VOL: 0
;PCODE: $00000936 VOL: 0
;PCODE: $00000937 VOL: 0
;PCODE: $00000938 VOL: 0
; 0000 04F6       macierz_zaciskow[rzad]=116;
;PCODE: $00000939 VOL: 0
;PCODE: $0000093A VOL: 0
;PCODE: $0000093B VOL: 0
;PCODE: $0000093C VOL: 0
;PCODE: $0000093D VOL: 0
;PCODE: $0000093E VOL: 0
; 0000 04F7     }
; 0000 04F8 if(PORT_CZYTNIK.byte == 0x75)
;PCODE: $0000093F VOL: 0
;PCODE: $00000940 VOL: 0
;PCODE: $00000941 VOL: 0
;PCODE: $00000942 VOL: 0
; 0000 04F9     {
; 0000 04FA       komunikat_z_czytnika_kodow("87-0862",rzad);
;PCODE: $00000943 VOL: 0
;PCODE: $00000944 VOL: 0
;PCODE: $00000945 VOL: 0
;PCODE: $00000946 VOL: 0
;PCODE: $00000947 VOL: 0
; 0000 04FB       macierz_zaciskow[rzad]=117;
;PCODE: $00000948 VOL: 0
;PCODE: $00000949 VOL: 0
;PCODE: $0000094A VOL: 0
;PCODE: $0000094B VOL: 0
;PCODE: $0000094C VOL: 0
;PCODE: $0000094D VOL: 0
; 0000 04FC     }
; 0000 04FD if(PORT_CZYTNIK.byte == 0x76)
;PCODE: $0000094E VOL: 0
;PCODE: $0000094F VOL: 0
;PCODE: $00000950 VOL: 0
;PCODE: $00000951 VOL: 0
; 0000 04FE     {
; 0000 04FF       komunikat_z_czytnika_kodow("87-1625",rzad);
;PCODE: $00000952 VOL: 0
;PCODE: $00000953 VOL: 0
;PCODE: $00000954 VOL: 0
;PCODE: $00000955 VOL: 0
;PCODE: $00000956 VOL: 0
; 0000 0500       macierz_zaciskow[rzad]=118;
;PCODE: $00000957 VOL: 0
;PCODE: $00000958 VOL: 0
;PCODE: $00000959 VOL: 0
;PCODE: $0000095A VOL: 0
;PCODE: $0000095B VOL: 0
;PCODE: $0000095C VOL: 0
; 0000 0501     }
; 0000 0502 if(PORT_CZYTNIK.byte == 0x77)
;PCODE: $0000095D VOL: 0
;PCODE: $0000095E VOL: 0
;PCODE: $0000095F VOL: 0
;PCODE: $00000960 VOL: 0
; 0000 0503     {
; 0000 0504       komunikat_z_czytnika_kodow("87-2052",rzad);
;PCODE: $00000961 VOL: 0
;PCODE: $00000962 VOL: 0
;PCODE: $00000963 VOL: 0
;PCODE: $00000964 VOL: 0
;PCODE: $00000965 VOL: 0
; 0000 0505       macierz_zaciskow[rzad]=119;
;PCODE: $00000966 VOL: 0
;PCODE: $00000967 VOL: 0
;PCODE: $00000968 VOL: 0
;PCODE: $00000969 VOL: 0
;PCODE: $0000096A VOL: 0
;PCODE: $0000096B VOL: 0
; 0000 0506     }
; 0000 0507 if(PORT_CZYTNIK.byte == 0x78)
;PCODE: $0000096C VOL: 0
;PCODE: $0000096D VOL: 0
;PCODE: $0000096E VOL: 0
;PCODE: $0000096F VOL: 0
; 0000 0508     {
; 0000 0509       komunikat_z_czytnika_kodow("87-2492",rzad);
;PCODE: $00000970 VOL: 0
;PCODE: $00000971 VOL: 0
;PCODE: $00000972 VOL: 0
;PCODE: $00000973 VOL: 0
;PCODE: $00000974 VOL: 0
; 0000 050A       macierz_zaciskow[rzad]=120;
;PCODE: $00000975 VOL: 0
;PCODE: $00000976 VOL: 0
;PCODE: $00000977 VOL: 0
;PCODE: $00000978 VOL: 0
;PCODE: $00000979 VOL: 0
;PCODE: $0000097A VOL: 0
; 0000 050B     }
; 0000 050C if(PORT_CZYTNIK.byte == 0x79)
;PCODE: $0000097B VOL: 0
;PCODE: $0000097C VOL: 0
;PCODE: $0000097D VOL: 0
;PCODE: $0000097E VOL: 0
; 0000 050D     {
; 0000 050E       komunikat_z_czytnika_kodow("86-0935",rzad);
;PCODE: $0000097F VOL: 0
;PCODE: $00000980 VOL: 0
;PCODE: $00000981 VOL: 0
;PCODE: $00000982 VOL: 0
;PCODE: $00000983 VOL: 0
; 0000 050F       macierz_zaciskow[rzad]=121;
;PCODE: $00000984 VOL: 0
;PCODE: $00000985 VOL: 0
;PCODE: $00000986 VOL: 0
;PCODE: $00000987 VOL: 0
;PCODE: $00000988 VOL: 0
;PCODE: $00000989 VOL: 0
; 0000 0510     }
; 0000 0511 if(PORT_CZYTNIK.byte == 0x7A)
;PCODE: $0000098A VOL: 0
;PCODE: $0000098B VOL: 0
;PCODE: $0000098C VOL: 0
;PCODE: $0000098D VOL: 0
; 0000 0512     {
; 0000 0513       komunikat_z_czytnika_kodow("86-1648",rzad);
;PCODE: $0000098E VOL: 0
;PCODE: $0000098F VOL: 0
;PCODE: $00000990 VOL: 0
;PCODE: $00000991 VOL: 0
;PCODE: $00000992 VOL: 0
; 0000 0514       macierz_zaciskow[rzad]=122;
;PCODE: $00000993 VOL: 0
;PCODE: $00000994 VOL: 0
;PCODE: $00000995 VOL: 0
;PCODE: $00000996 VOL: 0
;PCODE: $00000997 VOL: 0
;PCODE: $00000998 VOL: 0
; 0000 0515     }
; 0000 0516 if(PORT_CZYTNIK.byte == 0x7B)
;PCODE: $00000999 VOL: 0
;PCODE: $0000099A VOL: 0
;PCODE: $0000099B VOL: 0
;PCODE: $0000099C VOL: 0
; 0000 0517     {
; 0000 0518       komunikat_z_czytnika_kodow("86-2082",rzad);
;PCODE: $0000099D VOL: 0
;PCODE: $0000099E VOL: 0
;PCODE: $0000099F VOL: 0
;PCODE: $000009A0 VOL: 0
;PCODE: $000009A1 VOL: 0
; 0000 0519       macierz_zaciskow[rzad]=123;
;PCODE: $000009A2 VOL: 0
;PCODE: $000009A3 VOL: 0
;PCODE: $000009A4 VOL: 0
;PCODE: $000009A5 VOL: 0
;PCODE: $000009A6 VOL: 0
;PCODE: $000009A7 VOL: 0
; 0000 051A     }
; 0000 051B if(PORT_CZYTNIK.byte == 0x7C)
;PCODE: $000009A8 VOL: 0
;PCODE: $000009A9 VOL: 0
;PCODE: $000009AA VOL: 0
;PCODE: $000009AB VOL: 0
; 0000 051C     {
; 0000 051D       komunikat_z_czytnika_kodow("86-2500",rzad);
;PCODE: $000009AC VOL: 0
;PCODE: $000009AD VOL: 0
;PCODE: $000009AE VOL: 0
;PCODE: $000009AF VOL: 0
;PCODE: $000009B0 VOL: 0
; 0000 051E       macierz_zaciskow[rzad]=124;
;PCODE: $000009B1 VOL: 0
;PCODE: $000009B2 VOL: 0
;PCODE: $000009B3 VOL: 0
;PCODE: $000009B4 VOL: 0
;PCODE: $000009B5 VOL: 0
;PCODE: $000009B6 VOL: 0
; 0000 051F     }
; 0000 0520 if(PORT_CZYTNIK.byte == 0x7D)
;PCODE: $000009B7 VOL: 0
;PCODE: $000009B8 VOL: 0
;PCODE: $000009B9 VOL: 0
;PCODE: $000009BA VOL: 0
; 0000 0521     {
; 0000 0522       komunikat_z_czytnika_kodow("87-0935",rzad);
;PCODE: $000009BB VOL: 0
;PCODE: $000009BC VOL: 0
;PCODE: $000009BD VOL: 0
;PCODE: $000009BE VOL: 0
;PCODE: $000009BF VOL: 0
; 0000 0523       macierz_zaciskow[rzad]=125;
;PCODE: $000009C0 VOL: 0
;PCODE: $000009C1 VOL: 0
;PCODE: $000009C2 VOL: 0
;PCODE: $000009C3 VOL: 0
;PCODE: $000009C4 VOL: 0
;PCODE: $000009C5 VOL: 0
; 0000 0524     }
; 0000 0525 if(PORT_CZYTNIK.byte == 0x7E)
;PCODE: $000009C6 VOL: 0
;PCODE: $000009C7 VOL: 0
;PCODE: $000009C8 VOL: 0
;PCODE: $000009C9 VOL: 0
; 0000 0526     {
; 0000 0527       komunikat_z_czytnika_kodow("87-1648",rzad);
;PCODE: $000009CA VOL: 0
;PCODE: $000009CB VOL: 0
;PCODE: $000009CC VOL: 0
;PCODE: $000009CD VOL: 0
;PCODE: $000009CE VOL: 0
; 0000 0528       macierz_zaciskow[rzad]=126;
;PCODE: $000009CF VOL: 0
;PCODE: $000009D0 VOL: 0
;PCODE: $000009D1 VOL: 0
;PCODE: $000009D2 VOL: 0
;PCODE: $000009D3 VOL: 0
;PCODE: $000009D4 VOL: 0
; 0000 0529     }
; 0000 052A 
; 0000 052B if(PORT_CZYTNIK.byte == 0x7F)
;PCODE: $000009D5 VOL: 0
;PCODE: $000009D6 VOL: 0
;PCODE: $000009D7 VOL: 0
;PCODE: $000009D8 VOL: 0
; 0000 052C     {
; 0000 052D       komunikat_z_czytnika_kodow("87-2082",rzad);
;PCODE: $000009D9 VOL: 0
;PCODE: $000009DA VOL: 0
;PCODE: $000009DB VOL: 0
;PCODE: $000009DC VOL: 0
;PCODE: $000009DD VOL: 0
; 0000 052E       macierz_zaciskow[rzad]=127;
;PCODE: $000009DE VOL: 0
;PCODE: $000009DF VOL: 0
;PCODE: $000009E0 VOL: 0
;PCODE: $000009E1 VOL: 0
;PCODE: $000009E2 VOL: 0
;PCODE: $000009E3 VOL: 0
; 0000 052F     }
; 0000 0530 if(PORT_CZYTNIK.byte == 0x80)
;PCODE: $000009E4 VOL: 0
;PCODE: $000009E5 VOL: 0
;PCODE: $000009E6 VOL: 0
;PCODE: $000009E7 VOL: 0
; 0000 0531     {
; 0000 0532       komunikat_z_czytnika_kodow("87-2500",rzad);
;PCODE: $000009E8 VOL: 0
;PCODE: $000009E9 VOL: 0
;PCODE: $000009EA VOL: 0
;PCODE: $000009EB VOL: 0
;PCODE: $000009EC VOL: 0
; 0000 0533       macierz_zaciskow[rzad]=128;
;PCODE: $000009ED VOL: 0
;PCODE: $000009EE VOL: 0
;PCODE: $000009EF VOL: 0
;PCODE: $000009F0 VOL: 0
;PCODE: $000009F1 VOL: 0
;PCODE: $000009F2 VOL: 0
; 0000 0534     }
; 0000 0535 if(PORT_CZYTNIK.byte == 0x81)
;PCODE: $000009F3 VOL: 0
;PCODE: $000009F4 VOL: 0
;PCODE: $000009F5 VOL: 0
;PCODE: $000009F6 VOL: 0
; 0000 0536     {
; 0000 0537       komunikat_z_czytnika_kodow("86-1019",rzad);
;PCODE: $000009F7 VOL: 0
;PCODE: $000009F8 VOL: 0
;PCODE: $000009F9 VOL: 0
;PCODE: $000009FA VOL: 0
;PCODE: $000009FB VOL: 0
; 0000 0538       macierz_zaciskow[rzad]=129;
;PCODE: $000009FC VOL: 0
;PCODE: $000009FD VOL: 0
;PCODE: $000009FE VOL: 0
;PCODE: $000009FF VOL: 0
;PCODE: $00000A00 VOL: 0
;PCODE: $00000A01 VOL: 0
; 0000 0539     }
; 0000 053A if(PORT_CZYTNIK.byte == 0x82)
;PCODE: $00000A02 VOL: 0
;PCODE: $00000A03 VOL: 0
;PCODE: $00000A04 VOL: 0
;PCODE: $00000A05 VOL: 0
; 0000 053B     {
; 0000 053C       komunikat_z_czytnika_kodow("86-1649",rzad);
;PCODE: $00000A06 VOL: 0
;PCODE: $00000A07 VOL: 0
;PCODE: $00000A08 VOL: 0
;PCODE: $00000A09 VOL: 0
;PCODE: $00000A0A VOL: 0
; 0000 053D       macierz_zaciskow[rzad]=130;
;PCODE: $00000A0B VOL: 0
;PCODE: $00000A0C VOL: 0
;PCODE: $00000A0D VOL: 0
;PCODE: $00000A0E VOL: 0
;PCODE: $00000A0F VOL: 0
;PCODE: $00000A10 VOL: 0
; 0000 053E     }
; 0000 053F if(PORT_CZYTNIK.byte == 0x83)
;PCODE: $00000A11 VOL: 0
;PCODE: $00000A12 VOL: 0
;PCODE: $00000A13 VOL: 0
;PCODE: $00000A14 VOL: 0
; 0000 0540     {
; 0000 0541       komunikat_z_czytnika_kodow("86-2083",rzad);
;PCODE: $00000A15 VOL: 0
;PCODE: $00000A16 VOL: 0
;PCODE: $00000A17 VOL: 0
;PCODE: $00000A18 VOL: 0
;PCODE: $00000A19 VOL: 0
; 0000 0542       macierz_zaciskow[rzad]=131;
;PCODE: $00000A1A VOL: 0
;PCODE: $00000A1B VOL: 0
;PCODE: $00000A1C VOL: 0
;PCODE: $00000A1D VOL: 0
;PCODE: $00000A1E VOL: 0
;PCODE: $00000A1F VOL: 0
; 0000 0543     }
; 0000 0544 if(PORT_CZYTNIK.byte == 0x84)
;PCODE: $00000A20 VOL: 0
;PCODE: $00000A21 VOL: 0
;PCODE: $00000A22 VOL: 0
;PCODE: $00000A23 VOL: 0
; 0000 0545     {
; 0000 0546       komunikat_z_czytnika_kodow("86-2585",rzad);
;PCODE: $00000A24 VOL: 0
;PCODE: $00000A25 VOL: 0
;PCODE: $00000A26 VOL: 0
;PCODE: $00000A27 VOL: 0
;PCODE: $00000A28 VOL: 0
; 0000 0547       macierz_zaciskow[rzad]=132;
;PCODE: $00000A29 VOL: 0
;PCODE: $00000A2A VOL: 0
;PCODE: $00000A2B VOL: 0
;PCODE: $00000A2C VOL: 0
;PCODE: $00000A2D VOL: 0
;PCODE: $00000A2E VOL: 0
; 0000 0548     }
; 0000 0549 if(PORT_CZYTNIK.byte == 0x85)
;PCODE: $00000A2F VOL: 0
;PCODE: $00000A30 VOL: 0
;PCODE: $00000A31 VOL: 0
;PCODE: $00000A32 VOL: 0
; 0000 054A     {
; 0000 054B       komunikat_z_czytnika_kodow("87-1019",rzad);
;PCODE: $00000A33 VOL: 0
;PCODE: $00000A34 VOL: 0
;PCODE: $00000A35 VOL: 0
;PCODE: $00000A36 VOL: 0
;PCODE: $00000A37 VOL: 0
; 0000 054C       macierz_zaciskow[rzad]=133;
;PCODE: $00000A38 VOL: 0
;PCODE: $00000A39 VOL: 0
;PCODE: $00000A3A VOL: 0
;PCODE: $00000A3B VOL: 0
;PCODE: $00000A3C VOL: 0
;PCODE: $00000A3D VOL: 0
; 0000 054D     }
; 0000 054E if(PORT_CZYTNIK.byte == 0x86)
;PCODE: $00000A3E VOL: 0
;PCODE: $00000A3F VOL: 0
;PCODE: $00000A40 VOL: 0
;PCODE: $00000A41 VOL: 0
; 0000 054F     {
; 0000 0550       komunikat_z_czytnika_kodow("87-1649",rzad);
;PCODE: $00000A42 VOL: 0
;PCODE: $00000A43 VOL: 0
;PCODE: $00000A44 VOL: 0
;PCODE: $00000A45 VOL: 0
;PCODE: $00000A46 VOL: 0
; 0000 0551       macierz_zaciskow[rzad]=134;
;PCODE: $00000A47 VOL: 0
;PCODE: $00000A48 VOL: 0
;PCODE: $00000A49 VOL: 0
;PCODE: $00000A4A VOL: 0
;PCODE: $00000A4B VOL: 0
;PCODE: $00000A4C VOL: 0
; 0000 0552     }
; 0000 0553 if(PORT_CZYTNIK.byte == 0x87)
;PCODE: $00000A4D VOL: 0
;PCODE: $00000A4E VOL: 0
;PCODE: $00000A4F VOL: 0
;PCODE: $00000A50 VOL: 0
; 0000 0554     {
; 0000 0555       komunikat_z_czytnika_kodow("87-2083",rzad);
;PCODE: $00000A51 VOL: 0
;PCODE: $00000A52 VOL: 0
;PCODE: $00000A53 VOL: 0
;PCODE: $00000A54 VOL: 0
;PCODE: $00000A55 VOL: 0
; 0000 0556       macierz_zaciskow[rzad]=135;
;PCODE: $00000A56 VOL: 0
;PCODE: $00000A57 VOL: 0
;PCODE: $00000A58 VOL: 0
;PCODE: $00000A59 VOL: 0
;PCODE: $00000A5A VOL: 0
;PCODE: $00000A5B VOL: 0
; 0000 0557     }
; 0000 0558 
; 0000 0559 if(PORT_CZYTNIK.byte == 0x88)
;PCODE: $00000A5C VOL: 0
;PCODE: $00000A5D VOL: 0
;PCODE: $00000A5E VOL: 0
;PCODE: $00000A5F VOL: 0
; 0000 055A     {
; 0000 055B       komunikat_z_czytnika_kodow("87-2624",rzad);
;PCODE: $00000A60 VOL: 0
;PCODE: $00000A61 VOL: 0
;PCODE: $00000A62 VOL: 0
;PCODE: $00000A63 VOL: 0
;PCODE: $00000A64 VOL: 0
; 0000 055C       macierz_zaciskow[rzad]=136;
;PCODE: $00000A65 VOL: 0
;PCODE: $00000A66 VOL: 0
;PCODE: $00000A67 VOL: 0
;PCODE: $00000A68 VOL: 0
;PCODE: $00000A69 VOL: 0
;PCODE: $00000A6A VOL: 0
; 0000 055D     }
; 0000 055E if(PORT_CZYTNIK.byte == 0x89)
;PCODE: $00000A6B VOL: 0
;PCODE: $00000A6C VOL: 0
;PCODE: $00000A6D VOL: 0
;PCODE: $00000A6E VOL: 0
; 0000 055F     {
; 0000 0560       komunikat_z_czytnika_kodow("86-1027",rzad);
;PCODE: $00000A6F VOL: 0
;PCODE: $00000A70 VOL: 0
;PCODE: $00000A71 VOL: 0
;PCODE: $00000A72 VOL: 0
;PCODE: $00000A73 VOL: 0
; 0000 0561       macierz_zaciskow[rzad]=137;
;PCODE: $00000A74 VOL: 0
;PCODE: $00000A75 VOL: 0
;PCODE: $00000A76 VOL: 0
;PCODE: $00000A77 VOL: 0
;PCODE: $00000A78 VOL: 0
;PCODE: $00000A79 VOL: 0
; 0000 0562     }
; 0000 0563 if(PORT_CZYTNIK.byte == 0x8A)
;PCODE: $00000A7A VOL: 0
;PCODE: $00000A7B VOL: 0
;PCODE: $00000A7C VOL: 0
;PCODE: $00000A7D VOL: 0
; 0000 0564     {
; 0000 0565       komunikat_z_czytnika_kodow("86-1669",rzad);
;PCODE: $00000A7E VOL: 0
;PCODE: $00000A7F VOL: 0
;PCODE: $00000A80 VOL: 0
;PCODE: $00000A81 VOL: 0
;PCODE: $00000A82 VOL: 0
; 0000 0566       macierz_zaciskow[rzad]=138;
;PCODE: $00000A83 VOL: 0
;PCODE: $00000A84 VOL: 0
;PCODE: $00000A85 VOL: 0
;PCODE: $00000A86 VOL: 0
;PCODE: $00000A87 VOL: 0
;PCODE: $00000A88 VOL: 0
; 0000 0567     }
; 0000 0568 if(PORT_CZYTNIK.byte == 0x8B)
;PCODE: $00000A89 VOL: 0
;PCODE: $00000A8A VOL: 0
;PCODE: $00000A8B VOL: 0
;PCODE: $00000A8C VOL: 0
; 0000 0569     {
; 0000 056A       komunikat_z_czytnika_kodow("86-2087",rzad);
;PCODE: $00000A8D VOL: 0
;PCODE: $00000A8E VOL: 0
;PCODE: $00000A8F VOL: 0
;PCODE: $00000A90 VOL: 0
;PCODE: $00000A91 VOL: 0
; 0000 056B       macierz_zaciskow[rzad]=139;
;PCODE: $00000A92 VOL: 0
;PCODE: $00000A93 VOL: 0
;PCODE: $00000A94 VOL: 0
;PCODE: $00000A95 VOL: 0
;PCODE: $00000A96 VOL: 0
;PCODE: $00000A97 VOL: 0
; 0000 056C     }
; 0000 056D if(PORT_CZYTNIK.byte == 0x8C)
;PCODE: $00000A98 VOL: 0
;PCODE: $00000A99 VOL: 0
;PCODE: $00000A9A VOL: 0
;PCODE: $00000A9B VOL: 0
; 0000 056E     {
; 0000 056F       komunikat_z_czytnika_kodow("86-2624",rzad);
;PCODE: $00000A9C VOL: 0
;PCODE: $00000A9D VOL: 0
;PCODE: $00000A9E VOL: 0
;PCODE: $00000A9F VOL: 0
;PCODE: $00000AA0 VOL: 0
; 0000 0570       macierz_zaciskow[rzad]=140;
;PCODE: $00000AA1 VOL: 0
;PCODE: $00000AA2 VOL: 0
;PCODE: $00000AA3 VOL: 0
;PCODE: $00000AA4 VOL: 0
;PCODE: $00000AA5 VOL: 0
;PCODE: $00000AA6 VOL: 0
; 0000 0571     }
; 0000 0572 if(PORT_CZYTNIK.byte == 0x8D)
;PCODE: $00000AA7 VOL: 0
;PCODE: $00000AA8 VOL: 0
;PCODE: $00000AA9 VOL: 0
;PCODE: $00000AAA VOL: 0
; 0000 0573     {
; 0000 0574       komunikat_z_czytnika_kodow("87-1027",rzad);
;PCODE: $00000AAB VOL: 0
;PCODE: $00000AAC VOL: 0
;PCODE: $00000AAD VOL: 0
;PCODE: $00000AAE VOL: 0
;PCODE: $00000AAF VOL: 0
; 0000 0575       macierz_zaciskow[rzad]=141;
;PCODE: $00000AB0 VOL: 0
;PCODE: $00000AB1 VOL: 0
;PCODE: $00000AB2 VOL: 0
;PCODE: $00000AB3 VOL: 0
;PCODE: $00000AB4 VOL: 0
;PCODE: $00000AB5 VOL: 0
; 0000 0576     }
; 0000 0577 if(PORT_CZYTNIK.byte == 0x8E)
;PCODE: $00000AB6 VOL: 0
;PCODE: $00000AB7 VOL: 0
;PCODE: $00000AB8 VOL: 0
;PCODE: $00000AB9 VOL: 0
; 0000 0578     {
; 0000 0579       komunikat_z_czytnika_kodow("87-1669",rzad);
;PCODE: $00000ABA VOL: 0
;PCODE: $00000ABB VOL: 0
;PCODE: $00000ABC VOL: 0
;PCODE: $00000ABD VOL: 0
;PCODE: $00000ABE VOL: 0
; 0000 057A       macierz_zaciskow[rzad]=142;
;PCODE: $00000ABF VOL: 0
;PCODE: $00000AC0 VOL: 0
;PCODE: $00000AC1 VOL: 0
;PCODE: $00000AC2 VOL: 0
;PCODE: $00000AC3 VOL: 0
;PCODE: $00000AC4 VOL: 0
; 0000 057B     }
; 0000 057C if(PORT_CZYTNIK.byte == 0x8F)
;PCODE: $00000AC5 VOL: 0
;PCODE: $00000AC6 VOL: 0
;PCODE: $00000AC7 VOL: 0
;PCODE: $00000AC8 VOL: 0
; 0000 057D     {
; 0000 057E       komunikat_z_czytnika_kodow("87-2087",rzad);
;PCODE: $00000AC9 VOL: 0
;PCODE: $00000ACA VOL: 0
;PCODE: $00000ACB VOL: 0
;PCODE: $00000ACC VOL: 0
;PCODE: $00000ACD VOL: 0
; 0000 057F       macierz_zaciskow[rzad]=143;
;PCODE: $00000ACE VOL: 0
;PCODE: $00000ACF VOL: 0
;PCODE: $00000AD0 VOL: 0
;PCODE: $00000AD1 VOL: 0
;PCODE: $00000AD2 VOL: 0
;PCODE: $00000AD3 VOL: 0
; 0000 0580     }
; 0000 0581 if(PORT_CZYTNIK.byte == 0x90)
;PCODE: $00000AD4 VOL: 0
;PCODE: $00000AD5 VOL: 0
;PCODE: $00000AD6 VOL: 0
;PCODE: $00000AD7 VOL: 0
; 0000 0582     {
; 0000 0583       komunikat_z_czytnika_kodow("87-2585",rzad);
;PCODE: $00000AD8 VOL: 0
;PCODE: $00000AD9 VOL: 0
;PCODE: $00000ADA VOL: 0
;PCODE: $00000ADB VOL: 0
;PCODE: $00000ADC VOL: 0
; 0000 0584       macierz_zaciskow[rzad]=144;
;PCODE: $00000ADD VOL: 0
;PCODE: $00000ADE VOL: 0
;PCODE: $00000ADF VOL: 0
;PCODE: $00000AE0 VOL: 0
;PCODE: $00000AE1 VOL: 0
;PCODE: $00000AE2 VOL: 0
; 0000 0585     }
; 0000 0586 }
;PCODE: $00000AE3 VOL: 0
;PCODE: $00000AE4 VOL: 0
;PCODE: $00000AE5 VOL: 0
;
;
;void wybor_linijek_sterownikow()
; 0000 058A {
;PCODE: $00000AE6 VOL: 0
;PCODE: $00000AE7 VOL: 0
; 0000 058B //zaczynam od tego
; 0000 058C //86-1349
; 0000 058D 
; 0000 058E switch(macierz_zaciskow[1])
;PCODE: $00000AE8 VOL: 0
;PCODE: $00000AE9 VOL: 0
; 0000 058F     {
; 0000 0590     case 0:
;PCODE: $00000AEA VOL: 0
;PCODE: $00000AEB VOL: 0
; 0000 0591 
; 0000 0592             komunikat_na_panel("                                                ",adr1,adr2);
;PCODE: $00000AEC VOL: 0
;PCODE: $00000AED VOL: 0
;PCODE: $00000AEE VOL: 0
;PCODE: $00000AEF VOL: 0
;PCODE: $00000AF0 VOL: 0
;PCODE: $00000AF1 VOL: 0
;PCODE: $00000AF2 VOL: 0
;PCODE: $00000AF3 VOL: 0
; 0000 0593             komunikat_na_panel("Nie wczytano zacisku",adr1,adr2);
;PCODE: $00000AF4 VOL: 0
;PCODE: $00000AF5 VOL: 0
;PCODE: $00000AF6 VOL: 0
;PCODE: $00000AF7 VOL: 0
;PCODE: $00000AF8 VOL: 0
;PCODE: $00000AF9 VOL: 0
;PCODE: $00000AFA VOL: 0
;PCODE: $00000AFB VOL: 0
; 0000 0594 
; 0000 0595     break;
;PCODE: $00000AFC VOL: 0
; 0000 0596 
; 0000 0597 
; 0000 0598     case 34:
;PCODE: $00000AFD VOL: 0
;PCODE: $00000AFE VOL: 0
;PCODE: $00000AFF VOL: 0
; 0000 0599 
; 0000 059A             a[0] = 0x5A;
;PCODE: $00000B00 VOL: 0
;PCODE: $00000B01 VOL: 0
; 0000 059B             a[1] = 0;
;PCODE: $00000B02 VOL: 0
;PCODE: $00000B03 VOL: 0
;PCODE: $00000B04 VOL: 0
;PCODE: $00000B05 VOL: 0
; 0000 059C             a[2] = 0x5B;
;PCODE: $00000B06 VOL: 0
;PCODE: $00000B07 VOL: 0
;PCODE: $00000B08 VOL: 0
;PCODE: $00000B09 VOL: 0
; 0000 059D             a[3] = 0;;
;PCODE: $00000B0A VOL: 0
;PCODE: $00000B0B VOL: 0
;PCODE: $00000B0C VOL: 0
;PCODE: $00000B0D VOL: 0
; 0000 059E 
; 0000 059F     break;
;PCODE: $00000B0E VOL: 0
; 0000 05A0 
; 0000 05A1 
; 0000 05A2 
; 0000 05A3 
; 0000 05A4     }
;PCODE: $00000B0F VOL: 0
; 0000 05A5 
; 0000 05A6 
; 0000 05A7 
; 0000 05A8 switch(macierz_zaciskow[2])
;PCODE: $00000B10 VOL: 0
;PCODE: $00000B11 VOL: 0
; 0000 05A9     {
; 0000 05AA     case 0:
;PCODE: $00000B12 VOL: 0
;PCODE: $00000B13 VOL: 0
; 0000 05AB 
; 0000 05AC             komunikat_na_panel("                                                ",adr3,adr4);
;PCODE: $00000B14 VOL: 0
;PCODE: $00000B15 VOL: 0
;PCODE: $00000B16 VOL: 0
;PCODE: $00000B17 VOL: 0
;PCODE: $00000B18 VOL: 0
;PCODE: $00000B19 VOL: 0
;PCODE: $00000B1A VOL: 0
;PCODE: $00000B1B VOL: 0
; 0000 05AD             komunikat_na_panel("Nie wczytano zacisku",adr1,adr2);
;PCODE: $00000B1C VOL: 0
;PCODE: $00000B1D VOL: 0
;PCODE: $00000B1E VOL: 0
;PCODE: $00000B1F VOL: 0
;PCODE: $00000B20 VOL: 0
;PCODE: $00000B21 VOL: 0
;PCODE: $00000B22 VOL: 0
;PCODE: $00000B23 VOL: 0
; 0000 05AE 
; 0000 05AF     break;
;PCODE: $00000B24 VOL: 0
; 0000 05B0     }
;PCODE: $00000B25 VOL: 0
; 0000 05B1 
; 0000 05B2 }
;PCODE: $00000B26 VOL: 0
;PCODE: $00000B27 VOL: 0
;
;void wypozycjonuj_napedy_minimalistyczna()
; 0000 05B5 {
;PCODE: $00000B28 VOL: 0
;PCODE: $00000B29 VOL: 0
; 0000 05B6 PORTD.2 = 1;   //setup wspolny
;PCODE: $00000B2A VOL: 0
;PCODE: $00000B2B VOL: 0
; 0000 05B7 delay_ms(1000);
;PCODE: $00000B2C VOL: 0
;PCODE: $00000B2D VOL: 0
;PCODE: $00000B2E VOL: 0
; 0000 05B8 
; 0000 05B9 while(sprawdz_pin3(PORTJJ,0x79) == 1 | sprawdz_pin3(PORTLL,0x71) == 1 |
;PCODE: $00000B2F VOL: 0
; 0000 05BA       sprawdz_pin3(PORTKK,0x75) == 1 | sprawdz_pin7(PORTKK,0x75) == 1)
;PCODE: $00000B30 VOL: 0
;PCODE: $00000B31 VOL: 0
;PCODE: $00000B32 VOL: 0
;PCODE: $00000B33 VOL: 0
;PCODE: $00000B34 VOL: 0
;PCODE: $00000B35 VOL: 0
;PCODE: $00000B36 VOL: 0
;PCODE: $00000B37 VOL: 0
;PCODE: $00000B38 VOL: 0
;PCODE: $00000B39 VOL: 0
;PCODE: $00000B3A VOL: 0
;PCODE: $00000B3B VOL: 0
;PCODE: $00000B3C VOL: 0
;PCODE: $00000B3D VOL: 0
;PCODE: $00000B3E VOL: 0
;PCODE: $00000B3F VOL: 0
;PCODE: $00000B40 VOL: 0
;PCODE: $00000B41 VOL: 0
;PCODE: $00000B42 VOL: 0
;PCODE: $00000B43 VOL: 0
;PCODE: $00000B44 VOL: 0
;PCODE: $00000B45 VOL: 0
;PCODE: $00000B46 VOL: 0
;PCODE: $00000B47 VOL: 0
;PCODE: $00000B48 VOL: 0
;PCODE: $00000B49 VOL: 0
;PCODE: $00000B4A VOL: 0
;PCODE: $00000B4B VOL: 0
;PCODE: $00000B4C VOL: 0
;PCODE: $00000B4D VOL: 0
;PCODE: $00000B4E VOL: 0
;PCODE: $00000B4F VOL: 0
;PCODE: $00000B50 VOL: 0
;PCODE: $00000B51 VOL: 0
;PCODE: $00000B52 VOL: 0
;PCODE: $00000B53 VOL: 0
;PCODE: $00000B54 VOL: 0
;PCODE: $00000B55 VOL: 0
; 0000 05BB       {
; 0000 05BC       komunikat_na_panel("                                                ",adr1,adr2);
;PCODE: $00000B56 VOL: 0
;PCODE: $00000B57 VOL: 0
;PCODE: $00000B58 VOL: 0
;PCODE: $00000B59 VOL: 0
;PCODE: $00000B5A VOL: 0
;PCODE: $00000B5B VOL: 0
;PCODE: $00000B5C VOL: 0
;PCODE: $00000B5D VOL: 0
; 0000 05BD       komunikat_na_panel("Pozycjonuje uklady liniowe XYZ",adr1,adr2);
;PCODE: $00000B5E VOL: 0
;PCODE: $00000B5F VOL: 0
;PCODE: $00000B60 VOL: 0
;PCODE: $00000B61 VOL: 0
;PCODE: $00000B62 VOL: 0
;PCODE: $00000B63 VOL: 0
;PCODE: $00000B64 VOL: 0
;PCODE: $00000B65 VOL: 0
; 0000 05BE       komunikat_na_panel("                                                ",adr3,adr4);
;PCODE: $00000B66 VOL: 0
;PCODE: $00000B67 VOL: 0
;PCODE: $00000B68 VOL: 0
;PCODE: $00000B69 VOL: 0
;PCODE: $00000B6A VOL: 0
;PCODE: $00000B6B VOL: 0
;PCODE: $00000B6C VOL: 0
;PCODE: $00000B6D VOL: 0
; 0000 05BF       komunikat_na_panel("Pozycjonuje uklady liniowe XYZ",adr3,adr4);
;PCODE: $00000B6E VOL: 0
;PCODE: $00000B6F VOL: 0
;PCODE: $00000B70 VOL: 0
;PCODE: $00000B71 VOL: 0
;PCODE: $00000B72 VOL: 0
;PCODE: $00000B73 VOL: 0
;PCODE: $00000B74 VOL: 0
;PCODE: $00000B75 VOL: 0
; 0000 05C0       delay_ms(1000);
;PCODE: $00000B76 VOL: 0
;PCODE: $00000B77 VOL: 0
;PCODE: $00000B78 VOL: 0
; 0000 05C1 
; 0000 05C2       if(sprawdz_pin3(PORTJJ,0x79) == 0)
;PCODE: $00000B79 VOL: 0
;PCODE: $00000B7A VOL: 0
;PCODE: $00000B7B VOL: 0
;PCODE: $00000B7C VOL: 0
;PCODE: $00000B7D VOL: 0
;PCODE: $00000B7E VOL: 0
;PCODE: $00000B7F VOL: 0
; 0000 05C3             {
; 0000 05C4             komunikat_na_panel("                                                ",adr1,adr2);
;PCODE: $00000B80 VOL: 0
;PCODE: $00000B81 VOL: 0
;PCODE: $00000B82 VOL: 0
;PCODE: $00000B83 VOL: 0
;PCODE: $00000B84 VOL: 0
;PCODE: $00000B85 VOL: 0
;PCODE: $00000B86 VOL: 0
;PCODE: $00000B87 VOL: 0
; 0000 05C5             komunikat_na_panel("Sterownik 1 - wypozycjonowalem",adr1,adr2);
;PCODE: $00000B88 VOL: 0
;PCODE: $00000B89 VOL: 0
;PCODE: $00000B8A VOL: 0
;PCODE: $00000B8B VOL: 0
;PCODE: $00000B8C VOL: 0
;PCODE: $00000B8D VOL: 0
;PCODE: $00000B8E VOL: 0
;PCODE: $00000B8F VOL: 0
; 0000 05C6             delay_ms(1000);
;PCODE: $00000B90 VOL: 0
;PCODE: $00000B91 VOL: 0
;PCODE: $00000B92 VOL: 0
; 0000 05C7             }
; 0000 05C8       if(sprawdz_pin3(PORTLL,0x71) == 0)
;PCODE: $00000B93 VOL: 0
;PCODE: $00000B94 VOL: 0
;PCODE: $00000B95 VOL: 0
;PCODE: $00000B96 VOL: 0
;PCODE: $00000B97 VOL: 0
;PCODE: $00000B98 VOL: 0
;PCODE: $00000B99 VOL: 0
;PCODE: $00000B9A VOL: 0
; 0000 05C9             {
; 0000 05CA             komunikat_na_panel("                                                ",adr3,adr4);
;PCODE: $00000B9B VOL: 0
;PCODE: $00000B9C VOL: 0
;PCODE: $00000B9D VOL: 0
;PCODE: $00000B9E VOL: 0
;PCODE: $00000B9F VOL: 0
;PCODE: $00000BA0 VOL: 0
;PCODE: $00000BA1 VOL: 0
;PCODE: $00000BA2 VOL: 0
; 0000 05CB             komunikat_na_panel("Sterownik 2 - wypozycjonowalem",adr3,adr4);
;PCODE: $00000BA3 VOL: 0
;PCODE: $00000BA4 VOL: 0
;PCODE: $00000BA5 VOL: 0
;PCODE: $00000BA6 VOL: 0
;PCODE: $00000BA7 VOL: 0
;PCODE: $00000BA8 VOL: 0
;PCODE: $00000BA9 VOL: 0
;PCODE: $00000BAA VOL: 0
; 0000 05CC             delay_ms(1000);
;PCODE: $00000BAB VOL: 0
;PCODE: $00000BAC VOL: 0
;PCODE: $00000BAD VOL: 0
; 0000 05CD             }
; 0000 05CE       if(sprawdz_pin3(PORTKK,0x75) == 0)
;PCODE: $00000BAE VOL: 0
;PCODE: $00000BAF VOL: 0
;PCODE: $00000BB0 VOL: 0
;PCODE: $00000BB1 VOL: 0
;PCODE: $00000BB2 VOL: 0
;PCODE: $00000BB3 VOL: 0
;PCODE: $00000BB4 VOL: 0
;PCODE: $00000BB5 VOL: 0
; 0000 05CF             {
; 0000 05D0             komunikat_na_panel("                                                ",adr1,adr2);
;PCODE: $00000BB6 VOL: 0
;PCODE: $00000BB7 VOL: 0
;PCODE: $00000BB8 VOL: 0
;PCODE: $00000BB9 VOL: 0
;PCODE: $00000BBA VOL: 0
;PCODE: $00000BBB VOL: 0
;PCODE: $00000BBC VOL: 0
;PCODE: $00000BBD VOL: 0
; 0000 05D1             komunikat_na_panel("Sterownik 3 - wypozycjonowalem",adr1,adr2);
;PCODE: $00000BBE VOL: 0
;PCODE: $00000BBF VOL: 0
;PCODE: $00000BC0 VOL: 0
;PCODE: $00000BC1 VOL: 0
;PCODE: $00000BC2 VOL: 0
;PCODE: $00000BC3 VOL: 0
;PCODE: $00000BC4 VOL: 0
;PCODE: $00000BC5 VOL: 0
; 0000 05D2             delay_ms(1000);
;PCODE: $00000BC6 VOL: 0
;PCODE: $00000BC7 VOL: 0
;PCODE: $00000BC8 VOL: 0
; 0000 05D3             }
; 0000 05D4       if(sprawdz_pin7(PORTKK,0x75) == 0)
;PCODE: $00000BC9 VOL: 0
;PCODE: $00000BCA VOL: 0
;PCODE: $00000BCB VOL: 0
;PCODE: $00000BCC VOL: 0
;PCODE: $00000BCD VOL: 0
;PCODE: $00000BCE VOL: 0
;PCODE: $00000BCF VOL: 0
;PCODE: $00000BD0 VOL: 0
; 0000 05D5             {
; 0000 05D6             komunikat_na_panel("                                                ",adr3,adr4);
;PCODE: $00000BD1 VOL: 0
;PCODE: $00000BD2 VOL: 0
;PCODE: $00000BD3 VOL: 0
;PCODE: $00000BD4 VOL: 0
;PCODE: $00000BD5 VOL: 0
;PCODE: $00000BD6 VOL: 0
;PCODE: $00000BD7 VOL: 0
;PCODE: $00000BD8 VOL: 0
; 0000 05D7             komunikat_na_panel("Sterownik 4 - wypozycjonowalem",adr1,adr2);
;PCODE: $00000BD9 VOL: 0
;PCODE: $00000BDA VOL: 0
;PCODE: $00000BDB VOL: 0
;PCODE: $00000BDC VOL: 0
;PCODE: $00000BDD VOL: 0
;PCODE: $00000BDE VOL: 0
;PCODE: $00000BDF VOL: 0
;PCODE: $00000BE0 VOL: 0
; 0000 05D8             delay_ms(1000);
;PCODE: $00000BE1 VOL: 0
;PCODE: $00000BE2 VOL: 0
;PCODE: $00000BE3 VOL: 0
; 0000 05D9             }
; 0000 05DA 
; 0000 05DB 
; 0000 05DC       }
;PCODE: $00000BE4 VOL: 0
;PCODE: $00000BE5 VOL: 0
;PCODE: $00000BE6 VOL: 0
; 0000 05DD 
; 0000 05DE komunikat_na_panel("                                                ",adr1,adr2);
;PCODE: $00000BE7 VOL: 0
;PCODE: $00000BE8 VOL: 0
;PCODE: $00000BE9 VOL: 0
;PCODE: $00000BEA VOL: 0
;PCODE: $00000BEB VOL: 0
;PCODE: $00000BEC VOL: 0
;PCODE: $00000BED VOL: 0
;PCODE: $00000BEE VOL: 0
; 0000 05DF komunikat_na_panel("Wypozycjonowano uklady liniowe XYZ",adr1,adr2);
;PCODE: $00000BEF VOL: 0
;PCODE: $00000BF0 VOL: 0
;PCODE: $00000BF1 VOL: 0
;PCODE: $00000BF2 VOL: 0
;PCODE: $00000BF3 VOL: 0
;PCODE: $00000BF4 VOL: 0
;PCODE: $00000BF5 VOL: 0
;PCODE: $00000BF6 VOL: 0
; 0000 05E0 komunikat_na_panel("                                                ",adr3,adr4);
;PCODE: $00000BF7 VOL: 0
;PCODE: $00000BF8 VOL: 0
;PCODE: $00000BF9 VOL: 0
;PCODE: $00000BFA VOL: 0
;PCODE: $00000BFB VOL: 0
;PCODE: $00000BFC VOL: 0
;PCODE: $00000BFD VOL: 0
;PCODE: $00000BFE VOL: 0
; 0000 05E1 komunikat_na_panel("Wypozycjonowano uklady liniowe XYZ",adr3,adr4);
;PCODE: $00000BFF VOL: 0
;PCODE: $00000C00 VOL: 0
;PCODE: $00000C01 VOL: 0
;PCODE: $00000C02 VOL: 0
;PCODE: $00000C03 VOL: 0
;PCODE: $00000C04 VOL: 0
;PCODE: $00000C05 VOL: 0
;PCODE: $00000C06 VOL: 0
; 0000 05E2 
; 0000 05E3 PORTD.2 = 0;   //setup wspolny
;PCODE: $00000C07 VOL: 0
;PCODE: $00000C08 VOL: 0
; 0000 05E4 delay_ms(1000);
;PCODE: $00000C09 VOL: 0
;PCODE: $00000C0A VOL: 0
;PCODE: $00000C0B VOL: 0
; 0000 05E5 
; 0000 05E6 }
;PCODE: $00000C0C VOL: 0
;PCODE: $00000C0D VOL: 0
;
;int wypozycjonuj_LEFS32_300_1(int step)
; 0000 05E9 {
;PCODE: $00000C0E VOL: 0
;PCODE: $00000C0F VOL: 0
; 0000 05EA //PORTF.0   IN0  STEROWNIK3
; 0000 05EB //PORTF.1   IN1  STEROWNIK3
; 0000 05EC //PORTF.2   IN2  STEROWNIK3
; 0000 05ED //PORTF.3   IN3  STEROWNIK3
; 0000 05EE 
; 0000 05EF //PORTF.4   SETUP  STEROWNIK3
; 0000 05F0 //PORTF.5   DRIVE  STEROWNIK3
; 0000 05F1 
; 0000 05F2 //sprawdz_pin0(PORTKK,0x75)  B7 BUSY    LECCP STEROWNIK3
; 0000 05F3 //sprawdz_pin3(PORTKK,0x75)  B10 INP    LECP6 STEROWNIK3
; 0000 05F4 
; 0000 05F5 
; 0000 05F6 if(step == 0)
;	step -> Y+0
;PCODE: $00000C10 VOL: 0
;PCODE: $00000C11 VOL: 0
;PCODE: $00000C12 VOL: 0
; 0000 05F7 {
; 0000 05F8 switch(pozycjonowanie_LEFS32_300_1)
;PCODE: $00000C13 VOL: 0
; 0000 05F9     {
; 0000 05FA     case 0:
;PCODE: $00000C14 VOL: 0
;PCODE: $00000C15 VOL: 0
; 0000 05FB             PORT_F.bits.b4 = 1;      // ////A9  SETUP
;PCODE: $00000C16 VOL: 0
;PCODE: $00000C17 VOL: 0
;PCODE: $00000C18 VOL: 0
; 0000 05FC             PORTF = PORT_F.byte;
;PCODE: $00000C19 VOL: 0
;PCODE: $00000C1A VOL: 0
; 0000 05FD 
; 0000 05FE             if(sprawdz_pin0(PORTKK,0x75) == 1)  //BUSY
;PCODE: $00000C1B VOL: 0
;PCODE: $00000C1C VOL: 0
;PCODE: $00000C1D VOL: 0
;PCODE: $00000C1E VOL: 0
;PCODE: $00000C1F VOL: 0
;PCODE: $00000C20 VOL: 0
;PCODE: $00000C21 VOL: 0
; 0000 05FF                 {
; 0000 0600                 }
; 0000 0601             else
;PCODE: $00000C22 VOL: 0
;PCODE: $00000C23 VOL: 0
; 0000 0602                 {
; 0000 0603                 pozycjonowanie_LEFS32_300_1 = 1;
;PCODE: $00000C24 VOL: 0
;PCODE: $00000C25 VOL: 0
; 0000 0604                 }
;PCODE: $00000C26 VOL: 0
; 0000 0605 
; 0000 0606     break;
;PCODE: $00000C27 VOL: 0
; 0000 0607 
; 0000 0608     case 1:
;PCODE: $00000C28 VOL: 0
;PCODE: $00000C29 VOL: 0
;PCODE: $00000C2A VOL: 0
; 0000 0609             if(sprawdz_pin0(PORTKK,0x75) == 0)
;PCODE: $00000C2B VOL: 0
;PCODE: $00000C2C VOL: 0
;PCODE: $00000C2D VOL: 0
;PCODE: $00000C2E VOL: 0
;PCODE: $00000C2F VOL: 0
;PCODE: $00000C30 VOL: 0
;PCODE: $00000C31 VOL: 0
; 0000 060A                 {
; 0000 060B                 }
; 0000 060C             else
;PCODE: $00000C32 VOL: 0
;PCODE: $00000C33 VOL: 0
; 0000 060D                 {
; 0000 060E                 pozycjonowanie_LEFS32_300_1 = 2;
;PCODE: $00000C34 VOL: 0
;PCODE: $00000C35 VOL: 0
; 0000 060F                 }
;PCODE: $00000C36 VOL: 0
; 0000 0610             if(sprawdz_pin7(PORTMM,0x77) == 1)     //alarm
;PCODE: $00000C37 VOL: 0
;PCODE: $00000C38 VOL: 0
;PCODE: $00000C39 VOL: 0
;PCODE: $00000C3A VOL: 0
;PCODE: $00000C3B VOL: 0
;PCODE: $00000C3C VOL: 0
;PCODE: $00000C3D VOL: 0
; 0000 0611                    {
; 0000 0612                    komunikat_na_panel("                                                ",adr1,adr2);
;PCODE: $00000C3E VOL: 0
;PCODE: $00000C3F VOL: 0
;PCODE: $00000C40 VOL: 0
;PCODE: $00000C41 VOL: 0
;PCODE: $00000C42 VOL: 0
;PCODE: $00000C43 VOL: 0
;PCODE: $00000C44 VOL: 0
;PCODE: $00000C45 VOL: 0
; 0000 0613                    komunikat_na_panel("Przeciazenia LEFS32_1",adr1,adr2);
;PCODE: $00000C46 VOL: 0
;PCODE: $00000C47 VOL: 0
;PCODE: $00000C48 VOL: 0
;PCODE: $00000C49 VOL: 0
;PCODE: $00000C4A VOL: 0
;PCODE: $00000C4B VOL: 0
;PCODE: $00000C4C VOL: 0
;PCODE: $00000C4D VOL: 0
; 0000 0614                    }
; 0000 0615 
; 0000 0616     break;
;PCODE: $00000C4E VOL: 0
;PCODE: $00000C4F VOL: 0
; 0000 0617 
; 0000 0618     case 2:
;PCODE: $00000C50 VOL: 0
;PCODE: $00000C51 VOL: 0
;PCODE: $00000C52 VOL: 0
; 0000 0619 
; 0000 061A             if(sprawdz_pin3(PORTKK,0x75) == 1)
;PCODE: $00000C53 VOL: 0
;PCODE: $00000C54 VOL: 0
;PCODE: $00000C55 VOL: 0
;PCODE: $00000C56 VOL: 0
;PCODE: $00000C57 VOL: 0
;PCODE: $00000C58 VOL: 0
;PCODE: $00000C59 VOL: 0
; 0000 061B                 {
; 0000 061C                 }
; 0000 061D             else
;PCODE: $00000C5A VOL: 0
;PCODE: $00000C5B VOL: 0
; 0000 061E                 {
; 0000 061F                 pozycjonowanie_LEFS32_300_1 = 3;
;PCODE: $00000C5C VOL: 0
;PCODE: $00000C5D VOL: 0
; 0000 0620                 }
;PCODE: $00000C5E VOL: 0
; 0000 0621              if(sprawdz_pin7(PORTMM,0x77) == 1)     //alarm
;PCODE: $00000C5F VOL: 0
;PCODE: $00000C60 VOL: 0
;PCODE: $00000C61 VOL: 0
;PCODE: $00000C62 VOL: 0
;PCODE: $00000C63 VOL: 0
;PCODE: $00000C64 VOL: 0
;PCODE: $00000C65 VOL: 0
; 0000 0622                    {
; 0000 0623                    komunikat_na_panel("                                                ",adr1,adr2);
;PCODE: $00000C66 VOL: 0
;PCODE: $00000C67 VOL: 0
;PCODE: $00000C68 VOL: 0
;PCODE: $00000C69 VOL: 0
;PCODE: $00000C6A VOL: 0
;PCODE: $00000C6B VOL: 0
;PCODE: $00000C6C VOL: 0
;PCODE: $00000C6D VOL: 0
; 0000 0624                    komunikat_na_panel("Przeciazenia LEFS32_1",adr1,adr2);
;PCODE: $00000C6E VOL: 0
;PCODE: $00000C6F VOL: 0
;PCODE: $00000C70 VOL: 0
;PCODE: $00000C71 VOL: 0
;PCODE: $00000C72 VOL: 0
;PCODE: $00000C73 VOL: 0
;PCODE: $00000C74 VOL: 0
;PCODE: $00000C75 VOL: 0
; 0000 0625                    }
; 0000 0626 
; 0000 0627     break;
;PCODE: $00000C76 VOL: 0
;PCODE: $00000C77 VOL: 0
; 0000 0628 
; 0000 0629     case 3:
;PCODE: $00000C78 VOL: 0
;PCODE: $00000C79 VOL: 0
;PCODE: $00000C7A VOL: 0
; 0000 062A 
; 0000 062B             if(sprawdz_pin3(PORTKK,0x75) == 0)
;PCODE: $00000C7B VOL: 0
;PCODE: $00000C7C VOL: 0
;PCODE: $00000C7D VOL: 0
;PCODE: $00000C7E VOL: 0
;PCODE: $00000C7F VOL: 0
;PCODE: $00000C80 VOL: 0
;PCODE: $00000C81 VOL: 0
; 0000 062C                 {
; 0000 062D                 PORT_F.bits.b4 = 0;      // ////A9  SETUP
;PCODE: $00000C82 VOL: 0
;PCODE: $00000C83 VOL: 0
;PCODE: $00000C84 VOL: 0
;PCODE: $00000C85 VOL: 0
; 0000 062E                 PORTF = PORT_F.byte;
;PCODE: $00000C86 VOL: 0
;PCODE: $00000C87 VOL: 0
; 0000 062F                 pozycjonowanie_LEFS32_300_1 = 4;
;PCODE: $00000C88 VOL: 0
;PCODE: $00000C89 VOL: 0
; 0000 0630 
; 0000 0631                 }
; 0000 0632 
; 0000 0633     break;
;PCODE: $00000C8A VOL: 0
;PCODE: $00000C8B VOL: 0
; 0000 0634 
; 0000 0635     }
;PCODE: $00000C8C VOL: 0
; 0000 0636 }
; 0000 0637 
; 0000 0638 
; 0000 0639 
; 0000 063A if(step == 1)
;PCODE: $00000C8D VOL: 0
;PCODE: $00000C8E VOL: 0
;PCODE: $00000C8F VOL: 0
;PCODE: $00000C90 VOL: 0
; 0000 063B {
; 0000 063C while(cykl < 5)
;PCODE: $00000C91 VOL: 0
;PCODE: $00000C92 VOL: 0
;PCODE: $00000C93 VOL: 0
;PCODE: $00000C94 VOL: 0
; 0000 063D {
; 0000 063E     switch(cykl)
;PCODE: $00000C95 VOL: 0
; 0000 063F         {
; 0000 0640         case 0:
;PCODE: $00000C96 VOL: 0
;PCODE: $00000C97 VOL: 0
; 0000 0641 
; 0000 0642             PORTE.7 = 1;  ////////////////////////////////////////////////////////////////////czasowo aby pokazac
;PCODE: $00000C98 VOL: 0
;PCODE: $00000C99 VOL: 0
; 0000 0643             sek2 = 0;
;PCODE: $00000C9A VOL: 0
;PCODE: $00000C9B VOL: 0
; 0000 0644             PORT_F.bits.b0 = 1;
;PCODE: $00000C9C VOL: 0
;PCODE: $00000C9D VOL: 0
;PCODE: $00000C9E VOL: 0
; 0000 0645             PORT_F.bits.b1 = 1;         //STEP 0
;PCODE: $00000C9F VOL: 0
;PCODE: $00000CA0 VOL: 0
;PCODE: $00000CA1 VOL: 0
; 0000 0646             PORT_F.bits.b2 = 1;
;PCODE: $00000CA2 VOL: 0
;PCODE: $00000CA3 VOL: 0
;PCODE: $00000CA4 VOL: 0
; 0000 0647             PORT_F.bits.b3 = 1;
;PCODE: $00000CA5 VOL: 0
;PCODE: $00000CA6 VOL: 0
;PCODE: $00000CA7 VOL: 0
; 0000 0648             PORTF = PORT_F.byte;
;PCODE: $00000CA8 VOL: 0
;PCODE: $00000CA9 VOL: 0
; 0000 0649             cykl = 1;
;PCODE: $00000CAA VOL: 0
;PCODE: $00000CAB VOL: 0
; 0000 064A 
; 0000 064B 
; 0000 064C         break;
;PCODE: $00000CAC VOL: 0
; 0000 064D 
; 0000 064E         case 1:
;PCODE: $00000CAD VOL: 0
;PCODE: $00000CAE VOL: 0
;PCODE: $00000CAF VOL: 0
; 0000 064F 
; 0000 0650             if(sek2 > 1)
;PCODE: $00000CB0 VOL: 0
;PCODE: $00000CB1 VOL: 0
;PCODE: $00000CB2 VOL: 0
; 0000 0651                 {
; 0000 0652                 PORT_F.bits.b5 = 1;
;PCODE: $00000CB3 VOL: 0
;PCODE: $00000CB4 VOL: 0
;PCODE: $00000CB5 VOL: 0
; 0000 0653                 PORTF = PORT_F.byte;
;PCODE: $00000CB6 VOL: 0
;PCODE: $00000CB7 VOL: 0
; 0000 0654                 cykl = 2;
;PCODE: $00000CB8 VOL: 0
;PCODE: $00000CB9 VOL: 0
; 0000 0655                 delay_ms(1000);
;PCODE: $00000CBA VOL: 0
;PCODE: $00000CBB VOL: 0
;PCODE: $00000CBC VOL: 0
; 0000 0656                 }
; 0000 0657         break;
;PCODE: $00000CBD VOL: 0
;PCODE: $00000CBE VOL: 0
; 0000 0658 
; 0000 0659 
; 0000 065A         case 2:
;PCODE: $00000CBF VOL: 0
;PCODE: $00000CC0 VOL: 0
;PCODE: $00000CC1 VOL: 0
; 0000 065B 
; 0000 065C                if(sprawdz_pin0(PORTKK,0x75) == 0)
;PCODE: $00000CC2 VOL: 0
;PCODE: $00000CC3 VOL: 0
;PCODE: $00000CC4 VOL: 0
;PCODE: $00000CC5 VOL: 0
;PCODE: $00000CC6 VOL: 0
;PCODE: $00000CC7 VOL: 0
;PCODE: $00000CC8 VOL: 0
; 0000 065D                   {
; 0000 065E                   PORT_F.bits.b5 = 0;
;PCODE: $00000CC9 VOL: 0
;PCODE: $00000CCA VOL: 0
;PCODE: $00000CCB VOL: 0
;PCODE: $00000CCC VOL: 0
; 0000 065F                   PORTF = PORT_F.byte;       //DRIVE koniec
;PCODE: $00000CCD VOL: 0
;PCODE: $00000CCE VOL: 0
; 0000 0660 
; 0000 0661                   PORT_F.bits.b0 = 0;
;PCODE: $00000CCF VOL: 0
;PCODE: $00000CD0 VOL: 0
;PCODE: $00000CD1 VOL: 0
;PCODE: $00000CD2 VOL: 0
; 0000 0662                   PORT_F.bits.b1 = 0;         //STEP 1 koniec
;PCODE: $00000CD3 VOL: 0
;PCODE: $00000CD4 VOL: 0
;PCODE: $00000CD5 VOL: 0
;PCODE: $00000CD6 VOL: 0
; 0000 0663                   PORT_F.bits.b2 = 0;
;PCODE: $00000CD7 VOL: 0
;PCODE: $00000CD8 VOL: 0
;PCODE: $00000CD9 VOL: 0
;PCODE: $00000CDA VOL: 0
; 0000 0664                   PORT_F.bits.b3 = 0;
;PCODE: $00000CDB VOL: 0
;PCODE: $00000CDC VOL: 0
;PCODE: $00000CDD VOL: 0
;PCODE: $00000CDE VOL: 0
; 0000 0665                   PORTF = PORT_F.byte;
;PCODE: $00000CDF VOL: 0
;PCODE: $00000CE0 VOL: 0
; 0000 0666 
; 0000 0667                   delay_ms(1000);
;PCODE: $00000CE1 VOL: 0
;PCODE: $00000CE2 VOL: 0
;PCODE: $00000CE3 VOL: 0
; 0000 0668                   cykl = 3;
;PCODE: $00000CE4 VOL: 0
;PCODE: $00000CE5 VOL: 0
; 0000 0669                   }
; 0000 066A 
; 0000 066B         break;
;PCODE: $00000CE6 VOL: 0
;PCODE: $00000CE7 VOL: 0
; 0000 066C 
; 0000 066D         case 3:
;PCODE: $00000CE8 VOL: 0
;PCODE: $00000CE9 VOL: 0
;PCODE: $00000CEA VOL: 0
; 0000 066E 
; 0000 066F                if(sprawdz_pin3(PORTKK,0x75) == 0)
;PCODE: $00000CEB VOL: 0
;PCODE: $00000CEC VOL: 0
;PCODE: $00000CED VOL: 0
;PCODE: $00000CEE VOL: 0
;PCODE: $00000CEF VOL: 0
;PCODE: $00000CF0 VOL: 0
;PCODE: $00000CF1 VOL: 0
; 0000 0670                   {
; 0000 0671                   sek2 = 0;
;PCODE: $00000CF2 VOL: 0
;PCODE: $00000CF3 VOL: 0
; 0000 0672                   cykl = 4;
;PCODE: $00000CF4 VOL: 0
;PCODE: $00000CF5 VOL: 0
; 0000 0673                   }
; 0000 0674               if(sprawdz_pin7(PORTMM,0x77) == 1)     //alarm
;PCODE: $00000CF6 VOL: 0
;PCODE: $00000CF7 VOL: 0
;PCODE: $00000CF8 VOL: 0
;PCODE: $00000CF9 VOL: 0
;PCODE: $00000CFA VOL: 0
;PCODE: $00000CFB VOL: 0
;PCODE: $00000CFC VOL: 0
;PCODE: $00000CFD VOL: 0
; 0000 0675                    {
; 0000 0676                    komunikat_na_panel("                                                ",adr1,adr2);
;PCODE: $00000CFE VOL: 0
;PCODE: $00000CFF VOL: 0
;PCODE: $00000D00 VOL: 0
;PCODE: $00000D01 VOL: 0
;PCODE: $00000D02 VOL: 0
;PCODE: $00000D03 VOL: 0
;PCODE: $00000D04 VOL: 0
;PCODE: $00000D05 VOL: 0
; 0000 0677                    komunikat_na_panel("Przeciazenia LEFS32_1",adr1,adr2);
;PCODE: $00000D06 VOL: 0
;PCODE: $00000D07 VOL: 0
;PCODE: $00000D08 VOL: 0
;PCODE: $00000D09 VOL: 0
;PCODE: $00000D0A VOL: 0
;PCODE: $00000D0B VOL: 0
;PCODE: $00000D0C VOL: 0
;PCODE: $00000D0D VOL: 0
; 0000 0678                    }
; 0000 0679 
; 0000 067A         break;
;PCODE: $00000D0E VOL: 0
;PCODE: $00000D0F VOL: 0
; 0000 067B 
; 0000 067C 
; 0000 067D         case 4:
;PCODE: $00000D10 VOL: 0
;PCODE: $00000D11 VOL: 0
;PCODE: $00000D12 VOL: 0
; 0000 067E 
; 0000 067F             if(sek2 > 50)
;PCODE: $00000D13 VOL: 0
;PCODE: $00000D14 VOL: 0
;PCODE: $00000D15 VOL: 0
; 0000 0680                 {
; 0000 0681                 cykl = 5;
;PCODE: $00000D16 VOL: 0
;PCODE: $00000D17 VOL: 0
; 0000 0682                 }
; 0000 0683         break;
;PCODE: $00000D18 VOL: 0
;PCODE: $00000D19 VOL: 0
; 0000 0684 
; 0000 0685         }
;PCODE: $00000D1A VOL: 0
; 0000 0686 }
;PCODE: $00000D1B VOL: 0
;PCODE: $00000D1C VOL: 0
; 0000 0687 
; 0000 0688 cykl = 0;
;PCODE: $00000D1D VOL: 0
;PCODE: $00000D1E VOL: 0
; 0000 0689 }
; 0000 068A 
; 0000 068B 
; 0000 068C 
; 0000 068D 
; 0000 068E 
; 0000 068F if(step == 0 & pozycjonowanie_LEFS32_300_1 == 4)
;PCODE: $00000D1F VOL: 0
;PCODE: $00000D20 VOL: 0
;PCODE: $00000D21 VOL: 0
;PCODE: $00000D22 VOL: 0
;PCODE: $00000D23 VOL: 0
;PCODE: $00000D24 VOL: 0
;PCODE: $00000D25 VOL: 0
;PCODE: $00000D26 VOL: 0
;PCODE: $00000D27 VOL: 0
;PCODE: $00000D28 VOL: 0
; 0000 0690     {
; 0000 0691     pozycjonowanie_LEFS32_300_1 = 0;
;PCODE: $00000D29 VOL: 0
;PCODE: $00000D2A VOL: 0
; 0000 0692     cykl = 0;
;PCODE: $00000D2B VOL: 0
;PCODE: $00000D2C VOL: 0
; 0000 0693     return 1;
;PCODE: $00000D2D VOL: 0
;PCODE: $00000D2E VOL: 0
;PCODE: $00000D2F VOL: 0
; 0000 0694     }
; 0000 0695 if(step == 1)
;PCODE: $00000D30 VOL: 0
;PCODE: $00000D31 VOL: 0
;PCODE: $00000D32 VOL: 0
;PCODE: $00000D33 VOL: 0
; 0000 0696     return 2;
;PCODE: $00000D34 VOL: 0
;PCODE: $00000D35 VOL: 0
;PCODE: $00000D36 VOL: 0
; 0000 0697 
; 0000 0698 
; 0000 0699 
; 0000 069A }
;PCODE: $00000D37 VOL: 0
;PCODE: $00000D38 VOL: 0
;PCODE: $00000D39 VOL: 0
;PCODE: $00000D3A VOL: 0
;
;
;int wypozycjonuj_LEFS32_300_2(int step)
; 0000 069E {
;PCODE: $00000D3B VOL: 0
;PCODE: $00000D3C VOL: 0
; 0000 069F //PORTB.0   IN0  STEROWNIK4
; 0000 06A0 //PORTB.1   IN1  STEROWNIK4
; 0000 06A1 //PORTB.2   IN2  STEROWNIK4
; 0000 06A2 //PORTB.3   IN3  STEROWNIK4
; 0000 06A3 
; 0000 06A4 //PORTB.4   SETUP  STEROWNIK4
; 0000 06A5 //PORTB.5   DRIVE  STEROWNIK4
; 0000 06A6 
; 0000 06A7 //sprawdz_pin4(PORTKK,0x75)  B7 BUSY    LECCP STEROWNIK4
; 0000 06A8 //sprawdz_pin7(PORTKK,0x75)  B10 INP    LECP6 STEROWNIK4
; 0000 06A9 
; 0000 06AA 
; 0000 06AB if(step == 0)
;	step -> Y+0
;PCODE: $00000D3D VOL: 0
;PCODE: $00000D3E VOL: 0
;PCODE: $00000D3F VOL: 0
; 0000 06AC {
; 0000 06AD switch(pozycjonowanie_LEFS32_300_2)
;PCODE: $00000D40 VOL: 0
; 0000 06AE     {
; 0000 06AF     case 0:
;PCODE: $00000D41 VOL: 0
;PCODE: $00000D42 VOL: 0
; 0000 06B0             PORTB.4 = 1;      // ////A9  SETUP
;PCODE: $00000D43 VOL: 0
;PCODE: $00000D44 VOL: 0
; 0000 06B1 
; 0000 06B2             if(sprawdz_pin4(PORTKK,0x75) == 1)  //BUSY
;PCODE: $00000D45 VOL: 0
;PCODE: $00000D46 VOL: 0
;PCODE: $00000D47 VOL: 0
;PCODE: $00000D48 VOL: 0
;PCODE: $00000D49 VOL: 0
;PCODE: $00000D4A VOL: 0
;PCODE: $00000D4B VOL: 0
; 0000 06B3                 {
; 0000 06B4                 }
; 0000 06B5             else
;PCODE: $00000D4C VOL: 0
;PCODE: $00000D4D VOL: 0
; 0000 06B6                 pozycjonowanie_LEFS32_300_2 = 1;
;PCODE: $00000D4E VOL: 0
;PCODE: $00000D4F VOL: 0
; 0000 06B7 
; 0000 06B8     break;
;PCODE: $00000D50 VOL: 0
;PCODE: $00000D51 VOL: 0
; 0000 06B9 
; 0000 06BA     case 1:
;PCODE: $00000D52 VOL: 0
;PCODE: $00000D53 VOL: 0
;PCODE: $00000D54 VOL: 0
; 0000 06BB             if(sprawdz_pin4(PORTKK,0x75) == 0)
;PCODE: $00000D55 VOL: 0
;PCODE: $00000D56 VOL: 0
;PCODE: $00000D57 VOL: 0
;PCODE: $00000D58 VOL: 0
;PCODE: $00000D59 VOL: 0
;PCODE: $00000D5A VOL: 0
;PCODE: $00000D5B VOL: 0
; 0000 06BC                 {
; 0000 06BD                 }
; 0000 06BE             else
;PCODE: $00000D5C VOL: 0
;PCODE: $00000D5D VOL: 0
; 0000 06BF                 pozycjonowanie_LEFS32_300_2 = 2;
;PCODE: $00000D5E VOL: 0
;PCODE: $00000D5F VOL: 0
; 0000 06C0 
; 0000 06C1              if(sprawdz_pin6(PORTMM,0x77) == 1)     //alarm
;PCODE: $00000D60 VOL: 0
;PCODE: $00000D61 VOL: 0
;PCODE: $00000D62 VOL: 0
;PCODE: $00000D63 VOL: 0
;PCODE: $00000D64 VOL: 0
;PCODE: $00000D65 VOL: 0
;PCODE: $00000D66 VOL: 0
;PCODE: $00000D67 VOL: 0
; 0000 06C2                    {
; 0000 06C3                    komunikat_na_panel("                                                ",adr1,adr2);
;PCODE: $00000D68 VOL: 0
;PCODE: $00000D69 VOL: 0
;PCODE: $00000D6A VOL: 0
;PCODE: $00000D6B VOL: 0
;PCODE: $00000D6C VOL: 0
;PCODE: $00000D6D VOL: 0
;PCODE: $00000D6E VOL: 0
;PCODE: $00000D6F VOL: 0
; 0000 06C4                    komunikat_na_panel("Przeciazenia LEFS32_2",adr3,adr4);
;PCODE: $00000D70 VOL: 0
;PCODE: $00000D71 VOL: 0
;PCODE: $00000D72 VOL: 0
;PCODE: $00000D73 VOL: 0
;PCODE: $00000D74 VOL: 0
;PCODE: $00000D75 VOL: 0
;PCODE: $00000D76 VOL: 0
;PCODE: $00000D77 VOL: 0
; 0000 06C5                    }
; 0000 06C6 
; 0000 06C7     break;
;PCODE: $00000D78 VOL: 0
;PCODE: $00000D79 VOL: 0
; 0000 06C8 
; 0000 06C9     case 2:
;PCODE: $00000D7A VOL: 0
;PCODE: $00000D7B VOL: 0
;PCODE: $00000D7C VOL: 0
; 0000 06CA 
; 0000 06CB             if(sprawdz_pin7(PORTKK,0x75) == 1)
;PCODE: $00000D7D VOL: 0
;PCODE: $00000D7E VOL: 0
;PCODE: $00000D7F VOL: 0
;PCODE: $00000D80 VOL: 0
;PCODE: $00000D81 VOL: 0
;PCODE: $00000D82 VOL: 0
;PCODE: $00000D83 VOL: 0
; 0000 06CC                 {
; 0000 06CD                 }
; 0000 06CE             else
;PCODE: $00000D84 VOL: 0
;PCODE: $00000D85 VOL: 0
; 0000 06CF                 pozycjonowanie_LEFS32_300_2 = 3;
;PCODE: $00000D86 VOL: 0
;PCODE: $00000D87 VOL: 0
; 0000 06D0 
; 0000 06D1             if(sprawdz_pin6(PORTMM,0x77) == 1)     //alarm
;PCODE: $00000D88 VOL: 0
;PCODE: $00000D89 VOL: 0
;PCODE: $00000D8A VOL: 0
;PCODE: $00000D8B VOL: 0
;PCODE: $00000D8C VOL: 0
;PCODE: $00000D8D VOL: 0
;PCODE: $00000D8E VOL: 0
;PCODE: $00000D8F VOL: 0
; 0000 06D2                    {
; 0000 06D3                    komunikat_na_panel("                                                ",adr1,adr2);
;PCODE: $00000D90 VOL: 0
;PCODE: $00000D91 VOL: 0
;PCODE: $00000D92 VOL: 0
;PCODE: $00000D93 VOL: 0
;PCODE: $00000D94 VOL: 0
;PCODE: $00000D95 VOL: 0
;PCODE: $00000D96 VOL: 0
;PCODE: $00000D97 VOL: 0
; 0000 06D4                    komunikat_na_panel("Przeciazenia LEFS32_2",adr3,adr4);
;PCODE: $00000D98 VOL: 0
;PCODE: $00000D99 VOL: 0
;PCODE: $00000D9A VOL: 0
;PCODE: $00000D9B VOL: 0
;PCODE: $00000D9C VOL: 0
;PCODE: $00000D9D VOL: 0
;PCODE: $00000D9E VOL: 0
;PCODE: $00000D9F VOL: 0
; 0000 06D5                    }
; 0000 06D6 
; 0000 06D7     break;
;PCODE: $00000DA0 VOL: 0
;PCODE: $00000DA1 VOL: 0
; 0000 06D8 
; 0000 06D9     case 3:
;PCODE: $00000DA2 VOL: 0
;PCODE: $00000DA3 VOL: 0
;PCODE: $00000DA4 VOL: 0
; 0000 06DA 
; 0000 06DB             if(sprawdz_pin7(PORTKK,0x75) == 0)
;PCODE: $00000DA5 VOL: 0
;PCODE: $00000DA6 VOL: 0
;PCODE: $00000DA7 VOL: 0
;PCODE: $00000DA8 VOL: 0
;PCODE: $00000DA9 VOL: 0
;PCODE: $00000DAA VOL: 0
;PCODE: $00000DAB VOL: 0
; 0000 06DC                 {
; 0000 06DD                 PORTB.4 = 0;      // ////A9  SETUP
;PCODE: $00000DAC VOL: 0
;PCODE: $00000DAD VOL: 0
; 0000 06DE 
; 0000 06DF                 pozycjonowanie_LEFS32_300_2 = 4;
;PCODE: $00000DAE VOL: 0
;PCODE: $00000DAF VOL: 0
; 0000 06E0                 }
; 0000 06E1 
; 0000 06E2     break;
;PCODE: $00000DB0 VOL: 0
;PCODE: $00000DB1 VOL: 0
; 0000 06E3 
; 0000 06E4     }
;PCODE: $00000DB2 VOL: 0
; 0000 06E5 }
; 0000 06E6 
; 0000 06E7 if(step == 1)
;PCODE: $00000DB3 VOL: 0
;PCODE: $00000DB4 VOL: 0
;PCODE: $00000DB5 VOL: 0
;PCODE: $00000DB6 VOL: 0
; 0000 06E8 {
; 0000 06E9 while(cykl < 5)
;PCODE: $00000DB7 VOL: 0
;PCODE: $00000DB8 VOL: 0
;PCODE: $00000DB9 VOL: 0
;PCODE: $00000DBA VOL: 0
; 0000 06EA {
; 0000 06EB     switch(cykl)
;PCODE: $00000DBB VOL: 0
; 0000 06EC         {
; 0000 06ED         case 0:
;PCODE: $00000DBC VOL: 0
;PCODE: $00000DBD VOL: 0
; 0000 06EE 
; 0000 06EF             sek4 = 0;
;PCODE: $00000DBE VOL: 0
;PCODE: $00000DBF VOL: 0
; 0000 06F0             PORTB.0 = 1;    //STEP 0
;PCODE: $00000DC0 VOL: 0
;PCODE: $00000DC1 VOL: 0
; 0000 06F1             PORTB.1 = 1;
;PCODE: $00000DC2 VOL: 0
;PCODE: $00000DC3 VOL: 0
; 0000 06F2             PORTB.2 = 1;
;PCODE: $00000DC4 VOL: 0
;PCODE: $00000DC5 VOL: 0
; 0000 06F3             PORTB.3 = 1;
;PCODE: $00000DC6 VOL: 0
;PCODE: $00000DC7 VOL: 0
; 0000 06F4 
; 0000 06F5             cykl = 1;
;PCODE: $00000DC8 VOL: 0
;PCODE: $00000DC9 VOL: 0
; 0000 06F6 
; 0000 06F7 
; 0000 06F8         break;
;PCODE: $00000DCA VOL: 0
; 0000 06F9 
; 0000 06FA         case 1:
;PCODE: $00000DCB VOL: 0
;PCODE: $00000DCC VOL: 0
;PCODE: $00000DCD VOL: 0
; 0000 06FB 
; 0000 06FC             if(sek4 > 1)
;PCODE: $00000DCE VOL: 0
;PCODE: $00000DCF VOL: 0
;PCODE: $00000DD0 VOL: 0
; 0000 06FD                 {
; 0000 06FE                 PORTB.5 = 1;
;PCODE: $00000DD1 VOL: 0
;PCODE: $00000DD2 VOL: 0
; 0000 06FF                 cykl = 2;
;PCODE: $00000DD3 VOL: 0
;PCODE: $00000DD4 VOL: 0
; 0000 0700                 delay_ms(1000);
;PCODE: $00000DD5 VOL: 0
;PCODE: $00000DD6 VOL: 0
;PCODE: $00000DD7 VOL: 0
; 0000 0701                 }
; 0000 0702         break;
;PCODE: $00000DD8 VOL: 0
;PCODE: $00000DD9 VOL: 0
; 0000 0703 
; 0000 0704 
; 0000 0705         case 2:
;PCODE: $00000DDA VOL: 0
;PCODE: $00000DDB VOL: 0
;PCODE: $00000DDC VOL: 0
; 0000 0706 
; 0000 0707                if(sprawdz_pin4(PORTKK,0x75) == 0)
;PCODE: $00000DDD VOL: 0
;PCODE: $00000DDE VOL: 0
;PCODE: $00000DDF VOL: 0
;PCODE: $00000DE0 VOL: 0
;PCODE: $00000DE1 VOL: 0
;PCODE: $00000DE2 VOL: 0
;PCODE: $00000DE3 VOL: 0
; 0000 0708                   {
; 0000 0709                   PORTB.5 = 0;
;PCODE: $00000DE4 VOL: 0
;PCODE: $00000DE5 VOL: 0
; 0000 070A                       //DRIVE koniec
; 0000 070B 
; 0000 070C                   PORTB.0 = 0;    //STEP 0
;PCODE: $00000DE6 VOL: 0
;PCODE: $00000DE7 VOL: 0
; 0000 070D                   PORTB.1 = 0;
;PCODE: $00000DE8 VOL: 0
;PCODE: $00000DE9 VOL: 0
; 0000 070E                   PORTB.2 = 0;
;PCODE: $00000DEA VOL: 0
;PCODE: $00000DEB VOL: 0
; 0000 070F                   PORTB.3 = 0;
;PCODE: $00000DEC VOL: 0
;PCODE: $00000DED VOL: 0
; 0000 0710 
; 0000 0711 
; 0000 0712                   delay_ms(1000);
;PCODE: $00000DEE VOL: 0
;PCODE: $00000DEF VOL: 0
;PCODE: $00000DF0 VOL: 0
; 0000 0713                   cykl = 3;
;PCODE: $00000DF1 VOL: 0
;PCODE: $00000DF2 VOL: 0
; 0000 0714                   }
; 0000 0715 
; 0000 0716         break;
;PCODE: $00000DF3 VOL: 0
;PCODE: $00000DF4 VOL: 0
; 0000 0717 
; 0000 0718         case 3:
;PCODE: $00000DF5 VOL: 0
;PCODE: $00000DF6 VOL: 0
;PCODE: $00000DF7 VOL: 0
; 0000 0719 
; 0000 071A                if(sprawdz_pin7(PORTKK,0x75) == 0)
;PCODE: $00000DF8 VOL: 0
;PCODE: $00000DF9 VOL: 0
;PCODE: $00000DFA VOL: 0
;PCODE: $00000DFB VOL: 0
;PCODE: $00000DFC VOL: 0
;PCODE: $00000DFD VOL: 0
;PCODE: $00000DFE VOL: 0
; 0000 071B                   {
; 0000 071C                   sek4 = 0;
;PCODE: $00000DFF VOL: 0
;PCODE: $00000E00 VOL: 0
; 0000 071D                   cykl = 4;
;PCODE: $00000E01 VOL: 0
;PCODE: $00000E02 VOL: 0
; 0000 071E                   }
; 0000 071F                if(sprawdz_pin6(PORTMM,0x77) == 1)     //alarm
;PCODE: $00000E03 VOL: 0
;PCODE: $00000E04 VOL: 0
;PCODE: $00000E05 VOL: 0
;PCODE: $00000E06 VOL: 0
;PCODE: $00000E07 VOL: 0
;PCODE: $00000E08 VOL: 0
;PCODE: $00000E09 VOL: 0
;PCODE: $00000E0A VOL: 0
; 0000 0720                    {
; 0000 0721                    komunikat_na_panel("                                                ",adr1,adr2);
;PCODE: $00000E0B VOL: 0
;PCODE: $00000E0C VOL: 0
;PCODE: $00000E0D VOL: 0
;PCODE: $00000E0E VOL: 0
;PCODE: $00000E0F VOL: 0
;PCODE: $00000E10 VOL: 0
;PCODE: $00000E11 VOL: 0
;PCODE: $00000E12 VOL: 0
; 0000 0722                    komunikat_na_panel("Przeciazenia LEFS32_2",adr3,adr4);
;PCODE: $00000E13 VOL: 0
;PCODE: $00000E14 VOL: 0
;PCODE: $00000E15 VOL: 0
;PCODE: $00000E16 VOL: 0
;PCODE: $00000E17 VOL: 0
;PCODE: $00000E18 VOL: 0
;PCODE: $00000E19 VOL: 0
;PCODE: $00000E1A VOL: 0
; 0000 0723                    }
; 0000 0724 
; 0000 0725 
; 0000 0726         break;
;PCODE: $00000E1B VOL: 0
;PCODE: $00000E1C VOL: 0
; 0000 0727 
; 0000 0728 
; 0000 0729         case 4:
;PCODE: $00000E1D VOL: 0
;PCODE: $00000E1E VOL: 0
;PCODE: $00000E1F VOL: 0
; 0000 072A 
; 0000 072B             if(sek4 > 50)
;PCODE: $00000E20 VOL: 0
;PCODE: $00000E21 VOL: 0
;PCODE: $00000E22 VOL: 0
; 0000 072C                 cykl = 5;
;PCODE: $00000E23 VOL: 0
;PCODE: $00000E24 VOL: 0
; 0000 072D         break;
;PCODE: $00000E25 VOL: 0
;PCODE: $00000E26 VOL: 0
; 0000 072E 
; 0000 072F         }
;PCODE: $00000E27 VOL: 0
; 0000 0730 }
;PCODE: $00000E28 VOL: 0
;PCODE: $00000E29 VOL: 0
; 0000 0731 
; 0000 0732 cykl = 0;
;PCODE: $00000E2A VOL: 0
;PCODE: $00000E2B VOL: 0
; 0000 0733 }
; 0000 0734 
; 0000 0735 if(step == 0 & pozycjonowanie_LEFS32_300_2 == 4)
;PCODE: $00000E2C VOL: 0
;PCODE: $00000E2D VOL: 0
;PCODE: $00000E2E VOL: 0
;PCODE: $00000E2F VOL: 0
;PCODE: $00000E30 VOL: 0
;PCODE: $00000E31 VOL: 0
;PCODE: $00000E32 VOL: 0
;PCODE: $00000E33 VOL: 0
;PCODE: $00000E34 VOL: 0
;PCODE: $00000E35 VOL: 0
; 0000 0736     {
; 0000 0737     pozycjonowanie_LEFS32_300_2 = 0;
;PCODE: $00000E36 VOL: 0
;PCODE: $00000E37 VOL: 0
; 0000 0738     cykl = 0;
;PCODE: $00000E38 VOL: 0
;PCODE: $00000E39 VOL: 0
; 0000 0739     return 1;
;PCODE: $00000E3A VOL: 0
;PCODE: $00000E3B VOL: 0
;PCODE: $00000E3C VOL: 0
; 0000 073A     }
; 0000 073B if(step == 1)
;PCODE: $00000E3D VOL: 0
;PCODE: $00000E3E VOL: 0
;PCODE: $00000E3F VOL: 0
;PCODE: $00000E40 VOL: 0
; 0000 073C     return 2;
;PCODE: $00000E41 VOL: 0
;PCODE: $00000E42 VOL: 0
;PCODE: $00000E43 VOL: 0
; 0000 073D 
; 0000 073E }
;PCODE: $00000E44 VOL: 0
;PCODE: $00000E45 VOL: 0
;PCODE: $00000E46 VOL: 0
;PCODE: $00000E47 VOL: 0
;
;
;
;
;
;
;int wypozycjonuj_LEFS40_1200_2_i_300_2()
; 0000 0746 {
;PCODE: $00000E48 VOL: 0
;PCODE: $00000E49 VOL: 0
; 0000 0747 //PORTC.0   IN0  STEROWNIK2
; 0000 0748 //PORTC.1   IN1  STEROWNIK2
; 0000 0749 //PORTC.2   IN2  STEROWNIK2
; 0000 074A //PORTC.3   IN3  STEROWNIK2
; 0000 074B //PORTC.4   IN4  STEROWNIK2
; 0000 074C //PORTC.5   IN5  STEROWNIK2
; 0000 074D //PORTC.6   IN6  STEROWNIK2
; 0000 074E //PORTC.7   IN7  STEROWNIK2
; 0000 074F 
; 0000 0750 //PORTD.5  SETUP   STEROWNIK2
; 0000 0751 //PORTD.6  DRIVE   STEROWNIK2
; 0000 0752 
; 0000 0753 //sprawdz_pin0(PORTLL,0x71)  BUSY   STEROWNIK2
; 0000 0754 //sprawdz_pin3(PORTLL,0x71)  INP    STEROWNIK2
; 0000 0755 
; 0000 0756 PORTD.5 = 1;    //SETUP
;PCODE: $00000E4A VOL: 0
;PCODE: $00000E4B VOL: 0
; 0000 0757 
; 0000 0758 delay_ms(50);
;PCODE: $00000E4C VOL: 0
;PCODE: $00000E4D VOL: 0
;PCODE: $00000E4E VOL: 0
; 0000 0759 
; 0000 075A while(sprawdz_pin0(PORTLL,0x71) == 1)  //kraze tu poki nie wywali busy
;PCODE: $00000E4F VOL: 0
;PCODE: $00000E50 VOL: 0
;PCODE: $00000E51 VOL: 0
;PCODE: $00000E52 VOL: 0
;PCODE: $00000E53 VOL: 0
;PCODE: $00000E54 VOL: 0
;PCODE: $00000E55 VOL: 0
;PCODE: $00000E56 VOL: 0
; 0000 075B         {
; 0000 075C 
; 0000 075D                    if(sprawdz_pin5(PORTLL,0x71) == 1)     //alarm
;PCODE: $00000E57 VOL: 0
;PCODE: $00000E58 VOL: 0
;PCODE: $00000E59 VOL: 0
;PCODE: $00000E5A VOL: 0
;PCODE: $00000E5B VOL: 0
;PCODE: $00000E5C VOL: 0
;PCODE: $00000E5D VOL: 0
; 0000 075E                    {
; 0000 075F                    komunikat_na_panel("                                                ",adr1,adr2);
;PCODE: $00000E5E VOL: 0
;PCODE: $00000E5F VOL: 0
;PCODE: $00000E60 VOL: 0
;PCODE: $00000E61 VOL: 0
;PCODE: $00000E62 VOL: 0
;PCODE: $00000E63 VOL: 0
;PCODE: $00000E64 VOL: 0
;PCODE: $00000E65 VOL: 0
; 0000 0760                    komunikat_na_panel("Przeciazenia LEFS_XY_2",adr3,adr4);
;PCODE: $00000E66 VOL: 0
;PCODE: $00000E67 VOL: 0
;PCODE: $00000E68 VOL: 0
;PCODE: $00000E69 VOL: 0
;PCODE: $00000E6A VOL: 0
;PCODE: $00000E6B VOL: 0
;PCODE: $00000E6C VOL: 0
;PCODE: $00000E6D VOL: 0
; 0000 0761                    }
; 0000 0762 
; 0000 0763         }
;PCODE: $00000E6E VOL: 0
;PCODE: $00000E6F VOL: 0
;PCODE: $00000E70 VOL: 0
; 0000 0764 
; 0000 0765 delay_ms(50);
;PCODE: $00000E71 VOL: 0
;PCODE: $00000E72 VOL: 0
;PCODE: $00000E73 VOL: 0
; 0000 0766 
; 0000 0767 while(sprawdz_pin0(PORTLL,0x71) == 0)  //wywala busy
;PCODE: $00000E74 VOL: 0
;PCODE: $00000E75 VOL: 0
;PCODE: $00000E76 VOL: 0
;PCODE: $00000E77 VOL: 0
;PCODE: $00000E78 VOL: 0
;PCODE: $00000E79 VOL: 0
;PCODE: $00000E7A VOL: 0
;PCODE: $00000E7B VOL: 0
; 0000 0768         {
; 0000 0769 
; 0000 076A                    if(sprawdz_pin5(PORTLL,0x71) == 1)     //alarm
;PCODE: $00000E7C VOL: 0
;PCODE: $00000E7D VOL: 0
;PCODE: $00000E7E VOL: 0
;PCODE: $00000E7F VOL: 0
;PCODE: $00000E80 VOL: 0
;PCODE: $00000E81 VOL: 0
;PCODE: $00000E82 VOL: 0
; 0000 076B                    {
; 0000 076C                    komunikat_na_panel("                                                ",adr1,adr2);
;PCODE: $00000E83 VOL: 0
;PCODE: $00000E84 VOL: 0
;PCODE: $00000E85 VOL: 0
;PCODE: $00000E86 VOL: 0
;PCODE: $00000E87 VOL: 0
;PCODE: $00000E88 VOL: 0
;PCODE: $00000E89 VOL: 0
;PCODE: $00000E8A VOL: 0
; 0000 076D                    komunikat_na_panel("Przeciazenia LEFS_XY_2",adr3,adr4);
;PCODE: $00000E8B VOL: 0
;PCODE: $00000E8C VOL: 0
;PCODE: $00000E8D VOL: 0
;PCODE: $00000E8E VOL: 0
;PCODE: $00000E8F VOL: 0
;PCODE: $00000E90 VOL: 0
;PCODE: $00000E91 VOL: 0
;PCODE: $00000E92 VOL: 0
; 0000 076E                    }
; 0000 076F         }
;PCODE: $00000E93 VOL: 0
;PCODE: $00000E94 VOL: 0
;PCODE: $00000E95 VOL: 0
; 0000 0770 
; 0000 0771 delay_ms(50);
;PCODE: $00000E96 VOL: 0
;PCODE: $00000E97 VOL: 0
;PCODE: $00000E98 VOL: 0
; 0000 0772 
; 0000 0773 while(sprawdz_pin3(PORTLL,0x71) == 1)  //kraze tu dopoki nie wywali INP
;PCODE: $00000E99 VOL: 0
;PCODE: $00000E9A VOL: 0
;PCODE: $00000E9B VOL: 0
;PCODE: $00000E9C VOL: 0
;PCODE: $00000E9D VOL: 0
;PCODE: $00000E9E VOL: 0
;PCODE: $00000E9F VOL: 0
;PCODE: $00000EA0 VOL: 0
; 0000 0774         {
; 0000 0775         }
;PCODE: $00000EA1 VOL: 0
;PCODE: $00000EA2 VOL: 0
; 0000 0776 
; 0000 0777 delay_ms(50);
;PCODE: $00000EA3 VOL: 0
;PCODE: $00000EA4 VOL: 0
;PCODE: $00000EA5 VOL: 0
; 0000 0778 
; 0000 0779 if(sprawdz_pin3(PORTLL,0x71) == 0)  //wywala INP
;PCODE: $00000EA6 VOL: 0
;PCODE: $00000EA7 VOL: 0
;PCODE: $00000EA8 VOL: 0
;PCODE: $00000EA9 VOL: 0
;PCODE: $00000EAA VOL: 0
;PCODE: $00000EAB VOL: 0
;PCODE: $00000EAC VOL: 0
; 0000 077A         {
; 0000 077B         PORTD.5 = 0;
;PCODE: $00000EAD VOL: 0
;PCODE: $00000EAE VOL: 0
; 0000 077C         putchar(90);  //5A
;PCODE: $00000EAF VOL: 0
;PCODE: $00000EB0 VOL: 0
;PCODE: $00000EB1 VOL: 0
; 0000 077D         putchar(165); //A5
;PCODE: $00000EB2 VOL: 0
;PCODE: $00000EB3 VOL: 0
;PCODE: $00000EB4 VOL: 0
; 0000 077E         putchar(3);//03  //znak dzwiekowy ze jestem
;PCODE: $00000EB5 VOL: 0
;PCODE: $00000EB6 VOL: 0
;PCODE: $00000EB7 VOL: 0
; 0000 077F         putchar(128);  //80
;PCODE: $00000EB8 VOL: 0
;PCODE: $00000EB9 VOL: 0
;PCODE: $00000EBA VOL: 0
; 0000 0780         putchar(2);    //02
;PCODE: $00000EBB VOL: 0
;PCODE: $00000EBC VOL: 0
;PCODE: $00000EBD VOL: 0
; 0000 0781         putchar(16);   //10
;PCODE: $00000EBE VOL: 0
;PCODE: $00000EBF VOL: 0
;PCODE: $00000EC0 VOL: 0
; 0000 0782         }
; 0000 0783 else
;PCODE: $00000EC1 VOL: 0
;PCODE: $00000EC2 VOL: 0
; 0000 0784     {
; 0000 0785         putchar(90);  //5A
;PCODE: $00000EC3 VOL: 0
;PCODE: $00000EC4 VOL: 0
;PCODE: $00000EC5 VOL: 0
; 0000 0786         putchar(165); //A5
;PCODE: $00000EC6 VOL: 0
;PCODE: $00000EC7 VOL: 0
;PCODE: $00000EC8 VOL: 0
; 0000 0787         putchar(3);//03  //znak dzwiekowy ze jestem
;PCODE: $00000EC9 VOL: 0
;PCODE: $00000ECA VOL: 0
;PCODE: $00000ECB VOL: 0
; 0000 0788         putchar(128);  //80
;PCODE: $00000ECC VOL: 0
;PCODE: $00000ECD VOL: 0
;PCODE: $00000ECE VOL: 0
; 0000 0789         putchar(2);    //02
;PCODE: $00000ECF VOL: 0
;PCODE: $00000ED0 VOL: 0
;PCODE: $00000ED1 VOL: 0
; 0000 078A         putchar(16);   //10
;PCODE: $00000ED2 VOL: 0
;PCODE: $00000ED3 VOL: 0
;PCODE: $00000ED4 VOL: 0
; 0000 078B 
; 0000 078C         delay_ms(1000);     //wywalenie bledu
;PCODE: $00000ED5 VOL: 0
;PCODE: $00000ED6 VOL: 0
;PCODE: $00000ED7 VOL: 0
; 0000 078D         delay_ms(1000);
;PCODE: $00000ED8 VOL: 0
;PCODE: $00000ED9 VOL: 0
;PCODE: $00000EDA VOL: 0
; 0000 078E 
; 0000 078F         putchar(90);  //5A
;PCODE: $00000EDB VOL: 0
;PCODE: $00000EDC VOL: 0
;PCODE: $00000EDD VOL: 0
; 0000 0790         putchar(165); //A5
;PCODE: $00000EDE VOL: 0
;PCODE: $00000EDF VOL: 0
;PCODE: $00000EE0 VOL: 0
; 0000 0791         putchar(3);//03  //znak dzwiekowy ze jestem
;PCODE: $00000EE1 VOL: 0
;PCODE: $00000EE2 VOL: 0
;PCODE: $00000EE3 VOL: 0
; 0000 0792         putchar(128);  //80
;PCODE: $00000EE4 VOL: 0
;PCODE: $00000EE5 VOL: 0
;PCODE: $00000EE6 VOL: 0
; 0000 0793         putchar(2);    //02
;PCODE: $00000EE7 VOL: 0
;PCODE: $00000EE8 VOL: 0
;PCODE: $00000EE9 VOL: 0
; 0000 0794         putchar(16);   //10
;PCODE: $00000EEA VOL: 0
;PCODE: $00000EEB VOL: 0
;PCODE: $00000EEC VOL: 0
; 0000 0795 
; 0000 0796     }
;PCODE: $00000EED VOL: 0
; 0000 0797 
; 0000 0798 delay_ms(1000);
;PCODE: $00000EEE VOL: 0
;PCODE: $00000EEF VOL: 0
;PCODE: $00000EF0 VOL: 0
; 0000 0799 
; 0000 079A while(cykl < 5)
;PCODE: $00000EF1 VOL: 0
;PCODE: $00000EF2 VOL: 0
;PCODE: $00000EF3 VOL: 0
;PCODE: $00000EF4 VOL: 0
; 0000 079B {
; 0000 079C     switch(cykl)
;PCODE: $00000EF5 VOL: 0
; 0000 079D         {
; 0000 079E         case 0:
;PCODE: $00000EF6 VOL: 0
;PCODE: $00000EF7 VOL: 0
; 0000 079F 
; 0000 07A0             PORTC = 0xFF;   //STEP 0
;PCODE: $00000EF8 VOL: 0
;PCODE: $00000EF9 VOL: 0
; 0000 07A1             cykl = 1;
;PCODE: $00000EFA VOL: 0
;PCODE: $00000EFB VOL: 0
; 0000 07A2 
; 0000 07A3         break;
;PCODE: $00000EFC VOL: 0
; 0000 07A4 
; 0000 07A5         case 1:
;PCODE: $00000EFD VOL: 0
;PCODE: $00000EFE VOL: 0
;PCODE: $00000EFF VOL: 0
; 0000 07A6 
; 0000 07A7             if(sek3 > 1)
;PCODE: $00000F00 VOL: 0
;PCODE: $00000F01 VOL: 0
;PCODE: $00000F02 VOL: 0
; 0000 07A8                 {
; 0000 07A9                 PORTD.6 = 1;  //DRIVE
;PCODE: $00000F03 VOL: 0
;PCODE: $00000F04 VOL: 0
; 0000 07AA                 cykl = 2;
;PCODE: $00000F05 VOL: 0
;PCODE: $00000F06 VOL: 0
; 0000 07AB                 }
; 0000 07AC         break;
;PCODE: $00000F07 VOL: 0
;PCODE: $00000F08 VOL: 0
; 0000 07AD 
; 0000 07AE 
; 0000 07AF         case 2:
;PCODE: $00000F09 VOL: 0
;PCODE: $00000F0A VOL: 0
;PCODE: $00000F0B VOL: 0
; 0000 07B0 
; 0000 07B1                if(sprawdz_pin0(PORTLL,0x71) == 0)
;PCODE: $00000F0C VOL: 0
;PCODE: $00000F0D VOL: 0
;PCODE: $00000F0E VOL: 0
;PCODE: $00000F0F VOL: 0
;PCODE: $00000F10 VOL: 0
;PCODE: $00000F11 VOL: 0
;PCODE: $00000F12 VOL: 0
; 0000 07B2                   {
; 0000 07B3                   PORTD.6 = 0;
;PCODE: $00000F13 VOL: 0
;PCODE: $00000F14 VOL: 0
; 0000 07B4                   PORTC = 0x00;        //STEP 1 koniec
;PCODE: $00000F15 VOL: 0
;PCODE: $00000F16 VOL: 0
; 0000 07B5                   cykl = 3;
;PCODE: $00000F17 VOL: 0
;PCODE: $00000F18 VOL: 0
; 0000 07B6                   }
; 0000 07B7 
; 0000 07B8         break;
;PCODE: $00000F19 VOL: 0
;PCODE: $00000F1A VOL: 0
; 0000 07B9 
; 0000 07BA         case 3:
;PCODE: $00000F1B VOL: 0
;PCODE: $00000F1C VOL: 0
;PCODE: $00000F1D VOL: 0
; 0000 07BB 
; 0000 07BC                if(sprawdz_pin3(PORTLL,0x71) == 0)
;PCODE: $00000F1E VOL: 0
;PCODE: $00000F1F VOL: 0
;PCODE: $00000F20 VOL: 0
;PCODE: $00000F21 VOL: 0
;PCODE: $00000F22 VOL: 0
;PCODE: $00000F23 VOL: 0
;PCODE: $00000F24 VOL: 0
; 0000 07BD                   {
; 0000 07BE                   sek3 = 0;
;PCODE: $00000F25 VOL: 0
;PCODE: $00000F26 VOL: 0
; 0000 07BF                   cykl = 4;
;PCODE: $00000F27 VOL: 0
;PCODE: $00000F28 VOL: 0
; 0000 07C0                   }
; 0000 07C1 
; 0000 07C2                    if(sprawdz_pin5(PORTLL,0x71) == 1)     //alarm
;PCODE: $00000F29 VOL: 0
;PCODE: $00000F2A VOL: 0
;PCODE: $00000F2B VOL: 0
;PCODE: $00000F2C VOL: 0
;PCODE: $00000F2D VOL: 0
;PCODE: $00000F2E VOL: 0
;PCODE: $00000F2F VOL: 0
;PCODE: $00000F30 VOL: 0
; 0000 07C3                    {
; 0000 07C4                    komunikat_na_panel("                                                ",adr1,adr2);
;PCODE: $00000F31 VOL: 0
;PCODE: $00000F32 VOL: 0
;PCODE: $00000F33 VOL: 0
;PCODE: $00000F34 VOL: 0
;PCODE: $00000F35 VOL: 0
;PCODE: $00000F36 VOL: 0
;PCODE: $00000F37 VOL: 0
;PCODE: $00000F38 VOL: 0
; 0000 07C5                    komunikat_na_panel("Przeciazenia LEFS_XY_2",adr3,adr4);
;PCODE: $00000F39 VOL: 0
;PCODE: $00000F3A VOL: 0
;PCODE: $00000F3B VOL: 0
;PCODE: $00000F3C VOL: 0
;PCODE: $00000F3D VOL: 0
;PCODE: $00000F3E VOL: 0
;PCODE: $00000F3F VOL: 0
;PCODE: $00000F40 VOL: 0
; 0000 07C6                    }
; 0000 07C7 
; 0000 07C8 
; 0000 07C9         break;
;PCODE: $00000F41 VOL: 0
;PCODE: $00000F42 VOL: 0
; 0000 07CA 
; 0000 07CB 
; 0000 07CC         case 4:
;PCODE: $00000F43 VOL: 0
;PCODE: $00000F44 VOL: 0
;PCODE: $00000F45 VOL: 0
; 0000 07CD 
; 0000 07CE             if(sek3 > 50)
;PCODE: $00000F46 VOL: 0
;PCODE: $00000F47 VOL: 0
;PCODE: $00000F48 VOL: 0
; 0000 07CF                 cykl = 5;
;PCODE: $00000F49 VOL: 0
;PCODE: $00000F4A VOL: 0
; 0000 07D0         break;
;PCODE: $00000F4B VOL: 0
;PCODE: $00000F4C VOL: 0
; 0000 07D1 
; 0000 07D2         }
;PCODE: $00000F4D VOL: 0
; 0000 07D3 }
;PCODE: $00000F4E VOL: 0
;PCODE: $00000F4F VOL: 0
; 0000 07D4 
; 0000 07D5 cykl = 0;
;PCODE: $00000F50 VOL: 0
;PCODE: $00000F51 VOL: 0
; 0000 07D6 return 1;
;PCODE: $00000F52 VOL: 0
;PCODE: $00000F53 VOL: 0
; 0000 07D7 }
;PCODE: $00000F54 VOL: 0
;
;
;
;
;int wypozycjonuj_LEFS40_1200_1_i_300_1()
; 0000 07DD {
;PCODE: $00000F55 VOL: 0
;PCODE: $00000F56 VOL: 0
; 0000 07DE //chyba nie wpiete A7
; 0000 07DF 
; 0000 07E0 //PORTA.0   IN0  STEROWNIK1
; 0000 07E1 //PORTA.1   IN1  STEROWNIK1
; 0000 07E2 //PORTA.2   IN2  STEROWNIK1
; 0000 07E3 //PORTA.3   IN3  STEROWNIK1
; 0000 07E4 //PORTA.4   IN4  STEROWNIK1
; 0000 07E5 //PORTA.5   IN5  STEROWNIK1
; 0000 07E6 //PORTA.6   IN6  STEROWNIK1
; 0000 07E7 //PORTA.7   IN7  STEROWNIK1
; 0000 07E8 
; 0000 07E9 //PORTD.2  SETUP   STEROWNIK1
; 0000 07EA //PORTD.3  DRIVE   STEROWNIK1
; 0000 07EB 
; 0000 07EC //sprawdz_pin0(PORTJJ,0x79)  BUSY   STEROWNIK1
; 0000 07ED //sprawdz_pin3(PORTJJ,0x79)  INP    STEROWNIK1
; 0000 07EE 
; 0000 07EF PORTD.2 = 1;    //SETUP
;PCODE: $00000F57 VOL: 0
;PCODE: $00000F58 VOL: 0
; 0000 07F0 
; 0000 07F1 delay_ms(50);
;PCODE: $00000F59 VOL: 0
;PCODE: $00000F5A VOL: 0
;PCODE: $00000F5B VOL: 0
; 0000 07F2 
; 0000 07F3 while(sprawdz_pin0(PORTJJ,0x79) == 1)  //kraze tu poki nie wywali busy
;PCODE: $00000F5C VOL: 0
;PCODE: $00000F5D VOL: 0
;PCODE: $00000F5E VOL: 0
;PCODE: $00000F5F VOL: 0
;PCODE: $00000F60 VOL: 0
;PCODE: $00000F61 VOL: 0
;PCODE: $00000F62 VOL: 0
;PCODE: $00000F63 VOL: 0
; 0000 07F4         {
; 0000 07F5             if(sprawdz_pin5(PORTJJ,0x79) == 1)     //alarm
;PCODE: $00000F64 VOL: 0
;PCODE: $00000F65 VOL: 0
;PCODE: $00000F66 VOL: 0
;PCODE: $00000F67 VOL: 0
;PCODE: $00000F68 VOL: 0
;PCODE: $00000F69 VOL: 0
;PCODE: $00000F6A VOL: 0
; 0000 07F6                    {
; 0000 07F7                    komunikat_na_panel("                                                ",adr1,adr2);
;PCODE: $00000F6B VOL: 0
;PCODE: $00000F6C VOL: 0
;PCODE: $00000F6D VOL: 0
;PCODE: $00000F6E VOL: 0
;PCODE: $00000F6F VOL: 0
;PCODE: $00000F70 VOL: 0
;PCODE: $00000F71 VOL: 0
;PCODE: $00000F72 VOL: 0
; 0000 07F8                    komunikat_na_panel("Przeciazenia LEFS_XY_1",adr1,adr2);
;PCODE: $00000F73 VOL: 0
;PCODE: $00000F74 VOL: 0
;PCODE: $00000F75 VOL: 0
;PCODE: $00000F76 VOL: 0
;PCODE: $00000F77 VOL: 0
;PCODE: $00000F78 VOL: 0
;PCODE: $00000F79 VOL: 0
;PCODE: $00000F7A VOL: 0
; 0000 07F9                    }
; 0000 07FA         }
;PCODE: $00000F7B VOL: 0
;PCODE: $00000F7C VOL: 0
;PCODE: $00000F7D VOL: 0
; 0000 07FB 
; 0000 07FC delay_ms(50);
;PCODE: $00000F7E VOL: 0
;PCODE: $00000F7F VOL: 0
;PCODE: $00000F80 VOL: 0
; 0000 07FD 
; 0000 07FE while(sprawdz_pin0(PORTJJ,0x79) == 0)  //wywala busy
;PCODE: $00000F81 VOL: 0
;PCODE: $00000F82 VOL: 0
;PCODE: $00000F83 VOL: 0
;PCODE: $00000F84 VOL: 0
;PCODE: $00000F85 VOL: 0
;PCODE: $00000F86 VOL: 0
;PCODE: $00000F87 VOL: 0
;PCODE: $00000F88 VOL: 0
; 0000 07FF         {
; 0000 0800             if(sprawdz_pin5(PORTJJ,0x79) == 1)     //alarm
;PCODE: $00000F89 VOL: 0
;PCODE: $00000F8A VOL: 0
;PCODE: $00000F8B VOL: 0
;PCODE: $00000F8C VOL: 0
;PCODE: $00000F8D VOL: 0
;PCODE: $00000F8E VOL: 0
;PCODE: $00000F8F VOL: 0
; 0000 0801                    {
; 0000 0802                    komunikat_na_panel("                                                ",adr1,adr2);
;PCODE: $00000F90 VOL: 0
;PCODE: $00000F91 VOL: 0
;PCODE: $00000F92 VOL: 0
;PCODE: $00000F93 VOL: 0
;PCODE: $00000F94 VOL: 0
;PCODE: $00000F95 VOL: 0
;PCODE: $00000F96 VOL: 0
;PCODE: $00000F97 VOL: 0
; 0000 0803                    komunikat_na_panel("Przeciazenia LEFS_XY_1",adr1,adr2);
;PCODE: $00000F98 VOL: 0
;PCODE: $00000F99 VOL: 0
;PCODE: $00000F9A VOL: 0
;PCODE: $00000F9B VOL: 0
;PCODE: $00000F9C VOL: 0
;PCODE: $00000F9D VOL: 0
;PCODE: $00000F9E VOL: 0
;PCODE: $00000F9F VOL: 0
; 0000 0804                    }
; 0000 0805 
; 0000 0806         }
;PCODE: $00000FA0 VOL: 0
;PCODE: $00000FA1 VOL: 0
;PCODE: $00000FA2 VOL: 0
; 0000 0807 
; 0000 0808 delay_ms(50);
;PCODE: $00000FA3 VOL: 0
;PCODE: $00000FA4 VOL: 0
;PCODE: $00000FA5 VOL: 0
; 0000 0809 
; 0000 080A while(sprawdz_pin3(PORTJJ,0x79) == 1)  //kraze tu dopoki nie wywali INP
;PCODE: $00000FA6 VOL: 0
;PCODE: $00000FA7 VOL: 0
;PCODE: $00000FA8 VOL: 0
;PCODE: $00000FA9 VOL: 0
;PCODE: $00000FAA VOL: 0
;PCODE: $00000FAB VOL: 0
;PCODE: $00000FAC VOL: 0
;PCODE: $00000FAD VOL: 0
; 0000 080B         {
; 0000 080C         }
;PCODE: $00000FAE VOL: 0
;PCODE: $00000FAF VOL: 0
; 0000 080D 
; 0000 080E delay_ms(50);
;PCODE: $00000FB0 VOL: 0
;PCODE: $00000FB1 VOL: 0
;PCODE: $00000FB2 VOL: 0
; 0000 080F 
; 0000 0810 if(sprawdz_pin3(PORTJJ,0x79) == 0)  //wywala INP
;PCODE: $00000FB3 VOL: 0
;PCODE: $00000FB4 VOL: 0
;PCODE: $00000FB5 VOL: 0
;PCODE: $00000FB6 VOL: 0
;PCODE: $00000FB7 VOL: 0
;PCODE: $00000FB8 VOL: 0
;PCODE: $00000FB9 VOL: 0
; 0000 0811         {
; 0000 0812         PORTD.2 = 0;
;PCODE: $00000FBA VOL: 0
;PCODE: $00000FBB VOL: 0
; 0000 0813         putchar(90);  //5A
;PCODE: $00000FBC VOL: 0
;PCODE: $00000FBD VOL: 0
;PCODE: $00000FBE VOL: 0
; 0000 0814         putchar(165); //A5
;PCODE: $00000FBF VOL: 0
;PCODE: $00000FC0 VOL: 0
;PCODE: $00000FC1 VOL: 0
; 0000 0815         putchar(3);//03  //znak dzwiekowy ze jestem
;PCODE: $00000FC2 VOL: 0
;PCODE: $00000FC3 VOL: 0
;PCODE: $00000FC4 VOL: 0
; 0000 0816         putchar(128);  //80
;PCODE: $00000FC5 VOL: 0
;PCODE: $00000FC6 VOL: 0
;PCODE: $00000FC7 VOL: 0
; 0000 0817         putchar(2);    //02
;PCODE: $00000FC8 VOL: 0
;PCODE: $00000FC9 VOL: 0
;PCODE: $00000FCA VOL: 0
; 0000 0818         putchar(16);   //10
;PCODE: $00000FCB VOL: 0
;PCODE: $00000FCC VOL: 0
;PCODE: $00000FCD VOL: 0
; 0000 0819         }
; 0000 081A else
;PCODE: $00000FCE VOL: 0
;PCODE: $00000FCF VOL: 0
; 0000 081B     {
; 0000 081C         putchar(90);  //5A
;PCODE: $00000FD0 VOL: 0
;PCODE: $00000FD1 VOL: 0
;PCODE: $00000FD2 VOL: 0
; 0000 081D         putchar(165); //A5
;PCODE: $00000FD3 VOL: 0
;PCODE: $00000FD4 VOL: 0
;PCODE: $00000FD5 VOL: 0
; 0000 081E         putchar(3);//03  //znak dzwiekowy ze jestem
;PCODE: $00000FD6 VOL: 0
;PCODE: $00000FD7 VOL: 0
;PCODE: $00000FD8 VOL: 0
; 0000 081F         putchar(128);  //80
;PCODE: $00000FD9 VOL: 0
;PCODE: $00000FDA VOL: 0
;PCODE: $00000FDB VOL: 0
; 0000 0820         putchar(2);    //02
;PCODE: $00000FDC VOL: 0
;PCODE: $00000FDD VOL: 0
;PCODE: $00000FDE VOL: 0
; 0000 0821         putchar(16);   //10
;PCODE: $00000FDF VOL: 0
;PCODE: $00000FE0 VOL: 0
;PCODE: $00000FE1 VOL: 0
; 0000 0822 
; 0000 0823         delay_ms(1000);     //wywalenie bledu
;PCODE: $00000FE2 VOL: 0
;PCODE: $00000FE3 VOL: 0
;PCODE: $00000FE4 VOL: 0
; 0000 0824         delay_ms(1000);
;PCODE: $00000FE5 VOL: 0
;PCODE: $00000FE6 VOL: 0
;PCODE: $00000FE7 VOL: 0
; 0000 0825 
; 0000 0826         putchar(90);  //5A
;PCODE: $00000FE8 VOL: 0
;PCODE: $00000FE9 VOL: 0
;PCODE: $00000FEA VOL: 0
; 0000 0827         putchar(165); //A5
;PCODE: $00000FEB VOL: 0
;PCODE: $00000FEC VOL: 0
;PCODE: $00000FED VOL: 0
; 0000 0828         putchar(3);//03  //znak dzwiekowy ze jestem
;PCODE: $00000FEE VOL: 0
;PCODE: $00000FEF VOL: 0
;PCODE: $00000FF0 VOL: 0
; 0000 0829         putchar(128);  //80
;PCODE: $00000FF1 VOL: 0
;PCODE: $00000FF2 VOL: 0
;PCODE: $00000FF3 VOL: 0
; 0000 082A         putchar(2);    //02
;PCODE: $00000FF4 VOL: 0
;PCODE: $00000FF5 VOL: 0
;PCODE: $00000FF6 VOL: 0
; 0000 082B         putchar(16);   //10
;PCODE: $00000FF7 VOL: 0
;PCODE: $00000FF8 VOL: 0
;PCODE: $00000FF9 VOL: 0
; 0000 082C 
; 0000 082D     }
;PCODE: $00000FFA VOL: 0
; 0000 082E 
; 0000 082F delay_ms(1000);
;PCODE: $00000FFB VOL: 0
;PCODE: $00000FFC VOL: 0
;PCODE: $00000FFD VOL: 0
; 0000 0830 
; 0000 0831 while(cykl < 5)
;PCODE: $00000FFE VOL: 0
;PCODE: $00000FFF VOL: 0
;PCODE: $00001000 VOL: 0
;PCODE: $00001001 VOL: 0
; 0000 0832 {
; 0000 0833     switch(cykl)
;PCODE: $00001002 VOL: 0
; 0000 0834         {
; 0000 0835         case 0:
;PCODE: $00001003 VOL: 0
;PCODE: $00001004 VOL: 0
; 0000 0836 
; 0000 0837             PORTA = 0xFF;   //STEP 0
;PCODE: $00001005 VOL: 0
;PCODE: $00001006 VOL: 0
; 0000 0838             cykl = 1;
;PCODE: $00001007 VOL: 0
;PCODE: $00001008 VOL: 0
; 0000 0839 
; 0000 083A         break;
;PCODE: $00001009 VOL: 0
; 0000 083B 
; 0000 083C         case 1:
;PCODE: $0000100A VOL: 0
;PCODE: $0000100B VOL: 0
;PCODE: $0000100C VOL: 0
; 0000 083D 
; 0000 083E             if(sek1 > 1)
;PCODE: $0000100D VOL: 0
;PCODE: $0000100E VOL: 0
;PCODE: $0000100F VOL: 0
; 0000 083F                 {
; 0000 0840                 PORTD.3 = 1;  //DRIVE
;PCODE: $00001010 VOL: 0
;PCODE: $00001011 VOL: 0
; 0000 0841                 cykl = 2;
;PCODE: $00001012 VOL: 0
;PCODE: $00001013 VOL: 0
; 0000 0842                 }
; 0000 0843         break;
;PCODE: $00001014 VOL: 0
;PCODE: $00001015 VOL: 0
; 0000 0844 
; 0000 0845 
; 0000 0846         case 2:
;PCODE: $00001016 VOL: 0
;PCODE: $00001017 VOL: 0
;PCODE: $00001018 VOL: 0
; 0000 0847 
; 0000 0848                if(sprawdz_pin0(PORTJJ,0x79) == 0)
;PCODE: $00001019 VOL: 0
;PCODE: $0000101A VOL: 0
;PCODE: $0000101B VOL: 0
;PCODE: $0000101C VOL: 0
;PCODE: $0000101D VOL: 0
;PCODE: $0000101E VOL: 0
;PCODE: $0000101F VOL: 0
; 0000 0849                   {
; 0000 084A                   PORTD.3 = 0;
;PCODE: $00001020 VOL: 0
;PCODE: $00001021 VOL: 0
; 0000 084B                   PORTA = 0x00;        //STEP 1 koniec
;PCODE: $00001022 VOL: 0
;PCODE: $00001023 VOL: 0
; 0000 084C                   cykl = 3;
;PCODE: $00001024 VOL: 0
;PCODE: $00001025 VOL: 0
; 0000 084D                   }
; 0000 084E 
; 0000 084F         break;
;PCODE: $00001026 VOL: 0
;PCODE: $00001027 VOL: 0
; 0000 0850 
; 0000 0851         case 3:
;PCODE: $00001028 VOL: 0
;PCODE: $00001029 VOL: 0
;PCODE: $0000102A VOL: 0
; 0000 0852 
; 0000 0853                if(sprawdz_pin3(PORTJJ,0x79) == 0)
;PCODE: $0000102B VOL: 0
;PCODE: $0000102C VOL: 0
;PCODE: $0000102D VOL: 0
;PCODE: $0000102E VOL: 0
;PCODE: $0000102F VOL: 0
;PCODE: $00001030 VOL: 0
;PCODE: $00001031 VOL: 0
; 0000 0854                   {
; 0000 0855                   sek1 = 0;
;PCODE: $00001032 VOL: 0
;PCODE: $00001033 VOL: 0
; 0000 0856                   cykl = 4;
;PCODE: $00001034 VOL: 0
;PCODE: $00001035 VOL: 0
; 0000 0857                   }
; 0000 0858 
; 0000 0859                if(sprawdz_pin5(PORTJJ,0x79) == 1)     //alarm
;PCODE: $00001036 VOL: 0
;PCODE: $00001037 VOL: 0
;PCODE: $00001038 VOL: 0
;PCODE: $00001039 VOL: 0
;PCODE: $0000103A VOL: 0
;PCODE: $0000103B VOL: 0
;PCODE: $0000103C VOL: 0
;PCODE: $0000103D VOL: 0
; 0000 085A                    {
; 0000 085B                    komunikat_na_panel("                                                ",adr1,adr2);
;PCODE: $0000103E VOL: 0
;PCODE: $0000103F VOL: 0
;PCODE: $00001040 VOL: 0
;PCODE: $00001041 VOL: 0
;PCODE: $00001042 VOL: 0
;PCODE: $00001043 VOL: 0
;PCODE: $00001044 VOL: 0
;PCODE: $00001045 VOL: 0
; 0000 085C                    komunikat_na_panel("Przeciazenia LEFS_XY_1",adr1,adr2);
;PCODE: $00001046 VOL: 0
;PCODE: $00001047 VOL: 0
;PCODE: $00001048 VOL: 0
;PCODE: $00001049 VOL: 0
;PCODE: $0000104A VOL: 0
;PCODE: $0000104B VOL: 0
;PCODE: $0000104C VOL: 0
;PCODE: $0000104D VOL: 0
; 0000 085D                    }
; 0000 085E 
; 0000 085F 
; 0000 0860         break;
;PCODE: $0000104E VOL: 0
;PCODE: $0000104F VOL: 0
; 0000 0861 
; 0000 0862 
; 0000 0863         case 4:
;PCODE: $00001050 VOL: 0
;PCODE: $00001051 VOL: 0
;PCODE: $00001052 VOL: 0
; 0000 0864 
; 0000 0865             if(sek1 > 50)
;PCODE: $00001053 VOL: 0
;PCODE: $00001054 VOL: 0
;PCODE: $00001055 VOL: 0
; 0000 0866                 cykl = 5;
;PCODE: $00001056 VOL: 0
;PCODE: $00001057 VOL: 0
; 0000 0867         break;
;PCODE: $00001058 VOL: 0
;PCODE: $00001059 VOL: 0
; 0000 0868 
; 0000 0869         }
;PCODE: $0000105A VOL: 0
; 0000 086A }
;PCODE: $0000105B VOL: 0
;PCODE: $0000105C VOL: 0
; 0000 086B 
; 0000 086C cykl = 0;
;PCODE: $0000105D VOL: 0
;PCODE: $0000105E VOL: 0
; 0000 086D return 1;
;PCODE: $0000105F VOL: 0
;PCODE: $00001060 VOL: 0
; 0000 086E }
;PCODE: $00001061 VOL: 0
;
;
;
;
;
;
;
;
;
;void wypozycjonuj_napedy()
; 0000 0879 {
;PCODE: $00001062 VOL: 0
;PCODE: $00001063 VOL: 0
; 0000 087A //if(aaa == 0)
; 0000 087B //        {
; 0000 087C //        aaa = wypozycjonuj_LEFS40_1200_1_i_300_1();
; 0000 087D //        }
; 0000 087E if(bbb == 0)
;PCODE: $00001064 VOL: 0
;PCODE: $00001065 VOL: 0
;PCODE: $00001066 VOL: 0
; 0000 087F         {
; 0000 0880         bbb = wypozycjonuj_LEFS32_300_1(0);
;PCODE: $00001067 VOL: 0
;PCODE: $00001068 VOL: 0
;PCODE: $00001069 VOL: 0
;PCODE: $0000106A VOL: 0
; 0000 0881         }
; 0000 0882 if(bbb == 1)
;PCODE: $0000106B VOL: 0
;PCODE: $0000106C VOL: 0
;PCODE: $0000106D VOL: 0
;PCODE: $0000106E VOL: 0
; 0000 0883         {
; 0000 0884         bbb = wypozycjonuj_LEFS32_300_1(1);
;PCODE: $0000106F VOL: 0
;PCODE: $00001070 VOL: 0
;PCODE: $00001071 VOL: 0
;PCODE: $00001072 VOL: 0
; 0000 0885        }
; 0000 0886 
; 0000 0887 
; 0000 0888 //if(ccc == 0)
; 0000 0889 //        {
; 0000 088A //        ccc = wypozycjonuj_LEFS40_1200_2_i_300_2();
; 0000 088B //        }
; 0000 088C //if(ddd == 0)
; 0000 088D //        {
; 0000 088E //        ddd = wypozycjonuj_LEFS32_300_2(0);
; 0000 088F //       }
; 0000 0890 //if(ddd == 1)
; 0000 0891 //        {
; 0000 0892 //        ddd = wypozycjonuj_LEFS32_300_2(1);
; 0000 0893 //        }
; 0000 0894 
; 0000 0895 
; 0000 0896 
; 0000 0897 
; 0000 0898 
; 0000 0899 
; 0000 089A    /*
; 0000 089B 
; 0000 089C     if(ccc == 1 & bbb == 1)
; 0000 089D         ccc = wypozycjonuj_NL3_upgrade(1);
; 0000 089E 
; 0000 089F     if(bbb == 1 & ccc == 2)
; 0000 08A0         bbb = wypozycjonuj_NL2_upgrade(1);
; 0000 08A1 
; 0000 08A2 
; 0000 08A3     if(aaa == 1 & bbb == 2 & ccc == 2)
; 0000 08A4         {
; 0000 08A5         start = 1;
; 0000 08A6         }
; 0000 08A7 
; 0000 08A8     */
; 0000 08A9 
; 0000 08AA //    if(aaa == 1 & bbb == 2 & ccc == 2 & ddd == 2)
; 0000 08AB //        start = 1;
; 0000 08AC 
; 0000 08AD 
; 0000 08AE }
;PCODE: $00001073 VOL: 0
;PCODE: $00001074 VOL: 0
;PCODE: $00001075 VOL: 0
;
;
;
;void przerzucanie_dociskow()
; 0000 08B3 {
;PCODE: $00001076 VOL: 0
;PCODE: $00001077 VOL: 0
; 0000 08B4    if(sprawdz_pin6(PORTLL,0x71) == 0 & sprawdz_pin7(PORTLL,0x71) == 0 & czekaj_az_puszcze == 0)
;PCODE: $00001078 VOL: 0
;PCODE: $00001079 VOL: 0
;PCODE: $0000107A VOL: 0
;PCODE: $0000107B VOL: 0
;PCODE: $0000107C VOL: 0
;PCODE: $0000107D VOL: 0
;PCODE: $0000107E VOL: 0
;PCODE: $0000107F VOL: 0
;PCODE: $00001080 VOL: 0
;PCODE: $00001081 VOL: 0
;PCODE: $00001082 VOL: 0
;PCODE: $00001083 VOL: 0
;PCODE: $00001084 VOL: 0
;PCODE: $00001085 VOL: 0
;PCODE: $00001086 VOL: 0
;PCODE: $00001087 VOL: 0
;PCODE: $00001088 VOL: 0
;PCODE: $00001089 VOL: 0
;PCODE: $0000108A VOL: 0
;PCODE: $0000108B VOL: 0
;PCODE: $0000108C VOL: 0
;PCODE: $0000108D VOL: 0
;PCODE: $0000108E VOL: 0
; 0000 08B5            {
; 0000 08B6            czekaj_az_puszcze = 1;
;PCODE: $0000108F VOL: 0
;PCODE: $00001090 VOL: 0
; 0000 08B7            PORTB.6 = 1;
;PCODE: $00001091 VOL: 0
;PCODE: $00001092 VOL: 0
; 0000 08B8            }
; 0000 08B9        if(sprawdz_pin6(PORTLL,0x71) == 1 & sprawdz_pin7(PORTLL,0x71) == 1 & czekaj_az_puszcze == 1)
;PCODE: $00001093 VOL: 0
;PCODE: $00001094 VOL: 0
;PCODE: $00001095 VOL: 0
;PCODE: $00001096 VOL: 0
;PCODE: $00001097 VOL: 0
;PCODE: $00001098 VOL: 0
;PCODE: $00001099 VOL: 0
;PCODE: $0000109A VOL: 0
;PCODE: $0000109B VOL: 0
;PCODE: $0000109C VOL: 0
;PCODE: $0000109D VOL: 0
;PCODE: $0000109E VOL: 0
;PCODE: $0000109F VOL: 0
;PCODE: $000010A0 VOL: 0
;PCODE: $000010A1 VOL: 0
;PCODE: $000010A2 VOL: 0
;PCODE: $000010A3 VOL: 0
;PCODE: $000010A4 VOL: 0
;PCODE: $000010A5 VOL: 0
;PCODE: $000010A6 VOL: 0
;PCODE: $000010A7 VOL: 0
;PCODE: $000010A8 VOL: 0
;PCODE: $000010A9 VOL: 0
;PCODE: $000010AA VOL: 0
; 0000 08BA            {
; 0000 08BB            czekaj_az_puszcze = 2;
;PCODE: $000010AB VOL: 0
;PCODE: $000010AC VOL: 0
; 0000 08BC            PORTB.6 = 0;
;PCODE: $000010AD VOL: 0
;PCODE: $000010AE VOL: 0
; 0000 08BD            }
; 0000 08BE 
; 0000 08BF        if(czekaj_az_puszcze == 2 & PORTE.6 == 1)
;PCODE: $000010AF VOL: 0
;PCODE: $000010B0 VOL: 0
;PCODE: $000010B1 VOL: 0
;PCODE: $000010B2 VOL: 0
;PCODE: $000010B3 VOL: 0
;PCODE: $000010B4 VOL: 0
;PCODE: $000010B5 VOL: 0
;PCODE: $000010B6 VOL: 0
;PCODE: $000010B7 VOL: 0
;PCODE: $000010B8 VOL: 0
;PCODE: $000010B9 VOL: 0
; 0000 08C0             {
; 0000 08C1             PORTE.6 = 0;
;PCODE: $000010BA VOL: 0
;PCODE: $000010BB VOL: 0
; 0000 08C2             czekaj_az_puszcze = 0;
;PCODE: $000010BC VOL: 0
;PCODE: $000010BD VOL: 0
; 0000 08C3             delay_ms(100);
;PCODE: $000010BE VOL: 0
;PCODE: $000010BF VOL: 0
;PCODE: $000010C0 VOL: 0
; 0000 08C4             }
; 0000 08C5 
; 0000 08C6        if(czekaj_az_puszcze == 2 & PORTE.6 == 0)
;PCODE: $000010C1 VOL: 0
;PCODE: $000010C2 VOL: 0
;PCODE: $000010C3 VOL: 0
;PCODE: $000010C4 VOL: 0
;PCODE: $000010C5 VOL: 0
;PCODE: $000010C6 VOL: 0
;PCODE: $000010C7 VOL: 0
;PCODE: $000010C8 VOL: 0
;PCODE: $000010C9 VOL: 0
;PCODE: $000010CA VOL: 0
;PCODE: $000010CB VOL: 0
; 0000 08C7            {
; 0000 08C8             PORTE.6 = 1;
;PCODE: $000010CC VOL: 0
;PCODE: $000010CD VOL: 0
; 0000 08C9             czekaj_az_puszcze = 0;
;PCODE: $000010CE VOL: 0
;PCODE: $000010CF VOL: 0
; 0000 08CA             delay_ms(100);
;PCODE: $000010D0 VOL: 0
;PCODE: $000010D1 VOL: 0
;PCODE: $000010D2 VOL: 0
; 0000 08CB            }
; 0000 08CC 
; 0000 08CD }
;PCODE: $000010D3 VOL: 0
;PCODE: $000010D4 VOL: 0
;PCODE: $000010D5 VOL: 0
;
;void ostateczny_wybor_zacisku()
; 0000 08D0 {
;PCODE: $000010D6 VOL: 0
;PCODE: $000010D7 VOL: 0
; 0000 08D1   if(sek11 > 40) //co 1s sekunde sprawdzam
;PCODE: $000010D8 VOL: 0
;PCODE: $000010D9 VOL: 0
;PCODE: $000010DA VOL: 0
; 0000 08D2         {
; 0000 08D3        sek11 = 0;
;PCODE: $000010DB VOL: 0
;PCODE: $000010DC VOL: 0
; 0000 08D4        if(odczytalem_zacisk < il_prob_odczytu &
; 0000 08D5                                            (sprawdz_pin0(PORTHH,0x73) == 1 |
; 0000 08D6                                             sprawdz_pin1(PORTHH,0x73) == 1 |
; 0000 08D7                                             sprawdz_pin2(PORTHH,0x73) == 1 |
; 0000 08D8                                             sprawdz_pin3(PORTHH,0x73) == 1 |
; 0000 08D9                                             sprawdz_pin4(PORTHH,0x73) == 1 |
; 0000 08DA                                             sprawdz_pin5(PORTHH,0x73) == 1 |
; 0000 08DB                                             sprawdz_pin6(PORTHH,0x73) == 1 |
; 0000 08DC                                             sprawdz_pin7(PORTHH,0x73) == 1))
;PCODE: $000010DD VOL: 0
;PCODE: $000010DE VOL: 0
;PCODE: $000010DF VOL: 0
;PCODE: $000010E0 VOL: 0
;PCODE: $000010E1 VOL: 0
;PCODE: $000010E2 VOL: 0
;PCODE: $000010E3 VOL: 0
;PCODE: $000010E4 VOL: 0
;PCODE: $000010E5 VOL: 0
;PCODE: $000010E6 VOL: 0
;PCODE: $000010E7 VOL: 0
;PCODE: $000010E8 VOL: 0
;PCODE: $000010E9 VOL: 0
;PCODE: $000010EA VOL: 0
;PCODE: $000010EB VOL: 0
;PCODE: $000010EC VOL: 0
;PCODE: $000010ED VOL: 0
;PCODE: $000010EE VOL: 0
;PCODE: $000010EF VOL: 0
;PCODE: $000010F0 VOL: 0
;PCODE: $000010F1 VOL: 0
;PCODE: $000010F2 VOL: 0
;PCODE: $000010F3 VOL: 0
;PCODE: $000010F4 VOL: 0
;PCODE: $000010F5 VOL: 0
;PCODE: $000010F6 VOL: 0
;PCODE: $000010F7 VOL: 0
;PCODE: $000010F8 VOL: 0
;PCODE: $000010F9 VOL: 0
;PCODE: $000010FA VOL: 0
;PCODE: $000010FB VOL: 0
;PCODE: $000010FC VOL: 0
;PCODE: $000010FD VOL: 0
;PCODE: $000010FE VOL: 0
;PCODE: $000010FF VOL: 0
;PCODE: $00001100 VOL: 0
;PCODE: $00001101 VOL: 0
;PCODE: $00001102 VOL: 0
;PCODE: $00001103 VOL: 0
;PCODE: $00001104 VOL: 0
;PCODE: $00001105 VOL: 0
;PCODE: $00001106 VOL: 0
;PCODE: $00001107 VOL: 0
;PCODE: $00001108 VOL: 0
;PCODE: $00001109 VOL: 0
;PCODE: $0000110A VOL: 0
;PCODE: $0000110B VOL: 0
;PCODE: $0000110C VOL: 0
;PCODE: $0000110D VOL: 0
;PCODE: $0000110E VOL: 0
;PCODE: $0000110F VOL: 0
;PCODE: $00001110 VOL: 0
;PCODE: $00001111 VOL: 0
;PCODE: $00001112 VOL: 0
;PCODE: $00001113 VOL: 0
;PCODE: $00001114 VOL: 0
;PCODE: $00001115 VOL: 0
;PCODE: $00001116 VOL: 0
;PCODE: $00001117 VOL: 0
;PCODE: $00001118 VOL: 0
;PCODE: $00001119 VOL: 0
;PCODE: $0000111A VOL: 0
;PCODE: $0000111B VOL: 0
;PCODE: $0000111C VOL: 0
;PCODE: $0000111D VOL: 0
;PCODE: $0000111E VOL: 0
;PCODE: $0000111F VOL: 0
;PCODE: $00001120 VOL: 0
;PCODE: $00001121 VOL: 0
;PCODE: $00001122 VOL: 0
;PCODE: $00001123 VOL: 0
;PCODE: $00001124 VOL: 0
;PCODE: $00001125 VOL: 0
;PCODE: $00001126 VOL: 0
;PCODE: $00001127 VOL: 0
;PCODE: $00001128 VOL: 0
;PCODE: $00001129 VOL: 0
;PCODE: $0000112A VOL: 0
;PCODE: $0000112B VOL: 0
;PCODE: $0000112C VOL: 0
;PCODE: $0000112D VOL: 0
;PCODE: $0000112E VOL: 0
;PCODE: $0000112F VOL: 0
;PCODE: $00001130 VOL: 0
; 0000 08DD         {
; 0000 08DE         odczytalem_zacisk++;
;PCODE: $00001131 VOL: 0
;PCODE: $00001132 VOL: 0
;PCODE: $00001133 VOL: 0
; 0000 08DF         }
; 0000 08E0         }
;PCODE: $00001134 VOL: 0
; 0000 08E1 
; 0000 08E2 if(odczytalem_zacisk == il_prob_odczytu)
;PCODE: $00001135 VOL: 0
;PCODE: $00001136 VOL: 0
;PCODE: $00001137 VOL: 0
;PCODE: $00001138 VOL: 0
; 0000 08E3         {
; 0000 08E4         //PORTB = 0xFF;
; 0000 08E5         odczyt_wybranego_zacisku();
;PCODE: $00001139 VOL: 0
; 0000 08E6         //sek10 = 0;
; 0000 08E7         sek11 = 0;    //nowe
;PCODE: $0000113A VOL: 0
;PCODE: $0000113B VOL: 0
; 0000 08E8         odczytalem_zacisk++;
;PCODE: $0000113C VOL: 0
;PCODE: $0000113D VOL: 0
;PCODE: $0000113E VOL: 0
; 0000 08E9         if(rzad == 1)
;PCODE: $0000113F VOL: 0
;PCODE: $00001140 VOL: 0
;PCODE: $00001141 VOL: 0
; 0000 08EA             wartosc_parametru_panelu(2,32,128);
;PCODE: $00001142 VOL: 0
;PCODE: $00001143 VOL: 0
;PCODE: $00001144 VOL: 0
;PCODE: $00001145 VOL: 0
;PCODE: $00001146 VOL: 0
;PCODE: $00001147 VOL: 0
;PCODE: $00001148 VOL: 0
; 0000 08EB         else
;PCODE: $00001149 VOL: 0
;PCODE: $0000114A VOL: 0
; 0000 08EC             wartosc_parametru_panelu(1,32,128);
;PCODE: $0000114B VOL: 0
;PCODE: $0000114C VOL: 0
;PCODE: $0000114D VOL: 0
;PCODE: $0000114E VOL: 0
;PCODE: $0000114F VOL: 0
;PCODE: $00001150 VOL: 0
;PCODE: $00001151 VOL: 0
; 0000 08ED 
; 0000 08EE         }                                     //& sek10 > 1                //3s po odczytaniu dopiero sprawdzam port
;PCODE: $00001152 VOL: 0
; 0000 08EF if((odczytalem_zacisk == il_prob_odczytu + 1))        //183
;PCODE: $00001153 VOL: 0
;PCODE: $00001154 VOL: 0
;PCODE: $00001155 VOL: 0
;PCODE: $00001156 VOL: 0
;PCODE: $00001157 VOL: 0
; 0000 08F0         {
; 0000 08F1         odczytalem_zacisk = 0;
;PCODE: $00001158 VOL: 0
; 0000 08F2         }
; 0000 08F3 }
;PCODE: $00001159 VOL: 0
;PCODE: $0000115A VOL: 0
;PCODE: $0000115B VOL: 0
;
;
;
;int sterownik_1_praca(int PORT, int a)
; 0000 08F8 {
;PCODE: $0000115C VOL: 0
;PCODE: $0000115D VOL: 0
; 0000 08F9 //PORTA.0   IN0  STEROWNIK1
; 0000 08FA //PORTA.1   IN1  STEROWNIK1
; 0000 08FB //PORTA.2   IN2  STEROWNIK1
; 0000 08FC //PORTA.3   IN3  STEROWNIK1
; 0000 08FD //PORTA.4   IN4  STEROWNIK1
; 0000 08FE //PORTA.5   IN5  STEROWNIK1
; 0000 08FF //PORTA.6   IN6  STEROWNIK1
; 0000 0900 //PORTA.7   IN7  STEROWNIK1
; 0000 0901 //PORTD.4   IN8 STEROWNIK1
; 0000 0902 
; 0000 0903 //PORTD.2  SETUP   STEROWNIK1
; 0000 0904 //PORTD.3  DRIVE   STEROWNIK1
; 0000 0905 
; 0000 0906 //sprawdz_pin0(PORTJJ,0x79)  BUSY   STEROWNIK1
; 0000 0907 //sprawdz_pin3(PORTJJ,0x79)  INP    STEROWNIK1
; 0000 0908 
; 0000 0909 switch(cykl_sterownik_1)
;	PORT -> Y+2
;	a -> Y+0
;PCODE: $0000115E VOL: 0
; 0000 090A         {
; 0000 090B         case 0:
;PCODE: $0000115F VOL: 0
;PCODE: $00001160 VOL: 0
; 0000 090C 
; 0000 090D             sek1 = 0;
;PCODE: $00001161 VOL: 0
;PCODE: $00001162 VOL: 0
; 0000 090E             PORTA = PORT;
;PCODE: $00001163 VOL: 0
;PCODE: $00001164 VOL: 0
; 0000 090F             PORTD.4 = a;
;PCODE: $00001165 VOL: 0
;PCODE: $00001166 VOL: 0
;PCODE: $00001167 VOL: 0
;PCODE: $00001168 VOL: 0
;PCODE: $00001169 VOL: 0
;PCODE: $0000116A VOL: 0
;PCODE: $0000116B VOL: 0
;PCODE: $0000116C VOL: 0
;PCODE: $0000116D VOL: 0
;PCODE: $0000116E VOL: 0
; 0000 0910 
; 0000 0911             cykl_sterownik_1 = 1;
;PCODE: $0000116F VOL: 0
;PCODE: $00001170 VOL: 0
; 0000 0912 
; 0000 0913         break;
;PCODE: $00001171 VOL: 0
; 0000 0914 
; 0000 0915         case 1:
;PCODE: $00001172 VOL: 0
;PCODE: $00001173 VOL: 0
;PCODE: $00001174 VOL: 0
; 0000 0916 
; 0000 0917             if(sek1 > 1)
;PCODE: $00001175 VOL: 0
;PCODE: $00001176 VOL: 0
;PCODE: $00001177 VOL: 0
; 0000 0918                 {
; 0000 0919 
; 0000 091A                 PORTD.3 = 1;
;PCODE: $00001178 VOL: 0
;PCODE: $00001179 VOL: 0
; 0000 091B                 cykl_sterownik_1 = 2;
;PCODE: $0000117A VOL: 0
;PCODE: $0000117B VOL: 0
; 0000 091C                 }
; 0000 091D         break;
;PCODE: $0000117C VOL: 0
;PCODE: $0000117D VOL: 0
; 0000 091E 
; 0000 091F 
; 0000 0920         case 2:
;PCODE: $0000117E VOL: 0
;PCODE: $0000117F VOL: 0
;PCODE: $00001180 VOL: 0
; 0000 0921 
; 0000 0922                if(sprawdz_pin0(PORTJJ,0x79) == 0)     //busy
;PCODE: $00001181 VOL: 0
;PCODE: $00001182 VOL: 0
;PCODE: $00001183 VOL: 0
;PCODE: $00001184 VOL: 0
;PCODE: $00001185 VOL: 0
;PCODE: $00001186 VOL: 0
;PCODE: $00001187 VOL: 0
; 0000 0923                   {
; 0000 0924 
; 0000 0925                   PORTD.3 = 0;
;PCODE: $00001188 VOL: 0
;PCODE: $00001189 VOL: 0
; 0000 0926                   PORTA = 0x00;
;PCODE: $0000118A VOL: 0
;PCODE: $0000118B VOL: 0
; 0000 0927                   PORTD.4 = 0;
;PCODE: $0000118C VOL: 0
;PCODE: $0000118D VOL: 0
; 0000 0928                   sek1 = 0;
;PCODE: $0000118E VOL: 0
;PCODE: $0000118F VOL: 0
; 0000 0929                   cykl_sterownik_1 = 3;
;PCODE: $00001190 VOL: 0
;PCODE: $00001191 VOL: 0
; 0000 092A                   }
; 0000 092B 
; 0000 092C         break;
;PCODE: $00001192 VOL: 0
;PCODE: $00001193 VOL: 0
; 0000 092D 
; 0000 092E         case 3:
;PCODE: $00001194 VOL: 0
;PCODE: $00001195 VOL: 0
;PCODE: $00001196 VOL: 0
; 0000 092F 
; 0000 0930                if(sprawdz_pin3(PORTJJ,0x79) == 0)
;PCODE: $00001197 VOL: 0
;PCODE: $00001198 VOL: 0
;PCODE: $00001199 VOL: 0
;PCODE: $0000119A VOL: 0
;PCODE: $0000119B VOL: 0
;PCODE: $0000119C VOL: 0
;PCODE: $0000119D VOL: 0
; 0000 0931                   {
; 0000 0932 
; 0000 0933                   sek1 = 0;
;PCODE: $0000119E VOL: 0
;PCODE: $0000119F VOL: 0
; 0000 0934                   cykl_sterownik_1 = 4;
;PCODE: $000011A0 VOL: 0
;PCODE: $000011A1 VOL: 0
; 0000 0935                   }
; 0000 0936 
; 0000 0937 
; 0000 0938         break;
;PCODE: $000011A2 VOL: 0
;PCODE: $000011A3 VOL: 0
; 0000 0939 
; 0000 093A 
; 0000 093B         case 4:
;PCODE: $000011A4 VOL: 0
;PCODE: $000011A5 VOL: 0
;PCODE: $000011A6 VOL: 0
; 0000 093C 
; 0000 093D             if(sprawdz_pin0(PORTJJ,0x79) == 1)
;PCODE: $000011A7 VOL: 0
;PCODE: $000011A8 VOL: 0
;PCODE: $000011A9 VOL: 0
;PCODE: $000011AA VOL: 0
;PCODE: $000011AB VOL: 0
;PCODE: $000011AC VOL: 0
;PCODE: $000011AD VOL: 0
; 0000 093E                 {
; 0000 093F 
; 0000 0940                 cykl_sterownik_1 = 5;
;PCODE: $000011AE VOL: 0
;PCODE: $000011AF VOL: 0
; 0000 0941                 }
; 0000 0942         break;
;PCODE: $000011B0 VOL: 0
;PCODE: $000011B1 VOL: 0
; 0000 0943 
; 0000 0944         }
;PCODE: $000011B2 VOL: 0
; 0000 0945 
; 0000 0946 return cykl_sterownik_1;
;PCODE: $000011B3 VOL: 0
;PCODE: $000011B4 VOL: 0
;PCODE: $000011B5 VOL: 0
; 0000 0947 }
;PCODE: $000011B6 VOL: 0
;
;
;int sterownik_2_praca(int PORT, int a)
; 0000 094B {
;PCODE: $000011B7 VOL: 0
;PCODE: $000011B8 VOL: 0
; 0000 094C //PORTC.0   IN0  STEROWNIK2
; 0000 094D //PORTC.1   IN1  STEROWNIK2
; 0000 094E //PORTC.2   IN2  STEROWNIK2
; 0000 094F //PORTC.3   IN3  STEROWNIK2
; 0000 0950 //PORTC.4   IN4  STEROWNIK2
; 0000 0951 //PORTC.5   IN5  STEROWNIK2
; 0000 0952 //PORTC.6   IN6  STEROWNIK2
; 0000 0953 //PORTC.7   IN7  STEROWNIK2
; 0000 0954 //PORTD.5   IN8 STEROWNIK2
; 0000 0955 
; 0000 0956 
; 0000 0957 //PORTD.5  SETUP   STEROWNIK2
; 0000 0958 //PORTD.6  DRIVE   STEROWNIK2
; 0000 0959 
; 0000 095A //sprawdz_pin0(PORTLL,0x71)  BUSY   STEROWNIK2
; 0000 095B //sprawdz_pin3(PORTLL,0x71)  INP    STEROWNIK2
; 0000 095C 
; 0000 095D 
; 0000 095E switch(cykl_sterownik_2)
;	PORT -> Y+2
;	a -> Y+0
;PCODE: $000011B9 VOL: 0
; 0000 095F         {
; 0000 0960         case 0:
;PCODE: $000011BA VOL: 0
;PCODE: $000011BB VOL: 0
; 0000 0961 
; 0000 0962             sek3 = 0;
;PCODE: $000011BC VOL: 0
;PCODE: $000011BD VOL: 0
; 0000 0963             PORTC = PORT;
;PCODE: $000011BE VOL: 0
;PCODE: $000011BF VOL: 0
; 0000 0964             PORTD.5 = a;
;PCODE: $000011C0 VOL: 0
;PCODE: $000011C1 VOL: 0
;PCODE: $000011C2 VOL: 0
;PCODE: $000011C3 VOL: 0
;PCODE: $000011C4 VOL: 0
;PCODE: $000011C5 VOL: 0
;PCODE: $000011C6 VOL: 0
;PCODE: $000011C7 VOL: 0
;PCODE: $000011C8 VOL: 0
;PCODE: $000011C9 VOL: 0
; 0000 0965 
; 0000 0966             cykl_sterownik_2 = 1;
;PCODE: $000011CA VOL: 0
;PCODE: $000011CB VOL: 0
; 0000 0967 
; 0000 0968 
; 0000 0969         break;
;PCODE: $000011CC VOL: 0
; 0000 096A 
; 0000 096B         case 1:
;PCODE: $000011CD VOL: 0
;PCODE: $000011CE VOL: 0
;PCODE: $000011CF VOL: 0
; 0000 096C 
; 0000 096D             if(sek3 > 1)
;PCODE: $000011D0 VOL: 0
;PCODE: $000011D1 VOL: 0
;PCODE: $000011D2 VOL: 0
; 0000 096E                 {
; 0000 096F                 PORTD.6 = 1;
;PCODE: $000011D3 VOL: 0
;PCODE: $000011D4 VOL: 0
; 0000 0970                 cykl_sterownik_2 = 2;
;PCODE: $000011D5 VOL: 0
;PCODE: $000011D6 VOL: 0
; 0000 0971                 }
; 0000 0972         break;
;PCODE: $000011D7 VOL: 0
;PCODE: $000011D8 VOL: 0
; 0000 0973 
; 0000 0974 
; 0000 0975         case 2:
;PCODE: $000011D9 VOL: 0
;PCODE: $000011DA VOL: 0
;PCODE: $000011DB VOL: 0
; 0000 0976 
; 0000 0977                if(sprawdz_pin0(PORTLL,0x71) == 0)     //busy
;PCODE: $000011DC VOL: 0
;PCODE: $000011DD VOL: 0
;PCODE: $000011DE VOL: 0
;PCODE: $000011DF VOL: 0
;PCODE: $000011E0 VOL: 0
;PCODE: $000011E1 VOL: 0
;PCODE: $000011E2 VOL: 0
; 0000 0978                   {
; 0000 0979                   PORTD.6 = 0;
;PCODE: $000011E3 VOL: 0
;PCODE: $000011E4 VOL: 0
; 0000 097A                   PORTC = 0x00;
;PCODE: $000011E5 VOL: 0
;PCODE: $000011E6 VOL: 0
; 0000 097B                   PORTD.5 = 0;
;PCODE: $000011E7 VOL: 0
;PCODE: $000011E8 VOL: 0
; 0000 097C                   sek3 = 0;
;PCODE: $000011E9 VOL: 0
;PCODE: $000011EA VOL: 0
; 0000 097D                   cykl_sterownik_2 = 3;
;PCODE: $000011EB VOL: 0
;PCODE: $000011EC VOL: 0
; 0000 097E                   }
; 0000 097F 
; 0000 0980         break;
;PCODE: $000011ED VOL: 0
;PCODE: $000011EE VOL: 0
; 0000 0981 
; 0000 0982         case 3:
;PCODE: $000011EF VOL: 0
;PCODE: $000011F0 VOL: 0
;PCODE: $000011F1 VOL: 0
; 0000 0983 
; 0000 0984                if(sprawdz_pin3(PORTLL,0x71) == 0)
;PCODE: $000011F2 VOL: 0
;PCODE: $000011F3 VOL: 0
;PCODE: $000011F4 VOL: 0
;PCODE: $000011F5 VOL: 0
;PCODE: $000011F6 VOL: 0
;PCODE: $000011F7 VOL: 0
;PCODE: $000011F8 VOL: 0
; 0000 0985                   {
; 0000 0986                   sek3 = 0;
;PCODE: $000011F9 VOL: 0
;PCODE: $000011FA VOL: 0
; 0000 0987                   cykl_sterownik_2 = 4;
;PCODE: $000011FB VOL: 0
;PCODE: $000011FC VOL: 0
; 0000 0988                   }
; 0000 0989 
; 0000 098A 
; 0000 098B         break;
;PCODE: $000011FD VOL: 0
;PCODE: $000011FE VOL: 0
; 0000 098C 
; 0000 098D 
; 0000 098E         case 4:
;PCODE: $000011FF VOL: 0
;PCODE: $00001200 VOL: 0
;PCODE: $00001201 VOL: 0
; 0000 098F 
; 0000 0990             if(sprawdz_pin0(PORTLL,0x71) == 1)
;PCODE: $00001202 VOL: 0
;PCODE: $00001203 VOL: 0
;PCODE: $00001204 VOL: 0
;PCODE: $00001205 VOL: 0
;PCODE: $00001206 VOL: 0
;PCODE: $00001207 VOL: 0
;PCODE: $00001208 VOL: 0
; 0000 0991                 {
; 0000 0992                 cykl_sterownik_2 = 5;
;PCODE: $00001209 VOL: 0
;PCODE: $0000120A VOL: 0
; 0000 0993                 }
; 0000 0994         break;
;PCODE: $0000120B VOL: 0
;PCODE: $0000120C VOL: 0
; 0000 0995 
; 0000 0996         }
;PCODE: $0000120D VOL: 0
; 0000 0997 
; 0000 0998 return cykl_sterownik_2;
;PCODE: $0000120E VOL: 0
;PCODE: $0000120F VOL: 0
;PCODE: $00001210 VOL: 0
; 0000 0999 }
;PCODE: $00001211 VOL: 0
;
;
;
;
;
;
;int sterownik_3_praca(char f,char e,char d, char c, char b, char a)
; 0000 09A1 {
;PCODE: $00001212 VOL: 0
;PCODE: $00001213 VOL: 0
; 0000 09A2 //PORTF.0   IN0  STEROWNIK3
; 0000 09A3 //PORTF.1   IN1  STEROWNIK3
; 0000 09A4 //PORTF.2   IN2  STEROWNIK3
; 0000 09A5 //PORTF.3   IN3  STEROWNIK3
; 0000 09A6 //PORTF.7   IN4 STEROWNIK 3
; 0000 09A7 //PORTB.7   IN5 STEROWNIK 3
; 0000 09A8 
; 0000 09A9 
; 0000 09AA 
; 0000 09AB //PORTF.5   DRIVE  STEROWNIK3
; 0000 09AC 
; 0000 09AD //sprawdz_pin0(PORTKK,0x75)  B7 BUSY    LECCP STEROWNIK3
; 0000 09AE //sprawdz_pin3(PORTKK,0x75)  B10 INP    LECP6 STEROWNIK3
; 0000 09AF 
; 0000 09B0 switch(cykl_sterownik_3)
;	f -> Y+5
;	e -> Y+4
;	d -> Y+3
;	c -> Y+2
;	b -> Y+1
;	a -> Y+0
;PCODE: $00001214 VOL: 0
; 0000 09B1         {
; 0000 09B2         case 0:
;PCODE: $00001215 VOL: 0
;PCODE: $00001216 VOL: 0
; 0000 09B3 
; 0000 09B4             PORT_F.bits.b0 = a;
;PCODE: $00001217 VOL: 0
;PCODE: $00001218 VOL: 0
;PCODE: $00001219 VOL: 0
;PCODE: $0000121A VOL: 0
;PCODE: $0000121B VOL: 0
;PCODE: $0000121C VOL: 0
;PCODE: $0000121D VOL: 0
;PCODE: $0000121E VOL: 0
; 0000 09B5             PORT_F.bits.b1 = b;
;PCODE: $0000121F VOL: 0
;PCODE: $00001220 VOL: 0
;PCODE: $00001221 VOL: 0
;PCODE: $00001222 VOL: 0
;PCODE: $00001223 VOL: 0
;PCODE: $00001224 VOL: 0
;PCODE: $00001225 VOL: 0
;PCODE: $00001226 VOL: 0
;PCODE: $00001227 VOL: 0
; 0000 09B6             PORT_F.bits.b2 = c;
;PCODE: $00001228 VOL: 0
;PCODE: $00001229 VOL: 0
;PCODE: $0000122A VOL: 0
;PCODE: $0000122B VOL: 0
;PCODE: $0000122C VOL: 0
;PCODE: $0000122D VOL: 0
;PCODE: $0000122E VOL: 0
;PCODE: $0000122F VOL: 0
;PCODE: $00001230 VOL: 0
; 0000 09B7             PORT_F.bits.b3 = d;
;PCODE: $00001231 VOL: 0
;PCODE: $00001232 VOL: 0
;PCODE: $00001233 VOL: 0
;PCODE: $00001234 VOL: 0
;PCODE: $00001235 VOL: 0
;PCODE: $00001236 VOL: 0
;PCODE: $00001237 VOL: 0
;PCODE: $00001238 VOL: 0
;PCODE: $00001239 VOL: 0
; 0000 09B8             PORT_F.bits.b7 = e;
;PCODE: $0000123A VOL: 0
;PCODE: $0000123B VOL: 0
;PCODE: $0000123C VOL: 0
;PCODE: $0000123D VOL: 0
;PCODE: $0000123E VOL: 0
;PCODE: $0000123F VOL: 0
;PCODE: $00001240 VOL: 0
;PCODE: $00001241 VOL: 0
;PCODE: $00001242 VOL: 0
; 0000 09B9             PORTF = PORT_F.byte;
;PCODE: $00001243 VOL: 0
;PCODE: $00001244 VOL: 0
; 0000 09BA             PORTB.7 = f;
;PCODE: $00001245 VOL: 0
;PCODE: $00001246 VOL: 0
;PCODE: $00001247 VOL: 0
;PCODE: $00001248 VOL: 0
;PCODE: $00001249 VOL: 0
;PCODE: $0000124A VOL: 0
;PCODE: $0000124B VOL: 0
;PCODE: $0000124C VOL: 0
;PCODE: $0000124D VOL: 0
;PCODE: $0000124E VOL: 0
; 0000 09BB 
; 0000 09BC             sek2 = 0;
;PCODE: $0000124F VOL: 0
;PCODE: $00001250 VOL: 0
; 0000 09BD             cykl_sterownik_3 = 1;
;PCODE: $00001251 VOL: 0
;PCODE: $00001252 VOL: 0
; 0000 09BE 
; 0000 09BF         break;
;PCODE: $00001253 VOL: 0
; 0000 09C0 
; 0000 09C1         case 1:
;PCODE: $00001254 VOL: 0
;PCODE: $00001255 VOL: 0
;PCODE: $00001256 VOL: 0
; 0000 09C2 
; 0000 09C3             if(sek2 > 1)
;PCODE: $00001257 VOL: 0
;PCODE: $00001258 VOL: 0
;PCODE: $00001259 VOL: 0
; 0000 09C4                 {
; 0000 09C5                 PORT_F.bits.b5 = 1;
;PCODE: $0000125A VOL: 0
;PCODE: $0000125B VOL: 0
;PCODE: $0000125C VOL: 0
; 0000 09C6                 PORTF = PORT_F.byte;
;PCODE: $0000125D VOL: 0
;PCODE: $0000125E VOL: 0
; 0000 09C7                 cykl_sterownik_3 = 2;    //drive
;PCODE: $0000125F VOL: 0
;PCODE: $00001260 VOL: 0
; 0000 09C8                 }
; 0000 09C9         break;
;PCODE: $00001261 VOL: 0
;PCODE: $00001262 VOL: 0
; 0000 09CA 
; 0000 09CB 
; 0000 09CC         case 2:
;PCODE: $00001263 VOL: 0
;PCODE: $00001264 VOL: 0
;PCODE: $00001265 VOL: 0
; 0000 09CD 
; 0000 09CE                if(sprawdz_pin0(PORTKK,0x75) == 0)
;PCODE: $00001266 VOL: 0
;PCODE: $00001267 VOL: 0
;PCODE: $00001268 VOL: 0
;PCODE: $00001269 VOL: 0
;PCODE: $0000126A VOL: 0
;PCODE: $0000126B VOL: 0
;PCODE: $0000126C VOL: 0
; 0000 09CF                   {
; 0000 09D0                   PORT_F.bits.b5 = 0;
;PCODE: $0000126D VOL: 0
;PCODE: $0000126E VOL: 0
;PCODE: $0000126F VOL: 0
;PCODE: $00001270 VOL: 0
; 0000 09D1                   PORTF = PORT_F.byte;
;PCODE: $00001271 VOL: 0
;PCODE: $00001272 VOL: 0
; 0000 09D2 
; 0000 09D3                   PORT_F.bits.b0 = 0;
;PCODE: $00001273 VOL: 0
;PCODE: $00001274 VOL: 0
;PCODE: $00001275 VOL: 0
;PCODE: $00001276 VOL: 0
; 0000 09D4                   PORT_F.bits.b1 = 0;
;PCODE: $00001277 VOL: 0
;PCODE: $00001278 VOL: 0
;PCODE: $00001279 VOL: 0
;PCODE: $0000127A VOL: 0
; 0000 09D5                   PORT_F.bits.b2 = 0;
;PCODE: $0000127B VOL: 0
;PCODE: $0000127C VOL: 0
;PCODE: $0000127D VOL: 0
;PCODE: $0000127E VOL: 0
; 0000 09D6                   PORT_F.bits.b3 = 0;
;PCODE: $0000127F VOL: 0
;PCODE: $00001280 VOL: 0
;PCODE: $00001281 VOL: 0
;PCODE: $00001282 VOL: 0
; 0000 09D7                   PORT_F.bits.b7 = 0;
;PCODE: $00001283 VOL: 0
;PCODE: $00001284 VOL: 0
;PCODE: $00001285 VOL: 0
;PCODE: $00001286 VOL: 0
; 0000 09D8                   PORTF = PORT_F.byte;
;PCODE: $00001287 VOL: 0
;PCODE: $00001288 VOL: 0
; 0000 09D9                   PORTB.7 = 0;
;PCODE: $00001289 VOL: 0
;PCODE: $0000128A VOL: 0
; 0000 09DA 
; 0000 09DB                   sek2 = 0;
;PCODE: $0000128B VOL: 0
;PCODE: $0000128C VOL: 0
; 0000 09DC                   cykl_sterownik_3 = 3;
;PCODE: $0000128D VOL: 0
;PCODE: $0000128E VOL: 0
; 0000 09DD                   }
; 0000 09DE 
; 0000 09DF         break;
;PCODE: $0000128F VOL: 0
;PCODE: $00001290 VOL: 0
; 0000 09E0 
; 0000 09E1         case 3:
;PCODE: $00001291 VOL: 0
;PCODE: $00001292 VOL: 0
;PCODE: $00001293 VOL: 0
; 0000 09E2 
; 0000 09E3                if(sprawdz_pin3(PORTKK,0x75) == 0)  //czy INP
;PCODE: $00001294 VOL: 0
;PCODE: $00001295 VOL: 0
;PCODE: $00001296 VOL: 0
;PCODE: $00001297 VOL: 0
;PCODE: $00001298 VOL: 0
;PCODE: $00001299 VOL: 0
;PCODE: $0000129A VOL: 0
; 0000 09E4                   {
; 0000 09E5                   sek2 = 0;
;PCODE: $0000129B VOL: 0
;PCODE: $0000129C VOL: 0
; 0000 09E6                   cykl_sterownik_3 = 4;
;PCODE: $0000129D VOL: 0
;PCODE: $0000129E VOL: 0
; 0000 09E7                   }
; 0000 09E8 
; 0000 09E9 
; 0000 09EA         break;
;PCODE: $0000129F VOL: 0
;PCODE: $000012A0 VOL: 0
; 0000 09EB 
; 0000 09EC 
; 0000 09ED         case 4:
;PCODE: $000012A1 VOL: 0
;PCODE: $000012A2 VOL: 0
;PCODE: $000012A3 VOL: 0
; 0000 09EE 
; 0000 09EF               if(sprawdz_pin0(PORTKK,0x75) == 1)  //czy BUSY
;PCODE: $000012A4 VOL: 0
;PCODE: $000012A5 VOL: 0
;PCODE: $000012A6 VOL: 0
;PCODE: $000012A7 VOL: 0
;PCODE: $000012A8 VOL: 0
;PCODE: $000012A9 VOL: 0
;PCODE: $000012AA VOL: 0
; 0000 09F0                 {
; 0000 09F1                 cykl_sterownik_3 = 5;
;PCODE: $000012AB VOL: 0
;PCODE: $000012AC VOL: 0
; 0000 09F2 
; 0000 09F3 
; 0000 09F4                 switch(cykl_sterownik_3_wykonalem)
;PCODE: $000012AD VOL: 0
; 0000 09F5                     {
; 0000 09F6                     case 0:
;PCODE: $000012AE VOL: 0
;PCODE: $000012AF VOL: 0
; 0000 09F7                             cykl_sterownik_3_wykonalem = 1;
;PCODE: $000012B0 VOL: 0
;PCODE: $000012B1 VOL: 0
; 0000 09F8                     break;
;PCODE: $000012B2 VOL: 0
; 0000 09F9 
; 0000 09FA                     case 1:
;PCODE: $000012B3 VOL: 0
;PCODE: $000012B4 VOL: 0
;PCODE: $000012B5 VOL: 0
; 0000 09FB                             cykl_sterownik_3_wykonalem = 0;
;PCODE: $000012B6 VOL: 0
;PCODE: $000012B7 VOL: 0
; 0000 09FC                     break;
;PCODE: $000012B8 VOL: 0
; 0000 09FD 
; 0000 09FE                     }
;PCODE: $000012B9 VOL: 0
; 0000 09FF 
; 0000 0A00 
; 0000 0A01                 }
; 0000 0A02         break;
;PCODE: $000012BA VOL: 0
;PCODE: $000012BB VOL: 0
; 0000 0A03 
; 0000 0A04         }
;PCODE: $000012BC VOL: 0
; 0000 0A05 
; 0000 0A06 return cykl_sterownik_3;
;PCODE: $000012BD VOL: 0
;PCODE: $000012BE VOL: 0
;PCODE: $000012BF VOL: 0
; 0000 0A07 }
;PCODE: $000012C0 VOL: 0
;
;//
;//int sterownik_4_praca(char f,char e,char d, char c, char b, char a)
;int sterownik_4_praca(int PORT)
; 0000 0A0C {
;PCODE: $000012C1 VOL: 0
;PCODE: $000012C2 VOL: 0
; 0000 0A0D bit a,b,c,d,e,f;
; 0000 0A0E 
; 0000 0A0F 
; 0000 0A10 PORT_STER3.byte = PORT;
;	PORT -> Y+0
;	a -> R15.0
;	b -> R15.1
;	c -> R15.2
;	d -> R15.3
;	e -> R15.4
;	f -> R15.5
;PCODE: $000012C3 VOL: 0
;PCODE: $000012C4 VOL: 0
; 0000 0A11 
; 0000 0A12 a = PORT_STER3.bits.b0;
;PCODE: $000012C5 VOL: 0
;PCODE: $000012C6 VOL: 0
;PCODE: $000012C7 VOL: 0
;PCODE: $000012C8 VOL: 0
;PCODE: $000012C9 VOL: 0
; 0000 0A13 b = PORT_STER3.bits.b1;
;PCODE: $000012CA VOL: 0
;PCODE: $000012CB VOL: 0
;PCODE: $000012CC VOL: 0
;PCODE: $000012CD VOL: 0
;PCODE: $000012CE VOL: 0
;PCODE: $000012CF VOL: 0
; 0000 0A14 c = PORT_STER3.bits.b2;
;PCODE: $000012D0 VOL: 0
;PCODE: $000012D1 VOL: 0
;PCODE: $000012D2 VOL: 0
;PCODE: $000012D3 VOL: 0
;PCODE: $000012D4 VOL: 0
;PCODE: $000012D5 VOL: 0
; 0000 0A15 d = PORT_STER3.bits.b3;
;PCODE: $000012D6 VOL: 0
;PCODE: $000012D7 VOL: 0
;PCODE: $000012D8 VOL: 0
;PCODE: $000012D9 VOL: 0
;PCODE: $000012DA VOL: 0
;PCODE: $000012DB VOL: 0
; 0000 0A16 e = PORT_STER3.bits.b4;
;PCODE: $000012DC VOL: 0
;PCODE: $000012DD VOL: 0
;PCODE: $000012DE VOL: 0
;PCODE: $000012DF VOL: 0
;PCODE: $000012E0 VOL: 0
;PCODE: $000012E1 VOL: 0
; 0000 0A17 f = PORT_STER3.bits.b5;
;PCODE: $000012E2 VOL: 0
;PCODE: $000012E3 VOL: 0
;PCODE: $000012E4 VOL: 0
;PCODE: $000012E5 VOL: 0
;PCODE: $000012E6 VOL: 0
;PCODE: $000012E7 VOL: 0
; 0000 0A18 
; 0000 0A19 
; 0000 0A1A //PORTB.0   IN0  STEROWNIK4
; 0000 0A1B //PORTB.1   IN1  STEROWNIK4
; 0000 0A1C //PORTB.2   IN2  STEROWNIK4
; 0000 0A1D //PORTB.3   IN3  STEROWNIK4
; 0000 0A1E //PORTE.4  IN4  STEROWNIK4
; 0000 0A1F //PORTE.5  IN5  STEROWNIK4
; 0000 0A20 
; 0000 0A21 
; 0000 0A22 //PORTB.4   SETUP  STEROWNIK4
; 0000 0A23 //PORTB.5   DRIVE  STEROWNIK4
; 0000 0A24 
; 0000 0A25 //sprawdz_pin4(PORTKK,0x75)  B7 BUSY    LECCP STEROWNIK4
; 0000 0A26 //sprawdz_pin7(PORTKK,0x75)  B10 INP    LECP6 STEROWNIK4
; 0000 0A27 
; 0000 0A28 
; 0000 0A29 
; 0000 0A2A switch(cykl_sterownik_4)
;PCODE: $000012E8 VOL: 0
; 0000 0A2B         {
; 0000 0A2C         case 0:
;PCODE: $000012E9 VOL: 0
;PCODE: $000012EA VOL: 0
; 0000 0A2D 
; 0000 0A2E             PORTB.0 = a;
;PCODE: $000012EB VOL: 0
;PCODE: $000012EC VOL: 0
;PCODE: $000012ED VOL: 0
;PCODE: $000012EE VOL: 0
;PCODE: $000012EF VOL: 0
;PCODE: $000012F0 VOL: 0
;PCODE: $000012F1 VOL: 0
;PCODE: $000012F2 VOL: 0
;PCODE: $000012F3 VOL: 0
;PCODE: $000012F4 VOL: 0
; 0000 0A2F             PORTB.1 = b;
;PCODE: $000012F5 VOL: 0
;PCODE: $000012F6 VOL: 0
;PCODE: $000012F7 VOL: 0
;PCODE: $000012F8 VOL: 0
;PCODE: $000012F9 VOL: 0
;PCODE: $000012FA VOL: 0
;PCODE: $000012FB VOL: 0
;PCODE: $000012FC VOL: 0
;PCODE: $000012FD VOL: 0
;PCODE: $000012FE VOL: 0
; 0000 0A30             PORTB.2 = c;
;PCODE: $000012FF VOL: 0
;PCODE: $00001300 VOL: 0
;PCODE: $00001301 VOL: 0
;PCODE: $00001302 VOL: 0
;PCODE: $00001303 VOL: 0
;PCODE: $00001304 VOL: 0
;PCODE: $00001305 VOL: 0
;PCODE: $00001306 VOL: 0
;PCODE: $00001307 VOL: 0
;PCODE: $00001308 VOL: 0
; 0000 0A31             PORTB.3 = d;
;PCODE: $00001309 VOL: 0
;PCODE: $0000130A VOL: 0
;PCODE: $0000130B VOL: 0
;PCODE: $0000130C VOL: 0
;PCODE: $0000130D VOL: 0
;PCODE: $0000130E VOL: 0
;PCODE: $0000130F VOL: 0
;PCODE: $00001310 VOL: 0
;PCODE: $00001311 VOL: 0
;PCODE: $00001312 VOL: 0
; 0000 0A32             PORTE.4 = e;
;PCODE: $00001313 VOL: 0
;PCODE: $00001314 VOL: 0
;PCODE: $00001315 VOL: 0
;PCODE: $00001316 VOL: 0
;PCODE: $00001317 VOL: 0
;PCODE: $00001318 VOL: 0
;PCODE: $00001319 VOL: 0
;PCODE: $0000131A VOL: 0
;PCODE: $0000131B VOL: 0
;PCODE: $0000131C VOL: 0
; 0000 0A33             PORTE.5 = f;
;PCODE: $0000131D VOL: 0
;PCODE: $0000131E VOL: 0
;PCODE: $0000131F VOL: 0
;PCODE: $00001320 VOL: 0
;PCODE: $00001321 VOL: 0
;PCODE: $00001322 VOL: 0
;PCODE: $00001323 VOL: 0
;PCODE: $00001324 VOL: 0
;PCODE: $00001325 VOL: 0
;PCODE: $00001326 VOL: 0
; 0000 0A34 
; 0000 0A35             sek4 = 0;
;PCODE: $00001327 VOL: 0
;PCODE: $00001328 VOL: 0
; 0000 0A36             cykl_sterownik_4 = 1;
;PCODE: $00001329 VOL: 0
;PCODE: $0000132A VOL: 0
; 0000 0A37 
; 0000 0A38         break;
;PCODE: $0000132B VOL: 0
; 0000 0A39 
; 0000 0A3A         case 1:
;PCODE: $0000132C VOL: 0
;PCODE: $0000132D VOL: 0
;PCODE: $0000132E VOL: 0
; 0000 0A3B 
; 0000 0A3C             if(sek4 > 1)
;PCODE: $0000132F VOL: 0
;PCODE: $00001330 VOL: 0
;PCODE: $00001331 VOL: 0
; 0000 0A3D                 {
; 0000 0A3E                 PORTB.5 = 1;
;PCODE: $00001332 VOL: 0
;PCODE: $00001333 VOL: 0
; 0000 0A3F                 cykl_sterownik_4 = 2;    //drive
;PCODE: $00001334 VOL: 0
;PCODE: $00001335 VOL: 0
; 0000 0A40                 }
; 0000 0A41         break;
;PCODE: $00001336 VOL: 0
;PCODE: $00001337 VOL: 0
; 0000 0A42 
; 0000 0A43 
; 0000 0A44         case 2:
;PCODE: $00001338 VOL: 0
;PCODE: $00001339 VOL: 0
;PCODE: $0000133A VOL: 0
; 0000 0A45 
; 0000 0A46                if(sprawdz_pin4(PORTKK,0x75) == 0)
;PCODE: $0000133B VOL: 0
;PCODE: $0000133C VOL: 0
;PCODE: $0000133D VOL: 0
;PCODE: $0000133E VOL: 0
;PCODE: $0000133F VOL: 0
;PCODE: $00001340 VOL: 0
;PCODE: $00001341 VOL: 0
; 0000 0A47                   {
; 0000 0A48                   PORTB.5 = 0;  //drive
;PCODE: $00001342 VOL: 0
;PCODE: $00001343 VOL: 0
; 0000 0A49 
; 0000 0A4A                   PORTB.0 = a;
;PCODE: $00001344 VOL: 0
;PCODE: $00001345 VOL: 0
;PCODE: $00001346 VOL: 0
;PCODE: $00001347 VOL: 0
;PCODE: $00001348 VOL: 0
;PCODE: $00001349 VOL: 0
;PCODE: $0000134A VOL: 0
;PCODE: $0000134B VOL: 0
;PCODE: $0000134C VOL: 0
;PCODE: $0000134D VOL: 0
; 0000 0A4B                   PORTB.1 = b;
;PCODE: $0000134E VOL: 0
;PCODE: $0000134F VOL: 0
;PCODE: $00001350 VOL: 0
;PCODE: $00001351 VOL: 0
;PCODE: $00001352 VOL: 0
;PCODE: $00001353 VOL: 0
;PCODE: $00001354 VOL: 0
;PCODE: $00001355 VOL: 0
;PCODE: $00001356 VOL: 0
;PCODE: $00001357 VOL: 0
; 0000 0A4C                   PORTB.2 = c;
;PCODE: $00001358 VOL: 0
;PCODE: $00001359 VOL: 0
;PCODE: $0000135A VOL: 0
;PCODE: $0000135B VOL: 0
;PCODE: $0000135C VOL: 0
;PCODE: $0000135D VOL: 0
;PCODE: $0000135E VOL: 0
;PCODE: $0000135F VOL: 0
;PCODE: $00001360 VOL: 0
;PCODE: $00001361 VOL: 0
; 0000 0A4D                   PORTB.3 = d;
;PCODE: $00001362 VOL: 0
;PCODE: $00001363 VOL: 0
;PCODE: $00001364 VOL: 0
;PCODE: $00001365 VOL: 0
;PCODE: $00001366 VOL: 0
;PCODE: $00001367 VOL: 0
;PCODE: $00001368 VOL: 0
;PCODE: $00001369 VOL: 0
;PCODE: $0000136A VOL: 0
;PCODE: $0000136B VOL: 0
; 0000 0A4E                   PORTE.4 = e;
;PCODE: $0000136C VOL: 0
;PCODE: $0000136D VOL: 0
;PCODE: $0000136E VOL: 0
;PCODE: $0000136F VOL: 0
;PCODE: $00001370 VOL: 0
;PCODE: $00001371 VOL: 0
;PCODE: $00001372 VOL: 0
;PCODE: $00001373 VOL: 0
;PCODE: $00001374 VOL: 0
;PCODE: $00001375 VOL: 0
; 0000 0A4F                   PORTE.5 = f;
;PCODE: $00001376 VOL: 0
;PCODE: $00001377 VOL: 0
;PCODE: $00001378 VOL: 0
;PCODE: $00001379 VOL: 0
;PCODE: $0000137A VOL: 0
;PCODE: $0000137B VOL: 0
;PCODE: $0000137C VOL: 0
;PCODE: $0000137D VOL: 0
;PCODE: $0000137E VOL: 0
;PCODE: $0000137F VOL: 0
; 0000 0A50 
; 0000 0A51                   sek4 = 0;
;PCODE: $00001380 VOL: 0
;PCODE: $00001381 VOL: 0
; 0000 0A52                   cykl_sterownik_4 = 3;
;PCODE: $00001382 VOL: 0
;PCODE: $00001383 VOL: 0
; 0000 0A53                   }
; 0000 0A54 
; 0000 0A55         break;
;PCODE: $00001384 VOL: 0
;PCODE: $00001385 VOL: 0
; 0000 0A56 
; 0000 0A57         case 3:
;PCODE: $00001386 VOL: 0
;PCODE: $00001387 VOL: 0
;PCODE: $00001388 VOL: 0
; 0000 0A58 
; 0000 0A59                if(sprawdz_pin7(PORTKK,0x75) == 0)  //czy INP
;PCODE: $00001389 VOL: 0
;PCODE: $0000138A VOL: 0
;PCODE: $0000138B VOL: 0
;PCODE: $0000138C VOL: 0
;PCODE: $0000138D VOL: 0
;PCODE: $0000138E VOL: 0
;PCODE: $0000138F VOL: 0
; 0000 0A5A                   {
; 0000 0A5B                   sek4 = 0;
;PCODE: $00001390 VOL: 0
;PCODE: $00001391 VOL: 0
; 0000 0A5C                   cykl_sterownik_4 = 4;
;PCODE: $00001392 VOL: 0
;PCODE: $00001393 VOL: 0
; 0000 0A5D                   }
; 0000 0A5E 
; 0000 0A5F 
; 0000 0A60         break;
;PCODE: $00001394 VOL: 0
;PCODE: $00001395 VOL: 0
; 0000 0A61 
; 0000 0A62 
; 0000 0A63         case 4:
;PCODE: $00001396 VOL: 0
;PCODE: $00001397 VOL: 0
;PCODE: $00001398 VOL: 0
; 0000 0A64 
; 0000 0A65               if(sprawdz_pin4(PORTKK,0x75) == 1)  //czy BUSY
;PCODE: $00001399 VOL: 0
;PCODE: $0000139A VOL: 0
;PCODE: $0000139B VOL: 0
;PCODE: $0000139C VOL: 0
;PCODE: $0000139D VOL: 0
;PCODE: $0000139E VOL: 0
;PCODE: $0000139F VOL: 0
; 0000 0A66                 {
; 0000 0A67                 cykl_sterownik_4 = 5;
;PCODE: $000013A0 VOL: 0
;PCODE: $000013A1 VOL: 0
; 0000 0A68                 }
; 0000 0A69         break;
;PCODE: $000013A2 VOL: 0
;PCODE: $000013A3 VOL: 0
; 0000 0A6A 
; 0000 0A6B         }
;PCODE: $000013A4 VOL: 0
; 0000 0A6C 
; 0000 0A6D return cykl_sterownik_4;
;PCODE: $000013A5 VOL: 0
;PCODE: $000013A6 VOL: 0
;PCODE: $000013A7 VOL: 0
; 0000 0A6E }
;PCODE: $000013A8 VOL: 0
;
;
;
;
;
;void main(void)
; 0000 0A75 {
;PCODE: $000013A9 VOL: 0
; 0000 0A76 
; 0000 0A77 // Declare your local variables here
; 0000 0A78 /*
; 0000 0A79 // Input/Output Ports initialization
; 0000 0A7A // Port A initialization
; 0000 0A7B // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0A7C // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0A7D PORTA=0x00;
; 0000 0A7E DDRA=0x00;
; 0000 0A7F 
; 0000 0A80 // Port B initialization
; 0000 0A81 // Func7=Out Func6=Out Func5=Out Func4=Out Func3=Out Func2=Out Func1=Out Func0=Out
; 0000 0A82 // State7=0 State6=0 State5=0 State4=0 State3=0 State2=0 State1=0 State0=0
; 0000 0A83 PORTB=0x00;
; 0000 0A84 DDRB=0xFF;
; 0000 0A85 
; 0000 0A86 // Port C initialization
; 0000 0A87 // Func7=Out Func6=Out Func5=Out Func4=Out Func3=Out Func2=Out Func1=Out Func0=Out
; 0000 0A88 // State7=0 State6=0 State5=0 State4=0 State3=0 State2=0 State1=0 State0=0
; 0000 0A89 PORTC=0x00;
; 0000 0A8A DDRC=0xFF;
; 0000 0A8B 
; 0000 0A8C // Port D initialization
; 0000 0A8D // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0A8E // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0A8F PORTD=0x00;
; 0000 0A90 DDRD=0x00;
; 0000 0A91 
; 0000 0A92 // Port E initialization
; 0000 0A93 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0A94 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0A95 PORTE=0x00;
; 0000 0A96 DDRE=0x00;
; 0000 0A97 
; 0000 0A98 // Port F initialization
; 0000 0A99 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0A9A // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0A9B PORTF=0x00;
; 0000 0A9C DDRF=0x00;
; 0000 0A9D 
; 0000 0A9E // Port G initialization
; 0000 0A9F // Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0AA0 // State4=T State3=T State2=T State1=T State0=T
; 0000 0AA1 PORTG=0x00;
; 0000 0AA2 DDRG=0x00;
; 0000 0AA3 */
; 0000 0AA4 
; 0000 0AA5 
; 0000 0AA6 // Input/Output Ports initialization
; 0000 0AA7 // Port A initialization
; 0000 0AA8 // Func7=Out Func6=Out Func5=Out Func4=Out Func3=Out Func2=Out Func1=Out Func0=Out
; 0000 0AA9 // State7=0 State6=0 State5=0 State4=0 State3=0 State2=0 State1=0 State0=0
; 0000 0AAA PORTA=0x00;
;PCODE: $000013AA VOL: 0
;PCODE: $000013AB VOL: 0
; 0000 0AAB DDRA=0xFF;
;PCODE: $000013AC VOL: 0
;PCODE: $000013AD VOL: 0
; 0000 0AAC 
; 0000 0AAD // Port B initialization
; 0000 0AAE // Func7=Out Func6=Out Func5=Out Func4=Out Func3=Out Func2=Out Func1=Out Func0=Out
; 0000 0AAF // State7=0 State6=0 State5=0 State4=0 State3=0 State2=0 State1=0 State0=0
; 0000 0AB0 PORTB=0x00;
;PCODE: $000013AE VOL: 0
;PCODE: $000013AF VOL: 0
; 0000 0AB1 DDRB=0xFF;
;PCODE: $000013B0 VOL: 0
;PCODE: $000013B1 VOL: 0
; 0000 0AB2 
; 0000 0AB3 // Port C initialization
; 0000 0AB4 // Func7=Out Func6=Out Func5=Out Func4=Out Func3=Out Func2=Out Func1=Out Func0=Out
; 0000 0AB5 // State7=0 State6=0 State5=0 State4=0 State3=0 State2=0 State1=0 State0=0
; 0000 0AB6 PORTC=0x00;
;PCODE: $000013B2 VOL: 0
;PCODE: $000013B3 VOL: 0
; 0000 0AB7 DDRC=0xFF;
;PCODE: $000013B4 VOL: 0
;PCODE: $000013B5 VOL: 0
; 0000 0AB8 
; 0000 0AB9 // Port D initialization
; 0000 0ABA // Func7=Out Func6=Out Func5=Out Func4=Out Func3=Out Func2=Out Func1=Out Func0=Out
; 0000 0ABB // State7=0 State6=0 State5=0 State4=0 State3=0 State2=0 State1=0 State0=0
; 0000 0ABC PORTD=0x00;
;PCODE: $000013B6 VOL: 0
;PCODE: $000013B7 VOL: 0
; 0000 0ABD DDRD=0xFF;
;PCODE: $000013B8 VOL: 0
;PCODE: $000013B9 VOL: 0
; 0000 0ABE 
; 0000 0ABF // Port E initialization
; 0000 0AC0 // Func7=Out Func6=Out Func5=Out Func4=Out Func3=Out Func2=Out Func1=Out Func0=Out
; 0000 0AC1 // State7=0 State6=0 State5=0 State4=0 State3=0 State2=0 State1=0 State0=0
; 0000 0AC2 PORTE=0x00;
;PCODE: $000013BA VOL: 0
;PCODE: $000013BB VOL: 0
; 0000 0AC3 DDRE=0xFF;
;PCODE: $000013BC VOL: 0
;PCODE: $000013BD VOL: 0
; 0000 0AC4 
; 0000 0AC5 // Port F initialization
; 0000 0AC6 // Func7=Out Func6=Out Func5=Out Func4=Out Func3=Out Func2=Out Func1=Out Func0=Out
; 0000 0AC7 // State7=0 State6=0 State5=0 State4=0 State3=0 State2=0 State1=0 State0=0
; 0000 0AC8 PORTF=0x00;
;PCODE: $000013BE VOL: 0
;PCODE: $000013BF VOL: 0
; 0000 0AC9 DDRF=0xFF;
;PCODE: $000013C0 VOL: 0
;PCODE: $000013C1 VOL: 0
; 0000 0ACA 
; 0000 0ACB // Port G initialization
; 0000 0ACC // Func4=Out Func3=Out Func2=Out Func1=Out Func0=Out
; 0000 0ACD // State4=0 State3=0 State2=0 State1=0 State0=0
; 0000 0ACE PORTG=0x00;
;PCODE: $000013C2 VOL: 0
;PCODE: $000013C3 VOL: 0
; 0000 0ACF DDRG=0x1F;
;PCODE: $000013C4 VOL: 0
;PCODE: $000013C5 VOL: 0
; 0000 0AD0 
; 0000 0AD1 
; 0000 0AD2 
; 0000 0AD3 
; 0000 0AD4 
; 0000 0AD5 // Timer/Counter 0 initialization
; 0000 0AD6 // Clock source: System Clock
; 0000 0AD7 // Clock value: 15,625 kHz
; 0000 0AD8 // Mode: Normal top=0xFF
; 0000 0AD9 // OC0 output: Disconnected
; 0000 0ADA ASSR=0x00;
;PCODE: $000013C6 VOL: 0
;PCODE: $000013C7 VOL: 0
; 0000 0ADB TCCR0=0x07;
;PCODE: $000013C8 VOL: 0
;PCODE: $000013C9 VOL: 0
; 0000 0ADC TCNT0=0x00;
;PCODE: $000013CA VOL: 0
;PCODE: $000013CB VOL: 0
; 0000 0ADD OCR0=0x00;
;PCODE: $000013CC VOL: 0
;PCODE: $000013CD VOL: 0
; 0000 0ADE 
; 0000 0ADF // Timer/Counter 1 initialization
; 0000 0AE0 // Clock source: System Clock
; 0000 0AE1 // Clock value: Timer1 Stopped
; 0000 0AE2 // Mode: Normal top=0xFFFF
; 0000 0AE3 // OC1A output: Discon.
; 0000 0AE4 // OC1B output: Discon.
; 0000 0AE5 // OC1C output: Discon.
; 0000 0AE6 // Noise Canceler: Off
; 0000 0AE7 // Input Capture on Falling Edge
; 0000 0AE8 // Timer1 Overflow Interrupt: Off
; 0000 0AE9 // Input Capture Interrupt: Off
; 0000 0AEA // Compare A Match Interrupt: Off
; 0000 0AEB // Compare B Match Interrupt: Off
; 0000 0AEC // Compare C Match Interrupt: Off
; 0000 0AED TCCR1A=0x00;
;PCODE: $000013CE VOL: 0
;PCODE: $000013CF VOL: 0
; 0000 0AEE TCCR1B=0x00;
;PCODE: $000013D0 VOL: 0
;PCODE: $000013D1 VOL: 0
; 0000 0AEF TCNT1H=0x00;
;PCODE: $000013D2 VOL: 0
;PCODE: $000013D3 VOL: 0
; 0000 0AF0 TCNT1L=0x00;
;PCODE: $000013D4 VOL: 0
;PCODE: $000013D5 VOL: 0
; 0000 0AF1 ICR1H=0x00;
;PCODE: $000013D6 VOL: 0
;PCODE: $000013D7 VOL: 0
; 0000 0AF2 ICR1L=0x00;
;PCODE: $000013D8 VOL: 0
;PCODE: $000013D9 VOL: 0
; 0000 0AF3 OCR1AH=0x00;
;PCODE: $000013DA VOL: 0
;PCODE: $000013DB VOL: 0
; 0000 0AF4 OCR1AL=0x00;
;PCODE: $000013DC VOL: 0
;PCODE: $000013DD VOL: 0
; 0000 0AF5 OCR1BH=0x00;
;PCODE: $000013DE VOL: 0
;PCODE: $000013DF VOL: 0
; 0000 0AF6 OCR1BL=0x00;
;PCODE: $000013E0 VOL: 0
;PCODE: $000013E1 VOL: 0
; 0000 0AF7 OCR1CH=0x00;
;PCODE: $000013E2 VOL: 0
;PCODE: $000013E3 VOL: 0
; 0000 0AF8 OCR1CL=0x00;
;PCODE: $000013E4 VOL: 0
;PCODE: $000013E5 VOL: 0
; 0000 0AF9 
; 0000 0AFA // Timer/Counter 2 initialization
; 0000 0AFB // Clock source: System Clock
; 0000 0AFC // Clock value: Timer2 Stopped
; 0000 0AFD // Mode: Normal top=0xFF
; 0000 0AFE // OC2 output: Disconnected
; 0000 0AFF TCCR2=0x00;
;PCODE: $000013E6 VOL: 0
;PCODE: $000013E7 VOL: 0
; 0000 0B00 TCNT2=0x00;
;PCODE: $000013E8 VOL: 0
;PCODE: $000013E9 VOL: 0
; 0000 0B01 OCR2=0x00;
;PCODE: $000013EA VOL: 0
;PCODE: $000013EB VOL: 0
; 0000 0B02 
; 0000 0B03 // Timer/Counter 3 initialization
; 0000 0B04 // Clock source: System Clock
; 0000 0B05 // Clock value: Timer3 Stopped
; 0000 0B06 // Mode: Normal top=0xFFFF
; 0000 0B07 // OC3A output: Discon.
; 0000 0B08 // OC3B output: Discon.
; 0000 0B09 // OC3C output: Discon.
; 0000 0B0A // Noise Canceler: Off
; 0000 0B0B // Input Capture on Falling Edge
; 0000 0B0C // Timer3 Overflow Interrupt: Off
; 0000 0B0D // Input Capture Interrupt: Off
; 0000 0B0E // Compare A Match Interrupt: Off
; 0000 0B0F // Compare B Match Interrupt: Off
; 0000 0B10 // Compare C Match Interrupt: Off
; 0000 0B11 TCCR3A=0x00;
;PCODE: $000013EC VOL: 0
;PCODE: $000013ED VOL: 0
; 0000 0B12 TCCR3B=0x00;
;PCODE: $000013EE VOL: 0
;PCODE: $000013EF VOL: 0
; 0000 0B13 TCNT3H=0x00;
;PCODE: $000013F0 VOL: 0
;PCODE: $000013F1 VOL: 0
; 0000 0B14 TCNT3L=0x00;
;PCODE: $000013F2 VOL: 0
;PCODE: $000013F3 VOL: 0
; 0000 0B15 ICR3H=0x00;
;PCODE: $000013F4 VOL: 0
;PCODE: $000013F5 VOL: 0
; 0000 0B16 ICR3L=0x00;
;PCODE: $000013F6 VOL: 0
;PCODE: $000013F7 VOL: 0
; 0000 0B17 OCR3AH=0x00;
;PCODE: $000013F8 VOL: 0
;PCODE: $000013F9 VOL: 0
; 0000 0B18 OCR3AL=0x00;
;PCODE: $000013FA VOL: 0
;PCODE: $000013FB VOL: 0
; 0000 0B19 OCR3BH=0x00;
;PCODE: $000013FC VOL: 0
;PCODE: $000013FD VOL: 0
; 0000 0B1A OCR3BL=0x00;
;PCODE: $000013FE VOL: 0
;PCODE: $000013FF VOL: 0
; 0000 0B1B OCR3CH=0x00;
;PCODE: $00001400 VOL: 0
;PCODE: $00001401 VOL: 0
; 0000 0B1C OCR3CL=0x00;
;PCODE: $00001402 VOL: 0
;PCODE: $00001403 VOL: 0
; 0000 0B1D 
; 0000 0B1E // External Interrupt(s) initialization
; 0000 0B1F // INT0: Off
; 0000 0B20 // INT1: Off
; 0000 0B21 // INT2: Off
; 0000 0B22 // INT3: Off
; 0000 0B23 // INT4: Off
; 0000 0B24 // INT5: Off
; 0000 0B25 // INT6: Off
; 0000 0B26 // INT7: Off
; 0000 0B27 EICRA=0x00;
;PCODE: $00001404 VOL: 0
;PCODE: $00001405 VOL: 0
; 0000 0B28 EICRB=0x00;
;PCODE: $00001406 VOL: 0
;PCODE: $00001407 VOL: 0
; 0000 0B29 EIMSK=0x00;
;PCODE: $00001408 VOL: 0
;PCODE: $00001409 VOL: 0
; 0000 0B2A 
; 0000 0B2B // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 0B2C TIMSK=0x01;
;PCODE: $0000140A VOL: 0
;PCODE: $0000140B VOL: 0
; 0000 0B2D 
; 0000 0B2E ETIMSK=0x00;
;PCODE: $0000140C VOL: 0
;PCODE: $0000140D VOL: 0
; 0000 0B2F 
; 0000 0B30 
; 0000 0B31 // USART0 initialization
; 0000 0B32 // Communication Parameters: 8 Data, 1 Stop, No Parity
; 0000 0B33 // USART0 Receiver: On
; 0000 0B34 // USART0 Transmitter: On
; 0000 0B35 // USART0 Mode: Asynchronous
; 0000 0B36 // USART0 Baud Rate: 115200
; 0000 0B37 UCSR0A=(0<<RXC0) | (0<<TXC0) | (0<<UDRE0) | (0<<FE0) | (0<<DOR0) | (0<<UPE0) | (0<<U2X0) | (0<<MPCM0);
;PCODE: $0000140E VOL: 0
;PCODE: $0000140F VOL: 0
; 0000 0B38 UCSR0B=(0<<RXCIE0) | (0<<TXCIE0) | (0<<UDRIE0) | (1<<RXEN0) | (1<<TXEN0) | (0<<UCSZ02) | (0<<RXB80) | (0<<TXB80);
;PCODE: $00001410 VOL: 0
;PCODE: $00001411 VOL: 0
; 0000 0B39 UCSR0C=(0<<UMSEL0) | (0<<UPM01) | (0<<UPM00) | (0<<USBS0) | (1<<UCSZ01) | (1<<UCSZ00) | (0<<UCPOL0);
;PCODE: $00001412 VOL: 0
;PCODE: $00001413 VOL: 0
; 0000 0B3A UBRR0H=0x00;
;PCODE: $00001414 VOL: 0
;PCODE: $00001415 VOL: 0
; 0000 0B3B UBRR0L=0x08;
;PCODE: $00001416 VOL: 0
;PCODE: $00001417 VOL: 0
; 0000 0B3C 
; 0000 0B3D // USART1 initialization
; 0000 0B3E // USART1 disabled
; 0000 0B3F UCSR1B=(0<<RXCIE1) | (0<<TXCIE1) | (0<<UDRIE1) | (0<<RXEN1) | (0<<TXEN1) | (0<<UCSZ12) | (0<<RXB81) | (0<<TXB81);
;PCODE: $00001418 VOL: 0
;PCODE: $00001419 VOL: 0
; 0000 0B40 
; 0000 0B41 // Analog Comparator initialization
; 0000 0B42 // Analog Comparator: Off
; 0000 0B43 // Analog Comparator Input Capture by Timer/Counter 1: Off
; 0000 0B44 ACSR=0x80;
;PCODE: $0000141A VOL: 0
;PCODE: $0000141B VOL: 0
; 0000 0B45 SFIOR=0x00;
;PCODE: $0000141C VOL: 0
;PCODE: $0000141D VOL: 0
; 0000 0B46 
; 0000 0B47 // ADC initialization
; 0000 0B48 // ADC disabled
; 0000 0B49 ADCSRA=0x00;
;PCODE: $0000141E VOL: 0
;PCODE: $0000141F VOL: 0
; 0000 0B4A 
; 0000 0B4B // SPI initialization
; 0000 0B4C // SPI disabled
; 0000 0B4D SPCR=0x00;
;PCODE: $00001420 VOL: 0
;PCODE: $00001421 VOL: 0
; 0000 0B4E 
; 0000 0B4F // TWI initialization
; 0000 0B50 // TWI disabled
; 0000 0B51 TWCR=0x00;
;PCODE: $00001422 VOL: 0
;PCODE: $00001423 VOL: 0
; 0000 0B52 
; 0000 0B53 //ciekawe, tej linijki brakowalo w medalach ,wyczailem w borgu
; 0000 0B54 // I2C Bus initialization
; 0000 0B55 i2c_init();
;PCODE: $00001424 VOL: 0
; 0000 0B56 
; 0000 0B57 // Global enable interrupts
; 0000 0B58 #asm("sei")
;PCODE: $00001425 VOL: 0
	sei
;PCODE: $00001426 VOL: 0
; 0000 0B59 
; 0000 0B5A 
; 0000 0B5B //delay_ms(8000); //bo panel sie inicjalizuje
; 0000 0B5C //delay_ms(2000); //bo panel sie inicjalizuje
; 0000 0B5D delay_ms(2000); //bo panel sie inicjalizuje
;PCODE: $00001427 VOL: 0
;PCODE: $00001428 VOL: 0
;PCODE: $00001429 VOL: 0
; 0000 0B5E delay_ms(2000); //bo panel sie inicjalizuje
;PCODE: $0000142A VOL: 0
;PCODE: $0000142B VOL: 0
;PCODE: $0000142C VOL: 0
; 0000 0B5F delay_ms(2000); //bo panel sie inicjalizuje
;PCODE: $0000142D VOL: 0
;PCODE: $0000142E VOL: 0
;PCODE: $0000142F VOL: 0
; 0000 0B60 delay_ms(2000); //bo panel sie inicjalizuje
;PCODE: $00001430 VOL: 0
;PCODE: $00001431 VOL: 0
;PCODE: $00001432 VOL: 0
; 0000 0B61 
; 0000 0B62 //delay_ms(2000); //bo panel sie inicjalizuje
; 0000 0B63 //delay_ms(2000); //bo panel sie inicjalizuje
; 0000 0B64 //delay_ms(2000); //bo panel sie inicjalizuje
; 0000 0B65 //delay_ms(2000); //bo panel sie inicjalizuje
; 0000 0B66 
; 0000 0B67 //jak patrze na maszyne to ten po lewej to 1
; 0000 0B68 
; 0000 0B69 putchar(90);  //5A
;PCODE: $00001433 VOL: 0
;PCODE: $00001434 VOL: 0
;PCODE: $00001435 VOL: 0
; 0000 0B6A putchar(165); //A5
;PCODE: $00001436 VOL: 0
;PCODE: $00001437 VOL: 0
;PCODE: $00001438 VOL: 0
; 0000 0B6B putchar(3);//03  //znak dzwiekowy ze jestem
;PCODE: $00001439 VOL: 0
;PCODE: $0000143A VOL: 0
;PCODE: $0000143B VOL: 0
; 0000 0B6C putchar(128);  //80
;PCODE: $0000143C VOL: 0
;PCODE: $0000143D VOL: 0
;PCODE: $0000143E VOL: 0
; 0000 0B6D putchar(2);    //02
;PCODE: $0000143F VOL: 0
;PCODE: $00001440 VOL: 0
;PCODE: $00001441 VOL: 0
; 0000 0B6E putchar(16);   //10
;PCODE: $00001442 VOL: 0
;PCODE: $00001443 VOL: 0
;PCODE: $00001444 VOL: 0
; 0000 0B6F 
; 0000 0B70 il_prob_odczytu = 1;    //100
;PCODE: $00001445 VOL: 0
;PCODE: $00001446 VOL: 0
; 0000 0B71 start = 0;
;PCODE: $00001447 VOL: 0
;PCODE: $00001448 VOL: 0
; 0000 0B72 szczotka_druciana_ilosc_cykli = 4;
;PCODE: $00001449 VOL: 0
;PCODE: $0000144A VOL: 0
; 0000 0B73 krazek_scierny_cykl_po_okregu_ilosc = 4;
;PCODE: $0000144B VOL: 0
;PCODE: $0000144C VOL: 0
; 0000 0B74 krazek_scierny_ilosc_cykli = 4;
;PCODE: $0000144D VOL: 0
;PCODE: $0000144E VOL: 0
; 0000 0B75 rzad_obrabiany = 1;
;PCODE: $0000144F VOL: 0
;PCODE: $00001450 VOL: 0
; 0000 0B76 jestem_w_trakcie_czyszczenia_calosci = 0;
;PCODE: $00001451 VOL: 0
;PCODE: $00001452 VOL: 0
; 0000 0B77 wykonalem_rzedow = 0;
;PCODE: $00001453 VOL: 0
;PCODE: $00001454 VOL: 0
; 0000 0B78 cykl_ilosc_zaciskow = 0;
;PCODE: $00001455 VOL: 0
;PCODE: $00001456 VOL: 0
; 0000 0B79 guzik1_przelaczania_zaciskow = 1;
;PCODE: $00001457 VOL: 0
;PCODE: $00001458 VOL: 0
;PCODE: $00001459 VOL: 0
; 0000 0B7A guzik2_przelaczania_zaciskow = 1;
;PCODE: $0000145A VOL: 0
;PCODE: $0000145B VOL: 0
;PCODE: $0000145C VOL: 0
; 0000 0B7B PORTE.6 = 1;  //aby byl dostep do zaciskow rzad 1
;PCODE: $0000145D VOL: 0
;PCODE: $0000145E VOL: 0
; 0000 0B7C zmienna_przelaczanie_zaciskow = 1;
;PCODE: $0000145F VOL: 0
;PCODE: $00001460 VOL: 0
;PCODE: $00001461 VOL: 0
; 0000 0B7D czas_przedmuchu = 183;
;PCODE: $00001462 VOL: 0
;PCODE: $00001463 VOL: 0
; 0000 0B7E 
; 0000 0B7F 
; 0000 0B80 adr1 = 80;  //rzad 1
;PCODE: $00001464 VOL: 0
;PCODE: $00001465 VOL: 0
; 0000 0B81 adr2 = 0;   //
;PCODE: $00001466 VOL: 0
;PCODE: $00001467 VOL: 0
; 0000 0B82 adr3 = 64;  //rzad 2
;PCODE: $00001468 VOL: 0
;PCODE: $00001469 VOL: 0
; 0000 0B83 adr4 = 0;
;PCODE: $0000146A VOL: 0
;PCODE: $0000146B VOL: 0
; 0000 0B84 
; 0000 0B85 
; 0000 0B86 
; 0000 0B87 //zapal lampki
; 0000 0B88 //PORTB.6 = 1;
; 0000 0B89 //PORTD.7 = 1;
; 0000 0B8A //PORT_F.bits.b6 = 1;
; 0000 0B8B //PORTF = PORT_F.byte;
; 0000 0B8C 
; 0000 0B8D //PORT_F.bits.b4 = 0;  //przedmuch zaciskow
; 0000 0B8E //PORTF = PORT_F.byte;
; 0000 0B8F //PORTB.4 = 1;  //przedmuch osi
; 0000 0B90 //PORTE.2 = 1;  //szlifierka 1
; 0000 0B91 //PORTE.3 = 1;  //szlifierka 2
; 0000 0B92 //PORTE.6 = 0;  //zacisniety rzad 1
; 0000 0B93 //PORTE.6 = 1;  //zacisniety rzad 2
; 0000 0B94 //PORTE.7 = 0;    //zacisnij zaciski
; 0000 0B95 
; 0000 0B96 //zalozenie: nie mozna czytac kodow kreskowych jak juz dalem start i idzie, dopoki nie skonczy
; 0000 0B97 
; 0000 0B98 
; 0000 0B99 wypozycjonuj_napedy_minimalistyczna();
;PCODE: $0000146C VOL: 0
; 0000 0B9A sprawdz_cisnienie();
;PCODE: $0000146D VOL: 0
; 0000 0B9B 
; 0000 0B9C while (1)
;PCODE: $0000146E VOL: 0
; 0000 0B9D       {
; 0000 0B9E       ostateczny_wybor_zacisku();
;PCODE: $0000146F VOL: 0
; 0000 0B9F       start = odczytaj_parametr(0,64);
;PCODE: $00001470 VOL: 0
;PCODE: $00001471 VOL: 0
;PCODE: $00001472 VOL: 0
;PCODE: $00001473 VOL: 0
;PCODE: $00001474 VOL: 0
;PCODE: $00001475 VOL: 0
; 0000 0BA0       il_zaciskow_rzad_1 = odczytaj_parametr(0,128);
;PCODE: $00001476 VOL: 0
;PCODE: $00001477 VOL: 0
;PCODE: $00001478 VOL: 0
;PCODE: $00001479 VOL: 0
;PCODE: $0000147A VOL: 0
;PCODE: $0000147B VOL: 0
; 0000 0BA1       il_zaciskow_rzad_2 = odczytaj_parametr(0,48);
;PCODE: $0000147C VOL: 0
;PCODE: $0000147D VOL: 0
;PCODE: $0000147E VOL: 0
;PCODE: $0000147F VOL: 0
;PCODE: $00001480 VOL: 0
;PCODE: $00001481 VOL: 0
; 0000 0BA2       przerzucanie_dociskow();
;PCODE: $00001482 VOL: 0
; 0000 0BA3       wybor_linijek_sterownikow();
;PCODE: $00001483 VOL: 0
; 0000 0BA4 
; 0000 0BA5 
; 0000 0BA6       while((start == 1 & il_zaciskow_rzad_1 > 0) | jestem_w_trakcie_czyszczenia_calosci == 1)
;PCODE: $00001484 VOL: 0
;PCODE: $00001485 VOL: 0
;PCODE: $00001486 VOL: 0
;PCODE: $00001487 VOL: 0
;PCODE: $00001488 VOL: 0
;PCODE: $00001489 VOL: 0
;PCODE: $0000148A VOL: 0
;PCODE: $0000148B VOL: 0
;PCODE: $0000148C VOL: 0
;PCODE: $0000148D VOL: 0
;PCODE: $0000148E VOL: 0
;PCODE: $0000148F VOL: 0
;PCODE: $00001490 VOL: 0
;PCODE: $00001491 VOL: 0
;PCODE: $00001492 VOL: 0
; 0000 0BA7             {
; 0000 0BA8             switch (cykl_glowny)
;PCODE: $00001493 VOL: 0
; 0000 0BA9             {
; 0000 0BAA             case 0:
;PCODE: $00001494 VOL: 0
;PCODE: $00001495 VOL: 0
; 0000 0BAB 
; 0000 0BAC 
; 0000 0BAD                     PORTB.6 = 1;   ////zielona lampka
;PCODE: $00001496 VOL: 0
;PCODE: $00001497 VOL: 0
; 0000 0BAE                     if(jestem_w_trakcie_czyszczenia_calosci == 0)
;PCODE: $00001498 VOL: 0
;PCODE: $00001499 VOL: 0
;PCODE: $0000149A VOL: 0
; 0000 0BAF                         {
; 0000 0BB0                         wartosc_parametru_panelu(0,0,16);  //wykonano zaciskow rzad1
;PCODE: $0000149B VOL: 0
;PCODE: $0000149C VOL: 0
;PCODE: $0000149D VOL: 0
;PCODE: $0000149E VOL: 0
;PCODE: $0000149F VOL: 0
;PCODE: $000014A0 VOL: 0
;PCODE: $000014A1 VOL: 0
; 0000 0BB1                         wartosc_parametru_panelu(0,0,96);  //wykonano zaciskow rzad2
;PCODE: $000014A2 VOL: 0
;PCODE: $000014A3 VOL: 0
;PCODE: $000014A4 VOL: 0
;PCODE: $000014A5 VOL: 0
;PCODE: $000014A6 VOL: 0
;PCODE: $000014A7 VOL: 0
;PCODE: $000014A8 VOL: 0
; 0000 0BB2                         }
; 0000 0BB3 
; 0000 0BB4                     jestem_w_trakcie_czyszczenia_calosci = 1;
;PCODE: $000014A9 VOL: 0
;PCODE: $000014AA VOL: 0
;PCODE: $000014AB VOL: 0
; 0000 0BB5 
; 0000 0BB6                     if(rzad_obrabiany == 1)
;PCODE: $000014AC VOL: 0
;PCODE: $000014AD VOL: 0
;PCODE: $000014AE VOL: 0
; 0000 0BB7                     {
; 0000 0BB8                     PORTE.6 = 0;    //przelacz rzad zaciskow - rzad 1
;PCODE: $000014AF VOL: 0
;PCODE: $000014B0 VOL: 0
; 0000 0BB9                     if(cykl_sterownik_1 < 5)
;PCODE: $000014B1 VOL: 0
;PCODE: $000014B2 VOL: 0
;PCODE: $000014B3 VOL: 0
; 0000 0BBA                         cykl_sterownik_1 = sterownik_1_praca(0x09,0);
;PCODE: $000014B4 VOL: 0
;PCODE: $000014B5 VOL: 0
;PCODE: $000014B6 VOL: 0
;PCODE: $000014B7 VOL: 0
;PCODE: $000014B8 VOL: 0
;PCODE: $000014B9 VOL: 0
; 0000 0BBB                     if(cykl_sterownik_2 < 5)                                //ster 1 do 0
;PCODE: $000014BA VOL: 0
;PCODE: $000014BB VOL: 0
;PCODE: $000014BC VOL: 0
;PCODE: $000014BD VOL: 0
; 0000 0BBC                         cykl_sterownik_2 = sterownik_2_praca(0x00,0);       //ster 2 pod pin pozy rzad 1
;PCODE: $000014BE VOL: 0
;PCODE: $000014BF VOL: 0
;PCODE: $000014C0 VOL: 0
;PCODE: $000014C1 VOL: 0
;PCODE: $000014C2 VOL: 0
;PCODE: $000014C3 VOL: 0
; 0000 0BBD                     }
;PCODE: $000014C4 VOL: 0
; 0000 0BBE 
; 0000 0BBF                     if(rzad_obrabiany == 2)
;PCODE: $000014C5 VOL: 0
;PCODE: $000014C6 VOL: 0
;PCODE: $000014C7 VOL: 0
;PCODE: $000014C8 VOL: 0
; 0000 0BC0                     {
; 0000 0BC1                     PORTE.6 = 1;    //przelacz rzad zaciskow - rzad 2
;PCODE: $000014C9 VOL: 0
;PCODE: $000014CA VOL: 0
; 0000 0BC2                     if(cykl_sterownik_1 < 5)
;PCODE: $000014CB VOL: 0
;PCODE: $000014CC VOL: 0
;PCODE: $000014CD VOL: 0
; 0000 0BC3                         cykl_sterownik_1 = sterownik_1_praca(0x08,0);
;PCODE: $000014CE VOL: 0
;PCODE: $000014CF VOL: 0
;PCODE: $000014D0 VOL: 0
;PCODE: $000014D1 VOL: 0
;PCODE: $000014D2 VOL: 0
;PCODE: $000014D3 VOL: 0
; 0000 0BC4                     if(cykl_sterownik_2 < 5)                                //ster 1 do 0
;PCODE: $000014D4 VOL: 0
;PCODE: $000014D5 VOL: 0
;PCODE: $000014D6 VOL: 0
;PCODE: $000014D7 VOL: 0
; 0000 0BC5                         cykl_sterownik_2 = sterownik_2_praca(0x01,0);       //ster 2 pod pin pozy rzad 2
;PCODE: $000014D8 VOL: 0
;PCODE: $000014D9 VOL: 0
;PCODE: $000014DA VOL: 0
;PCODE: $000014DB VOL: 0
;PCODE: $000014DC VOL: 0
;PCODE: $000014DD VOL: 0
; 0000 0BC6                     }
;PCODE: $000014DE VOL: 0
; 0000 0BC7 
; 0000 0BC8 
; 0000 0BC9                     if(cykl_sterownik_1 == 5 & cykl_sterownik_2 == 5)
;PCODE: $000014DF VOL: 0
;PCODE: $000014E0 VOL: 0
;PCODE: $000014E1 VOL: 0
;PCODE: $000014E2 VOL: 0
;PCODE: $000014E3 VOL: 0
;PCODE: $000014E4 VOL: 0
;PCODE: $000014E5 VOL: 0
;PCODE: $000014E6 VOL: 0
;PCODE: $000014E7 VOL: 0
;PCODE: $000014E8 VOL: 0
; 0000 0BCA                         {
; 0000 0BCB 
; 0000 0BCC                         cykl_sterownik_1 = 0;
;PCODE: $000014E9 VOL: 0
;PCODE: $000014EA VOL: 0
; 0000 0BCD                         cykl_sterownik_2 = 0;
;PCODE: $000014EB VOL: 0
;PCODE: $000014EC VOL: 0
; 0000 0BCE                         cykl_sterownik_3 = 0;
;PCODE: $000014ED VOL: 0
;PCODE: $000014EE VOL: 0
; 0000 0BCF                         cykl_sterownik_4 = 0;
;PCODE: $000014EF VOL: 0
;PCODE: $000014F0 VOL: 0
; 0000 0BD0                         cykl_ilosc_zaciskow = 0;
;PCODE: $000014F1 VOL: 0
;PCODE: $000014F2 VOL: 0
; 0000 0BD1                         koniec_rzedu_10 = 0;
;PCODE: $000014F3 VOL: 0
;PCODE: $000014F4 VOL: 0
; 0000 0BD2                         start_kontynuacja = odczytaj_parametr(0,64);
;PCODE: $000014F5 VOL: 0
;PCODE: $000014F6 VOL: 0
;PCODE: $000014F7 VOL: 0
;PCODE: $000014F8 VOL: 0
;PCODE: $000014F9 VOL: 0
;PCODE: $000014FA VOL: 0
; 0000 0BD3                         if(start_kontynuacja == 1)
;PCODE: $000014FB VOL: 0
;PCODE: $000014FC VOL: 0
;PCODE: $000014FD VOL: 0
; 0000 0BD4                             cykl_glowny = 1;
;PCODE: $000014FE VOL: 0
;PCODE: $000014FF VOL: 0
; 0000 0BD5                         }
;PCODE: $00001500 VOL: 0
; 0000 0BD6 
; 0000 0BD7             break;
;PCODE: $00001501 VOL: 0
;PCODE: $00001502 VOL: 0
; 0000 0BD8 
; 0000 0BD9 
; 0000 0BDA 
; 0000 0BDB             case 1:
;PCODE: $00001503 VOL: 0
;PCODE: $00001504 VOL: 0
;PCODE: $00001505 VOL: 0
; 0000 0BDC 
; 0000 0BDD 
; 0000 0BDE                      if(cykl_sterownik_2 < 5 & rzad_obrabiany == 1)
;PCODE: $00001506 VOL: 0
;PCODE: $00001507 VOL: 0
;PCODE: $00001508 VOL: 0
;PCODE: $00001509 VOL: 0
;PCODE: $0000150A VOL: 0
;PCODE: $0000150B VOL: 0
;PCODE: $0000150C VOL: 0
;PCODE: $0000150D VOL: 0
;PCODE: $0000150E VOL: 0
; 0000 0BDF                         //cykl_sterownik_2 = sterownik_2_praca(0x5A,0);         //ster 1 nic
; 0000 0BE0                           cykl_sterownik_2 = sterownik_2_praca(a[0],a[1]);        //ster 2 pod zacisk
;PCODE: $0000150F VOL: 0
;PCODE: $00001510 VOL: 0
;PCODE: $00001511 VOL: 0
;PCODE: $00001512 VOL: 0
;PCODE: $00001513 VOL: 0
;PCODE: $00001514 VOL: 0
;PCODE: $00001515 VOL: 0
; 0000 0BE1                                                                               //ster 4 na pozycje miedzy rzedzami
; 0000 0BE2 
; 0000 0BE3                      if(cykl_sterownik_2 < 5 & rzad_obrabiany == 2)
;PCODE: $00001516 VOL: 0
;PCODE: $00001517 VOL: 0
;PCODE: $00001518 VOL: 0
;PCODE: $00001519 VOL: 0
;PCODE: $0000151A VOL: 0
;PCODE: $0000151B VOL: 0
;PCODE: $0000151C VOL: 0
;PCODE: $0000151D VOL: 0
;PCODE: $0000151E VOL: 0
;PCODE: $0000151F VOL: 0
; 0000 0BE4                         //cykl_sterownik_2 = sterownik_2_praca(0x5B,0);
; 0000 0BE5                           cykl_sterownik_2 = sterownik_2_praca(a[2],a[3]);
;PCODE: $00001520 VOL: 0
;PCODE: $00001521 VOL: 0
;PCODE: $00001522 VOL: 0
;PCODE: $00001523 VOL: 0
;PCODE: $00001524 VOL: 0
;PCODE: $00001525 VOL: 0
;PCODE: $00001526 VOL: 0
;PCODE: $00001527 VOL: 0
; 0000 0BE6 
; 0000 0BE7                      if(cykl_sterownik_4 < 5 & cykl_sterownik_2 == 5)
;PCODE: $00001528 VOL: 0
;PCODE: $00001529 VOL: 0
;PCODE: $0000152A VOL: 0
;PCODE: $0000152B VOL: 0
;PCODE: $0000152C VOL: 0
;PCODE: $0000152D VOL: 0
;PCODE: $0000152E VOL: 0
;PCODE: $0000152F VOL: 0
;PCODE: $00001530 VOL: 0
;PCODE: $00001531 VOL: 0
; 0000 0BE8                        // cykl_sterownik_4 = sterownik_4_praca(0,0,0,0,0,1);
; 0000 0BE9                         cykl_sterownik_4 = sterownik_4_praca(0x01);
;PCODE: $00001532 VOL: 0
;PCODE: $00001533 VOL: 0
;PCODE: $00001534 VOL: 0
;PCODE: $00001535 VOL: 0
; 0000 0BEA 
; 0000 0BEB                       if(cykl_sterownik_2 == 5 & cykl_sterownik_4 == 5)
;PCODE: $00001536 VOL: 0
;PCODE: $00001537 VOL: 0
;PCODE: $00001538 VOL: 0
;PCODE: $00001539 VOL: 0
;PCODE: $0000153A VOL: 0
;PCODE: $0000153B VOL: 0
;PCODE: $0000153C VOL: 0
;PCODE: $0000153D VOL: 0
;PCODE: $0000153E VOL: 0
;PCODE: $0000153F VOL: 0
; 0000 0BEC                         {
; 0000 0BED                         cykl_sterownik_1 = 0;
;PCODE: $00001540 VOL: 0
;PCODE: $00001541 VOL: 0
; 0000 0BEE                         cykl_sterownik_2 = 0;
;PCODE: $00001542 VOL: 0
;PCODE: $00001543 VOL: 0
; 0000 0BEF                         cykl_sterownik_4 = 0;
;PCODE: $00001544 VOL: 0
;PCODE: $00001545 VOL: 0
; 0000 0BF0                         szczotka_druc_cykl = 0;
;PCODE: $00001546 VOL: 0
;PCODE: $00001547 VOL: 0
; 0000 0BF1 
; 0000 0BF2 
; 0000 0BF3                         start_kontynuacja = odczytaj_parametr(0,64);
;PCODE: $00001548 VOL: 0
;PCODE: $00001549 VOL: 0
;PCODE: $0000154A VOL: 0
;PCODE: $0000154B VOL: 0
;PCODE: $0000154C VOL: 0
;PCODE: $0000154D VOL: 0
; 0000 0BF4                         if(start_kontynuacja == 1)
;PCODE: $0000154E VOL: 0
;PCODE: $0000154F VOL: 0
;PCODE: $00001550 VOL: 0
; 0000 0BF5                             cykl_glowny = 2;
;PCODE: $00001551 VOL: 0
;PCODE: $00001552 VOL: 0
; 0000 0BF6                         }
;PCODE: $00001553 VOL: 0
; 0000 0BF7 
; 0000 0BF8 
; 0000 0BF9             break;
;PCODE: $00001554 VOL: 0
;PCODE: $00001555 VOL: 0
; 0000 0BFA 
; 0000 0BFB 
; 0000 0BFC             case 2:
;PCODE: $00001556 VOL: 0
;PCODE: $00001557 VOL: 0
;PCODE: $00001558 VOL: 0
; 0000 0BFD 
; 0000 0BFE                     if(cykl_sterownik_4 < 5)
;PCODE: $00001559 VOL: 0
;PCODE: $0000155A VOL: 0
;PCODE: $0000155B VOL: 0
; 0000 0BFF                         cykl_sterownik_4 = sterownik_4_praca(1,0,0,0,1,0);  //ABS
;PCODE: $0000155C VOL: 0
;PCODE: $0000155D VOL: 0
;PCODE: $0000155E VOL: 0
;PCODE: $0000155F VOL: 0
;PCODE: $00001560 VOL: 0
; 0000 0C00                     if(cykl_sterownik_4 == 5)
;PCODE: $00001561 VOL: 0
;PCODE: $00001562 VOL: 0
;PCODE: $00001563 VOL: 0
;PCODE: $00001564 VOL: 0
; 0000 0C01                         {
; 0000 0C02                         PORTE.2 = 1;  //wlacz szlifierke
;PCODE: $00001565 VOL: 0
;PCODE: $00001566 VOL: 0
; 0000 0C03                         cykl_sterownik_4 = 0;
;PCODE: $00001567 VOL: 0
;PCODE: $00001568 VOL: 0
; 0000 0C04                         start_kontynuacja = odczytaj_parametr(0,64);
;PCODE: $00001569 VOL: 0
;PCODE: $0000156A VOL: 0
;PCODE: $0000156B VOL: 0
;PCODE: $0000156C VOL: 0
;PCODE: $0000156D VOL: 0
;PCODE: $0000156E VOL: 0
; 0000 0C05                         if(start_kontynuacja == 1)
;PCODE: $0000156F VOL: 0
;PCODE: $00001570 VOL: 0
;PCODE: $00001571 VOL: 0
; 0000 0C06                             cykl_glowny = 3;
;PCODE: $00001572 VOL: 0
;PCODE: $00001573 VOL: 0
; 0000 0C07                         }
;PCODE: $00001574 VOL: 0
; 0000 0C08 
; 0000 0C09             break;
;PCODE: $00001575 VOL: 0
;PCODE: $00001576 VOL: 0
; 0000 0C0A 
; 0000 0C0B 
; 0000 0C0C             case 3:
;PCODE: $00001577 VOL: 0
;PCODE: $00001578 VOL: 0
;PCODE: $00001579 VOL: 0
; 0000 0C0D                     if(cykl_sterownik_4 < 5)
;PCODE: $0000157A VOL: 0
;PCODE: $0000157B VOL: 0
;PCODE: $0000157C VOL: 0
; 0000 0C0E                        cykl_sterownik_4 = sterownik_4_praca(0,1,0,0,0,1); //INV
;PCODE: $0000157D VOL: 0
;PCODE: $0000157E VOL: 0
;PCODE: $0000157F VOL: 0
;PCODE: $00001580 VOL: 0
;PCODE: $00001581 VOL: 0
; 0000 0C0F 
; 0000 0C10                     if(cykl_sterownik_4 == 5 & szczotka_druc_cykl < szczotka_druciana_ilosc_cykli)
;PCODE: $00001582 VOL: 0
;PCODE: $00001583 VOL: 0
;PCODE: $00001584 VOL: 0
;PCODE: $00001585 VOL: 0
;PCODE: $00001586 VOL: 0
;PCODE: $00001587 VOL: 0
;PCODE: $00001588 VOL: 0
;PCODE: $00001589 VOL: 0
;PCODE: $0000158A VOL: 0
;PCODE: $0000158B VOL: 0
; 0000 0C11                         {
; 0000 0C12                         szczotka_druc_cykl++;
;PCODE: $0000158C VOL: 0
;PCODE: $0000158D VOL: 0
;PCODE: $0000158E VOL: 0
;PCODE: $0000158F VOL: 0
; 0000 0C13                         cykl_sterownik_4 = 0;
;PCODE: $00001590 VOL: 0
;PCODE: $00001591 VOL: 0
; 0000 0C14 
; 0000 0C15                         if(szczotka_druc_cykl == szczotka_druciana_ilosc_cykli)
;PCODE: $00001592 VOL: 0
;PCODE: $00001593 VOL: 0
;PCODE: $00001594 VOL: 0
;PCODE: $00001595 VOL: 0
; 0000 0C16                             {
; 0000 0C17                             start_kontynuacja = odczytaj_parametr(0,64);
;PCODE: $00001596 VOL: 0
;PCODE: $00001597 VOL: 0
;PCODE: $00001598 VOL: 0
;PCODE: $00001599 VOL: 0
;PCODE: $0000159A VOL: 0
;PCODE: $0000159B VOL: 0
; 0000 0C18                             if(start_kontynuacja == 1)
;PCODE: $0000159C VOL: 0
;PCODE: $0000159D VOL: 0
;PCODE: $0000159E VOL: 0
; 0000 0C19                                   cykl_glowny = 4;
;PCODE: $0000159F VOL: 0
;PCODE: $000015A0 VOL: 0
; 0000 0C1A                             }
;PCODE: $000015A1 VOL: 0
; 0000 0C1B                         else
;PCODE: $000015A2 VOL: 0
;PCODE: $000015A3 VOL: 0
; 0000 0C1C                             {
; 0000 0C1D                             start_kontynuacja = odczytaj_parametr(0,64);
;PCODE: $000015A4 VOL: 0
;PCODE: $000015A5 VOL: 0
;PCODE: $000015A6 VOL: 0
;PCODE: $000015A7 VOL: 0
;PCODE: $000015A8 VOL: 0
;PCODE: $000015A9 VOL: 0
; 0000 0C1E                             if(start_kontynuacja == 1)
;PCODE: $000015AA VOL: 0
;PCODE: $000015AB VOL: 0
;PCODE: $000015AC VOL: 0
; 0000 0C1F                                 cykl_glowny = 2;
;PCODE: $000015AD VOL: 0
;PCODE: $000015AE VOL: 0
; 0000 0C20 
; 0000 0C21 
; 0000 0C22                             }
;PCODE: $000015AF VOL: 0
;PCODE: $000015B0 VOL: 0
; 0000 0C23                         }
; 0000 0C24 
; 0000 0C25 
; 0000 0C26 
; 0000 0C27             break;
;PCODE: $000015B1 VOL: 0
;PCODE: $000015B2 VOL: 0
; 0000 0C28 
; 0000 0C29             case 4:
;PCODE: $000015B3 VOL: 0
;PCODE: $000015B4 VOL: 0
;PCODE: $000015B5 VOL: 0
; 0000 0C2A 
; 0000 0C2B                      if(cykl_sterownik_4 < 5)
;PCODE: $000015B6 VOL: 0
;PCODE: $000015B7 VOL: 0
;PCODE: $000015B8 VOL: 0
; 0000 0C2C                         cykl_sterownik_4 = sterownik_4_praca(0,0,0,0,0,1);  //do pozycji bazowej
;PCODE: $000015B9 VOL: 0
;PCODE: $000015BA VOL: 0
;PCODE: $000015BB VOL: 0
;PCODE: $000015BC VOL: 0
;PCODE: $000015BD VOL: 0
; 0000 0C2D 
; 0000 0C2E                      if(cykl_sterownik_4 == 5)
;PCODE: $000015BE VOL: 0
;PCODE: $000015BF VOL: 0
;PCODE: $000015C0 VOL: 0
;PCODE: $000015C1 VOL: 0
; 0000 0C2F                         {
; 0000 0C30                         PORTE.2 = 0;  //wylacz szlifierke
;PCODE: $000015C2 VOL: 0
;PCODE: $000015C3 VOL: 0
; 0000 0C31                         cykl_sterownik_4 = 0;
;PCODE: $000015C4 VOL: 0
;PCODE: $000015C5 VOL: 0
; 0000 0C32                         start_kontynuacja = odczytaj_parametr(0,64);
;PCODE: $000015C6 VOL: 0
;PCODE: $000015C7 VOL: 0
;PCODE: $000015C8 VOL: 0
;PCODE: $000015C9 VOL: 0
;PCODE: $000015CA VOL: 0
;PCODE: $000015CB VOL: 0
; 0000 0C33                         if(start_kontynuacja == 1)
;PCODE: $000015CC VOL: 0
;PCODE: $000015CD VOL: 0
;PCODE: $000015CE VOL: 0
; 0000 0C34                             {
; 0000 0C35                             ruch_zlozony = 0;
;PCODE: $000015CF VOL: 0
;PCODE: $000015D0 VOL: 0
; 0000 0C36                             cykl_glowny = 5;
;PCODE: $000015D1 VOL: 0
;PCODE: $000015D2 VOL: 0
; 0000 0C37                             }
; 0000 0C38                         }
;PCODE: $000015D3 VOL: 0
; 0000 0C39 
; 0000 0C3A             break;
;PCODE: $000015D4 VOL: 0
;PCODE: $000015D5 VOL: 0
; 0000 0C3B 
; 0000 0C3C             case 5:
;PCODE: $000015D6 VOL: 0
;PCODE: $000015D7 VOL: 0
;PCODE: $000015D8 VOL: 0
; 0000 0C3D 
; 0000 0C3E 
; 0000 0C3F                     if(cykl_sterownik_1 < 5 & ruch_zlozony == 0 & rzad_obrabiany == 1)
;PCODE: $000015D9 VOL: 0
;PCODE: $000015DA VOL: 0
;PCODE: $000015DB VOL: 0
;PCODE: $000015DC VOL: 0
;PCODE: $000015DD VOL: 0
;PCODE: $000015DE VOL: 0
;PCODE: $000015DF VOL: 0
;PCODE: $000015E0 VOL: 0
;PCODE: $000015E1 VOL: 0
;PCODE: $000015E2 VOL: 0
;PCODE: $000015E3 VOL: 0
;PCODE: $000015E4 VOL: 0
;PCODE: $000015E5 VOL: 0
;PCODE: $000015E6 VOL: 0
; 0000 0C40                         cykl_sterownik_1 = sterownik_1_praca(0x00,0);
;PCODE: $000015E7 VOL: 0
;PCODE: $000015E8 VOL: 0
;PCODE: $000015E9 VOL: 0
;PCODE: $000015EA VOL: 0
;PCODE: $000015EB VOL: 0
;PCODE: $000015EC VOL: 0
; 0000 0C41                     if(cykl_sterownik_1 < 5 & ruch_zlozony == 0 & rzad_obrabiany == 2)
;PCODE: $000015ED VOL: 0
;PCODE: $000015EE VOL: 0
;PCODE: $000015EF VOL: 0
;PCODE: $000015F0 VOL: 0
;PCODE: $000015F1 VOL: 0
;PCODE: $000015F2 VOL: 0
;PCODE: $000015F3 VOL: 0
;PCODE: $000015F4 VOL: 0
;PCODE: $000015F5 VOL: 0
;PCODE: $000015F6 VOL: 0
;PCODE: $000015F7 VOL: 0
;PCODE: $000015F8 VOL: 0
;PCODE: $000015F9 VOL: 0
;PCODE: $000015FA VOL: 0
;PCODE: $000015FB VOL: 0
; 0000 0C42                         cykl_sterownik_1 = sterownik_1_praca(0x01,0);
;PCODE: $000015FC VOL: 0
;PCODE: $000015FD VOL: 0
;PCODE: $000015FE VOL: 0
;PCODE: $000015FF VOL: 0
;PCODE: $00001600 VOL: 0
;PCODE: $00001601 VOL: 0
; 0000 0C43 
; 0000 0C44 
; 0000 0C45 
; 0000 0C46                     if(cykl_sterownik_1 == 5 & ruch_zlozony == 0)
;PCODE: $00001602 VOL: 0
;PCODE: $00001603 VOL: 0
;PCODE: $00001604 VOL: 0
;PCODE: $00001605 VOL: 0
;PCODE: $00001606 VOL: 0
;PCODE: $00001607 VOL: 0
;PCODE: $00001608 VOL: 0
;PCODE: $00001609 VOL: 0
;PCODE: $0000160A VOL: 0
;PCODE: $0000160B VOL: 0
; 0000 0C47                         {
; 0000 0C48                         cykl_sterownik_1 = 0;
;PCODE: $0000160C VOL: 0
;PCODE: $0000160D VOL: 0
; 0000 0C49                         ruch_zlozony = 1;
;PCODE: $0000160E VOL: 0
;PCODE: $0000160F VOL: 0
; 0000 0C4A                         }
; 0000 0C4B 
; 0000 0C4C                     if(cykl_sterownik_1 < 5 & ruch_zlozony == 1 & rzad_obrabiany == 1)
;PCODE: $00001610 VOL: 0
;PCODE: $00001611 VOL: 0
;PCODE: $00001612 VOL: 0
;PCODE: $00001613 VOL: 0
;PCODE: $00001614 VOL: 0
;PCODE: $00001615 VOL: 0
;PCODE: $00001616 VOL: 0
;PCODE: $00001617 VOL: 0
;PCODE: $00001618 VOL: 0
;PCODE: $00001619 VOL: 0
;PCODE: $0000161A VOL: 0
;PCODE: $0000161B VOL: 0
;PCODE: $0000161C VOL: 0
;PCODE: $0000161D VOL: 0
;PCODE: $0000161E VOL: 0
; 0000 0C4D                         cykl_sterownik_1 = sterownik_1_praca(0x5A,0);
;PCODE: $0000161F VOL: 0
;PCODE: $00001620 VOL: 0
;PCODE: $00001621 VOL: 0
;PCODE: $00001622 VOL: 0
;PCODE: $00001623 VOL: 0
;PCODE: $00001624 VOL: 0
; 0000 0C4E                     if(cykl_sterownik_1 < 5 & ruch_zlozony == 1 & rzad_obrabiany == 2)
;PCODE: $00001625 VOL: 0
;PCODE: $00001626 VOL: 0
;PCODE: $00001627 VOL: 0
;PCODE: $00001628 VOL: 0
;PCODE: $00001629 VOL: 0
;PCODE: $0000162A VOL: 0
;PCODE: $0000162B VOL: 0
;PCODE: $0000162C VOL: 0
;PCODE: $0000162D VOL: 0
;PCODE: $0000162E VOL: 0
;PCODE: $0000162F VOL: 0
;PCODE: $00001630 VOL: 0
;PCODE: $00001631 VOL: 0
;PCODE: $00001632 VOL: 0
;PCODE: $00001633 VOL: 0
; 0000 0C4F                         cykl_sterownik_1 = sterownik_1_praca(0x5B,0);
;PCODE: $00001634 VOL: 0
;PCODE: $00001635 VOL: 0
;PCODE: $00001636 VOL: 0
;PCODE: $00001637 VOL: 0
;PCODE: $00001638 VOL: 0
;PCODE: $00001639 VOL: 0
; 0000 0C50 
; 0000 0C51 
; 0000 0C52 
; 0000 0C53                     if(cykl_sterownik_1 < 5 & ruch_zlozony == 2)
;PCODE: $0000163A VOL: 0
;PCODE: $0000163B VOL: 0
;PCODE: $0000163C VOL: 0
;PCODE: $0000163D VOL: 0
;PCODE: $0000163E VOL: 0
;PCODE: $0000163F VOL: 0
;PCODE: $00001640 VOL: 0
;PCODE: $00001641 VOL: 0
;PCODE: $00001642 VOL: 0
;PCODE: $00001643 VOL: 0
; 0000 0C54                         cykl_sterownik_1 = sterownik_1_praca(0x03,0);
;PCODE: $00001644 VOL: 0
;PCODE: $00001645 VOL: 0
;PCODE: $00001646 VOL: 0
;PCODE: $00001647 VOL: 0
;PCODE: $00001648 VOL: 0
;PCODE: $00001649 VOL: 0
; 0000 0C55 
; 0000 0C56                     if(cykl_sterownik_2 < 5 & koniec_rzedu_10 == 0)                                //ster 1 do pierwszego dolka
;PCODE: $0000164A VOL: 0
;PCODE: $0000164B VOL: 0
;PCODE: $0000164C VOL: 0
;PCODE: $0000164D VOL: 0
;PCODE: $0000164E VOL: 0
;PCODE: $0000164F VOL: 0
;PCODE: $00001650 VOL: 0
;PCODE: $00001651 VOL: 0
;PCODE: $00001652 VOL: 0
;PCODE: $00001653 VOL: 0
; 0000 0C57                         cykl_sterownik_2 = sterownik_2_praca(0x03,0);       //ster 2 pod nastpeny dolek
;PCODE: $00001654 VOL: 0
;PCODE: $00001655 VOL: 0
;PCODE: $00001656 VOL: 0
;PCODE: $00001657 VOL: 0
;PCODE: $00001658 VOL: 0
;PCODE: $00001659 VOL: 0
; 0000 0C58 
; 0000 0C59 
; 0000 0C5A                     if(cykl_sterownik_2 < 5 & koniec_rzedu_10 == 1 & rzad_obrabiany == 1)
;PCODE: $0000165A VOL: 0
;PCODE: $0000165B VOL: 0
;PCODE: $0000165C VOL: 0
;PCODE: $0000165D VOL: 0
;PCODE: $0000165E VOL: 0
;PCODE: $0000165F VOL: 0
;PCODE: $00001660 VOL: 0
;PCODE: $00001661 VOL: 0
;PCODE: $00001662 VOL: 0
;PCODE: $00001663 VOL: 0
;PCODE: $00001664 VOL: 0
;PCODE: $00001665 VOL: 0
;PCODE: $00001666 VOL: 0
;PCODE: $00001667 VOL: 0
;PCODE: $00001668 VOL: 0
; 0000 0C5B                         cykl_sterownik_2 = sterownik_2_praca(0x08,0);      //ster 2 do samego tylu
;PCODE: $00001669 VOL: 0
;PCODE: $0000166A VOL: 0
;PCODE: $0000166B VOL: 0
;PCODE: $0000166C VOL: 0
;PCODE: $0000166D VOL: 0
;PCODE: $0000166E VOL: 0
; 0000 0C5C                      if(cykl_sterownik_2 < 5 & koniec_rzedu_10 == 1 & rzad_obrabiany == 2)
;PCODE: $0000166F VOL: 0
;PCODE: $00001670 VOL: 0
;PCODE: $00001671 VOL: 0
;PCODE: $00001672 VOL: 0
;PCODE: $00001673 VOL: 0
;PCODE: $00001674 VOL: 0
;PCODE: $00001675 VOL: 0
;PCODE: $00001676 VOL: 0
;PCODE: $00001677 VOL: 0
;PCODE: $00001678 VOL: 0
;PCODE: $00001679 VOL: 0
;PCODE: $0000167A VOL: 0
;PCODE: $0000167B VOL: 0
;PCODE: $0000167C VOL: 0
;PCODE: $0000167D VOL: 0
; 0000 0C5D                         cykl_sterownik_2 = sterownik_2_praca(0x09,0);      //ster 2 do samego tylu
;PCODE: $0000167E VOL: 0
;PCODE: $0000167F VOL: 0
;PCODE: $00001680 VOL: 0
;PCODE: $00001681 VOL: 0
;PCODE: $00001682 VOL: 0
;PCODE: $00001683 VOL: 0
; 0000 0C5E 
; 0000 0C5F                     if((cykl_sterownik_1 == 5 & cykl_sterownik_2 == 5 & ruch_zlozony == 1) | (cykl_sterownik_1 == 5 & cykl_sterownik_2 == 5) & ruch_zlozony == 2)
;PCODE: $00001684 VOL: 0
;PCODE: $00001685 VOL: 0
;PCODE: $00001686 VOL: 0
;PCODE: $00001687 VOL: 0
;PCODE: $00001688 VOL: 0
;PCODE: $00001689 VOL: 0
;PCODE: $0000168A VOL: 0
;PCODE: $0000168B VOL: 0
;PCODE: $0000168C VOL: 0
;PCODE: $0000168D VOL: 0
;PCODE: $0000168E VOL: 0
;PCODE: $0000168F VOL: 0
;PCODE: $00001690 VOL: 0
;PCODE: $00001691 VOL: 0
;PCODE: $00001692 VOL: 0
;PCODE: $00001693 VOL: 0
;PCODE: $00001694 VOL: 0
;PCODE: $00001695 VOL: 0
;PCODE: $00001696 VOL: 0
;PCODE: $00001697 VOL: 0
;PCODE: $00001698 VOL: 0
;PCODE: $00001699 VOL: 0
;PCODE: $0000169A VOL: 0
;PCODE: $0000169B VOL: 0
;PCODE: $0000169C VOL: 0
;PCODE: $0000169D VOL: 0
;PCODE: $0000169E VOL: 0
;PCODE: $0000169F VOL: 0
;PCODE: $000016A0 VOL: 0
;PCODE: $000016A1 VOL: 0
; 0000 0C60                         {
; 0000 0C61                         cykl_sterownik_1 = 0;
;PCODE: $000016A2 VOL: 0
;PCODE: $000016A3 VOL: 0
; 0000 0C62                         cykl_sterownik_2 = 0;
;PCODE: $000016A4 VOL: 0
;PCODE: $000016A5 VOL: 0
; 0000 0C63                         cykl_sterownik_4 = 0;
;PCODE: $000016A6 VOL: 0
;PCODE: $000016A7 VOL: 0
; 0000 0C64                         cykl_sterownik_3 = 0;
;PCODE: $000016A8 VOL: 0
;PCODE: $000016A9 VOL: 0
; 0000 0C65                         sek12 = 0;    //do przedmuchu
;PCODE: $000016AA VOL: 0
;PCODE: $000016AB VOL: 0
; 0000 0C66                         start_kontynuacja = odczytaj_parametr(0,64);
;PCODE: $000016AC VOL: 0
;PCODE: $000016AD VOL: 0
;PCODE: $000016AE VOL: 0
;PCODE: $000016AF VOL: 0
;PCODE: $000016B0 VOL: 0
;PCODE: $000016B1 VOL: 0
; 0000 0C67                         if(start_kontynuacja == 1)
;PCODE: $000016B2 VOL: 0
;PCODE: $000016B3 VOL: 0
;PCODE: $000016B4 VOL: 0
; 0000 0C68                             {
; 0000 0C69                             if(cykl_ilosc_zaciskow > 0)
;PCODE: $000016B5 VOL: 0
;PCODE: $000016B6 VOL: 0
;PCODE: $000016B7 VOL: 0
; 0000 0C6A                                 {
; 0000 0C6B                                 PORT_F.bits.b4 = 1;  //przedmuch zaciskow
;PCODE: $000016B8 VOL: 0
;PCODE: $000016B9 VOL: 0
;PCODE: $000016BA VOL: 0
; 0000 0C6C                                 PORTF = PORT_F.byte;
;PCODE: $000016BB VOL: 0
;PCODE: $000016BC VOL: 0
; 0000 0C6D                                 }
; 0000 0C6E                             cykl_glowny = 6;
;PCODE: $000016BD VOL: 0
;PCODE: $000016BE VOL: 0
;PCODE: $000016BF VOL: 0
; 0000 0C6F                             }
; 0000 0C70                         }
;PCODE: $000016C0 VOL: 0
; 0000 0C71 
; 0000 0C72             break;
;PCODE: $000016C1 VOL: 0
;PCODE: $000016C2 VOL: 0
; 0000 0C73 
; 0000 0C74 
; 0000 0C75 
; 0000 0C76            case 6:
;PCODE: $000016C3 VOL: 0
;PCODE: $000016C4 VOL: 0
;PCODE: $000016C5 VOL: 0
; 0000 0C77 
; 0000 0C78 
; 0000 0C79                     if(sek12 > czas_przedmuchu)
;PCODE: $000016C6 VOL: 0
;PCODE: $000016C7 VOL: 0
;PCODE: $000016C8 VOL: 0
;PCODE: $000016C9 VOL: 0
;PCODE: $000016CA VOL: 0
; 0000 0C7A                         {
; 0000 0C7B                         PORT_F.bits.b4 = 0;  //przedmuch zaciskow
;PCODE: $000016CB VOL: 0
;PCODE: $000016CC VOL: 0
;PCODE: $000016CD VOL: 0
;PCODE: $000016CE VOL: 0
; 0000 0C7C                         PORTF = PORT_F.byte;
;PCODE: $000016CF VOL: 0
;PCODE: $000016D0 VOL: 0
; 0000 0C7D                         }
; 0000 0C7E 
; 0000 0C7F                     if(cykl_sterownik_3 < 5)
;PCODE: $000016D1 VOL: 0
;PCODE: $000016D2 VOL: 0
;PCODE: $000016D3 VOL: 0
;PCODE: $000016D4 VOL: 0
; 0000 0C80                         cykl_sterownik_3 = sterownik_3_praca(1,0,0,0,0,1);  //ABS          //krazek scierny do gory
;PCODE: $000016D5 VOL: 0
;PCODE: $000016D6 VOL: 0
;PCODE: $000016D7 VOL: 0
;PCODE: $000016D8 VOL: 0
;PCODE: $000016D9 VOL: 0
;PCODE: $000016DA VOL: 0
;PCODE: $000016DB VOL: 0
;PCODE: $000016DC VOL: 0
;PCODE: $000016DD VOL: 0
;PCODE: $000016DE VOL: 0
;PCODE: $000016DF VOL: 0
;PCODE: $000016E0 VOL: 0
;PCODE: $000016E1 VOL: 0
;PCODE: $000016E2 VOL: 0
; 0000 0C81 
; 0000 0C82                     if(koniec_rzedu_10 == 1)
;PCODE: $000016E3 VOL: 0
;PCODE: $000016E4 VOL: 0
;PCODE: $000016E5 VOL: 0
;PCODE: $000016E6 VOL: 0
; 0000 0C83                         cykl_sterownik_4 = 5;
;PCODE: $000016E7 VOL: 0
;PCODE: $000016E8 VOL: 0
; 0000 0C84 
; 0000 0C85                     if(cykl_sterownik_4 < 5)
;PCODE: $000016E9 VOL: 0
;PCODE: $000016EA VOL: 0
;PCODE: $000016EB VOL: 0
;PCODE: $000016EC VOL: 0
; 0000 0C86                         cykl_sterownik_4 = sterownik_4_praca(1,0,0,0,1,0);  //ABS          //druciak do gory
;PCODE: $000016ED VOL: 0
;PCODE: $000016EE VOL: 0
;PCODE: $000016EF VOL: 0
;PCODE: $000016F0 VOL: 0
;PCODE: $000016F1 VOL: 0
; 0000 0C87 
; 0000 0C88                     if(cykl_sterownik_4 == 5 & cykl_sterownik_3 == 5)
;PCODE: $000016F2 VOL: 0
;PCODE: $000016F3 VOL: 0
;PCODE: $000016F4 VOL: 0
;PCODE: $000016F5 VOL: 0
;PCODE: $000016F6 VOL: 0
;PCODE: $000016F7 VOL: 0
;PCODE: $000016F8 VOL: 0
;PCODE: $000016F9 VOL: 0
;PCODE: $000016FA VOL: 0
;PCODE: $000016FB VOL: 0
; 0000 0C89                         {
; 0000 0C8A                         if((cykl_ilosc_zaciskow != il_zaciskow_rzad_1 - 1 & rzad_obrabiany == 1) | (cykl_ilosc_zaciskow != il_zaciskow_rzad_2 - 1 & rzad_obrabiany == 2))
;PCODE: $000016FC VOL: 0
;PCODE: $000016FD VOL: 0
;PCODE: $000016FE VOL: 0
;PCODE: $000016FF VOL: 0
;PCODE: $00001700 VOL: 0
;PCODE: $00001701 VOL: 0
;PCODE: $00001702 VOL: 0
;PCODE: $00001703 VOL: 0
;PCODE: $00001704 VOL: 0
;PCODE: $00001705 VOL: 0
;PCODE: $00001706 VOL: 0
;PCODE: $00001707 VOL: 0
;PCODE: $00001708 VOL: 0
;PCODE: $00001709 VOL: 0
;PCODE: $0000170A VOL: 0
;PCODE: $0000170B VOL: 0
;PCODE: $0000170C VOL: 0
;PCODE: $0000170D VOL: 0
;PCODE: $0000170E VOL: 0
;PCODE: $0000170F VOL: 0
;PCODE: $00001710 VOL: 0
; 0000 0C8B                             PORTE.2 = 1;  //wlacz szlifierke
;PCODE: $00001711 VOL: 0
;PCODE: $00001712 VOL: 0
; 0000 0C8C                         PORTE.3 = 1;  //szlifierka 2 (krazek scierny)
;PCODE: $00001713 VOL: 0
;PCODE: $00001714 VOL: 0
;PCODE: $00001715 VOL: 0
; 0000 0C8D                         cykl_sterownik_3 = 0;
;PCODE: $00001716 VOL: 0
;PCODE: $00001717 VOL: 0
; 0000 0C8E                         cykl_sterownik_4 = 0;
;PCODE: $00001718 VOL: 0
;PCODE: $00001719 VOL: 0
; 0000 0C8F                         start_kontynuacja = odczytaj_parametr(0,64);
;PCODE: $0000171A VOL: 0
;PCODE: $0000171B VOL: 0
;PCODE: $0000171C VOL: 0
;PCODE: $0000171D VOL: 0
;PCODE: $0000171E VOL: 0
;PCODE: $0000171F VOL: 0
; 0000 0C90                         if(start_kontynuacja == 1)
;PCODE: $00001720 VOL: 0
;PCODE: $00001721 VOL: 0
;PCODE: $00001722 VOL: 0
; 0000 0C91                             cykl_glowny = 7;
;PCODE: $00001723 VOL: 0
;PCODE: $00001724 VOL: 0
; 0000 0C92                         }
;PCODE: $00001725 VOL: 0
; 0000 0C93 
; 0000 0C94            break;
;PCODE: $00001726 VOL: 0
;PCODE: $00001727 VOL: 0
; 0000 0C95 
; 0000 0C96 
; 0000 0C97            case 7:
;PCODE: $00001728 VOL: 0
;PCODE: $00001729 VOL: 0
;PCODE: $0000172A VOL: 0
; 0000 0C98                                                                                               //mini ruch do przygotowania do okregu
; 0000 0C99                     if(cykl_sterownik_1 < 5)
;PCODE: $0000172B VOL: 0
;PCODE: $0000172C VOL: 0
;PCODE: $0000172D VOL: 0
; 0000 0C9A                         cykl_sterownik_1 = sterownik_1_praca(0x96,1);
;PCODE: $0000172E VOL: 0
;PCODE: $0000172F VOL: 0
;PCODE: $00001730 VOL: 0
;PCODE: $00001731 VOL: 0
;PCODE: $00001732 VOL: 0
;PCODE: $00001733 VOL: 0
; 0000 0C9B 
; 0000 0C9C                     if(cykl_sterownik_1 == 5)
;PCODE: $00001734 VOL: 0
;PCODE: $00001735 VOL: 0
;PCODE: $00001736 VOL: 0
;PCODE: $00001737 VOL: 0
; 0000 0C9D                         {
; 0000 0C9E                         cykl_sterownik_1 = 0;
;PCODE: $00001738 VOL: 0
;PCODE: $00001739 VOL: 0
; 0000 0C9F                         cykl_glowny = 8;
;PCODE: $0000173A VOL: 0
;PCODE: $0000173B VOL: 0
; 0000 0CA0                         szczotka_druc_cykl = 0;
;PCODE: $0000173C VOL: 0
;PCODE: $0000173D VOL: 0
; 0000 0CA1                         krazek_scierny_cykl_po_okregu = 0;
;PCODE: $0000173E VOL: 0
;PCODE: $0000173F VOL: 0
; 0000 0CA2                         wykonalem_komplet_okregow = 0;
;PCODE: $00001740 VOL: 0
;PCODE: $00001741 VOL: 0
; 0000 0CA3                         abs_ster3 = 0;
;PCODE: $00001742 VOL: 0
;PCODE: $00001743 VOL: 0
; 0000 0CA4                         abs_ster4 = 0;
;PCODE: $00001744 VOL: 0
;PCODE: $00001745 VOL: 0
; 0000 0CA5                         }
; 0000 0CA6 
; 0000 0CA7 
; 0000 0CA8 
; 0000 0CA9            break;
;PCODE: $00001746 VOL: 0
;PCODE: $00001747 VOL: 0
; 0000 0CAA 
; 0000 0CAB 
; 0000 0CAC             case 8:
;PCODE: $00001748 VOL: 0
;PCODE: $00001749 VOL: 0
;PCODE: $0000174A VOL: 0
; 0000 0CAD 
; 0000 0CAE 
; 0000 0CAF 
; 0000 0CB0 
; 0000 0CB1                     if(cykl_sterownik_1 < 5 & krazek_scierny_cykl_po_okregu < krazek_scierny_cykl_po_okregu_ilosc &  wykonalem_komplet_okregow == 0)
;PCODE: $0000174B VOL: 0
;PCODE: $0000174C VOL: 0
;PCODE: $0000174D VOL: 0
;PCODE: $0000174E VOL: 0
;PCODE: $0000174F VOL: 0
;PCODE: $00001750 VOL: 0
;PCODE: $00001751 VOL: 0
;PCODE: $00001752 VOL: 0
;PCODE: $00001753 VOL: 0
;PCODE: $00001754 VOL: 0
;PCODE: $00001755 VOL: 0
;PCODE: $00001756 VOL: 0
;PCODE: $00001757 VOL: 0
;PCODE: $00001758 VOL: 0
; 0000 0CB2                         cykl_sterownik_1 = sterownik_1_praca(0x97,1);
;PCODE: $00001759 VOL: 0
;PCODE: $0000175A VOL: 0
;PCODE: $0000175B VOL: 0
;PCODE: $0000175C VOL: 0
;PCODE: $0000175D VOL: 0
;PCODE: $0000175E VOL: 0
; 0000 0CB3 
; 0000 0CB4                     if(cykl_sterownik_1 == 5 & krazek_scierny_cykl_po_okregu < krazek_scierny_cykl_po_okregu_ilosc &  wykonalem_komplet_okregow == 0)
;PCODE: $0000175F VOL: 0
;PCODE: $00001760 VOL: 0
;PCODE: $00001761 VOL: 0
;PCODE: $00001762 VOL: 0
;PCODE: $00001763 VOL: 0
;PCODE: $00001764 VOL: 0
;PCODE: $00001765 VOL: 0
;PCODE: $00001766 VOL: 0
;PCODE: $00001767 VOL: 0
;PCODE: $00001768 VOL: 0
;PCODE: $00001769 VOL: 0
;PCODE: $0000176A VOL: 0
;PCODE: $0000176B VOL: 0
;PCODE: $0000176C VOL: 0
;PCODE: $0000176D VOL: 0
; 0000 0CB5                         {
; 0000 0CB6                         cykl_sterownik_1 = 0;
;PCODE: $0000176E VOL: 0
;PCODE: $0000176F VOL: 0
; 0000 0CB7                         krazek_scierny_cykl_po_okregu++;
;PCODE: $00001770 VOL: 0
;PCODE: $00001771 VOL: 0
;PCODE: $00001772 VOL: 0
;PCODE: $00001773 VOL: 0
; 0000 0CB8                         }
; 0000 0CB9 
; 0000 0CBA                     if(krazek_scierny_cykl_po_okregu == krazek_scierny_cykl_po_okregu_ilosc &  wykonalem_komplet_okregow == 0)
;PCODE: $00001774 VOL: 0
;PCODE: $00001775 VOL: 0
;PCODE: $00001776 VOL: 0
;PCODE: $00001777 VOL: 0
;PCODE: $00001778 VOL: 0
;PCODE: $00001779 VOL: 0
;PCODE: $0000177A VOL: 0
;PCODE: $0000177B VOL: 0
;PCODE: $0000177C VOL: 0
;PCODE: $0000177D VOL: 0
; 0000 0CBB                         {
; 0000 0CBC                         cykl_sterownik_1 = 0;
;PCODE: $0000177E VOL: 0
;PCODE: $0000177F VOL: 0
; 0000 0CBD                         wykonalem_komplet_okregow = 1;
;PCODE: $00001780 VOL: 0
;PCODE: $00001781 VOL: 0
; 0000 0CBE                         }
; 0000 0CBF 
; 0000 0CC0                     if(koniec_rzedu_10 == 1)
;PCODE: $00001782 VOL: 0
;PCODE: $00001783 VOL: 0
;PCODE: $00001784 VOL: 0
;PCODE: $00001785 VOL: 0
; 0000 0CC1                         cykl_sterownik_4 = 5;
;PCODE: $00001786 VOL: 0
;PCODE: $00001787 VOL: 0
; 0000 0CC2 
; 0000 0CC3                     if(cykl_sterownik_4 < 5 & abs_ster4 == 0)
;PCODE: $00001788 VOL: 0
;PCODE: $00001789 VOL: 0
;PCODE: $0000178A VOL: 0
;PCODE: $0000178B VOL: 0
;PCODE: $0000178C VOL: 0
;PCODE: $0000178D VOL: 0
;PCODE: $0000178E VOL: 0
;PCODE: $0000178F VOL: 0
;PCODE: $00001790 VOL: 0
;PCODE: $00001791 VOL: 0
; 0000 0CC4                        cykl_sterownik_4 = sterownik_4_praca(0,1,0,0,0,1); //INV               //szczotka druc
;PCODE: $00001792 VOL: 0
;PCODE: $00001793 VOL: 0
;PCODE: $00001794 VOL: 0
;PCODE: $00001795 VOL: 0
;PCODE: $00001796 VOL: 0
; 0000 0CC5 
; 0000 0CC6                     if(cykl_sterownik_4 == 5 & szczotka_druc_cykl < szczotka_druciana_ilosc_cykli)
;PCODE: $00001797 VOL: 0
;PCODE: $00001798 VOL: 0
;PCODE: $00001799 VOL: 0
;PCODE: $0000179A VOL: 0
;PCODE: $0000179B VOL: 0
;PCODE: $0000179C VOL: 0
;PCODE: $0000179D VOL: 0
;PCODE: $0000179E VOL: 0
;PCODE: $0000179F VOL: 0
;PCODE: $000017A0 VOL: 0
; 0000 0CC7                         {
; 0000 0CC8                         if(koniec_rzedu_10 == 0)
;PCODE: $000017A1 VOL: 0
;PCODE: $000017A2 VOL: 0
;PCODE: $000017A3 VOL: 0
; 0000 0CC9                             cykl_sterownik_4 = 0;
;PCODE: $000017A4 VOL: 0
;PCODE: $000017A5 VOL: 0
; 0000 0CCA                         if(abs_ster4 == 0)
;PCODE: $000017A6 VOL: 0
;PCODE: $000017A7 VOL: 0
;PCODE: $000017A8 VOL: 0
;PCODE: $000017A9 VOL: 0
; 0000 0CCB                             {
; 0000 0CCC                             szczotka_druc_cykl++;
;PCODE: $000017AA VOL: 0
;PCODE: $000017AB VOL: 0
;PCODE: $000017AC VOL: 0
;PCODE: $000017AD VOL: 0
; 0000 0CCD                             abs_ster4 = 1;
;PCODE: $000017AE VOL: 0
;PCODE: $000017AF VOL: 0
; 0000 0CCE                             }
; 0000 0CCF                         else
;PCODE: $000017B0 VOL: 0
;PCODE: $000017B1 VOL: 0
; 0000 0CD0                             abs_ster4 = 0;
;PCODE: $000017B2 VOL: 0
;PCODE: $000017B3 VOL: 0
; 0000 0CD1                         }
;PCODE: $000017B4 VOL: 0
; 0000 0CD2 
; 0000 0CD3                     if(cykl_sterownik_3 < 5 & abs_ster3 == 0)
;PCODE: $000017B5 VOL: 0
;PCODE: $000017B6 VOL: 0
;PCODE: $000017B7 VOL: 0
;PCODE: $000017B8 VOL: 0
;PCODE: $000017B9 VOL: 0
;PCODE: $000017BA VOL: 0
;PCODE: $000017BB VOL: 0
;PCODE: $000017BC VOL: 0
;PCODE: $000017BD VOL: 0
;PCODE: $000017BE VOL: 0
; 0000 0CD4                        cykl_sterownik_3 = sterownik_3_praca(0,1,0,0,1,0); //INV                   //krazek scierny
;PCODE: $000017BF VOL: 0
;PCODE: $000017C0 VOL: 0
;PCODE: $000017C1 VOL: 0
;PCODE: $000017C2 VOL: 0
;PCODE: $000017C3 VOL: 0
;PCODE: $000017C4 VOL: 0
;PCODE: $000017C5 VOL: 0
;PCODE: $000017C6 VOL: 0
;PCODE: $000017C7 VOL: 0
;PCODE: $000017C8 VOL: 0
;PCODE: $000017C9 VOL: 0
;PCODE: $000017CA VOL: 0
;PCODE: $000017CB VOL: 0
;PCODE: $000017CC VOL: 0
; 0000 0CD5 
; 0000 0CD6 
; 0000 0CD7                     if(cykl_sterownik_3 == 5 & krazek_scierny_cykl < krazek_scierny_ilosc_cykli)
;PCODE: $000017CD VOL: 0
;PCODE: $000017CE VOL: 0
;PCODE: $000017CF VOL: 0
;PCODE: $000017D0 VOL: 0
;PCODE: $000017D1 VOL: 0
;PCODE: $000017D2 VOL: 0
;PCODE: $000017D3 VOL: 0
;PCODE: $000017D4 VOL: 0
;PCODE: $000017D5 VOL: 0
;PCODE: $000017D6 VOL: 0
; 0000 0CD8                         {
; 0000 0CD9 
; 0000 0CDA                          cykl_sterownik_3 = 0;
;PCODE: $000017D7 VOL: 0
;PCODE: $000017D8 VOL: 0
; 0000 0CDB                         if(abs_ster3 == 0)
;PCODE: $000017D9 VOL: 0
;PCODE: $000017DA VOL: 0
;PCODE: $000017DB VOL: 0
; 0000 0CDC                             {
; 0000 0CDD                             krazek_scierny_cykl++;
;PCODE: $000017DC VOL: 0
;PCODE: $000017DD VOL: 0
;PCODE: $000017DE VOL: 0
;PCODE: $000017DF VOL: 0
; 0000 0CDE                             abs_ster3 = 1;
;PCODE: $000017E0 VOL: 0
;PCODE: $000017E1 VOL: 0
; 0000 0CDF                             }
; 0000 0CE0                         else
;PCODE: $000017E2 VOL: 0
;PCODE: $000017E3 VOL: 0
; 0000 0CE1                             abs_ster3 = 0;
;PCODE: $000017E4 VOL: 0
;PCODE: $000017E5 VOL: 0
; 0000 0CE2                         }
;PCODE: $000017E6 VOL: 0
; 0000 0CE3 
; 0000 0CE4                     if(cykl_sterownik_3 < 5 & abs_ster3 == 1)
;PCODE: $000017E7 VOL: 0
;PCODE: $000017E8 VOL: 0
;PCODE: $000017E9 VOL: 0
;PCODE: $000017EA VOL: 0
;PCODE: $000017EB VOL: 0
;PCODE: $000017EC VOL: 0
;PCODE: $000017ED VOL: 0
;PCODE: $000017EE VOL: 0
;PCODE: $000017EF VOL: 0
;PCODE: $000017F0 VOL: 0
; 0000 0CE5                         cykl_sterownik_3 = sterownik_3_praca(1,0,0,0,0,1);  //ABS          //krazek scierny do gory
;PCODE: $000017F1 VOL: 0
;PCODE: $000017F2 VOL: 0
;PCODE: $000017F3 VOL: 0
;PCODE: $000017F4 VOL: 0
;PCODE: $000017F5 VOL: 0
;PCODE: $000017F6 VOL: 0
;PCODE: $000017F7 VOL: 0
;PCODE: $000017F8 VOL: 0
;PCODE: $000017F9 VOL: 0
;PCODE: $000017FA VOL: 0
;PCODE: $000017FB VOL: 0
;PCODE: $000017FC VOL: 0
;PCODE: $000017FD VOL: 0
;PCODE: $000017FE VOL: 0
; 0000 0CE6 
; 0000 0CE7                     if(cykl_sterownik_4 < 5 & abs_ster4 == 1)
;PCODE: $000017FF VOL: 0
;PCODE: $00001800 VOL: 0
;PCODE: $00001801 VOL: 0
;PCODE: $00001802 VOL: 0
;PCODE: $00001803 VOL: 0
;PCODE: $00001804 VOL: 0
;PCODE: $00001805 VOL: 0
;PCODE: $00001806 VOL: 0
;PCODE: $00001807 VOL: 0
;PCODE: $00001808 VOL: 0
; 0000 0CE8                         cykl_sterownik_4 = sterownik_4_praca(1,0,0,0,1,0);  //ABS          //druciak do gory
;PCODE: $00001809 VOL: 0
;PCODE: $0000180A VOL: 0
;PCODE: $0000180B VOL: 0
;PCODE: $0000180C VOL: 0
;PCODE: $0000180D VOL: 0
; 0000 0CE9 
; 0000 0CEA 
; 0000 0CEB                                                                                            //mini ruch powrotny do okregu, zeby nie szorowal
; 0000 0CEC                     if(cykl_sterownik_1 < 5 & wykonalem_komplet_okregow == 1)
;PCODE: $0000180E VOL: 0
;PCODE: $0000180F VOL: 0
;PCODE: $00001810 VOL: 0
;PCODE: $00001811 VOL: 0
;PCODE: $00001812 VOL: 0
;PCODE: $00001813 VOL: 0
;PCODE: $00001814 VOL: 0
;PCODE: $00001815 VOL: 0
;PCODE: $00001816 VOL: 0
;PCODE: $00001817 VOL: 0
; 0000 0CED                         cykl_sterownik_1 = sterownik_1_praca(0x98,1);
;PCODE: $00001818 VOL: 0
;PCODE: $00001819 VOL: 0
;PCODE: $0000181A VOL: 0
;PCODE: $0000181B VOL: 0
;PCODE: $0000181C VOL: 0
;PCODE: $0000181D VOL: 0
; 0000 0CEE 
; 0000 0CEF 
; 0000 0CF0                     if(cykl_sterownik_1 == 5 & wykonalem_komplet_okregow == 1 &
;PCODE: $0000181E VOL: 0
; 0000 0CF1                        szczotka_druc_cykl == szczotka_druciana_ilosc_cykli &
; 0000 0CF2                        krazek_scierny_cykl == krazek_scierny_ilosc_cykli)
;PCODE: $0000181F VOL: 0
;PCODE: $00001820 VOL: 0
;PCODE: $00001821 VOL: 0
;PCODE: $00001822 VOL: 0
;PCODE: $00001823 VOL: 0
;PCODE: $00001824 VOL: 0
;PCODE: $00001825 VOL: 0
;PCODE: $00001826 VOL: 0
;PCODE: $00001827 VOL: 0
;PCODE: $00001828 VOL: 0
;PCODE: $00001829 VOL: 0
;PCODE: $0000182A VOL: 0
;PCODE: $0000182B VOL: 0
;PCODE: $0000182C VOL: 0
;PCODE: $0000182D VOL: 0
;PCODE: $0000182E VOL: 0
;PCODE: $0000182F VOL: 0
;PCODE: $00001830 VOL: 0
;PCODE: $00001831 VOL: 0
; 0000 0CF3                         {
; 0000 0CF4                         cykl_sterownik_1 = 0;
;PCODE: $00001832 VOL: 0
;PCODE: $00001833 VOL: 0
; 0000 0CF5                         cykl_sterownik_2 = 0;
;PCODE: $00001834 VOL: 0
;PCODE: $00001835 VOL: 0
; 0000 0CF6                         cykl_sterownik_3 = 0;
;PCODE: $00001836 VOL: 0
;PCODE: $00001837 VOL: 0
; 0000 0CF7                         cykl_sterownik_4 = 0;
;PCODE: $00001838 VOL: 0
;PCODE: $00001839 VOL: 0
; 0000 0CF8                         cykl_glowny = 8;
;PCODE: $0000183A VOL: 0
;PCODE: $0000183B VOL: 0
; 0000 0CF9                         szczotka_druc_cykl = 0;
;PCODE: $0000183C VOL: 0
;PCODE: $0000183D VOL: 0
; 0000 0CFA                         krazek_scierny_cykl = 0;
;PCODE: $0000183E VOL: 0
;PCODE: $0000183F VOL: 0
; 0000 0CFB                         krazek_scierny_cykl_po_okregu = 0;
;PCODE: $00001840 VOL: 0
;PCODE: $00001841 VOL: 0
; 0000 0CFC                         PORT_F.bits.b4 = 0;  //przedmuch zaciskow wylacz
;PCODE: $00001842 VOL: 0
;PCODE: $00001843 VOL: 0
;PCODE: $00001844 VOL: 0
;PCODE: $00001845 VOL: 0
; 0000 0CFD                         PORTF = PORT_F.byte;
;PCODE: $00001846 VOL: 0
;PCODE: $00001847 VOL: 0
; 0000 0CFE                         cykl_glowny = 9;
;PCODE: $00001848 VOL: 0
;PCODE: $00001849 VOL: 0
; 0000 0CFF                         }
; 0000 0D00 
; 0000 0D01                                                                                                 //ster 1 - ruch po okregu
; 0000 0D02                                                                                                 //ster 2 - nic
; 0000 0D03                                                                                                 //ster 3 - krazek - gora dol
; 0000 0D04                                                                                                 //ster 4 - druciak - gora dol
; 0000 0D05 
; 0000 0D06             break;
;PCODE: $0000184A VOL: 0
;PCODE: $0000184B VOL: 0
; 0000 0D07 
; 0000 0D08 
; 0000 0D09             case 9:
;PCODE: $0000184C VOL: 0
;PCODE: $0000184D VOL: 0
;PCODE: $0000184E VOL: 0
; 0000 0D0A 
; 0000 0D0B 
; 0000 0D0C                          if(rzad_obrabiany == 1)
;PCODE: $0000184F VOL: 0
;PCODE: $00001850 VOL: 0
;PCODE: $00001851 VOL: 0
; 0000 0D0D                          {
; 0000 0D0E                          if(cykl_sterownik_3 < 5 & cykl_ilosc_zaciskow != il_zaciskow_rzad_1 - 1)
;PCODE: $00001852 VOL: 0
;PCODE: $00001853 VOL: 0
;PCODE: $00001854 VOL: 0
;PCODE: $00001855 VOL: 0
;PCODE: $00001856 VOL: 0
;PCODE: $00001857 VOL: 0
;PCODE: $00001858 VOL: 0
;PCODE: $00001859 VOL: 0
;PCODE: $0000185A VOL: 0
;PCODE: $0000185B VOL: 0
; 0000 0D0F                             cykl_sterownik_3 = sterownik_3_praca(0,0,0,0,0,1);  //do pozycji bazowej
;PCODE: $0000185C VOL: 0
;PCODE: $0000185D VOL: 0
;PCODE: $0000185E VOL: 0
;PCODE: $0000185F VOL: 0
;PCODE: $00001860 VOL: 0
;PCODE: $00001861 VOL: 0
;PCODE: $00001862 VOL: 0
;PCODE: $00001863 VOL: 0
;PCODE: $00001864 VOL: 0
;PCODE: $00001865 VOL: 0
;PCODE: $00001866 VOL: 0
;PCODE: $00001867 VOL: 0
;PCODE: $00001868 VOL: 0
;PCODE: $00001869 VOL: 0
; 0000 0D10 
; 0000 0D11                           //if(cykl_sterownik_4 < 5 & cykl_ilosc_zaciskow != il_zaciskow_rzad_1 - 1)
; 0000 0D12                           //  cykl_sterownik_4 = sterownik_4_praca(0,0,0,0,0,1);  //do pozycji bazowej
; 0000 0D13 
; 0000 0D14                           if(cykl_sterownik_4 < 5 & cykl_ilosc_zaciskow < il_zaciskow_rzad_1 - 2)
;PCODE: $0000186A VOL: 0
;PCODE: $0000186B VOL: 0
;PCODE: $0000186C VOL: 0
;PCODE: $0000186D VOL: 0
;PCODE: $0000186E VOL: 0
;PCODE: $0000186F VOL: 0
;PCODE: $00001870 VOL: 0
;PCODE: $00001871 VOL: 0
;PCODE: $00001872 VOL: 0
;PCODE: $00001873 VOL: 0
;PCODE: $00001874 VOL: 0
; 0000 0D15                             cykl_sterownik_4 = sterownik_4_praca(0,0,0,0,0,1);  //do pozycji bazowej
;PCODE: $00001875 VOL: 0
;PCODE: $00001876 VOL: 0
;PCODE: $00001877 VOL: 0
;PCODE: $00001878 VOL: 0
;PCODE: $00001879 VOL: 0
; 0000 0D16 
; 0000 0D17 
; 0000 0D18                          if(cykl_sterownik_3 < 5 & cykl_ilosc_zaciskow == il_zaciskow_rzad_1 - 1)
;PCODE: $0000187A VOL: 0
;PCODE: $0000187B VOL: 0
;PCODE: $0000187C VOL: 0
;PCODE: $0000187D VOL: 0
;PCODE: $0000187E VOL: 0
;PCODE: $0000187F VOL: 0
;PCODE: $00001880 VOL: 0
;PCODE: $00001881 VOL: 0
;PCODE: $00001882 VOL: 0
;PCODE: $00001883 VOL: 0
;PCODE: $00001884 VOL: 0
; 0000 0D19                             cykl_sterownik_3 = sterownik_3_praca(0,0,0,0,0,0);  //na sam dol, jedziemy miedzy rzedami
;PCODE: $00001885 VOL: 0
;PCODE: $00001886 VOL: 0
;PCODE: $00001887 VOL: 0
;PCODE: $00001888 VOL: 0
;PCODE: $00001889 VOL: 0
;PCODE: $0000188A VOL: 0
;PCODE: $0000188B VOL: 0
;PCODE: $0000188C VOL: 0
;PCODE: $0000188D VOL: 0
;PCODE: $0000188E VOL: 0
;PCODE: $0000188F VOL: 0
;PCODE: $00001890 VOL: 0
;PCODE: $00001891 VOL: 0
;PCODE: $00001892 VOL: 0
; 0000 0D1A 
; 0000 0D1B                           //if(cykl_sterownik_4 < 5 & cykl_ilosc_zaciskow == il_zaciskow_rzad_1 - 1)
; 0000 0D1C                          //   cykl_sterownik_4 = sterownik_4_praca(0,0,0,0,0,0);  //na sam dol, jedziemy miedzy rzedami
; 0000 0D1D 
; 0000 0D1E                          if(cykl_sterownik_4 < 5 & cykl_ilosc_zaciskow >= il_zaciskow_rzad_1 - 2)
;PCODE: $00001893 VOL: 0
;PCODE: $00001894 VOL: 0
;PCODE: $00001895 VOL: 0
;PCODE: $00001896 VOL: 0
;PCODE: $00001897 VOL: 0
;PCODE: $00001898 VOL: 0
;PCODE: $00001899 VOL: 0
;PCODE: $0000189A VOL: 0
;PCODE: $0000189B VOL: 0
;PCODE: $0000189C VOL: 0
;PCODE: $0000189D VOL: 0
; 0000 0D1F                             cykl_sterownik_4 = sterownik_4_praca(0,0,0,0,0,0);  //na sam dol, jedziemy miedzy rzedami
;PCODE: $0000189E VOL: 0
;PCODE: $0000189F VOL: 0
;PCODE: $000018A0 VOL: 0
;PCODE: $000018A1 VOL: 0
;PCODE: $000018A2 VOL: 0
; 0000 0D20 
; 0000 0D21                           }
;PCODE: $000018A3 VOL: 0
; 0000 0D22 
; 0000 0D23 
; 0000 0D24                          if(rzad_obrabiany == 2)
;PCODE: $000018A4 VOL: 0
;PCODE: $000018A5 VOL: 0
;PCODE: $000018A6 VOL: 0
;PCODE: $000018A7 VOL: 0
; 0000 0D25                          {
; 0000 0D26                          if(cykl_sterownik_3 < 5 & cykl_ilosc_zaciskow != il_zaciskow_rzad_2 - 1)
;PCODE: $000018A8 VOL: 0
;PCODE: $000018A9 VOL: 0
;PCODE: $000018AA VOL: 0
;PCODE: $000018AB VOL: 0
;PCODE: $000018AC VOL: 0
;PCODE: $000018AD VOL: 0
;PCODE: $000018AE VOL: 0
;PCODE: $000018AF VOL: 0
;PCODE: $000018B0 VOL: 0
;PCODE: $000018B1 VOL: 0
; 0000 0D27                             cykl_sterownik_3 = sterownik_3_praca(0,0,0,0,0,1);  //do pozycji bazowej
;PCODE: $000018B2 VOL: 0
;PCODE: $000018B3 VOL: 0
;PCODE: $000018B4 VOL: 0
;PCODE: $000018B5 VOL: 0
;PCODE: $000018B6 VOL: 0
;PCODE: $000018B7 VOL: 0
;PCODE: $000018B8 VOL: 0
;PCODE: $000018B9 VOL: 0
;PCODE: $000018BA VOL: 0
;PCODE: $000018BB VOL: 0
;PCODE: $000018BC VOL: 0
;PCODE: $000018BD VOL: 0
;PCODE: $000018BE VOL: 0
;PCODE: $000018BF VOL: 0
; 0000 0D28 
; 0000 0D29                          // if(cykl_sterownik_4 < 5 & cykl_ilosc_zaciskow != il_zaciskow_rzad_2 - 1)
; 0000 0D2A                          //   cykl_sterownik_4 = sterownik_4_praca(0,0,0,0,0,1);  //do pozycji bazowej
; 0000 0D2B 
; 0000 0D2C                           if(cykl_sterownik_4 < 5 & cykl_ilosc_zaciskow < il_zaciskow_rzad_2 - 2)
;PCODE: $000018C0 VOL: 0
;PCODE: $000018C1 VOL: 0
;PCODE: $000018C2 VOL: 0
;PCODE: $000018C3 VOL: 0
;PCODE: $000018C4 VOL: 0
;PCODE: $000018C5 VOL: 0
;PCODE: $000018C6 VOL: 0
;PCODE: $000018C7 VOL: 0
;PCODE: $000018C8 VOL: 0
;PCODE: $000018C9 VOL: 0
;PCODE: $000018CA VOL: 0
; 0000 0D2D                             cykl_sterownik_4 = sterownik_4_praca(0,0,0,0,0,1);  //do pozycji bazowej
;PCODE: $000018CB VOL: 0
;PCODE: $000018CC VOL: 0
;PCODE: $000018CD VOL: 0
;PCODE: $000018CE VOL: 0
;PCODE: $000018CF VOL: 0
; 0000 0D2E 
; 0000 0D2F                          if(cykl_sterownik_3 < 5 & cykl_ilosc_zaciskow == il_zaciskow_rzad_2 - 1)
;PCODE: $000018D0 VOL: 0
;PCODE: $000018D1 VOL: 0
;PCODE: $000018D2 VOL: 0
;PCODE: $000018D3 VOL: 0
;PCODE: $000018D4 VOL: 0
;PCODE: $000018D5 VOL: 0
;PCODE: $000018D6 VOL: 0
;PCODE: $000018D7 VOL: 0
;PCODE: $000018D8 VOL: 0
;PCODE: $000018D9 VOL: 0
;PCODE: $000018DA VOL: 0
; 0000 0D30                             cykl_sterownik_3 = sterownik_3_praca(0,0,0,0,0,0);  //na sam dol, jedziemy miedzy rzedami
;PCODE: $000018DB VOL: 0
;PCODE: $000018DC VOL: 0
;PCODE: $000018DD VOL: 0
;PCODE: $000018DE VOL: 0
;PCODE: $000018DF VOL: 0
;PCODE: $000018E0 VOL: 0
;PCODE: $000018E1 VOL: 0
;PCODE: $000018E2 VOL: 0
;PCODE: $000018E3 VOL: 0
;PCODE: $000018E4 VOL: 0
;PCODE: $000018E5 VOL: 0
;PCODE: $000018E6 VOL: 0
;PCODE: $000018E7 VOL: 0
;PCODE: $000018E8 VOL: 0
; 0000 0D31 
; 0000 0D32                          // if(cykl_sterownik_4 < 5 & cykl_ilosc_zaciskow == il_zaciskow_rzad_2 - 1)
; 0000 0D33                          //   cykl_sterownik_4 = sterownik_4_praca(0,0,0,0,0,0);  //na sam dol, jedziemy miedzy rzedami
; 0000 0D34 
; 0000 0D35                           if(cykl_sterownik_4 < 5 & cykl_ilosc_zaciskow >= il_zaciskow_rzad_2 - 2)
;PCODE: $000018E9 VOL: 0
;PCODE: $000018EA VOL: 0
;PCODE: $000018EB VOL: 0
;PCODE: $000018EC VOL: 0
;PCODE: $000018ED VOL: 0
;PCODE: $000018EE VOL: 0
;PCODE: $000018EF VOL: 0
;PCODE: $000018F0 VOL: 0
;PCODE: $000018F1 VOL: 0
;PCODE: $000018F2 VOL: 0
;PCODE: $000018F3 VOL: 0
; 0000 0D36                             cykl_sterownik_4 = sterownik_4_praca(0,0,0,0,0,0);  //na sam dol, jedziemy miedzy rzedami
;PCODE: $000018F4 VOL: 0
;PCODE: $000018F5 VOL: 0
;PCODE: $000018F6 VOL: 0
;PCODE: $000018F7 VOL: 0
;PCODE: $000018F8 VOL: 0
; 0000 0D37 
; 0000 0D38                           }
;PCODE: $000018F9 VOL: 0
; 0000 0D39 
; 0000 0D3A 
; 0000 0D3B                           if(cykl_sterownik_3 == 5 & cykl_sterownik_4 == 5)
;PCODE: $000018FA VOL: 0
;PCODE: $000018FB VOL: 0
;PCODE: $000018FC VOL: 0
;PCODE: $000018FD VOL: 0
;PCODE: $000018FE VOL: 0
;PCODE: $000018FF VOL: 0
;PCODE: $00001900 VOL: 0
;PCODE: $00001901 VOL: 0
;PCODE: $00001902 VOL: 0
;PCODE: $00001903 VOL: 0
; 0000 0D3C                             {
; 0000 0D3D                             PORTE.2 = 0;  //wylacz szlifierke
;PCODE: $00001904 VOL: 0
;PCODE: $00001905 VOL: 0
; 0000 0D3E                             PORTE.3 = 0;  //szlifierka 2 (krazek scierny)
;PCODE: $00001906 VOL: 0
;PCODE: $00001907 VOL: 0
; 0000 0D3F                             cykl_sterownik_4 = 0;
;PCODE: $00001908 VOL: 0
;PCODE: $00001909 VOL: 0
; 0000 0D40                             cykl_sterownik_3 = 0;
;PCODE: $0000190A VOL: 0
;PCODE: $0000190B VOL: 0
; 0000 0D41                             cykl_ilosc_zaciskow++;
;PCODE: $0000190C VOL: 0
;PCODE: $0000190D VOL: 0
;PCODE: $0000190E VOL: 0
;PCODE: $0000190F VOL: 0
; 0000 0D42                             ruch_zlozony = 2;                       //il_zaciskow_rzad_1
;PCODE: $00001910 VOL: 0
;PCODE: $00001911 VOL: 0
; 0000 0D43                             cykl_glowny = 10;
;PCODE: $00001912 VOL: 0
;PCODE: $00001913 VOL: 0
; 0000 0D44                             }
; 0000 0D45 
; 0000 0D46 
; 0000 0D47             break;
;PCODE: $00001914 VOL: 0
;PCODE: $00001915 VOL: 0
; 0000 0D48 
; 0000 0D49 
; 0000 0D4A 
; 0000 0D4B             case 10:
;PCODE: $00001916 VOL: 0
;PCODE: $00001917 VOL: 0
;PCODE: $00001918 VOL: 0
; 0000 0D4C 
; 0000 0D4D                                                //wywali ten warunek jak zadziala
; 0000 0D4E                      if(rzad_obrabiany == 1 & cykl_glowny != 0)
;PCODE: $00001919 VOL: 0
;PCODE: $0000191A VOL: 0
;PCODE: $0000191B VOL: 0
;PCODE: $0000191C VOL: 0
;PCODE: $0000191D VOL: 0
;PCODE: $0000191E VOL: 0
;PCODE: $0000191F VOL: 0
;PCODE: $00001920 VOL: 0
;PCODE: $00001921 VOL: 0
; 0000 0D4F                             {
; 0000 0D50                             wartosc_parametru_panelu(cykl_ilosc_zaciskow,0,16);  //wykonano zaciskow rzad1
;PCODE: $00001922 VOL: 0
;PCODE: $00001923 VOL: 0
;PCODE: $00001924 VOL: 0
;PCODE: $00001925 VOL: 0
;PCODE: $00001926 VOL: 0
;PCODE: $00001927 VOL: 0
;PCODE: $00001928 VOL: 0
; 0000 0D51                             if(cykl_ilosc_zaciskow <  il_zaciskow_rzad_1 - 1)
;PCODE: $00001929 VOL: 0
;PCODE: $0000192A VOL: 0
;PCODE: $0000192B VOL: 0
;PCODE: $0000192C VOL: 0
;PCODE: $0000192D VOL: 0
; 0000 0D52                                 {
; 0000 0D53                                 cykl_glowny = 5;
;PCODE: $0000192E VOL: 0
;PCODE: $0000192F VOL: 0
; 0000 0D54                                 koniec_rzedu_10 = 0;
;PCODE: $00001930 VOL: 0
;PCODE: $00001931 VOL: 0
; 0000 0D55                                 }
; 0000 0D56 
; 0000 0D57                             if(cykl_ilosc_zaciskow == il_zaciskow_rzad_1 - 1)
;PCODE: $00001932 VOL: 0
;PCODE: $00001933 VOL: 0
;PCODE: $00001934 VOL: 0
;PCODE: $00001935 VOL: 0
;PCODE: $00001936 VOL: 0
;PCODE: $00001937 VOL: 0
; 0000 0D58                                 {
; 0000 0D59                                 cykl_glowny = 5;
;PCODE: $00001938 VOL: 0
;PCODE: $00001939 VOL: 0
; 0000 0D5A                                 koniec_rzedu_10 = 1;
;PCODE: $0000193A VOL: 0
;PCODE: $0000193B VOL: 0
; 0000 0D5B                                 }
; 0000 0D5C 
; 0000 0D5D                             if(cykl_ilosc_zaciskow == il_zaciskow_rzad_1 & il_zaciskow_rzad_1 == 10)
;PCODE: $0000193C VOL: 0
;PCODE: $0000193D VOL: 0
;PCODE: $0000193E VOL: 0
;PCODE: $0000193F VOL: 0
;PCODE: $00001940 VOL: 0
;PCODE: $00001941 VOL: 0
;PCODE: $00001942 VOL: 0
;PCODE: $00001943 VOL: 0
;PCODE: $00001944 VOL: 0
;PCODE: $00001945 VOL: 0
; 0000 0D5E                                 {
; 0000 0D5F                                 cykl_glowny = 11;
;PCODE: $00001946 VOL: 0
;PCODE: $00001947 VOL: 0
; 0000 0D60                                 }
; 0000 0D61 
; 0000 0D62                              if(cykl_ilosc_zaciskow == il_zaciskow_rzad_1 & il_zaciskow_rzad_1 != 10)  /////zmieniam + 1 20.02
;PCODE: $00001948 VOL: 0
;PCODE: $00001949 VOL: 0
;PCODE: $0000194A VOL: 0
;PCODE: $0000194B VOL: 0
;PCODE: $0000194C VOL: 0
;PCODE: $0000194D VOL: 0
;PCODE: $0000194E VOL: 0
;PCODE: $0000194F VOL: 0
;PCODE: $00001950 VOL: 0
;PCODE: $00001951 VOL: 0
; 0000 0D63                                 {
; 0000 0D64                                 cykl_glowny = 14;
;PCODE: $00001952 VOL: 0
;PCODE: $00001953 VOL: 0
; 0000 0D65                                 }
; 0000 0D66                             }
;PCODE: $00001954 VOL: 0
; 0000 0D67 
; 0000 0D68 
; 0000 0D69                             if(rzad_obrabiany == 2 & cykl_glowny != 0)
;PCODE: $00001955 VOL: 0
;PCODE: $00001956 VOL: 0
;PCODE: $00001957 VOL: 0
;PCODE: $00001958 VOL: 0
;PCODE: $00001959 VOL: 0
;PCODE: $0000195A VOL: 0
;PCODE: $0000195B VOL: 0
;PCODE: $0000195C VOL: 0
;PCODE: $0000195D VOL: 0
;PCODE: $0000195E VOL: 0
; 0000 0D6A                             {
; 0000 0D6B                             wartosc_parametru_panelu(cykl_ilosc_zaciskow,0,96);  //wykonano zaciskow rzad1
;PCODE: $0000195F VOL: 0
;PCODE: $00001960 VOL: 0
;PCODE: $00001961 VOL: 0
;PCODE: $00001962 VOL: 0
;PCODE: $00001963 VOL: 0
;PCODE: $00001964 VOL: 0
;PCODE: $00001965 VOL: 0
; 0000 0D6C                             if(cykl_ilosc_zaciskow <  il_zaciskow_rzad_2 - 1)
;PCODE: $00001966 VOL: 0
;PCODE: $00001967 VOL: 0
;PCODE: $00001968 VOL: 0
;PCODE: $00001969 VOL: 0
;PCODE: $0000196A VOL: 0
; 0000 0D6D                                 {
; 0000 0D6E                                 cykl_glowny = 5;
;PCODE: $0000196B VOL: 0
;PCODE: $0000196C VOL: 0
; 0000 0D6F                                 koniec_rzedu_10 = 0;
;PCODE: $0000196D VOL: 0
;PCODE: $0000196E VOL: 0
; 0000 0D70                                 }
; 0000 0D71 
; 0000 0D72                             if(cykl_ilosc_zaciskow == il_zaciskow_rzad_2 - 1)
;PCODE: $0000196F VOL: 0
;PCODE: $00001970 VOL: 0
;PCODE: $00001971 VOL: 0
;PCODE: $00001972 VOL: 0
;PCODE: $00001973 VOL: 0
;PCODE: $00001974 VOL: 0
; 0000 0D73                                 {
; 0000 0D74                                 cykl_glowny = 5;
;PCODE: $00001975 VOL: 0
;PCODE: $00001976 VOL: 0
; 0000 0D75                                 koniec_rzedu_10 = 1;
;PCODE: $00001977 VOL: 0
;PCODE: $00001978 VOL: 0
; 0000 0D76                                 }
; 0000 0D77 
; 0000 0D78                             if(cykl_ilosc_zaciskow == il_zaciskow_rzad_2 & il_zaciskow_rzad_2 == 10)
;PCODE: $00001979 VOL: 0
;PCODE: $0000197A VOL: 0
;PCODE: $0000197B VOL: 0
;PCODE: $0000197C VOL: 0
;PCODE: $0000197D VOL: 0
;PCODE: $0000197E VOL: 0
;PCODE: $0000197F VOL: 0
;PCODE: $00001980 VOL: 0
;PCODE: $00001981 VOL: 0
;PCODE: $00001982 VOL: 0
; 0000 0D79                                 {
; 0000 0D7A                                 cykl_glowny = 12;
;PCODE: $00001983 VOL: 0
;PCODE: $00001984 VOL: 0
; 0000 0D7B                                 }
; 0000 0D7C 
; 0000 0D7D 
; 0000 0D7E                              if(cykl_ilosc_zaciskow == il_zaciskow_rzad_2 & il_zaciskow_rzad_2 != 10)   ///////////////////zmieniam + 1 20.02
;PCODE: $00001985 VOL: 0
;PCODE: $00001986 VOL: 0
;PCODE: $00001987 VOL: 0
;PCODE: $00001988 VOL: 0
;PCODE: $00001989 VOL: 0
;PCODE: $0000198A VOL: 0
;PCODE: $0000198B VOL: 0
;PCODE: $0000198C VOL: 0
;PCODE: $0000198D VOL: 0
;PCODE: $0000198E VOL: 0
; 0000 0D7F                                 {
; 0000 0D80                                 cykl_glowny = 14;
;PCODE: $0000198F VOL: 0
;PCODE: $00001990 VOL: 0
; 0000 0D81                                 }
; 0000 0D82                             }
;PCODE: $00001991 VOL: 0
; 0000 0D83 
; 0000 0D84 
; 0000 0D85 
; 0000 0D86             break;
;PCODE: $00001992 VOL: 0
;PCODE: $00001993 VOL: 0
; 0000 0D87 
; 0000 0D88 
; 0000 0D89 
; 0000 0D8A             case 11:
;PCODE: $00001994 VOL: 0
;PCODE: $00001995 VOL: 0
;PCODE: $00001996 VOL: 0
; 0000 0D8B 
; 0000 0D8C                              //ster 1 ucieka od szafy
; 0000 0D8D                              if(cykl_sterownik_1 < 5)
;PCODE: $00001997 VOL: 0
;PCODE: $00001998 VOL: 0
;PCODE: $00001999 VOL: 0
; 0000 0D8E                                     cykl_sterownik_1 = sterownik_1_praca(0x07,0);     //uciekamy do tylu
;PCODE: $0000199A VOL: 0
;PCODE: $0000199B VOL: 0
;PCODE: $0000199C VOL: 0
;PCODE: $0000199D VOL: 0
;PCODE: $0000199E VOL: 0
;PCODE: $0000199F VOL: 0
; 0000 0D8F 
; 0000 0D90                              if(cykl_sterownik_2 < 5)
;PCODE: $000019A0 VOL: 0
;PCODE: $000019A1 VOL: 0
;PCODE: $000019A2 VOL: 0
;PCODE: $000019A3 VOL: 0
; 0000 0D91                                     cykl_sterownik_2 = sterownik_2_praca(0x90,1);     //pod dolek ostatni 10 do przedmuchu rzad 1
;PCODE: $000019A4 VOL: 0
;PCODE: $000019A5 VOL: 0
;PCODE: $000019A6 VOL: 0
;PCODE: $000019A7 VOL: 0
;PCODE: $000019A8 VOL: 0
;PCODE: $000019A9 VOL: 0
; 0000 0D92 
; 0000 0D93                              if(cykl_sterownik_1 == 5 & cykl_sterownik_2 == 5)
;PCODE: $000019AA VOL: 0
;PCODE: $000019AB VOL: 0
;PCODE: $000019AC VOL: 0
;PCODE: $000019AD VOL: 0
;PCODE: $000019AE VOL: 0
;PCODE: $000019AF VOL: 0
;PCODE: $000019B0 VOL: 0
;PCODE: $000019B1 VOL: 0
;PCODE: $000019B2 VOL: 0
;PCODE: $000019B3 VOL: 0
; 0000 0D94                                     {
; 0000 0D95                                     PORT_F.bits.b4 = 1;  //przedmuch zaciskow
;PCODE: $000019B4 VOL: 0
;PCODE: $000019B5 VOL: 0
;PCODE: $000019B6 VOL: 0
; 0000 0D96                                     PORTF = PORT_F.byte;
;PCODE: $000019B7 VOL: 0
;PCODE: $000019B8 VOL: 0
; 0000 0D97                                     cykl_sterownik_1 = 0;
;PCODE: $000019B9 VOL: 0
;PCODE: $000019BA VOL: 0
; 0000 0D98                                     cykl_sterownik_2 = 0;
;PCODE: $000019BB VOL: 0
;PCODE: $000019BC VOL: 0
; 0000 0D99                                     cykl_glowny = 13;
;PCODE: $000019BD VOL: 0
;PCODE: $000019BE VOL: 0
; 0000 0D9A                                     }
; 0000 0D9B             break;
;PCODE: $000019BF VOL: 0
;PCODE: $000019C0 VOL: 0
; 0000 0D9C 
; 0000 0D9D 
; 0000 0D9E             case 12:
;PCODE: $000019C1 VOL: 0
;PCODE: $000019C2 VOL: 0
;PCODE: $000019C3 VOL: 0
; 0000 0D9F 
; 0000 0DA0                                //ster 1 ucieka od szafy
; 0000 0DA1                              if(cykl_sterownik_1 < 5)
;PCODE: $000019C4 VOL: 0
;PCODE: $000019C5 VOL: 0
;PCODE: $000019C6 VOL: 0
; 0000 0DA2                                     cykl_sterownik_1 = sterownik_1_praca(0x07,0);     //uciekamy do tylu
;PCODE: $000019C7 VOL: 0
;PCODE: $000019C8 VOL: 0
;PCODE: $000019C9 VOL: 0
;PCODE: $000019CA VOL: 0
;PCODE: $000019CB VOL: 0
;PCODE: $000019CC VOL: 0
; 0000 0DA3 
; 0000 0DA4                             if(cykl_sterownik_2 < 5)
;PCODE: $000019CD VOL: 0
;PCODE: $000019CE VOL: 0
;PCODE: $000019CF VOL: 0
;PCODE: $000019D0 VOL: 0
; 0000 0DA5                                     cykl_sterownik_2 = sterownik_2_praca(0x91,1);     //pod dolek ostatni 10 do przedmuchu rzad 2
;PCODE: $000019D1 VOL: 0
;PCODE: $000019D2 VOL: 0
;PCODE: $000019D3 VOL: 0
;PCODE: $000019D4 VOL: 0
;PCODE: $000019D5 VOL: 0
;PCODE: $000019D6 VOL: 0
; 0000 0DA6 
; 0000 0DA7                              if(cykl_sterownik_1 == 5 & cykl_sterownik_2 == 5)
;PCODE: $000019D7 VOL: 0
;PCODE: $000019D8 VOL: 0
;PCODE: $000019D9 VOL: 0
;PCODE: $000019DA VOL: 0
;PCODE: $000019DB VOL: 0
;PCODE: $000019DC VOL: 0
;PCODE: $000019DD VOL: 0
;PCODE: $000019DE VOL: 0
;PCODE: $000019DF VOL: 0
;PCODE: $000019E0 VOL: 0
; 0000 0DA8                                     {
; 0000 0DA9                                     PORT_F.bits.b4 = 1;  //przedmuch zaciskow
;PCODE: $000019E1 VOL: 0
;PCODE: $000019E2 VOL: 0
;PCODE: $000019E3 VOL: 0
; 0000 0DAA                                     PORTF = PORT_F.byte;
;PCODE: $000019E4 VOL: 0
;PCODE: $000019E5 VOL: 0
; 0000 0DAB                                     cykl_sterownik_1 = 0;
;PCODE: $000019E6 VOL: 0
;PCODE: $000019E7 VOL: 0
; 0000 0DAC                                     cykl_sterownik_2 = 0;
;PCODE: $000019E8 VOL: 0
;PCODE: $000019E9 VOL: 0
; 0000 0DAD                                     cykl_glowny = 13;
;PCODE: $000019EA VOL: 0
;PCODE: $000019EB VOL: 0
; 0000 0DAE                                     }
; 0000 0DAF 
; 0000 0DB0 
; 0000 0DB1             break;
;PCODE: $000019EC VOL: 0
;PCODE: $000019ED VOL: 0
; 0000 0DB2 
; 0000 0DB3 
; 0000 0DB4 
; 0000 0DB5             case 13:
;PCODE: $000019EE VOL: 0
;PCODE: $000019EF VOL: 0
;PCODE: $000019F0 VOL: 0
; 0000 0DB6 
; 0000 0DB7 
; 0000 0DB8                              if(cykl_sterownik_2 < 5)
;PCODE: $000019F1 VOL: 0
;PCODE: $000019F2 VOL: 0
;PCODE: $000019F3 VOL: 0
; 0000 0DB9                                     cykl_sterownik_2 = sterownik_2_praca(0x92,1);     //okrag
;PCODE: $000019F4 VOL: 0
;PCODE: $000019F5 VOL: 0
;PCODE: $000019F6 VOL: 0
;PCODE: $000019F7 VOL: 0
;PCODE: $000019F8 VOL: 0
;PCODE: $000019F9 VOL: 0
; 0000 0DBA                              if(cykl_sterownik_2 == 5)
;PCODE: $000019FA VOL: 0
;PCODE: $000019FB VOL: 0
;PCODE: $000019FC VOL: 0
;PCODE: $000019FD VOL: 0
; 0000 0DBB                                     {
; 0000 0DBC                                     PORT_F.bits.b4 = 0;  //przedmuch zaciskow - wylaczenie
;PCODE: $000019FE VOL: 0
;PCODE: $000019FF VOL: 0
;PCODE: $00001A00 VOL: 0
;PCODE: $00001A01 VOL: 0
; 0000 0DBD                                     PORTF = PORT_F.byte;
;PCODE: $00001A02 VOL: 0
;PCODE: $00001A03 VOL: 0
; 0000 0DBE                                     cykl_sterownik_2 = 0;
;PCODE: $00001A04 VOL: 0
;PCODE: $00001A05 VOL: 0
; 0000 0DBF                                     cykl_glowny = 16;
;PCODE: $00001A06 VOL: 0
;PCODE: $00001A07 VOL: 0
; 0000 0DC0                                     }
; 0000 0DC1 
; 0000 0DC2             break;
;PCODE: $00001A08 VOL: 0
;PCODE: $00001A09 VOL: 0
; 0000 0DC3 
; 0000 0DC4 
; 0000 0DC5 
; 0000 0DC6             case 14:
;PCODE: $00001A0A VOL: 0
;PCODE: $00001A0B VOL: 0
;PCODE: $00001A0C VOL: 0
; 0000 0DC7 
; 0000 0DC8 
; 0000 0DC9                     if(cykl_sterownik_1 < 5)
;PCODE: $00001A0D VOL: 0
;PCODE: $00001A0E VOL: 0
;PCODE: $00001A0F VOL: 0
; 0000 0DCA                         cykl_sterownik_1 = sterownik_1_praca(0x03,0);     //pod nastepny dolek zeby przedmuchac
;PCODE: $00001A10 VOL: 0
;PCODE: $00001A11 VOL: 0
;PCODE: $00001A12 VOL: 0
;PCODE: $00001A13 VOL: 0
;PCODE: $00001A14 VOL: 0
;PCODE: $00001A15 VOL: 0
; 0000 0DCB                     if(cykl_sterownik_1 == 5)
;PCODE: $00001A16 VOL: 0
;PCODE: $00001A17 VOL: 0
;PCODE: $00001A18 VOL: 0
;PCODE: $00001A19 VOL: 0
; 0000 0DCC                         {
; 0000 0DCD                         cykl_sterownik_1 = 0;
;PCODE: $00001A1A VOL: 0
;PCODE: $00001A1B VOL: 0
; 0000 0DCE                         sek12 = 0;
;PCODE: $00001A1C VOL: 0
;PCODE: $00001A1D VOL: 0
; 0000 0DCF                         cykl_glowny = 15;
;PCODE: $00001A1E VOL: 0
;PCODE: $00001A1F VOL: 0
; 0000 0DD0                         }
; 0000 0DD1 
; 0000 0DD2             break;
;PCODE: $00001A20 VOL: 0
;PCODE: $00001A21 VOL: 0
; 0000 0DD3 
; 0000 0DD4 
; 0000 0DD5 
; 0000 0DD6             case 15:
;PCODE: $00001A22 VOL: 0
;PCODE: $00001A23 VOL: 0
;PCODE: $00001A24 VOL: 0
; 0000 0DD7 
; 0000 0DD8                     //przedmuch
; 0000 0DD9                     PORT_F.bits.b4 = 1;  //przedmuch zaciskow
;PCODE: $00001A25 VOL: 0
;PCODE: $00001A26 VOL: 0
;PCODE: $00001A27 VOL: 0
; 0000 0DDA                     PORTF = PORT_F.byte;
;PCODE: $00001A28 VOL: 0
;PCODE: $00001A29 VOL: 0
; 0000 0DDB                     if(sek12 > czas_przedmuchu)
;PCODE: $00001A2A VOL: 0
;PCODE: $00001A2B VOL: 0
;PCODE: $00001A2C VOL: 0
;PCODE: $00001A2D VOL: 0
;PCODE: $00001A2E VOL: 0
; 0000 0DDC                         {
; 0000 0DDD                         PORT_F.bits.b4 = 0;  //przedmuch zaciskow
;PCODE: $00001A2F VOL: 0
;PCODE: $00001A30 VOL: 0
;PCODE: $00001A31 VOL: 0
;PCODE: $00001A32 VOL: 0
; 0000 0DDE                         PORTF = PORT_F.byte;
;PCODE: $00001A33 VOL: 0
;PCODE: $00001A34 VOL: 0
; 0000 0DDF                         cykl_glowny = 16;
;PCODE: $00001A35 VOL: 0
;PCODE: $00001A36 VOL: 0
; 0000 0DE0                         }
; 0000 0DE1             break;
;PCODE: $00001A37 VOL: 0
;PCODE: $00001A38 VOL: 0
; 0000 0DE2 
; 0000 0DE3 
; 0000 0DE4             case 16:
;PCODE: $00001A39 VOL: 0
;PCODE: $00001A3A VOL: 0
;PCODE: $00001A3B VOL: 0
; 0000 0DE5 
; 0000 0DE6                      if(cykl_ilosc_zaciskow == il_zaciskow_rzad_1 & wykonalem_rzedow == 0)  /////zmieniam + 1 20.02
;PCODE: $00001A3C VOL: 0
;PCODE: $00001A3D VOL: 0
;PCODE: $00001A3E VOL: 0
;PCODE: $00001A3F VOL: 0
;PCODE: $00001A40 VOL: 0
;PCODE: $00001A41 VOL: 0
;PCODE: $00001A42 VOL: 0
;PCODE: $00001A43 VOL: 0
;PCODE: $00001A44 VOL: 0
; 0000 0DE7                                 {
; 0000 0DE8                                 cykl_ilosc_zaciskow = 0;
;PCODE: $00001A45 VOL: 0
;PCODE: $00001A46 VOL: 0
; 0000 0DE9 
; 0000 0DEA                                 if(il_zaciskow_rzad_2 > 0)
;PCODE: $00001A47 VOL: 0
;PCODE: $00001A48 VOL: 0
;PCODE: $00001A49 VOL: 0
; 0000 0DEB                                     {
; 0000 0DEC                                     rzad_obrabiany = 2;
;PCODE: $00001A4A VOL: 0
;PCODE: $00001A4B VOL: 0
; 0000 0DED                                     cykl_glowny = 0;
;PCODE: $00001A4C VOL: 0
;PCODE: $00001A4D VOL: 0
; 0000 0DEE                                     }
; 0000 0DEF                                 else
;PCODE: $00001A4E VOL: 0
;PCODE: $00001A4F VOL: 0
; 0000 0DF0                                     cykl_glowny = 17;
;PCODE: $00001A50 VOL: 0
;PCODE: $00001A51 VOL: 0
; 0000 0DF1 
; 0000 0DF2                                 wykonalem_rzedow = 1;
;PCODE: $00001A52 VOL: 0
;PCODE: $00001A53 VOL: 0
;PCODE: $00001A54 VOL: 0
; 0000 0DF3                                 }
; 0000 0DF4 
; 0000 0DF5                        if(cykl_ilosc_zaciskow == il_zaciskow_rzad_2 & il_zaciskow_rzad_2 > 0 & wykonalem_rzedow == 1)   ///////////////////zmieniam + 1 20.02
;PCODE: $00001A55 VOL: 0
;PCODE: $00001A56 VOL: 0
;PCODE: $00001A57 VOL: 0
;PCODE: $00001A58 VOL: 0
;PCODE: $00001A59 VOL: 0
;PCODE: $00001A5A VOL: 0
;PCODE: $00001A5B VOL: 0
;PCODE: $00001A5C VOL: 0
;PCODE: $00001A5D VOL: 0
;PCODE: $00001A5E VOL: 0
;PCODE: $00001A5F VOL: 0
;PCODE: $00001A60 VOL: 0
;PCODE: $00001A61 VOL: 0
;PCODE: $00001A62 VOL: 0
;PCODE: $00001A63 VOL: 0
; 0000 0DF6                                 {
; 0000 0DF7                                 cykl_ilosc_zaciskow = 0;
;PCODE: $00001A64 VOL: 0
;PCODE: $00001A65 VOL: 0
; 0000 0DF8                                 cykl_glowny = 17;
;PCODE: $00001A66 VOL: 0
;PCODE: $00001A67 VOL: 0
; 0000 0DF9                                 rzad_obrabiany = 1;
;PCODE: $00001A68 VOL: 0
;PCODE: $00001A69 VOL: 0
; 0000 0DFA                                 wykonalem_rzedow = 2;
;PCODE: $00001A6A VOL: 0
;PCODE: $00001A6B VOL: 0
; 0000 0DFB                                 }
; 0000 0DFC 
; 0000 0DFD 
; 0000 0DFE 
; 0000 0DFF 
; 0000 0E00                         if(il_zaciskow_rzad_1 > 0 & il_zaciskow_rzad_2 > 0 & wykonalem_rzedow == 2)
;PCODE: $00001A6C VOL: 0
;PCODE: $00001A6D VOL: 0
;PCODE: $00001A6E VOL: 0
;PCODE: $00001A6F VOL: 0
;PCODE: $00001A70 VOL: 0
;PCODE: $00001A71 VOL: 0
;PCODE: $00001A72 VOL: 0
;PCODE: $00001A73 VOL: 0
;PCODE: $00001A74 VOL: 0
;PCODE: $00001A75 VOL: 0
;PCODE: $00001A76 VOL: 0
;PCODE: $00001A77 VOL: 0
;PCODE: $00001A78 VOL: 0
;PCODE: $00001A79 VOL: 0
;PCODE: $00001A7A VOL: 0
; 0000 0E01                                   {
; 0000 0E02                                   rzad_obrabiany = 1;
;PCODE: $00001A7B VOL: 0
;PCODE: $00001A7C VOL: 0
; 0000 0E03                                   wykonalem_rzedow = 0;
;PCODE: $00001A7D VOL: 0
;PCODE: $00001A7E VOL: 0
; 0000 0E04                                   PORTE.6 = 0;    //przelacz rzad zaciskow - rzad 1
;PCODE: $00001A7F VOL: 0
;PCODE: $00001A80 VOL: 0
; 0000 0E05                                   PORTB.6 = 0;   ////zielona lampka
;PCODE: $00001A81 VOL: 0
;PCODE: $00001A82 VOL: 0
; 0000 0E06                                   wartosc_parametru_panelu(0,0,64);
;PCODE: $00001A83 VOL: 0
;PCODE: $00001A84 VOL: 0
;PCODE: $00001A85 VOL: 0
;PCODE: $00001A86 VOL: 0
;PCODE: $00001A87 VOL: 0
;PCODE: $00001A88 VOL: 0
;PCODE: $00001A89 VOL: 0
; 0000 0E07                                   }
; 0000 0E08 
; 0000 0E09                             if(il_zaciskow_rzad_1 > 0 & il_zaciskow_rzad_2 == 0 & wykonalem_rzedow == 1)
;PCODE: $00001A8A VOL: 0
;PCODE: $00001A8B VOL: 0
;PCODE: $00001A8C VOL: 0
;PCODE: $00001A8D VOL: 0
;PCODE: $00001A8E VOL: 0
;PCODE: $00001A8F VOL: 0
;PCODE: $00001A90 VOL: 0
;PCODE: $00001A91 VOL: 0
;PCODE: $00001A92 VOL: 0
;PCODE: $00001A93 VOL: 0
;PCODE: $00001A94 VOL: 0
;PCODE: $00001A95 VOL: 0
;PCODE: $00001A96 VOL: 0
;PCODE: $00001A97 VOL: 0
;PCODE: $00001A98 VOL: 0
; 0000 0E0A                                   {
; 0000 0E0B                                   rzad_obrabiany = 1;
;PCODE: $00001A99 VOL: 0
;PCODE: $00001A9A VOL: 0
; 0000 0E0C                                   wykonalem_rzedow = 0;
;PCODE: $00001A9B VOL: 0
;PCODE: $00001A9C VOL: 0
; 0000 0E0D                                   PORTE.6 = 1;    //przelacz rzad zaciskow - rzad 2
;PCODE: $00001A9D VOL: 0
;PCODE: $00001A9E VOL: 0
; 0000 0E0E                                   PORTB.6 = 0;   ////zielona lampka
;PCODE: $00001A9F VOL: 0
;PCODE: $00001AA0 VOL: 0
; 0000 0E0F                                   wartosc_parametru_panelu(0,0,64);
;PCODE: $00001AA1 VOL: 0
;PCODE: $00001AA2 VOL: 0
;PCODE: $00001AA3 VOL: 0
;PCODE: $00001AA4 VOL: 0
;PCODE: $00001AA5 VOL: 0
;PCODE: $00001AA6 VOL: 0
;PCODE: $00001AA7 VOL: 0
; 0000 0E10                                   }
; 0000 0E11 
; 0000 0E12 
; 0000 0E13 
; 0000 0E14             break;
;PCODE: $00001AA8 VOL: 0
;PCODE: $00001AA9 VOL: 0
; 0000 0E15 
; 0000 0E16 
; 0000 0E17             case 17:
;PCODE: $00001AAA VOL: 0
;PCODE: $00001AAB VOL: 0
;PCODE: $00001AAC VOL: 0
; 0000 0E18 
; 0000 0E19 
; 0000 0E1A                                  if(cykl_sterownik_1 < 5)
;PCODE: $00001AAD VOL: 0
;PCODE: $00001AAE VOL: 0
;PCODE: $00001AAF VOL: 0
; 0000 0E1B                                     cykl_sterownik_1 = sterownik_1_praca(0x09,0);
;PCODE: $00001AB0 VOL: 0
;PCODE: $00001AB1 VOL: 0
;PCODE: $00001AB2 VOL: 0
;PCODE: $00001AB3 VOL: 0
;PCODE: $00001AB4 VOL: 0
;PCODE: $00001AB5 VOL: 0
; 0000 0E1C                                  if(cykl_sterownik_2 < 5)                                //ster 1 do 0
;PCODE: $00001AB6 VOL: 0
;PCODE: $00001AB7 VOL: 0
;PCODE: $00001AB8 VOL: 0
;PCODE: $00001AB9 VOL: 0
; 0000 0E1D                                     cykl_sterownik_2 = sterownik_2_praca(0x00,0);       //ster 2 pod pin pozy rzad 1
;PCODE: $00001ABA VOL: 0
;PCODE: $00001ABB VOL: 0
;PCODE: $00001ABC VOL: 0
;PCODE: $00001ABD VOL: 0
;PCODE: $00001ABE VOL: 0
;PCODE: $00001ABF VOL: 0
; 0000 0E1E 
; 0000 0E1F                                     if(cykl_sterownik_1 == 5 & cykl_sterownik_2 == 5)
;PCODE: $00001AC0 VOL: 0
;PCODE: $00001AC1 VOL: 0
;PCODE: $00001AC2 VOL: 0
;PCODE: $00001AC3 VOL: 0
;PCODE: $00001AC4 VOL: 0
;PCODE: $00001AC5 VOL: 0
;PCODE: $00001AC6 VOL: 0
;PCODE: $00001AC7 VOL: 0
;PCODE: $00001AC8 VOL: 0
;PCODE: $00001AC9 VOL: 0
; 0000 0E20                                         {
; 0000 0E21                                         cykl_sterownik_1 = 0;
;PCODE: $00001ACA VOL: 0
;PCODE: $00001ACB VOL: 0
; 0000 0E22                                         cykl_sterownik_2 = 0;
;PCODE: $00001ACC VOL: 0
;PCODE: $00001ACD VOL: 0
; 0000 0E23                                         jestem_w_trakcie_czyszczenia_calosci = 0;
;PCODE: $00001ACE VOL: 0
;PCODE: $00001ACF VOL: 0
; 0000 0E24                                         start = 0;
;PCODE: $00001AD0 VOL: 0
;PCODE: $00001AD1 VOL: 0
; 0000 0E25                                         }
; 0000 0E26 
; 0000 0E27 
; 0000 0E28 
; 0000 0E29 
; 0000 0E2A             break;
;PCODE: $00001AD2 VOL: 0
;PCODE: $00001AD3 VOL: 0
; 0000 0E2B 
; 0000 0E2C 
; 0000 0E2D             }//switch
;PCODE: $00001AD4 VOL: 0
; 0000 0E2E 
; 0000 0E2F 
; 0000 0E30   }//while
;PCODE: $00001AD5 VOL: 0
;PCODE: $00001AD6 VOL: 0
; 0000 0E31 }//while glowny
;PCODE: $00001AD7 VOL: 0
;PCODE: $00001AD8 VOL: 0
; 0000 0E32 
; 0000 0E33 }//koniec
;PCODE: $00001AD9 VOL: 0
;PCODE: $00001ADA VOL: 0
;PCODE: $00001ADB VOL: 0
;
;
;
;//odrzuty
; /*
;      putchar(90);
;      putchar(165);
;      putchar(10);       //ilosc liter 8 + 3, tu moze byc faza bo jade przez putchar a nie printf, moze byc wiecej znakow
;      putchar(130);  //82
;      putchar(0);    //0
;      putchar(80);  //adres 90 - 144   , nowy adres to 50 czyli 80
;      putchar('8');
;      putchar('6');
;      putchar('-');
;      putchar('0');
;      putchar('1');
;      putchar('9');
;      putchar('3');
;      */
;
;
;
;
;//odrzuty
;/*
;  while(cykl_sterownik_2 != 5)
;        {
;        if(cykl_sterownik_2 < 5)
;                cykl_sterownik_2 = sterownik_2_praca(0x00,0);
;
;        }
;
;        if(cykl_sterownik_2 == 5)
;              cykl_sterownik_2 = 0;
;
;        while(cykl_sterownik_2 != 5)
;        {
;        xxx = 1;
;        PORTB.6 = 0;  //zielona lampka
;        if(cykl_sterownik_2 < 5)
;                cykl_sterownik_2 = sterownik_2_praca(0x5A,0);
;
;        }
;
;
;        while(1)
;            {
;            }
;
;*/
;
; /*
;        if(cykl_sterownik_3 < 5 & cykl_sterownik_3_wykonalem == 0)
;                cykl_sterownik_3 = sterownik_3_praca(0,0,1,0,1,0);
;        if(cykl_sterownik_3 == 5)
;              cykl_sterownik_3 = 0;
;        if(cykl_sterownik_3 < 5 & cykl_sterownik_3_wykonalem == 1)
;                cykl_sterownik_3 = sterownik_3_praca(0,0,1,0,1,1);
;
;        */
;
;
; /*
;             if(cykl_sterownik_1 != 5)
;                cykl_sterownik_1 = sterownik_1_praca(0x00);
;             if(cykl_sterownik_3 != 5)
;                cykl_sterownik_3 = sterownik_3_praca(0,0,0,0);
;             */
;
;
;//interrupt [TIM2_OVF] void timer2_ovf_isr(void)
;//{
;
;/*
;if(odczytalem_zacisk < il_prob_odczytu & (PINA.0 == 1 | PINA.1 == 1 | PINA.2 == 1 | PINA.3 == 1 | PINA.4 == 1 | PINA.5 == 1 | PINA.6 == 1 | PINA.7 == 1))
;    {
;    //PORT_CZYTNIK.byte = PORTHH.byte;
;
;    PORT_CZYTNIK.bits.b0 = PINA.0;
;    PORT_CZYTNIK.bits.b1 = PINA.1;
;    PORT_CZYTNIK.bits.b2 = PINA.2;
;    PORT_CZYTNIK.bits.b3 = PINA.3;
;    PORT_CZYTNIK.bits.b4 = PINA.4;
;    PORT_CZYTNIK.bits.b5 = PINA.5;
;    PORT_CZYTNIK.bits.b6 = PINA.6;
;    PORT_CZYTNIK.bits.b7 = PINA.7;
;
;    odczytalem_zacisk++;
;    }
;
;
;*/
;
;/*
;if(odczytalem_zacisk < il_prob_odczytu &
;                                           (sprawdz_pin0(PORTHH,0x73) == 1 |
;                                            sprawdz_pin1(PORTHH,0x73) == 1 |
;                                            sprawdz_pin2(PORTHH,0x73) == 1 |
;                                            sprawdz_pin3(PORTHH,0x73) == 1 |
;                                            sprawdz_pin4(PORTHH,0x73) == 1 |
;                                            sprawdz_pin5(PORTHH,0x73) == 1 |
;                                            sprawdz_pin6(PORTHH,0x73) == 1 |
;                                            sprawdz_pin7(PORTHH,0x73) == 1))
;        {
;        //PORTB = 0xFF;
;        odczytalem_zacisk++;
;        }
;
;*/
;
;//}
;
;
;/*
;
;
;                         if(rzad_obrabiany == 1)
;                         {
;                         if(cykl_sterownik_3 < 5 & cykl_ilosc_zaciskow != 2)
;                            cykl_sterownik_3 = sterownik_3_praca(0,0,0,0,0,1);  //do pozycji bazowej
;
;                          if(cykl_sterownik_4 < 5 & cykl_ilosc_zaciskow != 2)
;                            cykl_sterownik_4 = sterownik_4_praca(0,0,0,0,0,1);  //do pozycji bazowej
;
;
;                         if(cykl_sterownik_3 < 5 & cykl_ilosc_zaciskow == 2)
;                            cykl_sterownik_3 = sterownik_3_praca(0,0,0,0,0,0);  //na sam dol, jedziemy miedzy rzedami
;
;                          if(cykl_sterownik_4 < 5 & cykl_ilosc_zaciskow == 2)
;                            cykl_sterownik_4 = sterownik_4_praca(0,0,0,0,0,0);  //na sam dol, jedziemy miedzy rzedami
;                          }
;
;
;*/
